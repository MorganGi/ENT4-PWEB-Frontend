{"ast":null,"code":"module.exports = rimraf;\nrimraf.sync = rimrafSync;\n\nvar path = require(\"path\"),\n    fs;\n\ntry {\n  // optional dependency\n  fs = require(\"graceful-fs\");\n} catch (er) {\n  fs = require(\"fs\");\n}\n\nvar lstat = \"lstat\";\n\nif (process.platform === \"win32\") {\n  // not reliable on windows prior to 0.7.9\n  var v = process.version.replace(/^v/, '').split(/\\.|-/).map(Number);\n\n  if (v[0] === 0 && (v[1] < 7 || v[1] == 7 && v[2] < 9)) {\n    lstat = \"stat\";\n  }\n}\n\nif (!fs[lstat]) lstat = \"stat\";\nvar lstatSync = lstat + \"Sync\"; // for EMFILE handling\n\nvar timeout = 0;\nexports.EMFILE_MAX = 1000;\nexports.BUSYTRIES_MAX = 3;\n\nfunction rimraf(p, cb) {\n  if (!cb) throw new Error(\"No callback passed to rimraf()\");\n  var busyTries = 0;\n  rimraf_(p, function CB(er) {\n    if (er) {\n      if (er.code === \"EBUSY\" && busyTries < exports.BUSYTRIES_MAX) {\n        busyTries++;\n        var time = busyTries * 100; // try again, with the same exact callback as this one.\n\n        return setTimeout(function () {\n          rimraf_(p, CB);\n        }, time);\n      } // this one won't happen if graceful-fs is used.\n\n\n      if (er.code === \"EMFILE\" && timeout < exports.EMFILE_MAX) {\n        return setTimeout(function () {\n          rimraf_(p, CB);\n        }, timeout++);\n      } // already gone\n\n\n      if (er.code === \"ENOENT\") er = null;\n    }\n\n    timeout = 0;\n    cb(er);\n  });\n}\n\nfunction rimraf_(p, cb) {\n  fs[lstat](p, function (er, s) {\n    if (er) {\n      // already gone\n      if (er.code === \"ENOENT\") return cb(); // some other kind of error, permissions, etc.\n\n      return cb(er);\n    }\n\n    return rm_(p, s, false, cb);\n  });\n}\n\nvar myGid = function myGid() {\n  var g = process.getgid && process.getgid();\n\n  myGid = function myGid() {\n    return g;\n  };\n\n  return g;\n};\n\nvar myUid = function myUid() {\n  var u = process.getuid && process.getuid();\n\n  myUid = function myUid() {\n    return u;\n  };\n\n  return u;\n};\n\nfunction writable(s) {\n  var mode = s.mode || 0777,\n      uid = myUid(),\n      gid = myGid();\n  return mode & 0002 || gid === s.gid && mode & 0020 || uid === s.uid && mode & 0200;\n}\n\nfunction rm_(p, s, didWritableCheck, cb) {\n  if (!didWritableCheck && !writable(s)) {\n    // make file writable\n    // user/group/world, doesn't matter at this point\n    // since it's about to get nuked.\n    return fs.chmod(p, s.mode | 0222, function (er) {\n      if (er) return cb(er);\n      rm_(p, s, true, cb);\n    });\n  }\n\n  if (!s.isDirectory()) {\n    return fs.unlink(p, cb);\n  } // directory\n\n\n  fs.readdir(p, function (er, files) {\n    if (er) return cb(er);\n    asyncForEach(files.map(function (f) {\n      return path.join(p, f);\n    }), function (file, cb) {\n      rimraf(file, cb);\n    }, function (er) {\n      if (er) return cb(er);\n      fs.rmdir(p, cb);\n    });\n  });\n}\n\nfunction asyncForEach(list, fn, cb) {\n  if (!list.length) cb();\n  var c = list.length,\n      errState = null;\n  list.forEach(function (item, i, list) {\n    fn(item, function (er) {\n      if (errState) return;\n      if (er) return cb(errState = er);\n      if (--c === 0) return cb();\n    });\n  });\n} // this looks simpler, but it will fail with big directory trees,\n// or on slow stupid awful cygwin filesystems\n\n\nfunction rimrafSync(p) {\n  try {\n    var s = fs[lstatSync](p);\n  } catch (er) {\n    if (er.code === \"ENOENT\") return;\n    throw er;\n  }\n\n  if (!writable(s)) {\n    fs.chmodSync(p, s.mode | 0222);\n  }\n\n  if (!s.isDirectory()) return fs.unlinkSync(p);\n  fs.readdirSync(p).forEach(function (f) {\n    rimrafSync(path.join(p, f));\n  });\n  fs.rmdirSync(p);\n}","map":{"version":3,"names":["module","exports","rimraf","sync","rimrafSync","path","require","fs","er","lstat","process","platform","v","version","replace","split","map","Number","lstatSync","timeout","EMFILE_MAX","BUSYTRIES_MAX","p","cb","Error","busyTries","rimraf_","CB","code","time","setTimeout","s","rm_","myGid","g","getgid","myUid","u","getuid","writable","mode","uid","gid","didWritableCheck","chmod","isDirectory","unlink","readdir","files","asyncForEach","f","join","file","rmdir","list","fn","length","c","errState","forEach","item","i","chmodSync","unlinkSync","readdirSync","rmdirSync"],"sources":["/home/morgan/Desktop/Projets/ENT4/Jwt-Auth-pdf/react-jwt-auth/react-jwt-auth/node_modules/pdf-extract/node_modules/rimraf/rimraf.js"],"sourcesContent":["module.exports = rimraf\nrimraf.sync = rimrafSync\n\nvar path = require(\"path\")\n  , fs\n\ntry {\n  // optional dependency\n  fs = require(\"graceful-fs\")\n} catch (er) {\n  fs = require(\"fs\")\n}\n\nvar lstat = \"lstat\"\nif (process.platform === \"win32\") {\n  // not reliable on windows prior to 0.7.9\n  var v = process.version.replace(/^v/, '').split(/\\.|-/).map(Number)\n  if (v[0] === 0 && (v[1] < 7 || v[1] == 7 && v[2] < 9)) {\n    lstat = \"stat\"\n  }\n}\nif (!fs[lstat]) lstat = \"stat\"\nvar lstatSync = lstat + \"Sync\"\n\n// for EMFILE handling\nvar timeout = 0\nexports.EMFILE_MAX = 1000\nexports.BUSYTRIES_MAX = 3\n\nfunction rimraf (p, cb) {\n\n  if (!cb) throw new Error(\"No callback passed to rimraf()\")\n\n  var busyTries = 0\n\n  rimraf_(p, function CB (er) {\n    if (er) {\n      if (er.code === \"EBUSY\" && busyTries < exports.BUSYTRIES_MAX) {\n        busyTries ++\n        var time = busyTries * 100\n        // try again, with the same exact callback as this one.\n        return setTimeout(function () {\n          rimraf_(p, CB)\n        }, time)\n      }\n\n      // this one won't happen if graceful-fs is used.\n      if (er.code === \"EMFILE\" && timeout < exports.EMFILE_MAX) {\n        return setTimeout(function () {\n          rimraf_(p, CB)\n        }, timeout ++)\n      }\n\n      // already gone\n      if (er.code === \"ENOENT\") er = null\n    }\n\n    timeout = 0\n    cb(er)\n  })\n}\n\nfunction rimraf_ (p, cb) {\n  fs[lstat](p, function (er, s) {\n    if (er) {\n      // already gone\n      if (er.code === \"ENOENT\") return cb()\n      // some other kind of error, permissions, etc.\n      return cb(er)\n    }\n\n    return rm_(p, s, false, cb)\n  })\n}\n\n\nvar myGid = function myGid () {\n  var g = process.getgid && process.getgid()\n  myGid = function myGid () { return g }\n  return g\n}\n\nvar myUid = function myUid () {\n  var u = process.getuid && process.getuid()\n  myUid = function myUid () { return u }\n  return u\n}\n\n\nfunction writable (s) {\n  var mode = s.mode || 0777\n    , uid = myUid()\n    , gid = myGid()\n  return (mode & 0002)\n      || (gid === s.gid && (mode & 0020))\n      || (uid === s.uid && (mode & 0200))\n}\n\nfunction rm_ (p, s, didWritableCheck, cb) {\n  if (!didWritableCheck && !writable(s)) {\n    // make file writable\n    // user/group/world, doesn't matter at this point\n    // since it's about to get nuked.\n    return fs.chmod(p, s.mode | 0222, function (er) {\n      if (er) return cb(er)\n      rm_(p, s, true, cb)\n    })\n  }\n\n  if (!s.isDirectory()) {\n    return fs.unlink(p, cb)\n  }\n\n  // directory\n  fs.readdir(p, function (er, files) {\n    if (er) return cb(er)\n    asyncForEach(files.map(function (f) {\n      return path.join(p, f)\n    }), function (file, cb) {\n      rimraf(file, cb)\n    }, function (er) {\n      if (er) return cb(er)\n      fs.rmdir(p, cb)\n    })\n  })\n}\n\nfunction asyncForEach (list, fn, cb) {\n  if (!list.length) cb()\n  var c = list.length\n    , errState = null\n  list.forEach(function (item, i, list) {\n    fn(item, function (er) {\n      if (errState) return\n      if (er) return cb(errState = er)\n      if (-- c === 0) return cb()\n    })\n  })\n}\n\n// this looks simpler, but it will fail with big directory trees,\n// or on slow stupid awful cygwin filesystems\nfunction rimrafSync (p) {\n  try {\n    var s = fs[lstatSync](p)\n  } catch (er) {\n    if (er.code === \"ENOENT\") return\n    throw er\n  }\n\n  if (!writable(s)) {\n    fs.chmodSync(p, s.mode | 0222)\n  }\n\n  if (!s.isDirectory()) return fs.unlinkSync(p)\n\n  fs.readdirSync(p).forEach(function (f) {\n    rimrafSync(path.join(p, f))\n  })\n  fs.rmdirSync(p)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}