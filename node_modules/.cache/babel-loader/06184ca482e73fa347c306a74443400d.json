{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { Container } from './container';\nimport { RotateTransform } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from '../../primitives/matrix';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\n\nvar Canvas =\n/** @class */\nfunction (_super) {\n  __extends(Canvas, _super);\n\n  function Canvas() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\n     * Not applicable for canvas\n     *  @private\n     */\n\n\n    _this.measureChildren = undefined;\n    return _this;\n  }\n  /**\n   * Measures the minimum space that the canvas requires\n   * @param availableSize\n   */\n\n\n  Canvas.prototype.measure = function (availableSize) {\n    var desired = undefined;\n    var desiredBounds = undefined;\n\n    if (this.hasChildren()) {\n      //Measuring the children\n      for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n        var child = _a[_i];\n\n        if (child instanceof TextElement) {\n          if (child.canMeasure) {\n            availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n            child.measure(availableSize);\n          } else {\n            break;\n          }\n        } else if (!(child instanceof TextElement)) {\n          child.measure(availableSize);\n        }\n\n        var childSize = child.desiredSize.clone();\n\n        if (child.rotateAngle !== 0) {\n          childSize = rotateSize(childSize, child.rotateAngle);\n        }\n\n        var right = childSize.width + child.margin.right;\n        var bottom = childSize.height + child.margin.bottom;\n        var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n\n        if (child.float) {\n          var position = child.getAbsolutePosition(childSize);\n\n          if (position !== undefined) {\n            continue;\n          }\n        }\n\n        if (!(child instanceof TextElement) || child instanceof TextElement && child.canConsiderBounds) {\n          if (desiredBounds === undefined) {\n            desiredBounds = childBounds;\n          } else {\n            desiredBounds.uniteRect(childBounds);\n          }\n        }\n      }\n\n      if (desiredBounds) {\n        var leftMargin = 0;\n        var topMargin = 0;\n        leftMargin = Math.max(desiredBounds.left, 0);\n        topMargin = Math.max(desiredBounds.top, 0);\n        desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n      }\n    }\n\n    desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n\n    _super.prototype.stretchChildren.call(this, desired);\n\n    this.desiredSize = desired;\n    return desired;\n  };\n  /**\n   * Arranges the child elements of the canvas\n   */\n\n\n  Canvas.prototype.arrange = function (desiredSize) {\n    this.outerBounds = new Rect();\n\n    if (this.hasChildren()) {\n      var y = void 0;\n      var x = void 0;\n      y = this.offsetY - desiredSize.height * this.pivot.y;\n      x = this.offsetX - desiredSize.width * this.pivot.x;\n\n      for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n        var child = _a[_i];\n\n        if ((child.transform & RotateTransform.Parent) !== 0) {\n          child.parentTransform = this.parentTransform + this.rotateAngle;\n          var childSize = child.desiredSize.clone();\n          var topLeft = void 0;\n          var center = {\n            x: 0,\n            y: 0\n          };\n          var childX = x;\n          var childY = y;\n\n          if (child.relativeMode === 'Point') {\n            var position = child.getAbsolutePosition(desiredSize);\n\n            if (position !== undefined) {\n              childX += position.x;\n              childY += position.y;\n            }\n          }\n\n          if (child.relativeMode === 'Object') {\n            topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n          } else {\n            topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n          }\n\n          center = {\n            x: topLeft.x + childSize.width / 2,\n            y: topLeft.y + childSize.height / 2\n          };\n\n          if (child.rotateValue) {\n            var rotateValue = {\n              x: this.offsetX + (child.rotateValue.x || 0),\n              y: this.offsetY + (child.rotateValue.y || 0)\n            };\n            var centerPoint = {\n              x: this.offsetX,\n              y: this.offsetY\n            };\n            var angle = child.rotateValue.angle | 0;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, centerPoint.x, centerPoint.y);\n            center = transformPointByMatrix(matrix, rotateValue);\n          }\n\n          _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n        }\n\n        if (child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch') {\n          child.arrange(desiredSize);\n        } else {\n          if (child instanceof TextElement && child.canMeasure) {\n            child.arrange(child.desiredSize);\n            this.outerBounds.uniteRect(child.outerBounds);\n          } else if (!(child instanceof TextElement)) {\n            child.arrange(child.desiredSize);\n            this.outerBounds.uniteRect(child.outerBounds);\n          }\n        }\n      }\n    }\n\n    this.actualSize = desiredSize;\n    this.updateBounds();\n    this.outerBounds.uniteRect(this.bounds);\n    return desiredSize;\n  };\n  /**\n   * Aligns the child element based on its parent\n   * @param child\n   * @param childSize\n   * @param parentSize\n   * @param x\n   * @param y\n   */\n\n\n  Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n    switch (child.horizontalAlignment) {\n      case 'Auto':\n      case 'Left':\n        x += child.margin.left;\n        break;\n\n      case 'Right':\n        x += parentSize.width - childSize.width - child.margin.right;\n        break;\n\n      case 'Stretch':\n      case 'Center':\n        x += parentSize.width / 2 - childSize.width / 2;\n        break;\n    }\n\n    switch (child.verticalAlignment) {\n      case 'Auto':\n      case 'Top':\n        y += child.margin.top;\n        break;\n\n      case 'Bottom':\n        y += parentSize.height - childSize.height - child.margin.bottom;\n        break;\n\n      case 'Stretch':\n      case 'Center':\n        y += parentSize.height / 2 - childSize.height / 2;\n        break;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  };\n  /**\n   * Aligns the child elements based on a point\n   * @param child\n   * @param x\n   * @param y\n   */\n\n\n  Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n    x += child.margin.left - child.margin.right;\n    y += child.margin.top - child.margin.bottom;\n\n    switch (child.horizontalAlignment) {\n      case 'Auto':\n      case 'Left':\n        x = x;\n        break;\n\n      case 'Stretch':\n      case 'Center':\n        x -= child.desiredSize.width * child.pivot.x;\n        break;\n\n      case 'Right':\n        x -= child.desiredSize.width;\n        break;\n    }\n\n    switch (child.verticalAlignment) {\n      case 'Auto':\n      case 'Top':\n        y = y;\n        break;\n\n      case 'Stretch':\n      case 'Center':\n        y -= child.desiredSize.height * child.pivot.y;\n        break;\n\n      case 'Bottom':\n        y -= child.desiredSize.height;\n        break;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  };\n\n  return Canvas;\n}(Container);\n\nexport { Canvas };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Container","RotateTransform","Size","Rect","TextElement","identityMatrix","rotateMatrix","transformPointByMatrix","rotateSize","Canvas","_super","_this","apply","arguments","measureChildren","undefined","measure","availableSize","desired","desiredBounds","hasChildren","_i","_a","children","length","child","canMeasure","width","maxWidth","minWidth","childSize","desiredSize","clone","rotateAngle","right","margin","bottom","height","childBounds","left","top","float","position","getAbsolutePosition","canConsiderBounds","uniteRect","leftMargin","topMargin","Math","max","validateDesiredSize","call","stretchChildren","arrange","outerBounds","y","x","offsetY","pivot","offsetX","transform","Parent","parentTransform","topLeft","center","childX","childY","relativeMode","alignChildBasedOnParent","alignChildBasedOnaPoint","rotateValue","centerPoint","angle","matrix","findChildOffsetFromCenter","horizontalAlignment","verticalAlignment","actualSize","updateBounds","bounds","parentSize"],"sources":["/home/morgan/Desktop/Projets/ENT4/Jwt-Auth-pdf/react-jwt-auth/react-jwt-auth/node_modules/@syncfusion/ej2-drawings/src/drawing/core/containers/canvas.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { RotateTransform } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from '../../primitives/matrix';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n                        child.measure(availableSize);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if ((!(child instanceof TextElement)) || (child instanceof TextElement && child.canConsiderBounds)) {\n                    if (desiredBounds === undefined) {\n                        desiredBounds = childBounds;\n                    }\n                    else {\n                        desiredBounds.uniteRect(childBounds);\n                    }\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y;\n            x = this.offsetX - desiredSize.width * this.pivot.x;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & RotateTransform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    if (child.rotateValue) {\n                        var rotateValue = {\n                            x: this.offsetX + (child.rotateValue.x || 0),\n                            y: this.offsetY + (child.rotateValue.y || 0)\n                        };\n                        var centerPoint = { x: this.offsetX, y: this.offsetY };\n                        var angle = child.rotateValue.angle | 0;\n                        var matrix = identityMatrix();\n                        rotateMatrix(matrix, angle, centerPoint.x, centerPoint.y);\n                        center = transformPointByMatrix(matrix, rotateValue);\n                    }\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if ((child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}