{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { DrawingElement } from '../elements/drawing-element';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\n\nvar Container =\n/** @class */\nfunction (_super) {\n  __extends(Container, _super);\n\n  function Container() {\n    var _this = _super !== null && _super.apply(this, arguments) || this; //private members    \n\n\n    _this.desiredBounds = undefined;\n    /** @private */\n\n    _this.measureChildren = true;\n    /**   @private  */\n\n    _this.prevRotateAngle = 0;\n    return _this;\n  }\n  /**\n   * returns whether the container has child elements or not\n   */\n\n\n  Container.prototype.hasChildren = function () {\n    if (this.children !== undefined && this.children.length > 0) {\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * Measures the minimum space that the container requires\n   *\n   * @param availableSize\n   */\n\n\n  Container.prototype.measure = function (availableSize) {\n    // measure the element and find the desired size\n    this.desiredBounds = undefined;\n    var desired = undefined;\n    var child;\n    var center = {\n      x: 0,\n      y: 0\n    };\n    var y;\n    var x;\n    var childBounds;\n\n    if (this.hasChildren()) {\n      //Measuring the children\n      for (var i = 0; i < this.children.length; i++) {\n        child = this.children[i];\n\n        if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n          availableSize.width = child.bounds.width;\n        }\n\n        if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n          availableSize.height = child.bounds.height;\n        }\n\n        var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n\n        if (this.measureChildren || force || child instanceof Container && child.measureChildren !== undefined) {\n          child.measure(availableSize);\n        }\n\n        childBounds = this.GetChildrenBounds(child);\n\n        if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n          if (this.desiredBounds === undefined) {\n            this.desiredBounds = childBounds;\n          } else {\n            this.desiredBounds.uniteRect(childBounds);\n          }\n        } else if (this.actualSize && !this.actualSize.width && !this.actualSize.height && !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n          if (this.desiredBounds === undefined) {\n            this.desiredBounds = child.bounds;\n          } else {\n            this.desiredBounds.uniteRect(child.bounds);\n          }\n        }\n      }\n\n      if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n        var offsetPt = {\n          x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n          y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n        };\n        var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n        this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n        this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n      }\n\n      if (this.desiredBounds) {\n        desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n      }\n    }\n\n    desired = this.validateDesiredSize(desired, availableSize);\n    this.stretchChildren(desired);\n    this.desiredSize = desired;\n    return desired;\n  };\n  /**\n   * Arranges the container and its children\n   * @param desiredSize\n   */\n\n\n  Container.prototype.arrange = function (desiredSize) {\n    var child;\n    var bounds;\n    var childBounds = this.desiredBounds;\n\n    if (childBounds) {\n      var x = this.offsetX;\n      var y = this.offsetY;\n      this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n      this.offsetY = childBounds.y + childBounds.height * this.pivot.y; // container has rotateAngle\n\n      if (this.hasChildren()) {\n        //Measuring the children\n        for (var i = 0; i < this.children.length; i++) {\n          child = this.children[i];\n          var arrange = false;\n\n          if (child.horizontalAlignment === 'Stretch') {\n            child.offsetX = this.offsetX;\n            child.parentTransform = this.parentTransform + this.rotateAngle;\n            arrange = true;\n          }\n\n          if (child.verticalAlignment === 'Stretch') {\n            child.offsetY = this.offsetY;\n            child.parentTransform = this.parentTransform + this.rotateAngle;\n            arrange = true;\n          }\n\n          if (arrange || this.measureChildren || child instanceof Container && child.measureChildren !== undefined) {\n            child.arrange(child.desiredSize);\n          }\n        }\n      }\n    }\n\n    this.actualSize = desiredSize;\n    this.updateBounds();\n    this.prevRotateAngle = this.rotateAngle;\n    return desiredSize;\n  }; //protected methods\n\n  /**\n   * Stretches the child elements based on the size of the container\n   * @param size\n   */\n\n\n  Container.prototype.stretchChildren = function (size) {\n    if (this.hasChildren()) {\n      for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n        var child = _a[_i];\n\n        if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n          child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n        }\n\n        if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n          child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n        }\n\n        if (child instanceof Container) {\n          child.stretchChildren(child.desiredSize);\n        }\n      }\n    }\n  };\n  /**\n   * Finds the offset of the child element with respect to the container\n   * @param child\n   * @param center\n   */\n\n\n  Container.prototype.findChildOffsetFromCenter = function (child, center) {\n    var topLeft = {\n      x: center.x - child.desiredSize.width / 2,\n      y: center.y - child.desiredSize.height / 2\n    };\n    var offset = getOffset(topLeft, child); //Rotate based on child rotate angle\n\n    offset = rotatePoint(child.rotateAngle, center.x, center.y, offset); //Rotate based on parent pivot\n\n    offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n    child.offsetX = offset.x;\n    child.offsetY = offset.y;\n  }; //private methods - check its need\n\n\n  Container.prototype.GetChildrenBounds = function (child) {\n    var childBounds;\n    var childSize;\n    childSize = child.desiredSize.clone();\n    var diffAngle = child.rotateAngle - this.rotateAngle;\n    var refPoint = {\n      x: child.offsetX,\n      y: child.offsetY\n    };\n    var left = refPoint.x - childSize.width * child.pivot.x;\n    var top = refPoint.y - childSize.height * child.pivot.y;\n    var right = left + childSize.width;\n    var bottom = top + childSize.height;\n    var topLeft = {\n      x: left,\n      y: top\n    };\n    var topRight = {\n      x: right,\n      y: top\n    };\n    var bottomLeft = {\n      x: left,\n      y: bottom\n    };\n    var bottomRight = {\n      x: right,\n      y: bottom\n    };\n    topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n    topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n    bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n    bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n\n    if (this.rotateAngle !== 0) {\n      topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n      topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n      bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n      bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n    }\n\n    return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n  };\n\n  return Container;\n}(DrawingElement);\n\nexport { Container };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","DrawingElement","Size","Rect","rotatePoint","getOffset","Container","_super","_this","apply","arguments","desiredBounds","undefined","measureChildren","prevRotateAngle","hasChildren","children","length","measure","availableSize","desired","child","center","x","y","childBounds","i","horizontalAlignment","width","bounds","verticalAlignment","height","force","GetChildrenBounds","uniteRect","actualSize","preventContainer","rotateAngle","offsetPt","pivot","newPoint","validateDesiredSize","stretchChildren","desiredSize","arrange","offsetX","offsetY","parentTransform","updateBounds","size","_i","_a","margin","left","right","top","bottom","findChildOffsetFromCenter","topLeft","offset","childSize","clone","diffAngle","refPoint","topRight","bottomLeft","bottomRight","toBounds"],"sources":["/home/morgan/Desktop/Projets/ENT4/Jwt-Auth-pdf/react-jwt-auth/react-jwt-auth/node_modules/@syncfusion/ej2-drawings/src/drawing/core/containers/container.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DrawingElement } from '../elements/drawing-element';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DrawingElement));\nexport { Container };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}