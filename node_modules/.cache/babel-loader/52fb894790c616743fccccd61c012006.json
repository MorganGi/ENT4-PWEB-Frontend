{"ast":null,"code":"/*jshint strict:true node:true es5:true onevar:true laxcomma:true laxbreak:true*/\n(function () {\n  \"use strict\"; // \"FIFO\" isn't easy to convert to camelCase and back reliably\n\n  var isFnodeTypes = [\"isFile\", \"isDirectory\", \"isSymbolicLink\", \"isBlockDevice\", \"isCharacterDevice\", \"isFIFO\", \"isSocket\"],\n      fnodeTypes = [\"file\", \"directory\", \"symbolicLink\", \"blockDevice\", \"characterDevice\", \"FIFO\", \"socket\"],\n      fnodeTypesPlural = [\"files\", \"directories\", \"symbolicLinks\", \"blockDevices\", \"characterDevices\", \"FIFOs\", \"sockets\"]; // \n\n  function createNodeGroups() {\n    var nodeGroups = {};\n    fnodeTypesPlural.concat(\"nodes\", \"errors\").forEach(function (fnodeTypePlural) {\n      nodeGroups[fnodeTypePlural] = [];\n    });\n    return nodeGroups;\n  } // Determine each file node's type\n  // \n\n\n  function sortFnodesByType(stat, fnodes) {\n    var i, isType;\n\n    for (i = 0; i < isFnodeTypes.length; i += 1) {\n      isType = isFnodeTypes[i];\n\n      if (stat[isType]()) {\n        stat.type = fnodeTypes[i];\n        fnodes[fnodeTypesPlural[i]].push(stat);\n        return;\n      }\n    }\n  } // Get the current number of listeners (which may change)\n  // Emit events to each listener\n  // Wait for all listeners to `next()` before continueing\n  // (in theory this may avoid disk thrashing)\n\n\n  function emitSingleEvents(emitter, path, stats, next, self) {\n    var num = 1 + emitter.listeners(stats.type).length + emitter.listeners(\"node\").length;\n\n    function nextWhenReady() {\n      num -= 1;\n\n      if (0 === num) {\n        next.call(self);\n      }\n    }\n\n    emitter.emit(stats.type, path, stats, nextWhenReady);\n    emitter.emit(\"node\", path, stats, nextWhenReady);\n    nextWhenReady();\n  } // Since the risk for disk thrashing among anything\n  // other than files is relatively low, all types are\n  // emitted at once, but all must complete before advancing\n\n\n  function emitPluralEvents(emitter, path, nodes, next, self) {\n    var num = 1;\n\n    function nextWhenReady() {\n      num -= 1;\n\n      if (0 === num) {\n        next.call(self);\n      }\n    }\n\n    fnodeTypesPlural.concat([\"nodes\", \"errors\"]).forEach(function (fnodeType) {\n      if (0 === nodes[fnodeType].length) {\n        return;\n      }\n\n      num += emitter.listeners(fnodeType).length;\n      emitter.emit(fnodeType, path, nodes[fnodeType], nextWhenReady);\n    });\n    nextWhenReady();\n  }\n\n  module.exports = {\n    emitNodeType: emitSingleEvents,\n    emitNodeTypeGroups: emitPluralEvents,\n    isFnodeTypes: isFnodeTypes,\n    fnodeTypes: fnodeTypes,\n    fnodeTypesPlural: fnodeTypesPlural,\n    sortFnodesByType: sortFnodesByType,\n    createNodeGroups: createNodeGroups\n  };\n})();","map":{"version":3,"names":["isFnodeTypes","fnodeTypes","fnodeTypesPlural","createNodeGroups","nodeGroups","concat","forEach","fnodeTypePlural","sortFnodesByType","stat","fnodes","i","isType","length","type","push","emitSingleEvents","emitter","path","stats","next","self","num","listeners","nextWhenReady","call","emit","emitPluralEvents","nodes","fnodeType","module","exports","emitNodeType","emitNodeTypeGroups"],"sources":["/home/morgan/Desktop/Projets/ENT4/Jwt-Auth-pdf/react-jwt-auth/react-jwt-auth/node_modules/walk/node-type-emitter.js"],"sourcesContent":["/*jshint strict:true node:true es5:true onevar:true laxcomma:true laxbreak:true*/\n(function () {\n  \"use strict\";\n\n  // \"FIFO\" isn't easy to convert to camelCase and back reliably\n  var isFnodeTypes = [\n      \"isFile\", \"isDirectory\",  \"isSymbolicLink\", \"isBlockDevice\",  \"isCharacterDevice\", \"isFIFO\", \"isSocket\"\n    ],\n    fnodeTypes = [\n      \"file\",   \"directory\",    \"symbolicLink\",   \"blockDevice\",    \"characterDevice\",    \"FIFO\",   \"socket\"\n    ],\n    fnodeTypesPlural = [\n      \"files\",  \"directories\",  \"symbolicLinks\",  \"blockDevices\",   \"characterDevices\",   \"FIFOs\",  \"sockets\"\n    ];\n\n\n  // \n  function createNodeGroups() {\n    var nodeGroups = {};\n    fnodeTypesPlural.concat(\"nodes\", \"errors\").forEach(function (fnodeTypePlural) {\n      nodeGroups[fnodeTypePlural] = [];\n    });\n    return nodeGroups;\n  }\n\n\n  // Determine each file node's type\n  // \n  function sortFnodesByType(stat, fnodes) {\n    var i, isType;\n\n    for (i = 0; i < isFnodeTypes.length; i += 1) {\n      isType = isFnodeTypes[i];\n      if (stat[isType]()) {\n        stat.type = fnodeTypes[i];\n        fnodes[fnodeTypesPlural[i]].push(stat);\n        return;\n      }\n    }\n  }\n\n\n  // Get the current number of listeners (which may change)\n  // Emit events to each listener\n  // Wait for all listeners to `next()` before continueing\n  // (in theory this may avoid disk thrashing)\n  function emitSingleEvents(emitter, path, stats, next, self) {\n    var num = 1 + emitter.listeners(stats.type).length + emitter.listeners(\"node\").length;\n\n    function nextWhenReady() {\n      num -= 1;\n      if (0 === num) { next.call(self); }\n    }\n\n    emitter.emit(stats.type, path, stats, nextWhenReady);\n    emitter.emit(\"node\", path, stats, nextWhenReady);\n    nextWhenReady();\n  }\n\n\n  // Since the risk for disk thrashing among anything\n  // other than files is relatively low, all types are\n  // emitted at once, but all must complete before advancing\n  function emitPluralEvents(emitter, path, nodes, next, self) {\n    var num = 1;\n\n    function nextWhenReady() {\n      num -= 1;\n      if (0 === num) { next.call(self); }\n    }\n\n    fnodeTypesPlural.concat([\"nodes\", \"errors\"]).forEach(function (fnodeType) {\n      if (0 === nodes[fnodeType].length) { return; }\n      num += emitter.listeners(fnodeType).length;\n      emitter.emit(fnodeType, path, nodes[fnodeType], nextWhenReady);\n    });\n    nextWhenReady();\n  }\n\n  module.exports = {\n    emitNodeType: emitSingleEvents,\n    emitNodeTypeGroups: emitPluralEvents,\n    isFnodeTypes: isFnodeTypes,\n    fnodeTypes: fnodeTypes,\n    fnodeTypesPlural: fnodeTypesPlural,\n    sortFnodesByType: sortFnodesByType,\n    createNodeGroups: createNodeGroups\n  };\n}());\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}