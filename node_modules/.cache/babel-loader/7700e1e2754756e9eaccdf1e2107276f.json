{"ast":null,"code":"/**\n * Navigation module\n */\nvar Navigation =\n/** @class */\nfunction () {\n  /**\n   * @param viewer\n   * @param viewerBase\n   * @param viewer\n   * @param viewerBase\n   * @private\n   */\n  function Navigation(viewer, viewerBase) {\n    this.pdfViewer = viewer;\n    this.pdfViewerBase = viewerBase;\n  }\n  /**\n   * Navigate to Next page of the PDF document\n   *\n   * @returns void\n   */\n\n\n  Navigation.prototype.goToNextPage = function () {\n    this.pageNumber = this.pdfViewerBase.currentPageNumber;\n    this.pageNumber++;\n\n    if (this.pageNumber <= this.pdfViewerBase.pageCount) {\n      this.pdfViewerBase.updateScrollTop(this.pageNumber - 1);\n    }\n  };\n  /**\n   * Navigate to Previous page of the PDF document\n   *\n   * @returns void\n   */\n\n\n  Navigation.prototype.goToPreviousPage = function () {\n    this.pageNumber = this.pdfViewerBase.currentPageNumber;\n    this.pageNumber--;\n\n    if (this.pageNumber > 0) {\n      this.pdfViewerBase.updateScrollTop(this.pageNumber - 1);\n    }\n  };\n  /**\n   * Navigate to given Page number\n   * Note : In case if we have provided incorrect page number as argument it will retain the existing page\n   *\n   * @param  {number} pageNumber - Defines the page number to navigate\n   * @returns void\n   */\n\n\n  Navigation.prototype.goToPage = function (pageNumber) {\n    if (pageNumber > 0 && pageNumber <= this.pdfViewerBase.pageCount && this.pdfViewerBase.currentPageNumber !== pageNumber) {\n      this.pdfViewerBase.updateScrollTop(pageNumber - 1);\n    }\n\n    this.pdfViewer.magnificationModule.resizeCanvas(pageNumber);\n    var textLayer = document.getElementById(this.pdfViewer.element.id + '_textLayer_' + (pageNumber - 1));\n\n    if (textLayer) {\n      textLayer.style.display = 'block';\n    }\n  };\n  /**\n   * Navigate to First page of the PDF document\n   *\n   * @returns void\n   */\n\n\n  Navigation.prototype.goToFirstPage = function () {\n    this.pageNumber = 0;\n    this.pdfViewerBase.updateScrollTop(this.pageNumber);\n  };\n  /**\n   * Navigate to Last page of the PDF document\n   *\n   * @returns void\n   */\n\n\n  Navigation.prototype.goToLastPage = function () {\n    this.pageNumber = this.pdfViewerBase.pageCount - 1;\n    this.pdfViewerBase.updateScrollTop(this.pageNumber);\n  };\n  /**\n   * @private\n   */\n\n\n  Navigation.prototype.destroy = function () {\n    this.pageNumber = 0;\n  };\n  /**\n   * @private\n   */\n\n\n  Navigation.prototype.getModuleName = function () {\n    return 'Navigation';\n  };\n\n  return Navigation;\n}();\n\nexport { Navigation };","map":{"version":3,"names":["Navigation","viewer","viewerBase","pdfViewer","pdfViewerBase","prototype","goToNextPage","pageNumber","currentPageNumber","pageCount","updateScrollTop","goToPreviousPage","goToPage","magnificationModule","resizeCanvas","textLayer","document","getElementById","element","id","style","display","goToFirstPage","goToLastPage","destroy","getModuleName"],"sources":["/home/morgan/Desktop/Projets/ENT4/Jwt-Auth-pdf/react-jwt-auth/react-jwt-auth/node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/navigation/page-navigation.js"],"sourcesContent":["/**\n * Navigation module\n */\nvar Navigation = /** @class */ (function () {\n    /**\n     * @param viewer\n     * @param viewerBase\n     * @param viewer\n     * @param viewerBase\n     * @private\n     */\n    function Navigation(viewer, viewerBase) {\n        this.pdfViewer = viewer;\n        this.pdfViewerBase = viewerBase;\n    }\n    /**\n     * Navigate to Next page of the PDF document\n     *\n     * @returns void\n     */\n    Navigation.prototype.goToNextPage = function () {\n        this.pageNumber = this.pdfViewerBase.currentPageNumber;\n        this.pageNumber++;\n        if (this.pageNumber <= this.pdfViewerBase.pageCount) {\n            this.pdfViewerBase.updateScrollTop(this.pageNumber - 1);\n        }\n    };\n    /**\n     * Navigate to Previous page of the PDF document\n     *\n     * @returns void\n     */\n    Navigation.prototype.goToPreviousPage = function () {\n        this.pageNumber = this.pdfViewerBase.currentPageNumber;\n        this.pageNumber--;\n        if (this.pageNumber > 0) {\n            this.pdfViewerBase.updateScrollTop(this.pageNumber - 1);\n        }\n    };\n    /**\n     * Navigate to given Page number\n     * Note : In case if we have provided incorrect page number as argument it will retain the existing page\n     *\n     * @param  {number} pageNumber - Defines the page number to navigate\n     * @returns void\n     */\n    Navigation.prototype.goToPage = function (pageNumber) {\n        if (pageNumber > 0 && pageNumber <= this.pdfViewerBase.pageCount && this.pdfViewerBase.currentPageNumber !== pageNumber) {\n            this.pdfViewerBase.updateScrollTop(pageNumber - 1);\n        }\n        this.pdfViewer.magnificationModule.resizeCanvas(pageNumber);\n        var textLayer = document.getElementById(this.pdfViewer.element.id + '_textLayer_' + (pageNumber - 1));\n        if (textLayer) {\n            textLayer.style.display = 'block';\n        }\n    };\n    /**\n     * Navigate to First page of the PDF document\n     *\n     * @returns void\n     */\n    Navigation.prototype.goToFirstPage = function () {\n        this.pageNumber = 0;\n        this.pdfViewerBase.updateScrollTop(this.pageNumber);\n    };\n    /**\n     * Navigate to Last page of the PDF document\n     *\n     * @returns void\n     */\n    Navigation.prototype.goToLastPage = function () {\n        this.pageNumber = this.pdfViewerBase.pageCount - 1;\n        this.pdfViewerBase.updateScrollTop(this.pageNumber);\n    };\n    /**\n     * @private\n     */\n    Navigation.prototype.destroy = function () {\n        this.pageNumber = 0;\n    };\n    /**\n     * @private\n     */\n    Navigation.prototype.getModuleName = function () {\n        return 'Navigation';\n    };\n    return Navigation;\n}());\nexport { Navigation };\n"],"mappings":"AAAA;AACA;AACA;AACA,IAAIA,UAAU;AAAG;AAAe,YAAY;EACxC;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,SAASA,UAAT,CAAoBC,MAApB,EAA4BC,UAA5B,EAAwC;IACpC,KAAKC,SAAL,GAAiBF,MAAjB;IACA,KAAKG,aAAL,GAAqBF,UAArB;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIF,UAAU,CAACK,SAAX,CAAqBC,YAArB,GAAoC,YAAY;IAC5C,KAAKC,UAAL,GAAkB,KAAKH,aAAL,CAAmBI,iBAArC;IACA,KAAKD,UAAL;;IACA,IAAI,KAAKA,UAAL,IAAmB,KAAKH,aAAL,CAAmBK,SAA1C,EAAqD;MACjD,KAAKL,aAAL,CAAmBM,eAAnB,CAAmC,KAAKH,UAAL,GAAkB,CAArD;IACH;EACJ,CAND;EAOA;AACJ;AACA;AACA;AACA;;;EACIP,UAAU,CAACK,SAAX,CAAqBM,gBAArB,GAAwC,YAAY;IAChD,KAAKJ,UAAL,GAAkB,KAAKH,aAAL,CAAmBI,iBAArC;IACA,KAAKD,UAAL;;IACA,IAAI,KAAKA,UAAL,GAAkB,CAAtB,EAAyB;MACrB,KAAKH,aAAL,CAAmBM,eAAnB,CAAmC,KAAKH,UAAL,GAAkB,CAArD;IACH;EACJ,CAND;EAOA;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACIP,UAAU,CAACK,SAAX,CAAqBO,QAArB,GAAgC,UAAUL,UAAV,EAAsB;IAClD,IAAIA,UAAU,GAAG,CAAb,IAAkBA,UAAU,IAAI,KAAKH,aAAL,CAAmBK,SAAnD,IAAgE,KAAKL,aAAL,CAAmBI,iBAAnB,KAAyCD,UAA7G,EAAyH;MACrH,KAAKH,aAAL,CAAmBM,eAAnB,CAAmCH,UAAU,GAAG,CAAhD;IACH;;IACD,KAAKJ,SAAL,CAAeU,mBAAf,CAAmCC,YAAnC,CAAgDP,UAAhD;IACA,IAAIQ,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAKd,SAAL,CAAee,OAAf,CAAuBC,EAAvB,GAA4B,aAA5B,IAA6CZ,UAAU,GAAG,CAA1D,CAAxB,CAAhB;;IACA,IAAIQ,SAAJ,EAAe;MACXA,SAAS,CAACK,KAAV,CAAgBC,OAAhB,GAA0B,OAA1B;IACH;EACJ,CATD;EAUA;AACJ;AACA;AACA;AACA;;;EACIrB,UAAU,CAACK,SAAX,CAAqBiB,aAArB,GAAqC,YAAY;IAC7C,KAAKf,UAAL,GAAkB,CAAlB;IACA,KAAKH,aAAL,CAAmBM,eAAnB,CAAmC,KAAKH,UAAxC;EACH,CAHD;EAIA;AACJ;AACA;AACA;AACA;;;EACIP,UAAU,CAACK,SAAX,CAAqBkB,YAArB,GAAoC,YAAY;IAC5C,KAAKhB,UAAL,GAAkB,KAAKH,aAAL,CAAmBK,SAAnB,GAA+B,CAAjD;IACA,KAAKL,aAAL,CAAmBM,eAAnB,CAAmC,KAAKH,UAAxC;EACH,CAHD;EAIA;AACJ;AACA;;;EACIP,UAAU,CAACK,SAAX,CAAqBmB,OAArB,GAA+B,YAAY;IACvC,KAAKjB,UAAL,GAAkB,CAAlB;EACH,CAFD;EAGA;AACJ;AACA;;;EACIP,UAAU,CAACK,SAAX,CAAqBoB,aAArB,GAAqC,YAAY;IAC7C,OAAO,YAAP;EACH,CAFD;;EAGA,OAAOzB,UAAP;AACH,CApF+B,EAAhC;;AAqFA,SAASA,UAAT"},"metadata":{},"sourceType":"module"}