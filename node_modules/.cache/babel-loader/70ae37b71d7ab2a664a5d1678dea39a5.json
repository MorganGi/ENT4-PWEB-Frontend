{"ast":null,"code":"import { extend, addClass, removeClass, setValue, closest, select } from '@syncfusion/ej2-base';\nimport { remove, classList } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, isUndefined } from '@syncfusion/ej2-base';\nimport { CellType } from '../base/enum';\nimport { parentsUntil, inArray, refreshForeignData, getObject, alignFrozenEditForm, gridActionHandler, addRemoveEventListener } from '../base/util';\nimport { splitFrozenRowObjectCells, getGridRowElements } from '../base/util';\nimport { sliceElements, getCellByColAndRowIndex } from '../base/util';\nimport { getGridRowObjects } from '../base/util';\nimport * as events from '../base/constant';\nimport { RowRenderer } from '../renderer/row-renderer';\nimport { CellRenderer } from '../renderer/cell-renderer';\nimport { Row } from '../models/row';\nimport { Cell } from '../models/cell';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport { DataUtil } from '@syncfusion/ej2-data';\nimport * as literals from '../base/string-literals';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n *\n * @hidden\n */\n\nvar BatchEdit =\n/** @class */\nfunction () {\n  function BatchEdit(parent, serviceLocator, renderer) {\n    this.cellDetails = {};\n    this.originalCell = {};\n    this.cloneCell = {};\n    this.editNext = false;\n    this.preventSaveCell = false;\n    this.initialRender = true;\n    this.validationColObj = [];\n    this.parent = parent;\n    this.serviceLocator = serviceLocator;\n    this.renderer = renderer;\n    this.focus = serviceLocator.getService('focus');\n    this.addEventListener();\n  }\n  /**\n   * @returns {void}\n   * @hidden\n   */\n\n\n  BatchEdit.prototype.addEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.evtHandlers = [{\n      event: events.click,\n      handler: this.clickHandler\n    }, {\n      event: events.dblclick,\n      handler: this.dblClickHandler\n    }, {\n      event: events.beforeCellFocused,\n      handler: this.onBeforeCellFocused\n    }, {\n      event: events.cellFocused,\n      handler: this.onCellFocused\n    }, {\n      event: events.doubleTap,\n      handler: this.dblClickHandler\n    }, {\n      event: events.keyPressed,\n      handler: this.keyDownHandler\n    }, {\n      event: events.editNextValCell,\n      handler: this.editNextValCell\n    }, {\n      event: events.closeBatch,\n      handler: this.closeForm\n    }, {\n      event: events.destroy,\n      handler: this.destroy\n    }];\n    addRemoveEventListener(this.parent, this.evtHandlers, true, this);\n    this.dataBoundFunction = this.dataBound.bind(this);\n    this.batchCancelFunction = this.batchCancel.bind(this);\n    this.parent.addEventListener(events.dataBound, this.dataBoundFunction);\n    this.parent.addEventListener(events.batchCancel, this.batchCancelFunction);\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n\n\n  BatchEdit.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    addRemoveEventListener(this.parent, this.evtHandlers, false);\n    this.parent.removeEventListener(events.dataBound, this.dataBoundFunction);\n    this.parent.removeEventListener(events.batchCancel, this.batchCancelFunction);\n  };\n\n  BatchEdit.prototype.batchCancel = function () {\n    this.parent.focusModule.restoreFocus();\n  };\n\n  BatchEdit.prototype.dataBound = function () {\n    this.parent.notify(events.toolbarRefresh, {});\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n\n\n  BatchEdit.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n\n  BatchEdit.prototype.clickHandler = function (e) {\n    if (!parentsUntil(e.target, this.parent.element.id + '_add', true)) {\n      if (this.parent.isEdit && closest(this.form, 'td') !== closest(e.target, 'td')) {\n        this.saveCell();\n        this.editNextValCell();\n      }\n\n      if (parentsUntil(e.target, literals.rowCell) && !this.parent.isEdit) {\n        this.setCellIdx(e.target);\n      }\n    }\n  };\n\n  BatchEdit.prototype.dblClickHandler = function (e) {\n    var target = parentsUntil(e.target, literals.rowCell);\n    var tr = parentsUntil(e.target, literals.row);\n    var rowIndex = tr && parseInt(tr.getAttribute(literals.ariaRowIndex), 10);\n    var colIndex = target && parseInt(target.getAttribute(literals.ariaColIndex), 10);\n\n    if (!isNullOrUndefined(target) && !isNullOrUndefined(rowIndex) && !isNaN(colIndex) && !target.parentElement.classList.contains(literals.editedRow)) {\n      this.editCell(rowIndex, this.parent.getColumns()[colIndex].field, this.isAddRow(rowIndex));\n    }\n  };\n\n  BatchEdit.prototype.onBeforeCellFocused = function (e) {\n    if (this.parent.isEdit && this.validateFormObj() && (e.byClick || ['tab', 'shiftTab', 'enter', 'shiftEnter'].indexOf(e.keyArgs.action) > -1)) {\n      e.cancel = true;\n\n      if (e.byClick) {\n        e.clickArgs.preventDefault();\n      } else {\n        e.keyArgs.preventDefault();\n      }\n    }\n  };\n\n  BatchEdit.prototype.onCellFocused = function (e) {\n    var frzCols = this.parent.getFrozenLeftCount();\n    var frzRightCols = this.parent.getFrozenRightColumnsCount();\n    var mCont = this.parent.getContent().querySelector('.' + literals.movableContent);\n    var mHdr = this.parent.getHeaderContent().querySelector('.' + literals.movableHeader);\n    var clear = (!e.container.isContent || !e.container.isDataCell) && !(this.parent.frozenRows && e.container.isHeader);\n\n    if (!e.byKey || clear) {\n      if (this.parent.isEdit && clear) {\n        this.saveCell();\n      }\n\n      return;\n    }\n\n    var _a = e.container.indexes,\n        rowIndex = _a[0],\n        cellIndex = _a[1];\n\n    if (frzCols && (mCont.contains(e.element) || this.parent.frozenRows && mHdr.contains(e.element))) {\n      cellIndex += frzCols;\n    }\n\n    if (frzRightCols) {\n      var frHdr = this.parent.getHeaderContent().querySelector('.e-frozen-right-header');\n      var frCont = this.parent.getContent().querySelector('.e-frozen-right-content');\n\n      if (frCont.contains(e.element) || this.parent.frozenRows && frHdr.contains(e.element)) {\n        cellIndex += frzCols + this.parent.getMovableColumnsCount();\n      }\n    }\n\n    if (this.parent.frozenRows && e.container.isContent) {\n      rowIndex += this.parent.frozenRows;\n    }\n\n    var isEdit = this.parent.isEdit;\n\n    if (!this.parent.element.getElementsByClassName('e-popup-open').length) {\n      isEdit = isEdit && !this.validateFormObj();\n\n      switch (e.keyArgs.action) {\n        case 'tab':\n        case 'shiftTab':\n          var indent = this.parent.isRowDragable() && this.parent.isDetail() ? 2 : this.parent.isRowDragable() || this.parent.isDetail() ? 1 : 0; // eslint-disable-next-line no-case-declarations\n\n          var col = this.parent.getColumns()[e.indexes[1] - indent];\n\n          if (col && !this.parent.isEdit) {\n            this.editCell(e.indexes[0], col.field);\n          }\n\n          if (isEdit || this.parent.isLastCellPrimaryKey) {\n            this.editCellFromIndex(rowIndex, cellIndex);\n          }\n\n          break;\n\n        case 'enter':\n        case 'shiftEnter':\n          e.keyArgs.preventDefault(); // eslint-disable-next-line no-case-declarations\n\n          var args = {\n            cancel: false,\n            keyArgs: e.keyArgs\n          };\n          this.parent.notify('beforeFocusCellEdit', args);\n\n          if (!args.cancel && isEdit) {\n            this.editCell(rowIndex, this.cellDetails.column.field);\n          }\n\n          break;\n\n        case 'f2':\n          this.editCellFromIndex(rowIndex, cellIndex);\n          this.focus.focus();\n          break;\n      }\n    }\n  };\n\n  BatchEdit.prototype.isAddRow = function (index) {\n    return this.parent.getDataRows()[index].classList.contains('e-insertedrow');\n  };\n\n  BatchEdit.prototype.editCellFromIndex = function (rowIdx, cellIdx) {\n    this.cellDetails.rowIndex = rowIdx;\n    this.cellDetails.cellIndex = cellIdx;\n    this.editCell(rowIdx, this.parent.getColumns()[cellIdx].field, this.isAddRow(rowIdx));\n  };\n\n  BatchEdit.prototype.closeEdit = function () {\n    var _this = this;\n\n    var gObj = this.parent;\n    var rows = this.parent.getRowsObject();\n    var argument = {\n      cancel: false,\n      batchChanges: this.getBatchChanges()\n    };\n    gObj.notify(events.beforeBatchCancel, argument);\n\n    if (argument.cancel) {\n      return;\n    }\n\n    if (gObj.isEdit) {\n      this.saveCell(true);\n    }\n\n    this.isAdded = false;\n    gObj.clearSelection();\n    var allRows = getGridRowObjects(this.parent);\n\n    var _loop_1 = function (i) {\n      var isInsert = false;\n      var isDirty = rows[i].isDirty;\n      gridActionHandler(this_1.parent, function (tableName, rows) {\n        isInsert = _this.removeBatchElementChanges(rows[i], isDirty);\n\n        if (isInsert) {\n          rows.splice(i, 1);\n        }\n      }, allRows);\n\n      if (isInsert) {\n        i--;\n      }\n\n      out_i_1 = i;\n    };\n\n    var this_1 = this,\n        out_i_1;\n\n    for (var i = 0; i < rows.length; i++) {\n      _loop_1(i);\n\n      i = out_i_1;\n    }\n\n    if (!gObj.getContentTable().querySelector('tr.e-row')) {\n      gObj.renderModule.renderEmptyRow();\n    }\n\n    var args = {\n      requestType: 'batchCancel',\n      rows: this.parent.getRowsObject()\n    };\n\n    if (!this.parent.isFrozenGrid()) {\n      gObj.notify(events.batchCancel, {\n        rows: this.parent.getRowsObject().length ? this.parent.getRowsObject() : [new Row({\n          isDataRow: true,\n          cells: [new Cell({\n            isDataCell: true,\n            visible: true\n          })]\n        })]\n      });\n    } else {\n      if (this.parent.getRowsObject().length) {\n        gObj.notify(events.batchCancel, {\n          rows: this.parent.getRowsObject(),\n          args: {\n            isFrozen: true\n          }\n        });\n      }\n\n      if (this.parent.getMovableRowsObject().length) {\n        gObj.notify(events.batchCancel, {\n          rows: this.parent.getMovableRowsObject()\n        });\n      }\n\n      if (this.parent.getFrozenRightRowsObject().length) {\n        gObj.notify(events.batchCancel, {\n          rows: this.parent.getFrozenRightRowsObject(),\n          args: {\n            renderFrozenRightContent: true\n          }\n        });\n      }\n    }\n\n    gObj.selectRow(this.cellDetails.rowIndex);\n    this.refreshRowIdx();\n    gObj.notify(events.toolbarRefresh, {});\n    this.parent.notify(events.tooltipDestroy, {});\n    args = {\n      requestType: 'batchCancel',\n      rows: this.parent.getRowsObject()\n    };\n    gObj.trigger(events.batchCancel, args);\n  };\n\n  BatchEdit.prototype.removeBatchElementChanges = function (row, isDirty) {\n    var gObj = this.parent;\n    var rowRenderer = new RowRenderer(this.serviceLocator, null, this.parent);\n    var isInstertedRemoved = false;\n\n    if (isDirty) {\n      row.isDirty = isDirty;\n      var tr = gObj.getRowElementByUID(row.uid);\n\n      if (tr) {\n        if (tr.classList.contains('e-insertedrow')) {\n          remove(tr);\n          isInstertedRemoved = true;\n        } else {\n          refreshForeignData(row, this.parent.getForeignKeyColumns(), row.data);\n          delete row.changes;\n          delete row.edit;\n          row.isDirty = false;\n          classList(tr, [], ['e-hiddenrow', 'e-updatedtd']);\n          rowRenderer.refresh(row, gObj.getColumns(), false);\n        }\n\n        if (this.parent.aggregates.length > 0) {\n          var type = 'type';\n          var editType = [];\n          editType[type] = 'cancel';\n          this.parent.notify(events.refreshFooterRenderer, editType);\n\n          if (this.parent.groupSettings.columns.length > 0) {\n            this.parent.notify(events.groupAggregates, editType);\n          }\n        }\n      }\n    }\n\n    return isInstertedRemoved;\n  };\n\n  BatchEdit.prototype.removeHideAndSelection = function (tr) {\n    if (tr.classList.contains('e-hiddenrow')) {\n      tr.removeAttribute('aria-selected');\n      var tdElements = [].slice.call(tr.getElementsByClassName('e-selectionbackground'));\n\n      for (var i = 0; i < tdElements.length; i++) {\n        removeClass([tdElements[i]], ['e-selectionbackground', 'e-active']);\n      }\n    }\n\n    classList(tr, [], ['e-hiddenrow', 'e-updatedtd']);\n  };\n\n  BatchEdit.prototype.deleteRecord = function (fieldname, data) {\n    this.saveCell();\n\n    if (this.validateFormObj()) {\n      this.saveCell(true);\n    }\n\n    this.isAdded = false;\n    this.bulkDelete(fieldname, data);\n\n    if (this.parent.aggregates.length > 0) {\n      this.parent.notify(events.refreshFooterRenderer, {});\n\n      if (this.parent.groupSettings.columns.length > 0) {\n        this.parent.notify(events.groupAggregates, {});\n      }\n    }\n  };\n\n  BatchEdit.prototype.addRecord = function (data) {\n    this.bulkAddRow(data);\n  };\n\n  BatchEdit.prototype.endEdit = function () {\n    if (this.parent.isEdit && this.validateFormObj()) {\n      return;\n    }\n\n    this.batchSave();\n  };\n\n  BatchEdit.prototype.closeForm = function () {\n    for (var i = 0; i < Object.keys(this.originalCell).length; i++) {\n      for (var j = 0; j < Object.keys(this.cloneCell).length; j++) {\n        if (Object.keys(this.originalCell)[i] === Object.keys(this.cloneCell)[j]) {\n          this.cloneCell[Object.keys(this.cloneCell)[j]].replaceWith(this.originalCell[Object.keys(this.originalCell)[i]]);\n\n          if (this.originalCell[Object.keys(this.originalCell)[i]].classList.contains('e-selectionbackground')) {\n            this.originalCell[Object.keys(this.originalCell)[i]].classList.remove('e-selectionbackground', 'e-cellselectionbackground', 'e-active');\n          }\n        }\n      }\n    }\n\n    this.cloneCell = {};\n    this.originalCell = {};\n  };\n\n  BatchEdit.prototype.validateFormObj = function () {\n    return this.parent.editModule.formObj && !this.parent.editModule.formObj.validate();\n  };\n\n  BatchEdit.prototype.batchSave = function () {\n    var gObj = this.parent;\n    var deletedRecords = 'deletedRecords';\n\n    if (gObj.isCheckBoxSelection) {\n      var checkAllBox = gObj.element.querySelector('.e-checkselectall').parentElement;\n\n      if (checkAllBox.classList.contains('e-checkbox-disabled') && gObj.pageSettings.totalRecordsCount > gObj.currentViewData.length) {\n        removeClass([checkAllBox], ['e-checkbox-disabled']);\n      }\n    }\n\n    this.saveCell();\n\n    if (gObj.isEdit || this.editNextValCell() || gObj.isEdit) {\n      return;\n    }\n\n    var changes = this.getBatchChanges();\n\n    if (this.parent.selectionSettings.type === 'Multiple' && changes[deletedRecords].length && this.parent.selectionSettings.persistSelection) {\n      changes[deletedRecords] = this.removeSelectedData;\n      this.removeSelectedData = [];\n    }\n\n    var original = {\n      changedRecords: this.parent.getRowsObject().filter(function (row) {\n        return row.isDirty && ['add', 'delete'].indexOf(row.edit) === -1;\n      }).map(function (row) {\n        return row.data;\n      })\n    };\n    var args = {\n      batchChanges: changes,\n      cancel: false\n    };\n    gObj.trigger(events.beforeBatchSave, args, function (beforeBatchSaveArgs) {\n      if (beforeBatchSaveArgs.cancel) {\n        return;\n      }\n\n      gObj.showSpinner();\n      gObj.notify(events.bulkSave, {\n        changes: changes,\n        original: original\n      });\n    });\n  };\n\n  BatchEdit.prototype.getBatchChanges = function () {\n    var changes = {\n      addedRecords: [],\n      deletedRecords: [],\n      changedRecords: []\n    };\n    var rows = this.parent.getRowsObject();\n\n    for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n      var row = rows_1[_i];\n\n      if (row.isDirty) {\n        switch (row.edit) {\n          case 'add':\n            changes.addedRecords.push(row.changes);\n            break;\n\n          case 'delete':\n            changes.deletedRecords.push(row.data);\n            break;\n\n          default:\n            changes.changedRecords.push(row.changes);\n        }\n      }\n    }\n\n    return changes;\n  };\n  /**\n   * @param {string} uid - specifes the uid\n   * @returns {void}\n   * @hidden\n   */\n\n\n  BatchEdit.prototype.removeRowObjectFromUID = function (uid) {\n    var rows = this.parent.getRowsObject();\n    var i = 0;\n\n    for (var len = rows.length; i < len; i++) {\n      if (rows[i].uid === uid) {\n        break;\n      }\n    }\n\n    gridActionHandler(this.parent, function (tableName, rows) {\n      rows.splice(i, 1);\n    }, getGridRowObjects(this.parent));\n  };\n  /**\n   * @param {Row<Column>} row - specifies the row object\n   * @param {freezeTable} newTableName - specifies the table name\n   * @returns {void}\n   * @hidden\n   */\n\n\n  BatchEdit.prototype.addRowObject = function (row, newTableName) {\n    var gObj = this.parent;\n    var isTop = gObj.editSettings.newRowPosition === 'Top';\n    gridActionHandler(this.parent, function (tableName, rows) {\n      var rowClone = row.clone();\n\n      if (gObj.isFrozenGrid()) {\n        if (newTableName === tableName) {\n          if (isTop) {\n            rows.unshift(rowClone);\n          } else {\n            rows.push(rowClone);\n          }\n        }\n      } else {\n        if (isTop) {\n          rows.unshift(rowClone);\n        } else {\n          rows.push(rowClone);\n        }\n      }\n    }, getGridRowObjects(this.parent), true);\n  }; // tslint:disable-next-line:max-func-body-length\n\n\n  BatchEdit.prototype.bulkDelete = function (fieldname, data) {\n    var _this = this;\n\n    this.removeSelectedData = [];\n    var gObj = this.parent;\n    var index = gObj.selectedRowIndex;\n    var selectedRows = gObj.getSelectedRows();\n    var args = {\n      primaryKey: this.parent.getPrimaryKeyFieldNames(),\n      rowIndex: index,\n      rowData: data ? data : gObj.getSelectedRecords()[0],\n      cancel: false\n    };\n\n    if (data) {\n      args.row = gObj.editModule.deleteRowUid ? gObj.getRowElementByUID(gObj.editModule.deleteRowUid) : gObj.getRows()[gObj.getCurrentViewRecords().indexOf(data)];\n    } else {\n      args.row = data ? gObj.getRows()[index] : selectedRows[0];\n    }\n\n    if (!args.row) {\n      return;\n    } // tslint:disable-next-line:max-func-body-length\n\n\n    gObj.trigger(events.beforeBatchDelete, args, function (beforeBatchDeleteArgs) {\n      if (beforeBatchDeleteArgs.cancel) {\n        return;\n      }\n\n      _this.removeSelectedData = gObj.getSelectedRecords();\n      gObj.clearSelection();\n      beforeBatchDeleteArgs.row = beforeBatchDeleteArgs.row ? beforeBatchDeleteArgs.row : data ? gObj.getRows()[index] : selectedRows[0];\n\n      if (_this.parent.isFrozenGrid()) {\n        if (data) {\n          index = parseInt(beforeBatchDeleteArgs.row.getAttribute(literals.ariaRowIndex), 10);\n          selectedRows = [];\n          selectedRows.push(gObj.getRowByIndex(index));\n          selectedRows.push(gObj.getMovableRowByIndex(index));\n\n          if (gObj.getFrozenMode() === literals.leftRight) {\n            selectedRows.push(gObj.getFrozenRightRowByIndex(index));\n          }\n        }\n\n        for (var i = 0; i < selectedRows.length; i++) {\n          var uid = selectedRows[i].getAttribute('data-uid');\n\n          if (selectedRows[i].classList.contains('e-insertedrow')) {\n            _this.removeRowObjectFromUID(uid);\n\n            remove(selectedRows[i]);\n          } else {\n            var rowObj = gObj.getRowObjectFromUID(uid);\n            rowObj.isDirty = true;\n            rowObj.edit = 'delete';\n            classList(selectedRows[i], ['e-hiddenrow', 'e-updatedtd'], []);\n\n            if (gObj.frozenRows && index < gObj.frozenRows && gObj.getMovableDataRows().length >= gObj.frozenRows) {\n              gObj.getMovableHeaderTbody().appendChild(gObj.getMovableRowByIndex(gObj.frozenRows - 1));\n              gObj.getFrozenHeaderTbody().appendChild(gObj.getRowByIndex(gObj.frozenRows - 1));\n\n              if (gObj.getFrozenMode() === literals.leftRight) {\n                gObj.getFrozenRightHeaderTbody().appendChild(gObj.getFrozenRightRowByIndex(gObj.frozenRows - 1));\n              }\n            }\n\n            if (gObj.frozenRows && index < gObj.frozenRows && gObj.getDataRows().length >= gObj.frozenRows) {\n              gObj.getHeaderTable().querySelector(literals.tbody).appendChild(gObj.getRowByIndex(gObj.frozenRows - 1));\n            }\n          }\n\n          delete selectedRows[i];\n        }\n      } else if (!_this.parent.isFrozenGrid() && (selectedRows.length === 1 || data)) {\n        var uid = beforeBatchDeleteArgs.row.getAttribute('data-uid');\n        uid = data && _this.parent.editModule.deleteRowUid ? uid = _this.parent.editModule.deleteRowUid : uid;\n\n        if (beforeBatchDeleteArgs.row.classList.contains('e-insertedrow')) {\n          _this.removeRowObjectFromUID(uid);\n\n          remove(beforeBatchDeleteArgs.row);\n        } else {\n          var rowObj = gObj.getRowObjectFromUID(uid);\n          rowObj.isDirty = true;\n          rowObj.edit = 'delete';\n          classList(beforeBatchDeleteArgs.row, ['e-hiddenrow', 'e-updatedtd'], []);\n        }\n\n        delete beforeBatchDeleteArgs.row;\n      } else {\n        for (var i = 0; i < selectedRows.length; i++) {\n          var uniqueid = selectedRows[i].getAttribute('data-uid');\n\n          if (selectedRows[i].classList.contains('e-insertedrow')) {\n            _this.removeRowObjectFromUID(uniqueid);\n\n            remove(selectedRows[i]);\n          } else {\n            classList(selectedRows[i], ['e-hiddenrow', 'e-updatedtd'], []);\n            var selectedRow = gObj.getRowObjectFromUID(uniqueid);\n            selectedRow.isDirty = true;\n            selectedRow.edit = 'delete';\n            delete selectedRows[i];\n          }\n        }\n      }\n\n      _this.refreshRowIdx();\n\n      if (data) {\n        gObj.editModule.deleteRowUid = undefined;\n\n        if (gObj.getSelectedRows().length) {\n          index = parseInt(gObj.getSelectedRows()[0].getAttribute(literals.ariaRowIndex), 10);\n        }\n      }\n\n      if (!gObj.isCheckBoxSelection) {\n        gObj.selectRow(index);\n      }\n\n      gObj.trigger(events.batchDelete, beforeBatchDeleteArgs);\n      gObj.notify(events.batchDelete, {\n        rows: _this.parent.getRowsObject()\n      });\n      gObj.notify(events.toolbarRefresh, {});\n    });\n  };\n\n  BatchEdit.prototype.refreshRowIdx = function () {\n    var gObj = this.parent;\n    var rows = gObj.getAllDataRows(true);\n    var dataRows = getGridRowElements(this.parent);\n    var dataObjects = getGridRowObjects(this.parent);\n\n    var _loop_2 = function (i, j, len) {\n      if (rows[i].classList.contains(literals.row) && !rows[i].classList.contains('e-hiddenrow')) {\n        gridActionHandler(this_2.parent, function (tableName, rowElements, rowObjects) {\n          rowElements[i].setAttribute(literals.ariaRowIndex, j.toString());\n          rowObjects[i].index = j;\n        }, dataRows, null, dataObjects);\n        j++;\n      } else {\n        gridActionHandler(this_2.parent, function (tableName, rowElements, rowObjects) {\n          rowElements[i].removeAttribute(literals.ariaRowIndex);\n          rowObjects[i].index = -1;\n        }, dataRows, null, dataObjects);\n      }\n\n      out_j_1 = j;\n    };\n\n    var this_2 = this,\n        out_j_1;\n\n    for (var i = 0, j = 0, len = rows.length; i < len; i++) {\n      _loop_2(i, j, len);\n\n      j = out_j_1;\n    }\n  };\n\n  BatchEdit.prototype.getIndexFromData = function (data) {\n    return inArray(data, this.parent.getCurrentViewRecords());\n  };\n\n  BatchEdit.prototype.bulkAddRow = function (data) {\n    var _this = this;\n\n    var gObj = this.parent;\n\n    if (!gObj.editSettings.allowAdding) {\n      return;\n    }\n\n    if (gObj.isEdit) {\n      this.saveCell();\n      this.parent.notify(events.editNextValCell, {});\n    }\n\n    if (gObj.isEdit) {\n      return;\n    }\n\n    if (this.initialRender) {\n      var visibleColumns = gObj.getVisibleColumns();\n\n      for (var i = 0; i < visibleColumns.length; i++) {\n        if (visibleColumns[i].validationRules && visibleColumns[i].validationRules['required']) {\n          var obj = {\n            field: visibleColumns[i]['field'].slice(),\n            cellIdx: i\n          };\n          this.validationColObj.push(obj);\n        }\n      }\n\n      this.initialRender = false;\n    }\n\n    this.parent.element.classList.add('e-editing');\n    var defaultData = data ? data : this.getDefaultData();\n    var args = {\n      defaultData: defaultData,\n      primaryKey: gObj.getPrimaryKeyFieldNames(),\n      cancel: false\n    };\n    gObj.trigger(events.beforeBatchAdd, args, function (beforeBatchAddArgs) {\n      if (beforeBatchAddArgs.cancel) {\n        return;\n      }\n\n      _this.isAdded = true;\n      gObj.clearSelection();\n\n      if (gObj.isFrozenGrid()) {\n        var movableCnt = _this.parent.getMovableColumnsCount();\n\n        var leftCnt = _this.parent.getFrozenLeftCount();\n\n        var rightCnt = _this.parent.getFrozenRightColumnsCount();\n\n        var tbody$$1 = gObj.getContentTable().querySelector(literals.tbody);\n        var totCount = movableCnt + leftCnt + rightCnt;\n        var tableTanName = void 0;\n        var selectedRowAdd = [];\n        var selectedRowAddCells = [];\n        var col = void 0;\n        var index = void 0;\n        var tr = void 0;\n        var mTr = void 0;\n        var frTr = void 0;\n\n        for (var i = 0; i < totCount;) {\n          var row = new RowRenderer(_this.serviceLocator, null, _this.parent);\n          var model = new RowModelGenerator(_this.parent);\n          var modelData = model.generateRows([beforeBatchAddArgs.defaultData]);\n\n          if (leftCnt > 0) {\n            leftCnt = 0;\n            tableTanName = 'frozen-left';\n            totCount = leftCnt + rightCnt + movableCnt;\n          } else if (movableCnt > 0) {\n            movableCnt = 0;\n            tableTanName = 'movable';\n            totCount = leftCnt + rightCnt + movableCnt;\n          } else {\n            rightCnt = 0;\n            tableTanName = 'frozen-right';\n            totCount = leftCnt + rightCnt + movableCnt;\n          }\n\n          for (var i_1 = 0; i_1 < modelData.length; i_1++) {\n            modelData[i_1].cells = splitFrozenRowObjectCells(_this.parent, modelData[i_1].cells, tableTanName);\n          }\n\n          if (tableTanName === 'frozen-left') {\n            tr = row.render(modelData[0], gObj.getColumns());\n            tr.classList.add('e-insertedrow');\n          } else if (tableTanName === 'movable') {\n            mTr = row.render(modelData[0], gObj.getColumns());\n            mTr.classList.add('e-insertedrow');\n          } else {\n            frTr = row.render(modelData[0], gObj.getColumns());\n            frTr.classList.add('e-insertedrow');\n          }\n\n          for (var i_2 = 0; i_2 < _this.parent.groupSettings.columns.length; i_2++) {\n            tr.insertBefore(_this.parent.createElement('td', {\n              className: 'e-indentcell'\n            }), tr.firstChild);\n            modelData[0].cells.unshift(new Cell({\n              cellType: CellType.Indent\n            }));\n          }\n\n          if (tbody$$1.querySelector('.e-emptyrow')) {\n            var emptyRow = tbody$$1.querySelector('.e-emptyrow');\n            emptyRow.parentNode.removeChild(emptyRow);\n\n            _this.removeFrozenTbody();\n          }\n\n          if (tableTanName === 'frozen-left') {\n            if (gObj.frozenRows && gObj.editSettings.newRowPosition === 'Top') {\n              tbody$$1 = gObj.getHeaderTable().querySelector(literals.tbody);\n            } else {\n              tbody$$1 = gObj.getContentTable().querySelector(literals.tbody);\n            }\n\n            if (_this.parent.editSettings.newRowPosition === 'Top') {\n              tbody$$1.insertBefore(tr, tbody$$1.firstChild);\n              addClass([].slice.call(tr.getElementsByClassName(literals.rowCell)), ['e-updatedtd']);\n            } else {\n              tbody$$1.appendChild(tr);\n              addClass([].slice.call(tr.getElementsByClassName(literals.rowCell)), ['e-updatedtd']);\n            }\n          }\n\n          if (tableTanName === 'movable' || tableTanName === 'frozen-right') {\n            _this.renderFrozenAddRow(mTr, frTr, tableTanName);\n          }\n\n          modelData[0].isDirty = true;\n          modelData[0].changes = extend({}, {}, modelData[0].data, true);\n          modelData[0].edit = 'add';\n\n          _this.addRowObject(modelData[0], tableTanName);\n        }\n\n        _this.refreshRowIdx();\n\n        _this.focus.forgetPrevious();\n\n        gObj.notify(events.batchAdd, {\n          rows: _this.parent.getRowsObject(),\n          args: {\n            isFrozen: _this.parent.isFrozenGrid()\n          }\n        });\n\n        var changes = _this.getBatchChanges();\n\n        var btmIdx = _this.getBottomIndex();\n\n        if (_this.parent.editSettings.newRowPosition === 'Top') {\n          gObj.selectRow(0);\n        } else {\n          gObj.selectRow(btmIdx);\n        }\n\n        if (!data) {\n          index = _this.findNextEditableCell(0, true);\n          col = gObj.getColumns()[index];\n\n          if (_this.parent.editSettings.newRowPosition === 'Top') {\n            _this.editCell(0, col.field, true);\n          } else {\n            _this.editCell(btmIdx, col.field, true);\n          }\n        }\n\n        if (_this.parent.aggregates.length > 0 && (data || changes[literals.addedRecords].length)) {\n          _this.parent.notify(events.refreshFooterRenderer, {});\n        }\n\n        if (tr) {\n          alignFrozenEditForm(mTr.querySelector('td:not(.e-hide)'), tr.querySelector('td:not(.e-hide)'));\n          selectedRowAdd.push(tr);\n          selectedRowAddCells.push(tr.cells);\n        }\n\n        selectedRowAdd.push(mTr);\n        selectedRowAddCells.push(mTr.cells);\n\n        if (frTr) {\n          selectedRowAdd.push(frTr);\n          selectedRowAddCells.push(frTr.cells);\n        }\n\n        var args1 = {\n          defaultData: beforeBatchAddArgs.defaultData,\n          row: selectedRowAdd,\n          columnObject: col,\n          columnIndex: index,\n          primaryKey: beforeBatchAddArgs.primaryKey,\n          cell: selectedRowAddCells\n        };\n        gObj.trigger(events.batchAdd, args1);\n      } else {\n        var row = new RowRenderer(_this.serviceLocator, null, _this.parent);\n        var model = new RowModelGenerator(_this.parent);\n        var modelData = model.generateRows([beforeBatchAddArgs.defaultData]);\n        var tr = row.render(modelData[0], gObj.getColumns());\n        var col = void 0;\n        var index = void 0;\n\n        for (var i = 0; i < _this.parent.groupSettings.columns.length; i++) {\n          tr.insertBefore(_this.parent.createElement('td', {\n            className: 'e-indentcell'\n          }), tr.firstChild);\n          modelData[0].cells.unshift(new Cell({\n            cellType: CellType.Indent\n          }));\n        }\n\n        var tbody = gObj.getContentTable().querySelector(literals.tbody);\n        tr.classList.add('e-insertedrow');\n\n        if (tbody.querySelector('.e-emptyrow')) {\n          var emptyRow = tbody.querySelector('.e-emptyrow');\n          emptyRow.parentNode.removeChild(emptyRow);\n\n          _this.removeFrozenTbody();\n        }\n\n        if (gObj.frozenRows && gObj.editSettings.newRowPosition === 'Top') {\n          tbody = gObj.getHeaderTable().querySelector(literals.tbody);\n        } else {\n          tbody = gObj.getContentTable().querySelector(literals.tbody);\n        }\n\n        if (_this.parent.editSettings.newRowPosition === 'Top') {\n          tbody.insertBefore(tr, tbody.firstChild);\n        } else {\n          tbody.appendChild(tr);\n        }\n\n        addClass([].slice.call(tr.getElementsByClassName(literals.rowCell)), ['e-updatedtd']);\n        modelData[0].isDirty = true;\n        modelData[0].changes = extend({}, {}, modelData[0].data, true);\n        modelData[0].edit = 'add';\n\n        _this.addRowObject(modelData[0]);\n\n        _this.refreshRowIdx();\n\n        _this.focus.forgetPrevious();\n\n        gObj.notify(events.batchAdd, {\n          rows: _this.parent.getRowsObject(),\n          args: {\n            isFrozen: _this.parent.isFrozenGrid()\n          }\n        });\n\n        var changes = _this.getBatchChanges();\n\n        var btmIdx = _this.getBottomIndex();\n\n        if (_this.parent.editSettings.newRowPosition === 'Top') {\n          gObj.selectRow(0);\n        } else {\n          gObj.selectRow(btmIdx);\n        }\n\n        if (!data) {\n          index = _this.findNextEditableCell(0, true);\n          col = gObj.getColumns()[index];\n\n          if (_this.parent.editSettings.newRowPosition === 'Top') {\n            _this.editCell(0, col.field, true);\n          } else {\n            _this.editCell(btmIdx, col.field, true);\n          }\n        }\n\n        if (_this.parent.aggregates.length > 0 && (data || changes[literals.addedRecords].length)) {\n          _this.parent.notify(events.refreshFooterRenderer, {});\n        }\n\n        var args1 = {\n          defaultData: beforeBatchAddArgs.defaultData,\n          row: tr,\n          columnObject: col,\n          columnIndex: index,\n          primaryKey: beforeBatchAddArgs.primaryKey,\n          cell: tr.cells[index]\n        };\n        gObj.trigger(events.batchAdd, args1);\n      }\n    });\n  };\n\n  BatchEdit.prototype.renderFrozenAddRow = function (mTr, frTr, tableName$$1) {\n    var gObj = this.parent;\n    var mTbody;\n    var frTbody;\n\n    if (tableName$$1 === 'movable') {\n      if (gObj.frozenRows && gObj.editSettings.newRowPosition === 'Top') {\n        mTbody = this.parent.getMovableHeaderTbody();\n      } else {\n        mTbody = this.parent.getContent().querySelector('.e-movablecontent').querySelector(literals.tbody);\n      }\n\n      if (gObj.editSettings.newRowPosition === 'Top') {\n        mTbody.insertBefore(mTr, mTbody.firstChild);\n      } else {\n        mTbody.appendChild(mTr);\n      }\n\n      addClass([].slice.call(mTr.getElementsByClassName(literals.rowCell)), ['e-updatedtd']);\n    }\n\n    if (tableName$$1 === 'frozen-right') {\n      if (gObj.frozenRows && gObj.editSettings.newRowPosition === 'Top') {\n        frTbody = this.parent.getFrozenRightHeaderTbody();\n      } else {\n        frTbody = this.parent.getContent().querySelector('.e-frozen-right-content').querySelector(literals.tbody);\n      }\n\n      if (gObj.editSettings.newRowPosition === 'Top') {\n        frTbody.insertBefore(frTr, frTbody.firstChild);\n      } else {\n        frTbody.appendChild(frTr);\n      }\n\n      addClass([].slice.call(frTr.getElementsByClassName(literals.rowCell)), ['e-updatedtd']);\n      alignFrozenEditForm(frTr.querySelector('td:not(.e-hide)'), mTr.querySelector('td:not(.e-hide)'));\n    }\n\n    if (gObj.height === 'auto') {\n      gObj.notify(events.frozenHeight, {});\n    }\n  };\n\n  BatchEdit.prototype.removeFrozenTbody = function () {\n    var gObj = this.parent;\n\n    if (gObj.isFrozenGrid()) {\n      var moveTbody = gObj.getContent().querySelector('.' + literals.movableContent).querySelector(literals.tbody);\n      moveTbody.firstElementChild.parentNode.removeChild(moveTbody.firstElementChild);\n\n      if (gObj.getFrozenMode() === literals.leftRight) {\n        var frTbody = gObj.getContent().querySelector('.e-frozen-right-content').querySelector(literals.tbody);\n        frTbody.firstElementChild.parentNode.removeChild(frTbody.firstElementChild);\n      }\n    }\n  };\n\n  BatchEdit.prototype.renderMovable = function (ele, rightEle) {\n    var mEle = ele.cloneNode(true);\n    var movable = this.parent.getMovableColumnsCount();\n    var left = this.parent.getFrozenLeftCount();\n    var right = this.parent.getFrozenRightColumnsCount();\n    sliceElements(ele, 0, left);\n    sliceElements(mEle, left, right ? mEle.children.length - right : mEle.children.length);\n    sliceElements(rightEle, left + movable, rightEle.children.length);\n    return mEle;\n  };\n\n  BatchEdit.prototype.findNextEditableCell = function (columnIndex, isAdd, isValOnly) {\n    var cols = this.parent.getColumns();\n    var endIndex = cols.length;\n    var validation;\n\n    for (var i = columnIndex; i < endIndex; i++) {\n      validation = isValOnly ? isNullOrUndefined(cols[i].validationRules) : false;\n\n      if (!isAdd && this.checkNPCell(cols[i])) {\n        return i;\n      } else if (isAdd && !cols[i].template && cols[i].visible && cols[i].allowEditing && !(cols[i].isIdentity && cols[i].isPrimaryKey) && !validation) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  BatchEdit.prototype.checkNPCell = function (col) {\n    return !col.template && col.visible && !col.isPrimaryKey && !col.isIdentity && col.allowEditing;\n  };\n\n  BatchEdit.prototype.getDefaultData = function () {\n    var gObj = this.parent;\n    var data = {};\n    var dValues = {\n      'number': 0,\n      'string': null,\n      'boolean': false,\n      'date': null,\n      'datetime': null\n    };\n\n    for (var _i = 0, _a = gObj.columnModel; _i < _a.length; _i++) {\n      var col = _a[_i];\n\n      if (col.field) {\n        setValue(col.field, Object.keys(col).indexOf('defaultValue') >= 0 ? col.defaultValue : dValues[col.type], data);\n      }\n    }\n\n    return data;\n  };\n\n  BatchEdit.prototype.setCellIdx = function (target) {\n    var gLen = 0;\n\n    if (this.parent.allowGrouping) {\n      gLen = this.parent.groupSettings.columns.length;\n    }\n\n    this.cellDetails.cellIndex = target.cellIndex - gLen;\n    this.cellDetails.rowIndex = parseInt(target.getAttribute('index'), 10);\n  };\n\n  BatchEdit.prototype.editCell = function (index, field, isAdd) {\n    var gObj = this.parent;\n    var col = gObj.getColumnByField(field);\n    this.index = index;\n    this.field = field;\n    this.isAdd = isAdd;\n    var checkEdit = gObj.isEdit && !(this.cellDetails.column.field === field && this.cellDetails.rowIndex === index && this.parent.getDataRows().length - 1 !== index);\n\n    if (gObj.editSettings.allowEditing) {\n      if (!checkEdit && col.allowEditing) {\n        this.editCellExtend(index, field, isAdd);\n      } else if (checkEdit) {\n        this.editNext = true;\n        this.saveCell();\n      }\n    }\n  };\n\n  BatchEdit.prototype.editCellExtend = function (index, field, isAdd) {\n    var _this = this;\n\n    var gObj = this.parent;\n    var col = gObj.getColumnByField(field);\n    var keys = gObj.getPrimaryKeyFieldNames();\n\n    if (gObj.isEdit) {\n      return;\n    }\n\n    var row;\n    var mRowData;\n    var rowData = extend({}, {}, this.getDataByIndex(index), true);\n\n    if (col.getFreezeTableName() === 'movable' || col.getFreezeTableName() === literals.frozenRight) {\n      row = col.getFreezeTableName() === 'movable' ? gObj.getMovableDataRows()[index] : gObj.getFrozenRightDataRows()[index];\n      mRowData = this.parent.getRowObjectFromUID(row.getAttribute('data-uid'));\n      rowData = mRowData.changes ? extend({}, {}, mRowData.changes, true) : rowData;\n    } else {\n      row = gObj.getDataRows()[index];\n      rowData = extend({}, {}, this.getDataByIndex(index), true);\n    }\n\n    if (keys[0] === col.field && !row.classList.contains('e-insertedrow') || col.columns || col.isPrimaryKey && col.isIdentity) {\n      this.parent.isLastCellPrimaryKey = true;\n      return;\n    }\n\n    this.parent.isLastCellPrimaryKey = false;\n    this.parent.element.classList.add('e-editing');\n    var rowObj = gObj.getRowObjectFromUID(row.getAttribute('data-uid'));\n    var cells = [].slice.apply(row.cells);\n    var args = {\n      columnName: col.field,\n      isForeignKey: !isNullOrUndefined(col.foreignKeyValue),\n      primaryKey: keys,\n      rowData: rowData,\n      validationRules: extend({}, col.validationRules ? col.validationRules : {}),\n      value: getObject(col.field, rowData),\n      type: !isAdd ? 'edit' : 'add',\n      cancel: false,\n      foreignKeyData: rowObj && rowObj.foreignKeyData\n    };\n    args.cell = cells[this.getColIndex(cells, this.getCellIdx(col.uid))];\n    args.row = row;\n    args.columnObject = col;\n\n    if (!args.cell) {\n      return;\n    }\n\n    gObj.trigger(events.cellEdit, args, function (cellEditArgs) {\n      if (cellEditArgs.cancel) {\n        return;\n      }\n\n      cellEditArgs.cell = cellEditArgs.cell ? cellEditArgs.cell : cells[_this.getColIndex(cells, _this.getCellIdx(col.uid))];\n      cellEditArgs.row = cellEditArgs.row ? cellEditArgs.row : row;\n      cellEditArgs.columnObject = cellEditArgs.columnObject ? cellEditArgs.columnObject : col;\n      cellEditArgs.columnObject.index = isNullOrUndefined(cellEditArgs.columnObject.index) ? 0 : cellEditArgs.columnObject.index;\n      _this.cellDetails = {\n        rowData: rowData,\n        column: col,\n        value: cellEditArgs.value,\n        isForeignKey: cellEditArgs.isForeignKey,\n        rowIndex: index,\n        cellIndex: parseInt(cellEditArgs.cell.getAttribute(literals.ariaColIndex), 10),\n        foreignKeyData: cellEditArgs.foreignKeyData\n      };\n\n      if (cellEditArgs.cell.classList.contains('e-updatedtd')) {\n        _this.isColored = true;\n        cellEditArgs.cell.classList.remove('e-updatedtd');\n      }\n\n      gObj.isEdit = true;\n      gObj.clearSelection();\n\n      if (!gObj.isCheckBoxSelection || !gObj.isPersistSelection) {\n        gObj.selectRow(_this.cellDetails.rowIndex, true);\n      }\n\n      _this.renderer.update(cellEditArgs);\n\n      _this.parent.notify(events.batchEditFormRendered, cellEditArgs);\n\n      _this.form = select('#' + gObj.element.id + 'EditForm', gObj.element);\n      gObj.editModule.applyFormValidation([col]);\n      _this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n    });\n  };\n\n  BatchEdit.prototype.updateCell = function (rowIndex, field, value) {\n    var gObj = this.parent;\n    var col = gObj.getColumnByField(field);\n    var index = gObj.getColumnIndexByField(field);\n\n    if (col && !col.isPrimaryKey && col.allowEditing) {\n      var td = getCellByColAndRowIndex(this.parent, col, rowIndex, index);\n      var rowObj = col.getFreezeTableName() === 'movable' ? this.parent.getMovableRowsObject()[rowIndex] : col.getFreezeTableName() === literals.frozenRight ? gObj.getFrozenRightRowsObject()[rowIndex] : gObj.getRowObjectFromUID(td.parentElement.getAttribute('data-uid'));\n      this.refreshTD(td, col, rowObj, value);\n      this.parent.trigger(events.queryCellInfo, {\n        cell: this.newReactTd || td,\n        column: col,\n        data: rowObj.changes\n      });\n    }\n  };\n\n  BatchEdit.prototype.setChanges = function (rowObj, field, value) {\n    var currentRowObj;\n\n    if (!this.parent.isFrozenGrid()) {\n      if (!rowObj.changes) {\n        rowObj.changes = extend({}, {}, rowObj.data, true);\n      }\n\n      if (!isNullOrUndefined(field)) {\n        DataUtil.setValue(field, value, rowObj.changes);\n      }\n\n      if (rowObj.data[field] !== value) {\n        var type = this.parent.getColumnByField(field).type;\n\n        if (type === 'date' || type === 'datetime') {\n          if (new Date(rowObj.data[field]).toString() !== new Date(value).toString()) {\n            rowObj.isDirty = true;\n          }\n        } else {\n          rowObj.isDirty = true;\n        }\n      }\n    } else {\n      var rowEle = this.parent.getRowElementByUID(rowObj.uid);\n      var rowIndex = parseInt(rowEle.getAttribute(literals.ariaRowIndex), 10);\n      currentRowObj = this.parent.getRowsObject()[rowIndex];\n\n      if (!currentRowObj.changes) {\n        currentRowObj.changes = extend({}, {}, rowObj.data, true);\n      }\n\n      if (!isNullOrUndefined(field)) {\n        setValue(field, value, currentRowObj.changes);\n      }\n\n      var movableRowObject = this.parent.getMovableRowsObject()[rowIndex];\n      movableRowObject.changes = extend({}, {}, currentRowObj.changes, true);\n\n      if (rowObj.data[field] !== value) {\n        movableRowObject.isDirty = true;\n        currentRowObj.isDirty = true;\n      }\n\n      if (this.parent.getFrozenMode() === literals.leftRight) {\n        var frRowObject = this.parent.getFrozenRightRowsObject()[rowIndex];\n        frRowObject.changes = extend({}, {}, currentRowObj.changes, true);\n\n        if (rowObj.data[field] !== value) {\n          frRowObject.isDirty = true;\n        }\n      }\n    }\n  };\n\n  BatchEdit.prototype.updateRow = function (index, data) {\n    var keys = Object.keys(data);\n\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n      var col = keys_1[_i];\n      this.updateCell(index, col, data[col]);\n    }\n  };\n\n  BatchEdit.prototype.getCellIdx = function (uid) {\n    var cIdx = this.parent.getColumnIndexByUid(uid) + this.parent.groupSettings.columns.length;\n\n    if (!isNullOrUndefined(this.parent.detailTemplate) || !isNullOrUndefined(this.parent.childGrid)) {\n      cIdx++;\n    }\n\n    if (this.parent.isRowDragable()) {\n      cIdx++;\n    }\n\n    return cIdx;\n  };\n\n  BatchEdit.prototype.refreshTD = function (td, column, rowObj, value) {\n    var cell = new CellRenderer(this.parent, this.serviceLocator);\n    var rowcell;\n    value = column.type === 'number' && !isNullOrUndefined(value) ? parseFloat(value) : value;\n    this.setChanges(rowObj, column.field, value);\n    var frzCols = this.parent.getFrozenColumns() || this.parent.getFrozenLeftColumnsCount() || this.parent.getFrozenRightColumnsCount();\n    frzCols = frzCols && this.parent.isRowDragable() ? frzCols + 1 : frzCols;\n    refreshForeignData(rowObj, this.parent.getForeignKeyColumns(), rowObj.changes);\n\n    if (frzCols && column.getFreezeTableName() === 'movable' && this.parent.getColumns().length === rowObj.cells.length) {\n      rowcell = rowObj.cells.slice(frzCols, rowObj.cells.length);\n    } else {\n      rowcell = rowObj.cells;\n    }\n\n    var parentElement;\n    var cellIndex;\n\n    if (this.parent.isReact) {\n      parentElement = td.parentElement;\n      cellIndex = td.cellIndex;\n    }\n\n    var index = 0;\n\n    if (frzCols) {\n      index = column.getFreezeTableName() === 'movable' && this.parent.getFrozenMode() !== 'Right' ? frzCols : column.getFreezeTableName() === literals.frozenRight ? this.parent.getFrozenLeftColumnsCount() + this.parent.getMovableColumnsCount() : index;\n    }\n\n    cell.refreshTD(td, rowcell[this.getCellIdx(column.uid) - index], rowObj.changes, {\n      'index': this.getCellIdx(column.uid)\n    });\n\n    if (this.parent.isReact) {\n      this.newReactTd = parentElement.cells[cellIndex];\n      parentElement.cells[cellIndex].classList.add('e-updatedtd');\n    } else {\n      td.classList.add('e-updatedtd');\n    }\n\n    td.classList.add('e-updatedtd');\n    this.parent.notify(events.toolbarRefresh, {});\n  };\n\n  BatchEdit.prototype.getColIndex = function (cells, index) {\n    var cIdx = 0;\n\n    if (this.parent.allowGrouping && this.parent.groupSettings.columns) {\n      cIdx = this.parent.groupSettings.columns.length;\n    }\n\n    if (!isNullOrUndefined(this.parent.detailTemplate) || !isNullOrUndefined(this.parent.childGrid)) {\n      cIdx++;\n    }\n\n    if (this.parent.isRowDragable()) {\n      cIdx++;\n    }\n\n    for (var m = 0; m < cells.length; m++) {\n      var colIndex = parseInt(cells[m].getAttribute(literals.ariaColIndex), 10);\n\n      if (colIndex === index - cIdx) {\n        return m;\n      }\n    }\n\n    return -1;\n  };\n\n  BatchEdit.prototype.editNextValCell = function () {\n    var gObj = this.parent;\n    var insertedRows = gObj.element.querySelectorAll('.e-insertedrow');\n    var isSingleInsert = insertedRows.length === 1 ? true : (gObj.getFrozenColumns() > 0 || gObj.getFrozenRightColumnsCount() > 0 || gObj.getFrozenLeftColumnsCount() > 0) && (insertedRows.length === 2 || insertedRows.length === 3) ? true : false;\n\n    if (isSingleInsert && this.isAdded && !gObj.isEdit) {\n      var btmIdx = this.getBottomIndex();\n\n      for (var i = this.cellDetails.cellIndex; i < gObj.getColumns().length; i++) {\n        if (gObj.isEdit) {\n          return;\n        }\n\n        var index = this.findNextEditableCell(this.cellDetails.cellIndex + 1, true, true);\n        var col = gObj.getColumns()[index];\n\n        if (col) {\n          if (this.parent.editSettings.newRowPosition === 'Bottom') {\n            this.editCell(btmIdx, col.field, true);\n          } else {\n            var args = {\n              index: 0,\n              column: col\n            };\n            this.parent.notify(events.nextCellIndex, args);\n            this.editCell(args.index, col.field, true);\n          }\n\n          this.saveCell();\n        }\n      }\n\n      if (!gObj.isEdit) {\n        this.isAdded = false;\n      }\n    } else if (!isSingleInsert && this.isAdded && !gObj.isEdit && !gObj.isFrozenGrid()) {\n      var editRowIdx = 0;\n\n      if (gObj.editSettings.newRowPosition === 'Bottom') {\n        var changes = this.getBatchChanges();\n        editRowIdx = gObj.getCurrentViewRecords().length - changes[literals.deletedRecords].length;\n      }\n\n      for (var i = 0; i < insertedRows.length; i++, editRowIdx++) {\n        if (!gObj.isEdit) {\n          for (var j = 0; j < this.validationColObj.length; j++) {\n            if (gObj.isEdit) {\n              break;\n            } else if (insertedRows[i].querySelectorAll('td')[this.validationColObj[j].cellIdx].innerText === '') {\n              this.editCell(editRowIdx, this.validationColObj[j].field);\n\n              if (this.validateFormObj()) {\n                this.saveCell();\n              }\n            }\n          }\n        } else {\n          break;\n        }\n      }\n\n      if (!gObj.isEdit) {\n        this.isAdded = false;\n      }\n    } else if (!isSingleInsert && this.isAdded && !gObj.isEdit && gObj.isFrozenGrid()) {\n      var fLeftInsertedRow = gObj.getFrozenLeftContentTbody() ? gObj.getFrozenLeftContentTbody().querySelectorAll('.e-insertedrow') : undefined;\n      var fRightInsertedRow = gObj.getFrozenRightContentTbody() ? gObj.getFrozenRightContentTbody().querySelectorAll('.e-insertedrow') : undefined;\n      var mInsertedRow = gObj.getMovableContentTbody().querySelectorAll('.e-insertedrow');\n      var editRowIdx = 0;\n      var fLeftCount = gObj.getVisibleFrozenLeftCount() ? gObj.getVisibleFrozenLeftCount() : gObj.getFrozenColumns();\n      var fRightCount = gObj.getVisibleFrozenRightCount();\n      var mColumnCount = gObj.getVisibleMovableCount();\n\n      if (gObj.editSettings.newRowPosition === 'Bottom') {\n        var changes = this.getBatchChanges();\n        editRowIdx = gObj.getCurrentViewRecords().length - changes[literals.deletedRecords].length;\n      } else if (gObj.editSettings.newRowPosition === 'Top' && gObj.frozenRows) {\n        fLeftInsertedRow = gObj.getFrozenHeaderTbody() ? gObj.getFrozenHeaderTbody().querySelectorAll('.e-insertedrow') : undefined;\n        fRightInsertedRow = gObj.getFrozenRightHeader() ? gObj.getFrozenRightHeader().querySelectorAll('.e-insertedrow') : undefined;\n        mInsertedRow = gObj.getMovableHeaderTbody().querySelectorAll('.e-insertedrow');\n      }\n\n      for (var i = 0; i < mInsertedRow.length; i++, editRowIdx++) {\n        if (!gObj.isEdit) {\n          for (var j = 0; j < this.validationColObj.length; j++) {\n            if (gObj.isEdit) {\n              break;\n            } else if (fLeftCount && this.validationColObj[j].cellIdx < fLeftCount) {\n              if (fLeftInsertedRow[i].querySelectorAll('td')[this.validationColObj[j].cellIdx].innerText === '') {\n                this.editCell(editRowIdx, this.validationColObj[j].field);\n\n                if (gObj.editModule.formObj.validate()) {\n                  this.saveCell();\n                }\n              }\n            } else if (fRightCount && mColumnCount <= this.validationColObj[j].cellIdx) {\n              if (fRightInsertedRow[i].querySelectorAll('td')[this.validationColObj[j].cellIdx - (mColumnCount + fLeftCount)].innerText === '') {\n                this.editCell(editRowIdx, this.validationColObj[j].field);\n\n                if (gObj.editModule.formObj.validate()) {\n                  this.saveCell();\n                }\n              }\n            } else if (mInsertedRow[i].querySelectorAll('td')[this.validationColObj[j].cellIdx - fLeftCount].innerText === '') {\n              this.editCell(editRowIdx, this.validationColObj[j].field);\n\n              if (gObj.editModule.formObj.validate()) {\n                this.saveCell();\n              }\n            }\n          }\n        } else {\n          break;\n        }\n      }\n\n      if (!gObj.isEdit) {\n        this.isAdded = false;\n      }\n    }\n  };\n\n  BatchEdit.prototype.escapeCellEdit = function () {\n    var args = this.generateCellArgs();\n    args.value = args.previousValue;\n\n    if (args.value || !this.cellDetails.column.validationRules) {\n      this.successCallBack(args, args.cell.parentElement, args.column, true)(args);\n    }\n  };\n\n  BatchEdit.prototype.generateCellArgs = function () {\n    var gObj = this.parent;\n    this.parent.element.classList.remove('e-editing');\n    var column = this.cellDetails.column;\n    var obj = {};\n    obj[column.field] = getObject(column.field, this.cellDetails.rowData);\n    var editedData = gObj.editModule.getCurrentEditedData(this.form, obj);\n    var cloneEditedData = extend({}, editedData);\n    editedData = extend({}, editedData, this.cellDetails.rowData);\n    var value = getObject(column.field, cloneEditedData);\n\n    if (!isNullOrUndefined(column.field) && !isUndefined(value)) {\n      setValue(column.field, value, editedData);\n    }\n\n    var args = {\n      columnName: column.field,\n      value: getObject(column.field, editedData),\n      rowData: this.cellDetails.rowData,\n      column: column,\n      previousValue: this.cellDetails.value,\n      isForeignKey: this.cellDetails.isForeignKey,\n      cancel: false\n    };\n    args.cell = this.form.parentElement;\n    args.columnObject = column;\n    return args;\n  };\n\n  BatchEdit.prototype.saveCell = function (isForceSave) {\n    if (this.preventSaveCell || !this.form) {\n      return;\n    }\n\n    var gObj = this.parent;\n\n    if (!isForceSave && (!gObj.isEdit || this.validateFormObj())) {\n      return;\n    }\n\n    this.preventSaveCell = true;\n    var args = this.generateCellArgs();\n    var tr = args.cell.parentElement;\n    var col = args.column;\n\n    if (!isForceSave) {\n      gObj.trigger(events.cellSave, args, this.successCallBack(args, tr, col));\n      gObj.notify(events.batchForm, {\n        formObj: this.form\n      });\n    } else {\n      this.successCallBack(args, tr, col)(args);\n    }\n  };\n\n  BatchEdit.prototype.successCallBack = function (cellSaveArgs, tr, column, isEscapeCellEdit) {\n    var _this = this;\n\n    return function (cellSaveArgs) {\n      var gObj = _this.parent;\n      cellSaveArgs.cell = cellSaveArgs.cell ? cellSaveArgs.cell : _this.form.parentElement;\n      cellSaveArgs.columnObject = cellSaveArgs.columnObject ? cellSaveArgs.columnObject : column;\n      cellSaveArgs.columnObject.index = isNullOrUndefined(cellSaveArgs.columnObject.index) ? 0 : cellSaveArgs.columnObject.index;\n\n      if (cellSaveArgs.cancel) {\n        _this.preventSaveCell = false;\n\n        if (_this.editNext) {\n          _this.editNext = false;\n\n          if (_this.cellDetails.rowIndex === _this.index && _this.cellDetails.column.field === _this.field) {\n            return;\n          }\n\n          _this.editCellExtend(_this.index, _this.field, _this.isAdd);\n        }\n\n        return;\n      }\n\n      gObj.editModule.destroyWidgets([column]);\n      gObj.isEdit = false;\n      gObj.editModule.destroyForm();\n\n      _this.parent.notify(events.tooltipDestroy, {});\n\n      var rowObj = parentsUntil(cellSaveArgs.cell, literals.movableContent) || parentsUntil(cellSaveArgs.cell, literals.movableHeader) ? gObj.getRowObjectFromUID(tr.getAttribute('data-uid'), true) : gObj.getRowObjectFromUID(tr.getAttribute('data-uid'));\n\n      if (gObj.getFrozenMode() === literals.leftRight && (parentsUntil(cellSaveArgs.cell, 'e-frozen-right-header') || parentsUntil(cellSaveArgs.cell, 'e-frozen-right-content'))) {\n        rowObj = gObj.getRowObjectFromUID(tr.getAttribute('data-uid'), false, true);\n      }\n\n      _this.refreshTD(cellSaveArgs.cell, column, rowObj, cellSaveArgs.value);\n\n      if (_this.parent.isReact) {\n        cellSaveArgs.cell = _this.newReactTd;\n      }\n\n      removeClass([tr], [literals.editedRow, 'e-batchrow']);\n      removeClass([cellSaveArgs.cell], ['e-editedbatchcell', 'e-boolcell']);\n\n      if (!isNullOrUndefined(cellSaveArgs.value) && cellSaveArgs.value.toString() === (!isNullOrUndefined(_this.cellDetails.value) ? _this.cellDetails.value : '').toString() && !_this.isColored || isNullOrUndefined(cellSaveArgs.value) && isNullOrUndefined(rowObj.data[column.field]) && isNullOrUndefined(_this.cellDetails.value) && !cellSaveArgs.cell.parentElement.classList.contains('e-insertedrow')) {\n        cellSaveArgs.cell.classList.remove('e-updatedtd');\n      }\n\n      if (isNullOrUndefined(isEscapeCellEdit)) {\n        gObj.trigger(events.cellSaved, cellSaveArgs);\n      }\n\n      gObj.notify(events.toolbarRefresh, {});\n      _this.isColored = false;\n\n      if (_this.parent.aggregates.length > 0) {\n        _this.parent.notify(events.refreshFooterRenderer, {});\n\n        if (_this.parent.groupSettings.columns.length > 0 && !_this.isAddRow(_this.cellDetails.rowIndex)) {\n          _this.parent.notify(events.groupAggregates, {});\n        }\n      }\n\n      _this.preventSaveCell = false;\n\n      if (_this.editNext) {\n        _this.editNext = false;\n\n        if (_this.cellDetails.rowIndex === _this.index && _this.cellDetails.column.field === _this.field) {\n          return;\n        }\n\n        var col = gObj.getColumnByField(_this.field);\n\n        if (col && col.allowEditing) {\n          _this.editCellExtend(_this.index, _this.field, _this.isAdd);\n        }\n      }\n\n      if (isEscapeCellEdit) {\n        gObj.notify(events.restoreFocus, {});\n      }\n    };\n  };\n\n  BatchEdit.prototype.getDataByIndex = function (index) {\n    var row = this.parent.getRowObjectFromUID(this.parent.getDataRows()[index].getAttribute('data-uid'));\n    return row.changes ? row.changes : row.data;\n  };\n\n  BatchEdit.prototype.keyDownHandler = function (e) {\n    if ((e.action === 'tab' || e.action === 'shiftTab') && this.parent.isEdit) {\n      var gObj = this.parent;\n      var btmIdx = this.getBottomIndex();\n      var rowcell = parentsUntil(e.target, literals.rowCell);\n\n      if (rowcell) {\n        var cell = rowcell.querySelector('.e-field');\n\n        if (cell) {\n          var visibleColumns = this.parent.getVisibleColumns();\n          var columnIndex = e.action === 'tab' ? visibleColumns.length - 1 : 0;\n\n          if (visibleColumns[columnIndex].field === cell.getAttribute('id').slice(this.parent.element.id.length)) {\n            if (this.cellDetails.rowIndex === btmIdx && e.action === 'tab') {\n              if (gObj.editSettings.newRowPosition === 'Top') {\n                gObj.editSettings.newRowPosition = 'Bottom';\n                this.addRecord();\n                gObj.editSettings.newRowPosition = 'Top';\n              } else {\n                this.addRecord();\n              }\n            } else {\n              this.saveCell();\n            }\n          }\n        }\n      }\n    }\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n\n\n  BatchEdit.prototype.addCancelWhilePaging = function () {\n    if (this.validateFormObj()) {\n      this.parent.notify(events.destroyForm, {});\n      this.parent.isEdit = false;\n      this.isColored = false;\n    }\n  };\n\n  BatchEdit.prototype.getBottomIndex = function () {\n    var changes = this.getBatchChanges();\n    return this.parent.getCurrentViewRecords().length + changes[literals.addedRecords].length - changes[literals.deletedRecords].length - 1;\n  };\n\n  return BatchEdit;\n}();\n\nexport { BatchEdit };","map":{"version":3,"names":["extend","addClass","removeClass","setValue","closest","select","remove","classList","isNullOrUndefined","isUndefined","CellType","parentsUntil","inArray","refreshForeignData","getObject","alignFrozenEditForm","gridActionHandler","addRemoveEventListener","splitFrozenRowObjectCells","getGridRowElements","sliceElements","getCellByColAndRowIndex","getGridRowObjects","events","RowRenderer","CellRenderer","Row","Cell","RowModelGenerator","DataUtil","literals","BatchEdit","parent","serviceLocator","renderer","cellDetails","originalCell","cloneCell","editNext","preventSaveCell","initialRender","validationColObj","focus","getService","addEventListener","prototype","isDestroyed","evtHandlers","event","click","handler","clickHandler","dblclick","dblClickHandler","beforeCellFocused","onBeforeCellFocused","cellFocused","onCellFocused","doubleTap","keyPressed","keyDownHandler","editNextValCell","closeBatch","closeForm","destroy","dataBoundFunction","dataBound","bind","batchCancelFunction","batchCancel","removeEventListener","focusModule","restoreFocus","notify","toolbarRefresh","e","target","element","id","isEdit","form","saveCell","rowCell","setCellIdx","tr","row","rowIndex","parseInt","getAttribute","ariaRowIndex","colIndex","ariaColIndex","isNaN","parentElement","contains","editedRow","editCell","getColumns","field","isAddRow","validateFormObj","byClick","indexOf","keyArgs","action","cancel","clickArgs","preventDefault","frzCols","getFrozenLeftCount","frzRightCols","getFrozenRightColumnsCount","mCont","getContent","querySelector","movableContent","mHdr","getHeaderContent","movableHeader","clear","container","isContent","isDataCell","frozenRows","isHeader","byKey","_a","indexes","cellIndex","frHdr","frCont","getMovableColumnsCount","getElementsByClassName","length","indent","isRowDragable","isDetail","col","isLastCellPrimaryKey","editCellFromIndex","args","column","index","getDataRows","rowIdx","cellIdx","closeEdit","_this","gObj","rows","getRowsObject","argument","batchChanges","getBatchChanges","beforeBatchCancel","isAdded","clearSelection","allRows","_loop_1","i","isInsert","isDirty","this_1","tableName","removeBatchElementChanges","splice","out_i_1","getContentTable","renderModule","renderEmptyRow","requestType","isFrozenGrid","isDataRow","cells","visible","isFrozen","getMovableRowsObject","getFrozenRightRowsObject","renderFrozenRightContent","selectRow","refreshRowIdx","tooltipDestroy","trigger","rowRenderer","isInstertedRemoved","getRowElementByUID","uid","getForeignKeyColumns","data","changes","edit","refresh","aggregates","type","editType","refreshFooterRenderer","groupSettings","columns","groupAggregates","removeHideAndSelection","removeAttribute","tdElements","slice","call","deleteRecord","fieldname","bulkDelete","addRecord","bulkAddRow","endEdit","batchSave","Object","keys","j","replaceWith","editModule","formObj","validate","deletedRecords","isCheckBoxSelection","checkAllBox","pageSettings","totalRecordsCount","currentViewData","selectionSettings","persistSelection","removeSelectedData","original","changedRecords","filter","map","beforeBatchSave","beforeBatchSaveArgs","showSpinner","bulkSave","addedRecords","_i","rows_1","push","removeRowObjectFromUID","len","addRowObject","newTableName","isTop","editSettings","newRowPosition","rowClone","clone","unshift","selectedRowIndex","selectedRows","getSelectedRows","primaryKey","getPrimaryKeyFieldNames","rowData","getSelectedRecords","deleteRowUid","getRows","getCurrentViewRecords","beforeBatchDelete","beforeBatchDeleteArgs","getRowByIndex","getMovableRowByIndex","getFrozenMode","leftRight","getFrozenRightRowByIndex","rowObj","getRowObjectFromUID","getMovableDataRows","getMovableHeaderTbody","appendChild","getFrozenHeaderTbody","getFrozenRightHeaderTbody","getHeaderTable","tbody","uniqueid","selectedRow","undefined","batchDelete","getAllDataRows","dataRows","dataObjects","_loop_2","this_2","rowElements","rowObjects","setAttribute","toString","out_j_1","getIndexFromData","allowAdding","visibleColumns","getVisibleColumns","validationRules","obj","add","defaultData","getDefaultData","beforeBatchAdd","beforeBatchAddArgs","movableCnt","leftCnt","rightCnt","tbody$$1","totCount","tableTanName","selectedRowAdd","selectedRowAddCells","mTr","frTr","model","modelData","generateRows","i_1","render","i_2","insertBefore","createElement","className","firstChild","cellType","Indent","emptyRow","parentNode","removeChild","removeFrozenTbody","renderFrozenAddRow","forgetPrevious","batchAdd","btmIdx","getBottomIndex","findNextEditableCell","args1","columnObject","columnIndex","cell","tableName$$1","mTbody","frTbody","height","frozenHeight","moveTbody","firstElementChild","renderMovable","ele","rightEle","mEle","cloneNode","movable","left","right","children","isAdd","isValOnly","cols","endIndex","validation","checkNPCell","template","allowEditing","isIdentity","isPrimaryKey","dValues","columnModel","defaultValue","gLen","allowGrouping","getColumnByField","checkEdit","editCellExtend","mRowData","getDataByIndex","getFreezeTableName","frozenRight","getFrozenRightDataRows","apply","columnName","isForeignKey","foreignKeyValue","value","foreignKeyData","getColIndex","getCellIdx","cellEdit","cellEditArgs","isColored","isPersistSelection","update","batchEditFormRendered","applyFormValidation","style","display","updateCell","getColumnIndexByField","td","refreshTD","queryCellInfo","newReactTd","setChanges","currentRowObj","Date","rowEle","movableRowObject","frRowObject","updateRow","keys_1","cIdx","getColumnIndexByUid","detailTemplate","childGrid","rowcell","parseFloat","getFrozenColumns","getFrozenLeftColumnsCount","isReact","m","insertedRows","querySelectorAll","isSingleInsert","nextCellIndex","editRowIdx","innerText","fLeftInsertedRow","getFrozenLeftContentTbody","fRightInsertedRow","getFrozenRightContentTbody","mInsertedRow","getMovableContentTbody","fLeftCount","getVisibleFrozenLeftCount","fRightCount","getVisibleFrozenRightCount","mColumnCount","getVisibleMovableCount","getFrozenRightHeader","escapeCellEdit","generateCellArgs","previousValue","successCallBack","editedData","getCurrentEditedData","cloneEditedData","isForceSave","cellSave","batchForm","cellSaveArgs","isEscapeCellEdit","destroyWidgets","destroyForm","cellSaved","addCancelWhilePaging"],"sources":["/home/morgan/Desktop/Projets/ENT4/Jwt-Auth-pdf/react-jwt-auth/react-jwt-auth/node_modules/@syncfusion/ej2-grids/src/grid/actions/batch-edit.js"],"sourcesContent":["import { extend, addClass, removeClass, setValue, closest, select } from '@syncfusion/ej2-base';\nimport { remove, classList } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, isUndefined } from '@syncfusion/ej2-base';\nimport { CellType } from '../base/enum';\nimport { parentsUntil, inArray, refreshForeignData, getObject, alignFrozenEditForm, gridActionHandler, addRemoveEventListener } from '../base/util';\nimport { splitFrozenRowObjectCells, getGridRowElements } from '../base/util';\nimport { sliceElements, getCellByColAndRowIndex } from '../base/util';\nimport { getGridRowObjects } from '../base/util';\nimport * as events from '../base/constant';\nimport { RowRenderer } from '../renderer/row-renderer';\nimport { CellRenderer } from '../renderer/cell-renderer';\nimport { Row } from '../models/row';\nimport { Cell } from '../models/cell';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport { DataUtil } from '@syncfusion/ej2-data';\nimport * as literals from '../base/string-literals';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n *\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent, serviceLocator, renderer) {\n        this.cellDetails = {};\n        this.originalCell = {};\n        this.cloneCell = {};\n        this.editNext = false;\n        this.preventSaveCell = false;\n        this.initialRender = true;\n        this.validationColObj = [];\n        this.parent = parent;\n        this.serviceLocator = serviceLocator;\n        this.renderer = renderer;\n        this.focus = serviceLocator.getService('focus');\n        this.addEventListener();\n    }\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.evtHandlers = [{ event: events.click, handler: this.clickHandler },\n            { event: events.dblclick, handler: this.dblClickHandler },\n            { event: events.beforeCellFocused, handler: this.onBeforeCellFocused },\n            { event: events.cellFocused, handler: this.onCellFocused },\n            { event: events.doubleTap, handler: this.dblClickHandler },\n            { event: events.keyPressed, handler: this.keyDownHandler },\n            { event: events.editNextValCell, handler: this.editNextValCell },\n            { event: events.closeBatch, handler: this.closeForm },\n            { event: events.destroy, handler: this.destroy }];\n        addRemoveEventListener(this.parent, this.evtHandlers, true, this);\n        this.dataBoundFunction = this.dataBound.bind(this);\n        this.batchCancelFunction = this.batchCancel.bind(this);\n        this.parent.addEventListener(events.dataBound, this.dataBoundFunction);\n        this.parent.addEventListener(events.batchCancel, this.batchCancelFunction);\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        addRemoveEventListener(this.parent, this.evtHandlers, false);\n        this.parent.removeEventListener(events.dataBound, this.dataBoundFunction);\n        this.parent.removeEventListener(events.batchCancel, this.batchCancelFunction);\n    };\n    BatchEdit.prototype.batchCancel = function () {\n        this.parent.focusModule.restoreFocus();\n    };\n    BatchEdit.prototype.dataBound = function () {\n        this.parent.notify(events.toolbarRefresh, {});\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    BatchEdit.prototype.clickHandler = function (e) {\n        if (!parentsUntil(e.target, this.parent.element.id + '_add', true)) {\n            if (this.parent.isEdit && closest(this.form, 'td') !== closest(e.target, 'td')) {\n                this.saveCell();\n                this.editNextValCell();\n            }\n            if (parentsUntil(e.target, literals.rowCell) && !this.parent.isEdit) {\n                this.setCellIdx(e.target);\n            }\n        }\n    };\n    BatchEdit.prototype.dblClickHandler = function (e) {\n        var target = parentsUntil(e.target, literals.rowCell);\n        var tr = parentsUntil(e.target, literals.row);\n        var rowIndex = tr && parseInt(tr.getAttribute(literals.ariaRowIndex), 10);\n        var colIndex = target && parseInt(target.getAttribute(literals.ariaColIndex), 10);\n        if (!isNullOrUndefined(target) && !isNullOrUndefined(rowIndex) && !isNaN(colIndex)\n            && !target.parentElement.classList.contains(literals.editedRow)) {\n            this.editCell(rowIndex, this.parent.getColumns()[colIndex].field, this.isAddRow(rowIndex));\n        }\n    };\n    BatchEdit.prototype.onBeforeCellFocused = function (e) {\n        if (this.parent.isEdit && this.validateFormObj() &&\n            (e.byClick || (['tab', 'shiftTab', 'enter', 'shiftEnter'].indexOf(e.keyArgs.action) > -1))) {\n            e.cancel = true;\n            if (e.byClick) {\n                e.clickArgs.preventDefault();\n            }\n            else {\n                e.keyArgs.preventDefault();\n            }\n        }\n    };\n    BatchEdit.prototype.onCellFocused = function (e) {\n        var frzCols = this.parent.getFrozenLeftCount();\n        var frzRightCols = this.parent.getFrozenRightColumnsCount();\n        var mCont = this.parent.getContent().querySelector('.' + literals.movableContent);\n        var mHdr = this.parent.getHeaderContent().querySelector('.' + literals.movableHeader);\n        var clear = (!e.container.isContent || !e.container.isDataCell) && !(this.parent.frozenRows && e.container.isHeader);\n        if (!e.byKey || clear) {\n            if (this.parent.isEdit && clear) {\n                this.saveCell();\n            }\n            return;\n        }\n        var _a = e.container.indexes, rowIndex = _a[0], cellIndex = _a[1];\n        if (frzCols && (mCont.contains(e.element) || (this.parent.frozenRows && mHdr.contains(e.element)))) {\n            cellIndex += frzCols;\n        }\n        if (frzRightCols) {\n            var frHdr = this.parent.getHeaderContent().querySelector('.e-frozen-right-header');\n            var frCont = this.parent.getContent().querySelector('.e-frozen-right-content');\n            if (frCont.contains(e.element) || (this.parent.frozenRows && frHdr.contains(e.element))) {\n                cellIndex += (frzCols + this.parent.getMovableColumnsCount());\n            }\n        }\n        if (this.parent.frozenRows && e.container.isContent) {\n            rowIndex += this.parent.frozenRows;\n        }\n        var isEdit = this.parent.isEdit;\n        if (!this.parent.element.getElementsByClassName('e-popup-open').length) {\n            isEdit = isEdit && !this.validateFormObj();\n            switch (e.keyArgs.action) {\n                case 'tab':\n                case 'shiftTab':\n                    var indent = this.parent.isRowDragable() && this.parent.isDetail() ? 2 :\n                        this.parent.isRowDragable() || this.parent.isDetail() ? 1 : 0;\n                    // eslint-disable-next-line no-case-declarations\n                    var col = this.parent.getColumns()[e.indexes[1] - indent];\n                    if (col && !this.parent.isEdit) {\n                        this.editCell(e.indexes[0], col.field);\n                    }\n                    if (isEdit || this.parent.isLastCellPrimaryKey) {\n                        this.editCellFromIndex(rowIndex, cellIndex);\n                    }\n                    break;\n                case 'enter':\n                case 'shiftEnter':\n                    e.keyArgs.preventDefault();\n                    // eslint-disable-next-line no-case-declarations\n                    var args = { cancel: false, keyArgs: e.keyArgs };\n                    this.parent.notify('beforeFocusCellEdit', args);\n                    if (!args.cancel && isEdit) {\n                        this.editCell(rowIndex, this.cellDetails.column.field);\n                    }\n                    break;\n                case 'f2':\n                    this.editCellFromIndex(rowIndex, cellIndex);\n                    this.focus.focus();\n                    break;\n            }\n        }\n    };\n    BatchEdit.prototype.isAddRow = function (index) {\n        return this.parent.getDataRows()[index].classList.contains('e-insertedrow');\n    };\n    BatchEdit.prototype.editCellFromIndex = function (rowIdx, cellIdx) {\n        this.cellDetails.rowIndex = rowIdx;\n        this.cellDetails.cellIndex = cellIdx;\n        this.editCell(rowIdx, this.parent.getColumns()[cellIdx].field, this.isAddRow(rowIdx));\n    };\n    BatchEdit.prototype.closeEdit = function () {\n        var _this = this;\n        var gObj = this.parent;\n        var rows = this.parent.getRowsObject();\n        var argument = { cancel: false, batchChanges: this.getBatchChanges() };\n        gObj.notify(events.beforeBatchCancel, argument);\n        if (argument.cancel) {\n            return;\n        }\n        if (gObj.isEdit) {\n            this.saveCell(true);\n        }\n        this.isAdded = false;\n        gObj.clearSelection();\n        var allRows = getGridRowObjects(this.parent);\n        var _loop_1 = function (i) {\n            var isInsert = false;\n            var isDirty = rows[i].isDirty;\n            gridActionHandler(this_1.parent, function (tableName, rows) {\n                isInsert = _this.removeBatchElementChanges(rows[i], isDirty);\n                if (isInsert) {\n                    rows.splice(i, 1);\n                }\n            }, allRows);\n            if (isInsert) {\n                i--;\n            }\n            out_i_1 = i;\n        };\n        var this_1 = this, out_i_1;\n        for (var i = 0; i < rows.length; i++) {\n            _loop_1(i);\n            i = out_i_1;\n        }\n        if (!gObj.getContentTable().querySelector('tr.e-row')) {\n            gObj.renderModule.renderEmptyRow();\n        }\n        var args = {\n            requestType: 'batchCancel', rows: this.parent.getRowsObject()\n        };\n        if (!this.parent.isFrozenGrid()) {\n            gObj.notify(events.batchCancel, {\n                rows: this.parent.getRowsObject().length ? this.parent.getRowsObject() :\n                    [new Row({ isDataRow: true, cells: [new Cell({ isDataCell: true, visible: true })] })]\n            });\n        }\n        else {\n            if (this.parent.getRowsObject().length) {\n                gObj.notify(events.batchCancel, { rows: this.parent.getRowsObject(),\n                    args: { isFrozen: true } });\n            }\n            if (this.parent.getMovableRowsObject().length) {\n                gObj.notify(events.batchCancel, { rows: this.parent.getMovableRowsObject() });\n            }\n            if (this.parent.getFrozenRightRowsObject().length) {\n                gObj.notify(events.batchCancel, { rows: this.parent.getFrozenRightRowsObject(),\n                    args: { renderFrozenRightContent: true } });\n            }\n        }\n        gObj.selectRow(this.cellDetails.rowIndex);\n        this.refreshRowIdx();\n        gObj.notify(events.toolbarRefresh, {});\n        this.parent.notify(events.tooltipDestroy, {});\n        args = { requestType: 'batchCancel', rows: this.parent.getRowsObject() };\n        gObj.trigger(events.batchCancel, args);\n    };\n    BatchEdit.prototype.removeBatchElementChanges = function (row, isDirty) {\n        var gObj = this.parent;\n        var rowRenderer = new RowRenderer(this.serviceLocator, null, this.parent);\n        var isInstertedRemoved = false;\n        if (isDirty) {\n            row.isDirty = isDirty;\n            var tr = gObj.getRowElementByUID(row.uid);\n            if (tr) {\n                if (tr.classList.contains('e-insertedrow')) {\n                    remove(tr);\n                    isInstertedRemoved = true;\n                }\n                else {\n                    refreshForeignData(row, this.parent.getForeignKeyColumns(), row.data);\n                    delete row.changes;\n                    delete row.edit;\n                    row.isDirty = false;\n                    classList(tr, [], ['e-hiddenrow', 'e-updatedtd']);\n                    rowRenderer.refresh(row, gObj.getColumns(), false);\n                }\n                if (this.parent.aggregates.length > 0) {\n                    var type = 'type';\n                    var editType = [];\n                    editType[type] = 'cancel';\n                    this.parent.notify(events.refreshFooterRenderer, editType);\n                    if (this.parent.groupSettings.columns.length > 0) {\n                        this.parent.notify(events.groupAggregates, editType);\n                    }\n                }\n            }\n        }\n        return isInstertedRemoved;\n    };\n    BatchEdit.prototype.removeHideAndSelection = function (tr) {\n        if (tr.classList.contains('e-hiddenrow')) {\n            tr.removeAttribute('aria-selected');\n            var tdElements = [].slice.call(tr.getElementsByClassName('e-selectionbackground'));\n            for (var i = 0; i < tdElements.length; i++) {\n                removeClass([tdElements[i]], ['e-selectionbackground', 'e-active']);\n            }\n        }\n        classList(tr, [], ['e-hiddenrow', 'e-updatedtd']);\n    };\n    BatchEdit.prototype.deleteRecord = function (fieldname, data) {\n        this.saveCell();\n        if (this.validateFormObj()) {\n            this.saveCell(true);\n        }\n        this.isAdded = false;\n        this.bulkDelete(fieldname, data);\n        if (this.parent.aggregates.length > 0) {\n            this.parent.notify(events.refreshFooterRenderer, {});\n            if (this.parent.groupSettings.columns.length > 0) {\n                this.parent.notify(events.groupAggregates, {});\n            }\n        }\n    };\n    BatchEdit.prototype.addRecord = function (data) {\n        this.bulkAddRow(data);\n    };\n    BatchEdit.prototype.endEdit = function () {\n        if (this.parent.isEdit && this.validateFormObj()) {\n            return;\n        }\n        this.batchSave();\n    };\n    BatchEdit.prototype.closeForm = function () {\n        for (var i = 0; i < Object.keys(this.originalCell).length; i++) {\n            for (var j = 0; j < Object.keys(this.cloneCell).length; j++) {\n                if (Object.keys(this.originalCell)[i] === Object.keys(this.cloneCell)[j]) {\n                    this.cloneCell[Object.keys(this.cloneCell)[j]].replaceWith(this.originalCell[Object.keys(this.originalCell)[i]]);\n                    if (this.originalCell[Object.keys(this.originalCell)[i]].classList.contains('e-selectionbackground')) {\n                        this.originalCell[Object.keys(this.originalCell)[i]]\n                            .classList.remove('e-selectionbackground', 'e-cellselectionbackground', 'e-active');\n                    }\n                }\n            }\n        }\n        this.cloneCell = {};\n        this.originalCell = {};\n    };\n    BatchEdit.prototype.validateFormObj = function () {\n        return this.parent.editModule.formObj && !this.parent.editModule.formObj.validate();\n    };\n    BatchEdit.prototype.batchSave = function () {\n        var gObj = this.parent;\n        var deletedRecords = 'deletedRecords';\n        if (gObj.isCheckBoxSelection) {\n            var checkAllBox = gObj.element.querySelector('.e-checkselectall').parentElement;\n            if (checkAllBox.classList.contains('e-checkbox-disabled') &&\n                gObj.pageSettings.totalRecordsCount > gObj.currentViewData.length) {\n                removeClass([checkAllBox], ['e-checkbox-disabled']);\n            }\n        }\n        this.saveCell();\n        if (gObj.isEdit || this.editNextValCell() || gObj.isEdit) {\n            return;\n        }\n        var changes = this.getBatchChanges();\n        if (this.parent.selectionSettings.type === 'Multiple' && changes[deletedRecords].length &&\n            this.parent.selectionSettings.persistSelection) {\n            changes[deletedRecords] = this.removeSelectedData;\n            this.removeSelectedData = [];\n        }\n        var original = {\n            changedRecords: this.parent.getRowsObject()\n                .filter(function (row) { return row.isDirty && ['add', 'delete'].indexOf(row.edit) === -1; })\n                .map(function (row) { return row.data; })\n        };\n        var args = { batchChanges: changes, cancel: false };\n        gObj.trigger(events.beforeBatchSave, args, function (beforeBatchSaveArgs) {\n            if (beforeBatchSaveArgs.cancel) {\n                return;\n            }\n            gObj.showSpinner();\n            gObj.notify(events.bulkSave, { changes: changes, original: original });\n        });\n    };\n    BatchEdit.prototype.getBatchChanges = function () {\n        var changes = {\n            addedRecords: [],\n            deletedRecords: [],\n            changedRecords: []\n        };\n        var rows = this.parent.getRowsObject();\n        for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n            var row = rows_1[_i];\n            if (row.isDirty) {\n                switch (row.edit) {\n                    case 'add':\n                        changes.addedRecords.push(row.changes);\n                        break;\n                    case 'delete':\n                        changes.deletedRecords.push(row.data);\n                        break;\n                    default:\n                        changes.changedRecords.push(row.changes);\n                }\n            }\n        }\n        return changes;\n    };\n    /**\n     * @param {string} uid - specifes the uid\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.removeRowObjectFromUID = function (uid) {\n        var rows = this.parent.getRowsObject();\n        var i = 0;\n        for (var len = rows.length; i < len; i++) {\n            if (rows[i].uid === uid) {\n                break;\n            }\n        }\n        gridActionHandler(this.parent, function (tableName, rows) {\n            rows.splice(i, 1);\n        }, getGridRowObjects(this.parent));\n    };\n    /**\n     * @param {Row<Column>} row - specifies the row object\n     * @param {freezeTable} newTableName - specifies the table name\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.addRowObject = function (row, newTableName) {\n        var gObj = this.parent;\n        var isTop = gObj.editSettings.newRowPosition === 'Top';\n        gridActionHandler(this.parent, function (tableName, rows) {\n            var rowClone = row.clone();\n            if (gObj.isFrozenGrid()) {\n                if (newTableName === tableName) {\n                    if (isTop) {\n                        rows.unshift(rowClone);\n                    }\n                    else {\n                        rows.push(rowClone);\n                    }\n                }\n            }\n            else {\n                if (isTop) {\n                    rows.unshift(rowClone);\n                }\n                else {\n                    rows.push(rowClone);\n                }\n            }\n        }, getGridRowObjects(this.parent), true);\n    };\n    // tslint:disable-next-line:max-func-body-length\n    BatchEdit.prototype.bulkDelete = function (fieldname, data) {\n        var _this = this;\n        this.removeSelectedData = [];\n        var gObj = this.parent;\n        var index = gObj.selectedRowIndex;\n        var selectedRows = gObj.getSelectedRows();\n        var args = {\n            primaryKey: this.parent.getPrimaryKeyFieldNames(),\n            rowIndex: index,\n            rowData: data ? data : gObj.getSelectedRecords()[0],\n            cancel: false\n        };\n        if (data) {\n            args.row = gObj.editModule.deleteRowUid ? gObj.getRowElementByUID(gObj.editModule.deleteRowUid)\n                : gObj.getRows()[gObj.getCurrentViewRecords().indexOf(data)];\n        }\n        else {\n            args.row = data ? gObj.getRows()[index] : selectedRows[0];\n        }\n        if (!args.row) {\n            return;\n        }\n        // tslint:disable-next-line:max-func-body-length\n        gObj.trigger(events.beforeBatchDelete, args, function (beforeBatchDeleteArgs) {\n            if (beforeBatchDeleteArgs.cancel) {\n                return;\n            }\n            _this.removeSelectedData = gObj.getSelectedRecords();\n            gObj.clearSelection();\n            beforeBatchDeleteArgs.row = beforeBatchDeleteArgs.row ?\n                beforeBatchDeleteArgs.row : data ? gObj.getRows()[index] : selectedRows[0];\n            if (_this.parent.isFrozenGrid()) {\n                if (data) {\n                    index = parseInt(beforeBatchDeleteArgs.row.getAttribute(literals.ariaRowIndex), 10);\n                    selectedRows = [];\n                    selectedRows.push(gObj.getRowByIndex(index));\n                    selectedRows.push(gObj.getMovableRowByIndex(index));\n                    if (gObj.getFrozenMode() === literals.leftRight) {\n                        selectedRows.push(gObj.getFrozenRightRowByIndex(index));\n                    }\n                }\n                for (var i = 0; i < selectedRows.length; i++) {\n                    var uid = selectedRows[i].getAttribute('data-uid');\n                    if (selectedRows[i].classList.contains('e-insertedrow')) {\n                        _this.removeRowObjectFromUID(uid);\n                        remove(selectedRows[i]);\n                    }\n                    else {\n                        var rowObj = gObj.getRowObjectFromUID(uid);\n                        rowObj.isDirty = true;\n                        rowObj.edit = 'delete';\n                        classList(selectedRows[i], ['e-hiddenrow', 'e-updatedtd'], []);\n                        if (gObj.frozenRows && index < gObj.frozenRows && gObj.getMovableDataRows().length >= gObj.frozenRows) {\n                            gObj.getMovableHeaderTbody().appendChild(gObj.getMovableRowByIndex(gObj.frozenRows - 1));\n                            gObj.getFrozenHeaderTbody().appendChild(gObj.getRowByIndex(gObj.frozenRows - 1));\n                            if (gObj.getFrozenMode() === literals.leftRight) {\n                                gObj.getFrozenRightHeaderTbody().appendChild(gObj.getFrozenRightRowByIndex(gObj.frozenRows - 1));\n                            }\n                        }\n                        if (gObj.frozenRows && index < gObj.frozenRows && gObj.getDataRows().length >= gObj.frozenRows) {\n                            gObj.getHeaderTable().querySelector(literals.tbody).appendChild(gObj.getRowByIndex(gObj.frozenRows - 1));\n                        }\n                    }\n                    delete selectedRows[i];\n                }\n            }\n            else if (!_this.parent.isFrozenGrid() && (selectedRows.length === 1 || data)) {\n                var uid = beforeBatchDeleteArgs.row.getAttribute('data-uid');\n                uid = data && _this.parent.editModule.deleteRowUid ? uid = _this.parent.editModule.deleteRowUid : uid;\n                if (beforeBatchDeleteArgs.row.classList.contains('e-insertedrow')) {\n                    _this.removeRowObjectFromUID(uid);\n                    remove(beforeBatchDeleteArgs.row);\n                }\n                else {\n                    var rowObj = gObj.getRowObjectFromUID(uid);\n                    rowObj.isDirty = true;\n                    rowObj.edit = 'delete';\n                    classList(beforeBatchDeleteArgs.row, ['e-hiddenrow', 'e-updatedtd'], []);\n                }\n                delete beforeBatchDeleteArgs.row;\n            }\n            else {\n                for (var i = 0; i < selectedRows.length; i++) {\n                    var uniqueid = selectedRows[i].getAttribute('data-uid');\n                    if (selectedRows[i].classList.contains('e-insertedrow')) {\n                        _this.removeRowObjectFromUID(uniqueid);\n                        remove(selectedRows[i]);\n                    }\n                    else {\n                        classList(selectedRows[i], ['e-hiddenrow', 'e-updatedtd'], []);\n                        var selectedRow = gObj.getRowObjectFromUID(uniqueid);\n                        selectedRow.isDirty = true;\n                        selectedRow.edit = 'delete';\n                        delete selectedRows[i];\n                    }\n                }\n            }\n            _this.refreshRowIdx();\n            if (data) {\n                gObj.editModule.deleteRowUid = undefined;\n                if (gObj.getSelectedRows().length) {\n                    index = parseInt(gObj.getSelectedRows()[0].getAttribute(literals.ariaRowIndex), 10);\n                }\n            }\n            if (!gObj.isCheckBoxSelection) {\n                gObj.selectRow(index);\n            }\n            gObj.trigger(events.batchDelete, beforeBatchDeleteArgs);\n            gObj.notify(events.batchDelete, { rows: _this.parent.getRowsObject() });\n            gObj.notify(events.toolbarRefresh, {});\n        });\n    };\n    BatchEdit.prototype.refreshRowIdx = function () {\n        var gObj = this.parent;\n        var rows = gObj.getAllDataRows(true);\n        var dataRows = getGridRowElements(this.parent);\n        var dataObjects = getGridRowObjects(this.parent);\n        var _loop_2 = function (i, j, len) {\n            if (rows[i].classList.contains(literals.row) && !rows[i].classList.contains('e-hiddenrow')) {\n                gridActionHandler(this_2.parent, function (tableName, rowElements, rowObjects) {\n                    rowElements[i].setAttribute(literals.ariaRowIndex, j.toString());\n                    rowObjects[i].index = j;\n                }, dataRows, null, dataObjects);\n                j++;\n            }\n            else {\n                gridActionHandler(this_2.parent, function (tableName, rowElements, rowObjects) {\n                    rowElements[i].removeAttribute(literals.ariaRowIndex);\n                    rowObjects[i].index = -1;\n                }, dataRows, null, dataObjects);\n            }\n            out_j_1 = j;\n        };\n        var this_2 = this, out_j_1;\n        for (var i = 0, j = 0, len = rows.length; i < len; i++) {\n            _loop_2(i, j, len);\n            j = out_j_1;\n        }\n    };\n    BatchEdit.prototype.getIndexFromData = function (data) {\n        return inArray(data, this.parent.getCurrentViewRecords());\n    };\n    BatchEdit.prototype.bulkAddRow = function (data) {\n        var _this = this;\n        var gObj = this.parent;\n        if (!gObj.editSettings.allowAdding) {\n            return;\n        }\n        if (gObj.isEdit) {\n            this.saveCell();\n            this.parent.notify(events.editNextValCell, {});\n        }\n        if (gObj.isEdit) {\n            return;\n        }\n        if (this.initialRender) {\n            var visibleColumns = gObj.getVisibleColumns();\n            for (var i = 0; i < visibleColumns.length; i++) {\n                if (visibleColumns[i].validationRules &&\n                    visibleColumns[i].validationRules['required']) {\n                    var obj = { field: (visibleColumns[i]['field']).slice(), cellIdx: i };\n                    this.validationColObj.push(obj);\n                }\n            }\n            this.initialRender = false;\n        }\n        this.parent.element.classList.add('e-editing');\n        var defaultData = data ? data : this.getDefaultData();\n        var args = {\n            defaultData: defaultData,\n            primaryKey: gObj.getPrimaryKeyFieldNames(),\n            cancel: false\n        };\n        gObj.trigger(events.beforeBatchAdd, args, function (beforeBatchAddArgs) {\n            if (beforeBatchAddArgs.cancel) {\n                return;\n            }\n            _this.isAdded = true;\n            gObj.clearSelection();\n            if (gObj.isFrozenGrid()) {\n                var movableCnt = _this.parent.getMovableColumnsCount();\n                var leftCnt = _this.parent.getFrozenLeftCount();\n                var rightCnt = _this.parent.getFrozenRightColumnsCount();\n                var tbody$$1 = gObj.getContentTable().querySelector(literals.tbody);\n                var totCount = movableCnt + leftCnt + rightCnt;\n                var tableTanName = void 0;\n                var selectedRowAdd = [];\n                var selectedRowAddCells = [];\n                var col = void 0;\n                var index = void 0;\n                var tr = void 0;\n                var mTr = void 0;\n                var frTr = void 0;\n                for (var i = 0; i < totCount;) {\n                    var row = new RowRenderer(_this.serviceLocator, null, _this.parent);\n                    var model = new RowModelGenerator(_this.parent);\n                    var modelData = model.generateRows([beforeBatchAddArgs.defaultData]);\n                    if (leftCnt > 0) {\n                        leftCnt = 0;\n                        tableTanName = 'frozen-left';\n                        totCount = leftCnt + rightCnt + movableCnt;\n                    }\n                    else if (movableCnt > 0) {\n                        movableCnt = 0;\n                        tableTanName = 'movable';\n                        totCount = leftCnt + rightCnt + movableCnt;\n                    }\n                    else {\n                        rightCnt = 0;\n                        tableTanName = 'frozen-right';\n                        totCount = leftCnt + rightCnt + movableCnt;\n                    }\n                    for (var i_1 = 0; i_1 < modelData.length; i_1++) {\n                        modelData[i_1].cells = splitFrozenRowObjectCells(_this.parent, modelData[i_1].cells, tableTanName);\n                    }\n                    if (tableTanName === 'frozen-left') {\n                        tr = row.render(modelData[0], gObj.getColumns());\n                        tr.classList.add('e-insertedrow');\n                    }\n                    else if (tableTanName === 'movable') {\n                        mTr = row.render(modelData[0], gObj.getColumns());\n                        mTr.classList.add('e-insertedrow');\n                    }\n                    else {\n                        frTr = row.render(modelData[0], gObj.getColumns());\n                        frTr.classList.add('e-insertedrow');\n                    }\n                    for (var i_2 = 0; i_2 < _this.parent.groupSettings.columns.length; i_2++) {\n                        tr.insertBefore(_this.parent.createElement('td', { className: 'e-indentcell' }), tr.firstChild);\n                        modelData[0].cells.unshift(new Cell({ cellType: CellType.Indent }));\n                    }\n                    if (tbody$$1.querySelector('.e-emptyrow')) {\n                        var emptyRow = tbody$$1.querySelector('.e-emptyrow');\n                        emptyRow.parentNode.removeChild(emptyRow);\n                        _this.removeFrozenTbody();\n                    }\n                    if (tableTanName === 'frozen-left') {\n                        if (gObj.frozenRows && gObj.editSettings.newRowPosition === 'Top') {\n                            tbody$$1 = gObj.getHeaderTable().querySelector(literals.tbody);\n                        }\n                        else {\n                            tbody$$1 = gObj.getContentTable().querySelector(literals.tbody);\n                        }\n                        if (_this.parent.editSettings.newRowPosition === 'Top') {\n                            tbody$$1.insertBefore(tr, tbody$$1.firstChild);\n                            addClass([].slice.call(tr.getElementsByClassName(literals.rowCell)), ['e-updatedtd']);\n                        }\n                        else {\n                            tbody$$1.appendChild(tr);\n                            addClass([].slice.call(tr.getElementsByClassName(literals.rowCell)), ['e-updatedtd']);\n                        }\n                    }\n                    if (tableTanName === 'movable' || tableTanName === 'frozen-right') {\n                        _this.renderFrozenAddRow(mTr, frTr, tableTanName);\n                    }\n                    modelData[0].isDirty = true;\n                    modelData[0].changes = extend({}, {}, modelData[0].data, true);\n                    modelData[0].edit = 'add';\n                    _this.addRowObject(modelData[0], tableTanName);\n                }\n                _this.refreshRowIdx();\n                _this.focus.forgetPrevious();\n                gObj.notify(events.batchAdd, { rows: _this.parent.getRowsObject(), args: { isFrozen: _this.parent.isFrozenGrid() } });\n                var changes = _this.getBatchChanges();\n                var btmIdx = _this.getBottomIndex();\n                if (_this.parent.editSettings.newRowPosition === 'Top') {\n                    gObj.selectRow(0);\n                }\n                else {\n                    gObj.selectRow(btmIdx);\n                }\n                if (!data) {\n                    index = _this.findNextEditableCell(0, true);\n                    col = gObj.getColumns()[index];\n                    if (_this.parent.editSettings.newRowPosition === 'Top') {\n                        _this.editCell(0, col.field, true);\n                    }\n                    else {\n                        _this.editCell(btmIdx, col.field, true);\n                    }\n                }\n                if (_this.parent.aggregates.length > 0 && (data || changes[literals.addedRecords].length)) {\n                    _this.parent.notify(events.refreshFooterRenderer, {});\n                }\n                if (tr) {\n                    alignFrozenEditForm(mTr.querySelector('td:not(.e-hide)'), tr.querySelector('td:not(.e-hide)'));\n                    selectedRowAdd.push(tr);\n                    selectedRowAddCells.push(tr.cells);\n                }\n                selectedRowAdd.push(mTr);\n                selectedRowAddCells.push(mTr.cells);\n                if (frTr) {\n                    selectedRowAdd.push(frTr);\n                    selectedRowAddCells.push(frTr.cells);\n                }\n                var args1 = {\n                    defaultData: beforeBatchAddArgs.defaultData, row: selectedRowAdd,\n                    columnObject: col, columnIndex: index, primaryKey: beforeBatchAddArgs.primaryKey, cell: selectedRowAddCells\n                };\n                gObj.trigger(events.batchAdd, args1);\n            }\n            else {\n                var row = new RowRenderer(_this.serviceLocator, null, _this.parent);\n                var model = new RowModelGenerator(_this.parent);\n                var modelData = model.generateRows([beforeBatchAddArgs.defaultData]);\n                var tr = row.render(modelData[0], gObj.getColumns());\n                var col = void 0;\n                var index = void 0;\n                for (var i = 0; i < _this.parent.groupSettings.columns.length; i++) {\n                    tr.insertBefore(_this.parent.createElement('td', { className: 'e-indentcell' }), tr.firstChild);\n                    modelData[0].cells.unshift(new Cell({ cellType: CellType.Indent }));\n                }\n                var tbody = gObj.getContentTable().querySelector(literals.tbody);\n                tr.classList.add('e-insertedrow');\n                if (tbody.querySelector('.e-emptyrow')) {\n                    var emptyRow = tbody.querySelector('.e-emptyrow');\n                    emptyRow.parentNode.removeChild(emptyRow);\n                    _this.removeFrozenTbody();\n                }\n                if (gObj.frozenRows && gObj.editSettings.newRowPosition === 'Top') {\n                    tbody = gObj.getHeaderTable().querySelector(literals.tbody);\n                }\n                else {\n                    tbody = gObj.getContentTable().querySelector(literals.tbody);\n                }\n                if (_this.parent.editSettings.newRowPosition === 'Top') {\n                    tbody.insertBefore(tr, tbody.firstChild);\n                }\n                else {\n                    tbody.appendChild(tr);\n                }\n                addClass([].slice.call(tr.getElementsByClassName(literals.rowCell)), ['e-updatedtd']);\n                modelData[0].isDirty = true;\n                modelData[0].changes = extend({}, {}, modelData[0].data, true);\n                modelData[0].edit = 'add';\n                _this.addRowObject(modelData[0]);\n                _this.refreshRowIdx();\n                _this.focus.forgetPrevious();\n                gObj.notify(events.batchAdd, { rows: _this.parent.getRowsObject(), args: { isFrozen: _this.parent.isFrozenGrid() } });\n                var changes = _this.getBatchChanges();\n                var btmIdx = _this.getBottomIndex();\n                if (_this.parent.editSettings.newRowPosition === 'Top') {\n                    gObj.selectRow(0);\n                }\n                else {\n                    gObj.selectRow(btmIdx);\n                }\n                if (!data) {\n                    index = _this.findNextEditableCell(0, true);\n                    col = gObj.getColumns()[index];\n                    if (_this.parent.editSettings.newRowPosition === 'Top') {\n                        _this.editCell(0, col.field, true);\n                    }\n                    else {\n                        _this.editCell(btmIdx, col.field, true);\n                    }\n                }\n                if (_this.parent.aggregates.length > 0 && (data || changes[literals.addedRecords].length)) {\n                    _this.parent.notify(events.refreshFooterRenderer, {});\n                }\n                var args1 = {\n                    defaultData: beforeBatchAddArgs.defaultData, row: tr,\n                    columnObject: col, columnIndex: index, primaryKey: beforeBatchAddArgs.primaryKey, cell: tr.cells[index]\n                };\n                gObj.trigger(events.batchAdd, args1);\n            }\n        });\n    };\n    BatchEdit.prototype.renderFrozenAddRow = function (mTr, frTr, tableName$$1) {\n        var gObj = this.parent;\n        var mTbody;\n        var frTbody;\n        if (tableName$$1 === 'movable') {\n            if (gObj.frozenRows && gObj.editSettings.newRowPosition === 'Top') {\n                mTbody = this.parent.getMovableHeaderTbody();\n            }\n            else {\n                mTbody = this.parent.getContent().querySelector('.e-movablecontent').querySelector(literals.tbody);\n            }\n            if (gObj.editSettings.newRowPosition === 'Top') {\n                mTbody.insertBefore(mTr, mTbody.firstChild);\n            }\n            else {\n                mTbody.appendChild(mTr);\n            }\n            addClass([].slice.call(mTr.getElementsByClassName(literals.rowCell)), ['e-updatedtd']);\n        }\n        if (tableName$$1 === 'frozen-right') {\n            if (gObj.frozenRows && gObj.editSettings.newRowPosition === 'Top') {\n                frTbody = this.parent.getFrozenRightHeaderTbody();\n            }\n            else {\n                frTbody = this.parent.getContent().querySelector('.e-frozen-right-content').querySelector(literals.tbody);\n            }\n            if (gObj.editSettings.newRowPosition === 'Top') {\n                frTbody.insertBefore(frTr, frTbody.firstChild);\n            }\n            else {\n                frTbody.appendChild(frTr);\n            }\n            addClass([].slice.call(frTr.getElementsByClassName(literals.rowCell)), ['e-updatedtd']);\n            alignFrozenEditForm(frTr.querySelector('td:not(.e-hide)'), mTr.querySelector('td:not(.e-hide)'));\n        }\n        if (gObj.height === 'auto') {\n            gObj.notify(events.frozenHeight, {});\n        }\n    };\n    BatchEdit.prototype.removeFrozenTbody = function () {\n        var gObj = this.parent;\n        if (gObj.isFrozenGrid()) {\n            var moveTbody = gObj.getContent().querySelector('.' + literals.movableContent).querySelector(literals.tbody);\n            (moveTbody.firstElementChild).parentNode.removeChild(moveTbody.firstElementChild);\n            if (gObj.getFrozenMode() === literals.leftRight) {\n                var frTbody = gObj.getContent().querySelector('.e-frozen-right-content').querySelector(literals.tbody);\n                (frTbody.firstElementChild).parentNode.removeChild(frTbody.firstElementChild);\n            }\n        }\n    };\n    BatchEdit.prototype.renderMovable = function (ele, rightEle) {\n        var mEle = ele.cloneNode(true);\n        var movable = this.parent.getMovableColumnsCount();\n        var left = this.parent.getFrozenLeftCount();\n        var right = this.parent.getFrozenRightColumnsCount();\n        sliceElements(ele, 0, left);\n        sliceElements(mEle, left, right ? mEle.children.length - right : mEle.children.length);\n        sliceElements(rightEle, left + movable, rightEle.children.length);\n        return mEle;\n    };\n    BatchEdit.prototype.findNextEditableCell = function (columnIndex, isAdd, isValOnly) {\n        var cols = this.parent.getColumns();\n        var endIndex = cols.length;\n        var validation;\n        for (var i = columnIndex; i < endIndex; i++) {\n            validation = isValOnly ? isNullOrUndefined(cols[i].validationRules) : false;\n            if (!isAdd && this.checkNPCell(cols[i])) {\n                return i;\n            }\n            else if (isAdd && !cols[i].template && cols[i].visible && cols[i].allowEditing &&\n                !(cols[i].isIdentity && cols[i].isPrimaryKey) && !validation) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    BatchEdit.prototype.checkNPCell = function (col) {\n        return !col.template && col.visible && !col.isPrimaryKey && !col.isIdentity && col.allowEditing;\n    };\n    BatchEdit.prototype.getDefaultData = function () {\n        var gObj = this.parent;\n        var data = {};\n        var dValues = { 'number': 0, 'string': null, 'boolean': false, 'date': null, 'datetime': null };\n        for (var _i = 0, _a = (gObj.columnModel); _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.field) {\n                setValue(col.field, Object.keys(col).indexOf('defaultValue') >= 0 ? col.defaultValue : dValues[col.type], data);\n            }\n        }\n        return data;\n    };\n    BatchEdit.prototype.setCellIdx = function (target) {\n        var gLen = 0;\n        if (this.parent.allowGrouping) {\n            gLen = this.parent.groupSettings.columns.length;\n        }\n        this.cellDetails.cellIndex = target.cellIndex - gLen;\n        this.cellDetails.rowIndex = parseInt(target.getAttribute('index'), 10);\n    };\n    BatchEdit.prototype.editCell = function (index, field, isAdd) {\n        var gObj = this.parent;\n        var col = gObj.getColumnByField(field);\n        this.index = index;\n        this.field = field;\n        this.isAdd = isAdd;\n        var checkEdit = gObj.isEdit && !(this.cellDetails.column.field === field\n            && (this.cellDetails.rowIndex === index && this.parent.getDataRows().length - 1 !== index));\n        if (gObj.editSettings.allowEditing) {\n            if (!checkEdit && col.allowEditing) {\n                this.editCellExtend(index, field, isAdd);\n            }\n            else if (checkEdit) {\n                this.editNext = true;\n                this.saveCell();\n            }\n        }\n    };\n    BatchEdit.prototype.editCellExtend = function (index, field, isAdd) {\n        var _this = this;\n        var gObj = this.parent;\n        var col = gObj.getColumnByField(field);\n        var keys = gObj.getPrimaryKeyFieldNames();\n        if (gObj.isEdit) {\n            return;\n        }\n        var row;\n        var mRowData;\n        var rowData = extend({}, {}, this.getDataByIndex(index), true);\n        if (col.getFreezeTableName() === 'movable' || col.getFreezeTableName() === literals.frozenRight) {\n            row = col.getFreezeTableName() === 'movable' ? gObj.getMovableDataRows()[index] : gObj.getFrozenRightDataRows()[index];\n            mRowData = this.parent.getRowObjectFromUID(row.getAttribute('data-uid'));\n            rowData = mRowData.changes ? extend({}, {}, mRowData.changes, true) : rowData;\n        }\n        else {\n            row = gObj.getDataRows()[index];\n            rowData = extend({}, {}, this.getDataByIndex(index), true);\n        }\n        if ((keys[0] === col.field && !row.classList.contains('e-insertedrow')) || col.columns ||\n            (col.isPrimaryKey && col.isIdentity)) {\n            this.parent.isLastCellPrimaryKey = true;\n            return;\n        }\n        this.parent.isLastCellPrimaryKey = false;\n        this.parent.element.classList.add('e-editing');\n        var rowObj = gObj.getRowObjectFromUID(row.getAttribute('data-uid'));\n        var cells = [].slice.apply(row.cells);\n        var args = {\n            columnName: col.field, isForeignKey: !isNullOrUndefined(col.foreignKeyValue),\n            primaryKey: keys, rowData: rowData,\n            validationRules: extend({}, col.validationRules ? col.validationRules : {}),\n            value: getObject(col.field, rowData),\n            type: !isAdd ? 'edit' : 'add', cancel: false,\n            foreignKeyData: rowObj && rowObj.foreignKeyData\n        };\n        args.cell = cells[this.getColIndex(cells, this.getCellIdx(col.uid))];\n        args.row = row;\n        args.columnObject = col;\n        if (!args.cell) {\n            return;\n        }\n        gObj.trigger(events.cellEdit, args, function (cellEditArgs) {\n            if (cellEditArgs.cancel) {\n                return;\n            }\n            cellEditArgs.cell = cellEditArgs.cell ? cellEditArgs.cell : cells[_this.getColIndex(cells, _this.getCellIdx(col.uid))];\n            cellEditArgs.row = cellEditArgs.row ? cellEditArgs.row : row;\n            cellEditArgs.columnObject = cellEditArgs.columnObject ? cellEditArgs.columnObject : col;\n            cellEditArgs.columnObject.index = isNullOrUndefined(cellEditArgs.columnObject.index) ? 0 : cellEditArgs.columnObject.index;\n            _this.cellDetails = {\n                rowData: rowData, column: col, value: cellEditArgs.value, isForeignKey: cellEditArgs.isForeignKey, rowIndex: index,\n                cellIndex: parseInt(cellEditArgs.cell.getAttribute(literals.ariaColIndex), 10),\n                foreignKeyData: cellEditArgs.foreignKeyData\n            };\n            if (cellEditArgs.cell.classList.contains('e-updatedtd')) {\n                _this.isColored = true;\n                cellEditArgs.cell.classList.remove('e-updatedtd');\n            }\n            gObj.isEdit = true;\n            gObj.clearSelection();\n            if (!gObj.isCheckBoxSelection || !gObj.isPersistSelection) {\n                gObj.selectRow(_this.cellDetails.rowIndex, true);\n            }\n            _this.renderer.update(cellEditArgs);\n            _this.parent.notify(events.batchEditFormRendered, cellEditArgs);\n            _this.form = select('#' + gObj.element.id + 'EditForm', gObj.element);\n            gObj.editModule.applyFormValidation([col]);\n            _this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n        });\n    };\n    BatchEdit.prototype.updateCell = function (rowIndex, field, value) {\n        var gObj = this.parent;\n        var col = gObj.getColumnByField(field);\n        var index = gObj.getColumnIndexByField(field);\n        if (col && !col.isPrimaryKey && col.allowEditing) {\n            var td = getCellByColAndRowIndex(this.parent, col, rowIndex, index);\n            var rowObj = col.getFreezeTableName() === 'movable' ? this.parent.getMovableRowsObject()[rowIndex] :\n                col.getFreezeTableName() === literals.frozenRight ? gObj.getFrozenRightRowsObject()[rowIndex]\n                    : gObj.getRowObjectFromUID(td.parentElement.getAttribute('data-uid'));\n            this.refreshTD(td, col, rowObj, value);\n            this.parent.trigger(events.queryCellInfo, {\n                cell: this.newReactTd || td, column: col, data: rowObj.changes\n            });\n        }\n    };\n    BatchEdit.prototype.setChanges = function (rowObj, field, value) {\n        var currentRowObj;\n        if (!this.parent.isFrozenGrid()) {\n            if (!rowObj.changes) {\n                rowObj.changes = extend({}, {}, rowObj.data, true);\n            }\n            if (!isNullOrUndefined(field)) {\n                DataUtil.setValue(field, value, rowObj.changes);\n            }\n            if (rowObj.data[field] !== value) {\n                var type = this.parent.getColumnByField(field).type;\n                if ((type === 'date' || type === 'datetime')) {\n                    if (new Date(rowObj.data[field]).toString() !== new Date(value).toString()) {\n                        rowObj.isDirty = true;\n                    }\n                }\n                else {\n                    rowObj.isDirty = true;\n                }\n            }\n        }\n        else {\n            var rowEle = this.parent.getRowElementByUID(rowObj.uid);\n            var rowIndex = parseInt(rowEle.getAttribute(literals.ariaRowIndex), 10);\n            currentRowObj = this.parent.getRowsObject()[rowIndex];\n            if (!currentRowObj.changes) {\n                currentRowObj.changes = extend({}, {}, rowObj.data, true);\n            }\n            if (!isNullOrUndefined(field)) {\n                setValue(field, value, currentRowObj.changes);\n            }\n            var movableRowObject = this.parent.getMovableRowsObject()[rowIndex];\n            movableRowObject.changes = extend({}, {}, currentRowObj.changes, true);\n            if (rowObj.data[field] !== value) {\n                movableRowObject.isDirty = true;\n                currentRowObj.isDirty = true;\n            }\n            if (this.parent.getFrozenMode() === literals.leftRight) {\n                var frRowObject = this.parent.getFrozenRightRowsObject()[rowIndex];\n                frRowObject.changes = extend({}, {}, currentRowObj.changes, true);\n                if (rowObj.data[field] !== value) {\n                    frRowObject.isDirty = true;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.updateRow = function (index, data) {\n        var keys = Object.keys(data);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var col = keys_1[_i];\n            this.updateCell(index, col, data[col]);\n        }\n    };\n    BatchEdit.prototype.getCellIdx = function (uid) {\n        var cIdx = this.parent.getColumnIndexByUid(uid) + this.parent.groupSettings.columns.length;\n        if (!isNullOrUndefined(this.parent.detailTemplate) || !isNullOrUndefined(this.parent.childGrid)) {\n            cIdx++;\n        }\n        if (this.parent.isRowDragable()) {\n            cIdx++;\n        }\n        return cIdx;\n    };\n    BatchEdit.prototype.refreshTD = function (td, column, rowObj, value) {\n        var cell = new CellRenderer(this.parent, this.serviceLocator);\n        var rowcell;\n        value = column.type === 'number' && !isNullOrUndefined(value) ? parseFloat(value) : value;\n        this.setChanges(rowObj, column.field, value);\n        var frzCols = this.parent.getFrozenColumns() || this.parent.getFrozenLeftColumnsCount()\n            || this.parent.getFrozenRightColumnsCount();\n        frzCols = frzCols && this.parent.isRowDragable() ? frzCols + 1 : frzCols;\n        refreshForeignData(rowObj, this.parent.getForeignKeyColumns(), rowObj.changes);\n        if (frzCols && column.getFreezeTableName() === 'movable' && this.parent.getColumns().length === rowObj.cells.length) {\n            rowcell = rowObj.cells.slice(frzCols, rowObj.cells.length);\n        }\n        else {\n            rowcell = rowObj.cells;\n        }\n        var parentElement;\n        var cellIndex;\n        if (this.parent.isReact) {\n            parentElement = td.parentElement;\n            cellIndex = td.cellIndex;\n        }\n        var index = 0;\n        if (frzCols) {\n            index = column.getFreezeTableName() === 'movable' && this.parent.getFrozenMode() !== 'Right'\n                ? frzCols : column.getFreezeTableName() === literals.frozenRight\n                ? this.parent.getFrozenLeftColumnsCount() + this.parent.getMovableColumnsCount() : index;\n        }\n        cell.refreshTD(td, rowcell[this.getCellIdx(column.uid) - index], rowObj.changes, { 'index': this.getCellIdx(column.uid) });\n        if (this.parent.isReact) {\n            this.newReactTd = parentElement.cells[cellIndex];\n            parentElement.cells[cellIndex].classList.add('e-updatedtd');\n        }\n        else {\n            td.classList.add('e-updatedtd');\n        }\n        td.classList.add('e-updatedtd');\n        this.parent.notify(events.toolbarRefresh, {});\n    };\n    BatchEdit.prototype.getColIndex = function (cells, index) {\n        var cIdx = 0;\n        if (this.parent.allowGrouping && this.parent.groupSettings.columns) {\n            cIdx = this.parent.groupSettings.columns.length;\n        }\n        if (!isNullOrUndefined(this.parent.detailTemplate) || !isNullOrUndefined(this.parent.childGrid)) {\n            cIdx++;\n        }\n        if (this.parent.isRowDragable()) {\n            cIdx++;\n        }\n        for (var m = 0; m < cells.length; m++) {\n            var colIndex = parseInt(cells[m].getAttribute(literals.ariaColIndex), 10);\n            if (colIndex === index - cIdx) {\n                return m;\n            }\n        }\n        return -1;\n    };\n    BatchEdit.prototype.editNextValCell = function () {\n        var gObj = this.parent;\n        var insertedRows = gObj.element.querySelectorAll('.e-insertedrow');\n        var isSingleInsert = insertedRows.length === 1 ? true : (gObj.getFrozenColumns() > 0 ||\n            gObj.getFrozenRightColumnsCount() > 0 || gObj.getFrozenLeftColumnsCount() > 0) && (insertedRows.length === 2 ||\n            insertedRows.length === 3) ? true : false;\n        if (isSingleInsert && this.isAdded && !gObj.isEdit) {\n            var btmIdx = this.getBottomIndex();\n            for (var i = this.cellDetails.cellIndex; i < gObj.getColumns().length; i++) {\n                if (gObj.isEdit) {\n                    return;\n                }\n                var index = this.findNextEditableCell(this.cellDetails.cellIndex + 1, true, true);\n                var col = gObj.getColumns()[index];\n                if (col) {\n                    if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                        this.editCell(btmIdx, col.field, true);\n                    }\n                    else {\n                        var args = { index: 0, column: col };\n                        this.parent.notify(events.nextCellIndex, args);\n                        this.editCell(args.index, col.field, true);\n                    }\n                    this.saveCell();\n                }\n            }\n            if (!gObj.isEdit) {\n                this.isAdded = false;\n            }\n        }\n        else if (!isSingleInsert && this.isAdded && !gObj.isEdit && !gObj.isFrozenGrid()) {\n            var editRowIdx = 0;\n            if (gObj.editSettings.newRowPosition === 'Bottom') {\n                var changes = this.getBatchChanges();\n                editRowIdx = gObj.getCurrentViewRecords().length - changes[literals.deletedRecords].length;\n            }\n            for (var i = 0; i < insertedRows.length; i++, editRowIdx++) {\n                if (!gObj.isEdit) {\n                    for (var j = 0; j < this.validationColObj.length; j++) {\n                        if (gObj.isEdit) {\n                            break;\n                        }\n                        else if (insertedRows[i].querySelectorAll('td')[this.validationColObj[j].cellIdx].innerText === '') {\n                            this.editCell(editRowIdx, this.validationColObj[j].field);\n                            if (this.validateFormObj()) {\n                                this.saveCell();\n                            }\n                        }\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n            if (!gObj.isEdit) {\n                this.isAdded = false;\n            }\n        }\n        else if (!isSingleInsert && this.isAdded && !gObj.isEdit && gObj.isFrozenGrid()) {\n            var fLeftInsertedRow = gObj.getFrozenLeftContentTbody() ? gObj.getFrozenLeftContentTbody()\n                .querySelectorAll('.e-insertedrow') : undefined;\n            var fRightInsertedRow = gObj.getFrozenRightContentTbody() ? gObj.getFrozenRightContentTbody()\n                .querySelectorAll('.e-insertedrow') : undefined;\n            var mInsertedRow = gObj.getMovableContentTbody().querySelectorAll('.e-insertedrow');\n            var editRowIdx = 0;\n            var fLeftCount = gObj.getVisibleFrozenLeftCount() ? gObj.getVisibleFrozenLeftCount() :\n                gObj.getFrozenColumns();\n            var fRightCount = gObj.getVisibleFrozenRightCount();\n            var mColumnCount = gObj.getVisibleMovableCount();\n            if (gObj.editSettings.newRowPosition === 'Bottom') {\n                var changes = this.getBatchChanges();\n                editRowIdx = gObj.getCurrentViewRecords().length - changes[literals.deletedRecords].length;\n            }\n            else if (gObj.editSettings.newRowPosition === 'Top' && gObj.frozenRows) {\n                fLeftInsertedRow = gObj.getFrozenHeaderTbody() ? gObj.getFrozenHeaderTbody()\n                    .querySelectorAll('.e-insertedrow') : undefined;\n                fRightInsertedRow = gObj.getFrozenRightHeader() ? gObj.getFrozenRightHeader()\n                    .querySelectorAll('.e-insertedrow') : undefined;\n                mInsertedRow = gObj.getMovableHeaderTbody().querySelectorAll('.e-insertedrow');\n            }\n            for (var i = 0; i < mInsertedRow.length; i++, editRowIdx++) {\n                if (!gObj.isEdit) {\n                    for (var j = 0; j < this.validationColObj.length; j++) {\n                        if (gObj.isEdit) {\n                            break;\n                        }\n                        else if (fLeftCount && this.validationColObj[j].cellIdx < fLeftCount) {\n                            if (fLeftInsertedRow[i].querySelectorAll('td')[this.validationColObj[j].cellIdx].innerText === '') {\n                                this.editCell(editRowIdx, this.validationColObj[j].field);\n                                if (gObj.editModule.formObj.validate()) {\n                                    this.saveCell();\n                                }\n                            }\n                        }\n                        else if (fRightCount && mColumnCount <= this.validationColObj[j].cellIdx) {\n                            if (fRightInsertedRow[i].querySelectorAll('td')[this.validationColObj[j].cellIdx - (mColumnCount + fLeftCount)].innerText === '') {\n                                this.editCell(editRowIdx, this.validationColObj[j].field);\n                                if (gObj.editModule.formObj.validate()) {\n                                    this.saveCell();\n                                }\n                            }\n                        }\n                        else if (mInsertedRow[i].querySelectorAll('td')[this.validationColObj[j].cellIdx - fLeftCount].innerText === '') {\n                            this.editCell(editRowIdx, this.validationColObj[j].field);\n                            if (gObj.editModule.formObj.validate()) {\n                                this.saveCell();\n                            }\n                        }\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n            if (!gObj.isEdit) {\n                this.isAdded = false;\n            }\n        }\n    };\n    BatchEdit.prototype.escapeCellEdit = function () {\n        var args = this.generateCellArgs();\n        args.value = args.previousValue;\n        if (args.value || !this.cellDetails.column.validationRules) {\n            this.successCallBack(args, args.cell.parentElement, args.column, true)(args);\n        }\n    };\n    BatchEdit.prototype.generateCellArgs = function () {\n        var gObj = this.parent;\n        this.parent.element.classList.remove('e-editing');\n        var column = this.cellDetails.column;\n        var obj = {};\n        obj[column.field] = getObject(column.field, this.cellDetails.rowData);\n        var editedData = gObj.editModule.getCurrentEditedData(this.form, obj);\n        var cloneEditedData = extend({}, editedData);\n        editedData = extend({}, editedData, this.cellDetails.rowData);\n        var value = getObject(column.field, cloneEditedData);\n        if (!isNullOrUndefined(column.field) && !isUndefined(value)) {\n            setValue(column.field, value, editedData);\n        }\n        var args = {\n            columnName: column.field,\n            value: getObject(column.field, editedData),\n            rowData: this.cellDetails.rowData,\n            column: column,\n            previousValue: this.cellDetails.value,\n            isForeignKey: this.cellDetails.isForeignKey,\n            cancel: false\n        };\n        args.cell = this.form.parentElement;\n        args.columnObject = column;\n        return args;\n    };\n    BatchEdit.prototype.saveCell = function (isForceSave) {\n        if (this.preventSaveCell || !this.form) {\n            return;\n        }\n        var gObj = this.parent;\n        if (!isForceSave && (!gObj.isEdit || this.validateFormObj())) {\n            return;\n        }\n        this.preventSaveCell = true;\n        var args = this.generateCellArgs();\n        var tr = args.cell.parentElement;\n        var col = args.column;\n        if (!isForceSave) {\n            gObj.trigger(events.cellSave, args, this.successCallBack(args, tr, col));\n            gObj.notify(events.batchForm, { formObj: this.form });\n        }\n        else {\n            this.successCallBack(args, tr, col)(args);\n        }\n    };\n    BatchEdit.prototype.successCallBack = function (cellSaveArgs, tr, column, isEscapeCellEdit) {\n        var _this = this;\n        return function (cellSaveArgs) {\n            var gObj = _this.parent;\n            cellSaveArgs.cell = cellSaveArgs.cell ? cellSaveArgs.cell : _this.form.parentElement;\n            cellSaveArgs.columnObject = cellSaveArgs.columnObject ? cellSaveArgs.columnObject : column;\n            cellSaveArgs.columnObject.index = isNullOrUndefined(cellSaveArgs.columnObject.index) ? 0 : cellSaveArgs.columnObject.index;\n            if (cellSaveArgs.cancel) {\n                _this.preventSaveCell = false;\n                if (_this.editNext) {\n                    _this.editNext = false;\n                    if (_this.cellDetails.rowIndex === _this.index && _this.cellDetails.column.field === _this.field) {\n                        return;\n                    }\n                    _this.editCellExtend(_this.index, _this.field, _this.isAdd);\n                }\n                return;\n            }\n            gObj.editModule.destroyWidgets([column]);\n            gObj.isEdit = false;\n            gObj.editModule.destroyForm();\n            _this.parent.notify(events.tooltipDestroy, {});\n            var rowObj = parentsUntil(cellSaveArgs.cell, literals.movableContent)\n                || parentsUntil(cellSaveArgs.cell, literals.movableHeader) ? gObj.getRowObjectFromUID(tr.getAttribute('data-uid'), true)\n                : gObj.getRowObjectFromUID(tr.getAttribute('data-uid'));\n            if (gObj.getFrozenMode() === literals.leftRight && (parentsUntil(cellSaveArgs.cell, 'e-frozen-right-header')\n                || parentsUntil(cellSaveArgs.cell, 'e-frozen-right-content'))) {\n                rowObj = gObj.getRowObjectFromUID(tr.getAttribute('data-uid'), false, true);\n            }\n            _this.refreshTD(cellSaveArgs.cell, column, rowObj, cellSaveArgs.value);\n            if (_this.parent.isReact) {\n                cellSaveArgs.cell = _this.newReactTd;\n            }\n            removeClass([tr], [literals.editedRow, 'e-batchrow']);\n            removeClass([cellSaveArgs.cell], ['e-editedbatchcell', 'e-boolcell']);\n            if (!isNullOrUndefined(cellSaveArgs.value) && cellSaveArgs.value.toString() ===\n                (!isNullOrUndefined(_this.cellDetails.value) ? _this.cellDetails.value : '').toString() && !_this.isColored\n                || (isNullOrUndefined(cellSaveArgs.value) && isNullOrUndefined(rowObj.data[column.field]) &&\n                    isNullOrUndefined(_this.cellDetails.value) && !cellSaveArgs.cell.parentElement.classList.contains('e-insertedrow'))) {\n                cellSaveArgs.cell.classList.remove('e-updatedtd');\n            }\n            if (isNullOrUndefined(isEscapeCellEdit)) {\n                gObj.trigger(events.cellSaved, cellSaveArgs);\n            }\n            gObj.notify(events.toolbarRefresh, {});\n            _this.isColored = false;\n            if (_this.parent.aggregates.length > 0) {\n                _this.parent.notify(events.refreshFooterRenderer, {});\n                if (_this.parent.groupSettings.columns.length > 0 && !_this.isAddRow(_this.cellDetails.rowIndex)) {\n                    _this.parent.notify(events.groupAggregates, {});\n                }\n            }\n            _this.preventSaveCell = false;\n            if (_this.editNext) {\n                _this.editNext = false;\n                if (_this.cellDetails.rowIndex === _this.index && _this.cellDetails.column.field === _this.field) {\n                    return;\n                }\n                var col = gObj.getColumnByField(_this.field);\n                if (col && col.allowEditing) {\n                    _this.editCellExtend(_this.index, _this.field, _this.isAdd);\n                }\n            }\n            if (isEscapeCellEdit) {\n                gObj.notify(events.restoreFocus, {});\n            }\n        };\n    };\n    BatchEdit.prototype.getDataByIndex = function (index) {\n        var row = this.parent.getRowObjectFromUID(this.parent.getDataRows()[index].getAttribute('data-uid'));\n        return row.changes ? row.changes : row.data;\n    };\n    BatchEdit.prototype.keyDownHandler = function (e) {\n        if ((e.action === 'tab' || e.action === 'shiftTab') && this.parent.isEdit) {\n            var gObj = this.parent;\n            var btmIdx = this.getBottomIndex();\n            var rowcell = parentsUntil(e.target, literals.rowCell);\n            if (rowcell) {\n                var cell = rowcell.querySelector('.e-field');\n                if (cell) {\n                    var visibleColumns = this.parent.getVisibleColumns();\n                    var columnIndex = e.action === 'tab' ? visibleColumns.length - 1 : 0;\n                    if (visibleColumns[columnIndex].field === cell.getAttribute('id').slice(this.parent.element.id.length)) {\n                        if (this.cellDetails.rowIndex === btmIdx && e.action === 'tab') {\n                            if (gObj.editSettings.newRowPosition === 'Top') {\n                                gObj.editSettings.newRowPosition = 'Bottom';\n                                this.addRecord();\n                                gObj.editSettings.newRowPosition = 'Top';\n                            }\n                            else {\n                                this.addRecord();\n                            }\n                        }\n                        else {\n                            this.saveCell();\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.addCancelWhilePaging = function () {\n        if (this.validateFormObj()) {\n            this.parent.notify(events.destroyForm, {});\n            this.parent.isEdit = false;\n            this.isColored = false;\n        }\n    };\n    BatchEdit.prototype.getBottomIndex = function () {\n        var changes = this.getBatchChanges();\n        return this.parent.getCurrentViewRecords().length + changes[literals.addedRecords].length -\n            changes[literals.deletedRecords].length - 1;\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}