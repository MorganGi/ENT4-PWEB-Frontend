{"ast":null,"code":"import { NumericTextBox } from '@syncfusion/ej2-inputs';\nimport { createElement, Browser, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { DropDownButton } from '@syncfusion/ej2-splitbuttons';\nimport { Point } from '@syncfusion/ej2-drawings';\n/**\n * @hidden\n */\n\nvar MeasureAnnotation =\n/** @class */\nfunction () {\n  function MeasureAnnotation(pdfviewer, pdfViewerBase) {\n    /**\n     * @private\n     */\n    this.measureShapeCount = 0;\n    /**\n     * @private\n     */\n\n    this.isAddAnnotationProgramatically = false;\n    this.pdfViewer = pdfviewer;\n    this.pdfViewerBase = pdfViewerBase;\n  }\n\n  Object.defineProperty(MeasureAnnotation.prototype, \"pixelToPointFactor\", {\n    /**\n     * @private\n     */\n    get: function () {\n      return 72 / 96;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * @param shapeAnnotations\n   * @param pageNumber\n   * @param isImportAction\n   * @param shapeAnnotations\n   * @param pageNumber\n   * @param isImportAction\n   * @private\n   */\n  // eslint-disable-next-line\n\n  MeasureAnnotation.prototype.renderMeasureShapeAnnotations = function (shapeAnnotations, pageNumber, isImportAction) {\n    if (shapeAnnotations) {\n      if (shapeAnnotations.length >= 1) {\n        // eslint-disable-next-line\n        var measureAnnots = this.pdfViewer.annotation.getStoredAnnotations(pageNumber, shapeAnnotations, '_annotations_shape_measure');\n\n        if (!measureAnnots || isImportAction) {\n          for (var i = 0; i < shapeAnnotations.length; i++) {\n            // eslint-disable-next-line\n            var annotation = shapeAnnotations[i];\n            var annotationObject = null;\n            this.measureShapeCount = this.measureShapeCount + 1; // eslint-disable-next-line max-len\n\n            annotation.annotationAddMode = this.pdfViewer.annotationModule.findAnnotationMode(annotation, pageNumber, annotation.AnnotType);\n            var isAnnotationRotated = void 0;\n\n            if (annotation.ShapeAnnotationType) {\n              if (isImportAction) {\n                if (this.pdfViewerBase.isJsonImported) {\n                  annotation.Bounds = this.pdfViewerBase.importJsonForRotatedDocuments(annotation.Rotate, pageNumber, annotation.Bounds, annotation.AnnotationRotation);\n                  isAnnotationRotated = this.pdfViewerBase.isPageRotated;\n                }\n              }\n\n              var vertexPoints = null;\n\n              if (annotation.VertexPoints) {\n                vertexPoints = [];\n\n                if (isImportAction && this.pdfViewerBase.isJsonImported) {\n                  vertexPoints = this.pdfViewerBase.calculateVertexPoints(annotation.Rotate, pageNumber, annotation.VertexPoints, annotation.AnnotationRotation);\n                } else {\n                  for (var j = 0; j < annotation.VertexPoints.length; j++) {\n                    var x = annotation.VertexPoints[j].X ? annotation.VertexPoints[j].X : annotation.VertexPoints[j].x;\n                    var y = annotation.VertexPoints[j].Y ? annotation.VertexPoints[j].Y : annotation.VertexPoints[j].y;\n                    var point = {\n                      x: x,\n                      y: y\n                    };\n                    vertexPoints.push(point);\n                  }\n                }\n              }\n\n              if (annotation.Bounds && annotation.EnableShapeLabel === true) {\n                // eslint-disable-next-line max-len\n                annotation.LabelBounds = this.pdfViewer.annotationModule.inputElementModule.calculateLabelBoundsFromLoadedDocument(annotation.Bounds);\n                annotation.LabelBorderColor = annotation.LabelBorderColor ? annotation.LabelBorderColor : annotation.StrokeColor;\n                annotation.FontColor = annotation.FontColor ? annotation.FontColor : annotation.StrokeColor;\n                annotation.LabelFillColor = annotation.LabelFillColor ? annotation.LabelFillColor : annotation.FillColor;\n                annotation.FontSize = annotation.FontSize ? annotation.FontSize : 16; // eslint-disable-next-line max-len\n\n                annotation.LabelSettings = annotation.LabelSettings ? annotation.LabelSettings : this.pdfViewer.shapeLabelSettings;\n              } // eslint-disable-next-line max-len\n\n\n              annotation.AnnotationSettings = annotation.AnnotationSettings ? annotation.AnnotationSettings : this.pdfViewer.annotationModule.updateAnnotationSettings(annotation); // eslint-disable-next-line max-len\n\n              annotation.allowedInteractions = annotation.AllowedInteractions ? annotation.AllowedInteractions : this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation);\n              var isPrint = annotation.AnnotationSettings.isPrint;\n              var measureObject = {\n                // eslint-disable-next-line max-len\n                ratio: annotation.Calibrate.Ratio,\n                x: this.getNumberFormatArray(annotation.Calibrate.X),\n                distance: this.getNumberFormatArray(annotation.Calibrate.Distance),\n                area: this.getNumberFormatArray(annotation.Calibrate.Area),\n                angle: this.getNumberFormatArray(annotation.Calibrate.Angle),\n                volume: this.getNumberFormatArray(annotation.Calibrate.Volume),\n                targetUnitConversion: annotation.Calibrate.TargetUnitConversion\n              };\n\n              if (annotation.Calibrate.Depth) {\n                measureObject.depth = annotation.Calibrate.Depth;\n              }\n\n              var left = annotation.Bounds.X ? annotation.Bounds.X : annotation.Bounds.x;\n              var top_1 = annotation.Bounds.Y ? annotation.Bounds.Y : annotation.Bounds.y;\n              var width = annotation.Bounds.Width ? annotation.Bounds.Width : annotation.Bounds.width;\n              var height = annotation.Bounds.Height ? annotation.Bounds.Height : annotation.Bounds.height;\n              annotationObject = {\n                // eslint-disable-next-line max-len\n                id: 'measure' + this.measureShapeCount,\n                shapeAnnotationType: annotation.ShapeAnnotationType,\n                author: annotation.Author,\n                allowedInteractions: annotation.allowedInteractions,\n                modifiedDate: annotation.ModifiedDate,\n                subject: annotation.Subject,\n                note: annotation.Note,\n                strokeColor: annotation.StrokeColor,\n                fillColor: annotation.FillColor,\n                opacity: annotation.Opacity,\n                thickness: annotation.Thickness,\n                rectangleDifference: annotation.RectangleDifference,\n                // eslint-disable-next-line max-len\n                borderStyle: annotation.BorderStyle,\n                borderDashArray: annotation.BorderDashArray,\n                rotateAngle: annotation.RotateAngle,\n                isCloudShape: annotation.IsCloudShape,\n                cloudIntensity: annotation.CloudIntensity,\n                vertexPoints: vertexPoints,\n                lineHeadStart: annotation.LineHeadStart,\n                lineHeadEnd: annotation.LineHeadEnd,\n                isLocked: annotation.IsLocked,\n                // eslint-disable-next-line max-len\n                bounds: {\n                  left: left,\n                  top: top_1,\n                  width: width,\n                  height: height,\n                  right: annotation.Bounds.Right,\n                  bottom: annotation.Bounds.Bottom\n                },\n                caption: annotation.Caption,\n                captionPosition: annotation.CaptionPosition,\n                calibrate: measureObject,\n                leaderLength: annotation.LeaderLength,\n                leaderLineExtension: annotation.LeaderLineExtension,\n                // eslint-disable-next-line max-len\n                leaderLineOffset: annotation.LeaderLineOffset,\n                indent: annotation.Indent,\n                annotName: annotation.AnnotName,\n                comments: this.pdfViewer.annotationModule.getAnnotationComments(annotation.Comments, annotation, annotation.Author),\n                review: {\n                  state: annotation.State,\n                  stateModel: annotation.StateModel,\n                  modifiedDate: annotation.ModifiedDate,\n                  author: annotation.Author\n                },\n                // eslint-disable-next-line max-len\n                labelContent: annotation.LabelContent,\n                enableShapeLabel: annotation.EnableShapeLabel,\n                labelFillColor: annotation.LabelFillColor,\n                fontColor: annotation.FontColor,\n                labelBorderColor: annotation.LabelBorderColor,\n                fontSize: annotation.FontSize,\n                // eslint-disable-next-line max-len\n                labelBounds: annotation.LabelBounds,\n                annotationSelectorSettings: this.getSettings(annotation),\n                labelSettings: annotation.LabelSettings,\n                annotationSettings: annotation.AnnotationSettings,\n                customData: this.pdfViewer.annotation.getCustomData(annotation),\n                isPrint: isPrint,\n                isCommentLock: annotation.IsCommentLock,\n                isAnnotationRotated: isAnnotationRotated\n              };\n              var annot = void 0; // eslint-disable-next-line\n\n              var vPoints = annotationObject.vertexPoints;\n\n              if (vertexPoints == null) {\n                vPoints = [];\n              } // eslint-disable-next-line max-len\n\n\n              annotation.AnnotationSelectorSettings = annotation.AnnotationSelectorSettings ? annotation.AnnotationSelectorSettings : this.pdfViewer.annotationSelectorSettings; // eslint-disable-next-line max-len\n\n              annotation.allowedInteractions = annotation.AllowedInteractions ? annotation.AllowedInteractions : this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation);\n              annot = {\n                // eslint-disable-next-line max-len\n                id: 'measure' + this.measureShapeCount,\n                shapeAnnotationType: this.getShapeType(annotationObject),\n                author: annotationObject.author,\n                allowedInteractions: annotation.allowedInteractions,\n                modifiedDate: annotationObject.modifiedDate,\n                subject: annotationObject.subject,\n                notes: annotationObject.note,\n                fillColor: annotationObject.fillColor,\n                strokeColor: annotationObject.strokeColor,\n                opacity: annotationObject.opacity,\n                // eslint-disable-next-line max-len\n                thickness: annotationObject.thickness,\n                borderStyle: annotationObject.borderStyle,\n                borderDashArray: annotationObject.borderDashArray.toString(),\n                rotateAngle: parseFloat(annotationObject.rotateAngle.split('Angle')[1]),\n                isCloudShape: annotationObject.isCloudShape,\n                cloudIntensity: annotationObject.cloudIntensity,\n                taregetDecoraterShapes: this.pdfViewer.annotation.getArrowType(annotationObject.lineHeadEnd),\n                sourceDecoraterShapes: this.pdfViewer.annotation.getArrowType(annotationObject.lineHeadStart),\n                // eslint-disable-next-line max-len\n                vertexPoints: vPoints,\n                bounds: {\n                  x: annotationObject.bounds.left,\n                  y: annotationObject.bounds.top,\n                  width: annotationObject.bounds.width,\n                  height: annotationObject.bounds.height\n                },\n                leaderHeight: annotationObject.leaderLength,\n                pageIndex: pageNumber,\n                annotName: annotationObject.annotName,\n                comments: annotationObject.comments,\n                review: annotationObject.review,\n                measureType: this.getMeasureType(annotationObject),\n                // eslint-disable-next-line max-len\n                labelContent: annotation.LabelContent,\n                enableShapeLabel: annotation.EnableShapeLabel,\n                labelFillColor: annotation.LabelFillColor,\n                fontColor: annotation.FontColor,\n                labelBorderColor: annotation.LabelBorderColor,\n                fontSize: annotation.FontSize,\n                labelBounds: annotation.LabelBounds,\n                annotationSelectorSettings: annotation.AnnotationSelectorSettings,\n                annotationSettings: annotationObject.annotationSettings,\n                annotationAddMode: annotation.annotationAddMode,\n                isPrint: isPrint,\n                isCommentLock: annotationObject.isCommentLock\n              };\n              this.pdfViewer.annotation.storeAnnotations(pageNumber, annotationObject, '_annotations_shape_measure');\n\n              if (this.isAddAnnotationProgramatically) {\n                var settings = {\n                  opacity: annot.opacity,\n                  strokeColor: annot.strokeColor,\n                  thickness: annot.thickness,\n                  modifiedDate: annot.modifiedDate,\n                  width: annot.bounds.width,\n                  height: annot.bounds.height\n                };\n                this.pdfViewer.fireAnnotationAdd(annot.pageIndex, annot.annotName, annotation.ShapeAnnotationType, annot.bounds, settings);\n              }\n\n              this.pdfViewer.add(annot);\n            }\n          }\n        }\n      } else if (shapeAnnotations.shapeAnnotationType) {\n        var annotationObject = this.createAnnotationObject(shapeAnnotations);\n        this.pdfViewer.annotationModule.storeAnnotations(pageNumber, annotationObject, '_annotations_shape_measure');\n        this.pdfViewer.annotationModule.triggerAnnotationAdd(shapeAnnotations);\n      }\n    }\n  };\n  /**\n   * @param annotation\n   * @private\n   */\n  // eslint-disable-next-line\n\n\n  MeasureAnnotation.prototype.getSettings = function (annotation) {\n    var selector = this.pdfViewer.annotationSelectorSettings;\n\n    if (annotation.AnnotationSelectorSettings) {\n      selector = annotation.AnnotationSelectorSettings;\n    } else {\n      selector = this.getSelector(annotation.Subject);\n    }\n\n    return selector;\n  };\n  /**\n   * @param type\n   * @private\n   */\n\n\n  MeasureAnnotation.prototype.setAnnotationType = function (type) {\n    var author = 'Guest';\n    this.updateMeasureproperties();\n    this.pdfViewerBase.disableTextSelectionMode();\n\n    switch (type) {\n      case 'Distance':\n        this.currentAnnotationMode = 'Distance';\n        var modifiedDateDist = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime(); // eslint-disable-next-line max-len\n\n        author = this.pdfViewer.annotationSettings.author !== 'Guest' ? this.pdfViewer.annotationSettings.author : this.pdfViewer.distanceSettings.author ? this.pdfViewer.distanceSettings.author : 'Guest';\n        this.pdfViewer.drawingObject = {\n          sourceDecoraterShapes: this.pdfViewer.annotation.getArrowType(this.distanceStartHead),\n          taregetDecoraterShapes: this.pdfViewer.annotation.getArrowType(this.distanceEndHead),\n          measureType: 'Distance',\n          fillColor: this.distanceFillColor,\n          notes: '',\n          strokeColor: this.distanceStrokeColor,\n          leaderHeight: this.leaderLength,\n          opacity: this.distanceOpacity,\n          thickness: this.distanceThickness,\n          borderDashArray: this.distanceDashArray.toString(),\n          // eslint-disable-next-line max-len\n          shapeAnnotationType: 'Distance',\n          author: author,\n          subject: 'Distance calculation',\n          isCommentLock: false\n        };\n        this.pdfViewer.tool = 'Distance';\n        break;\n\n      case 'Perimeter':\n        this.currentAnnotationMode = 'Perimeter';\n        var modifiedDatePeri = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime(); // eslint-disable-next-line max-len\n\n        author = this.pdfViewer.annotationSettings.author !== 'Guest' ? this.pdfViewer.annotationSettings.author : this.pdfViewer.perimeterSettings.author ? this.pdfViewer.perimeterSettings.author : 'Guest';\n        this.pdfViewer.drawingObject = {\n          // eslint-disable-next-line max-len\n          shapeAnnotationType: 'LineWidthArrowHead',\n          fillColor: this.perimeterFillColor,\n          notes: '',\n          strokeColor: this.perimeterStrokeColor,\n          opacity: this.perimeterOpacity,\n          thickness: this.perimeterThickness,\n          sourceDecoraterShapes: this.pdfViewer.annotation.getArrowType(this.perimeterStartHead),\n          // eslint-disable-next-line max-len\n          taregetDecoraterShapes: this.pdfViewer.annotation.getArrowType(this.perimeterEndHead),\n          measureType: 'Perimeter',\n          borderDashArray: this.perimeterDashArray.toString(),\n          author: author,\n          subject: 'Perimeter calculation',\n          isCommentLock: false\n        };\n        this.pdfViewer.tool = 'Perimeter';\n        break;\n\n      case 'Area':\n        this.currentAnnotationMode = 'Area';\n        var modifiedDateArea = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime(); // eslint-disable-next-line max-len\n\n        author = this.pdfViewer.annotationSettings.author !== 'Guest' ? this.pdfViewer.annotationSettings.author : this.pdfViewer.areaSettings.author ? this.pdfViewer.areaSettings.author : 'Guest';\n        this.pdfViewer.drawingObject = {\n          // eslint-disable-next-line max-len\n          shapeAnnotationType: 'Polygon',\n          fillColor: this.areaFillColor,\n          notes: '',\n          strokeColor: this.areaStrokeColor,\n          thickness: this.areaThickness,\n          opacity: this.areaOpacity,\n          measureType: 'Area',\n          modifiedDate: modifiedDateArea,\n          borderStyle: '',\n          borderDashArray: '0',\n          author: author,\n          subject: 'Area calculation',\n          isCommentLock: false\n        };\n        this.pdfViewer.tool = 'Polygon';\n        break;\n\n      case 'Radius':\n        this.currentAnnotationMode = 'Radius';\n        var modifiedDateRad = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime(); // eslint-disable-next-line max-len\n\n        author = this.pdfViewer.annotationSettings.author !== 'Guest' ? this.pdfViewer.annotationSettings.author : this.pdfViewer.radiusSettings.author ? this.pdfViewer.radiusSettings.author : 'Guest';\n        this.pdfViewer.drawingObject = {\n          // eslint-disable-next-line max-len\n          shapeAnnotationType: 'Radius',\n          fillColor: this.radiusFillColor,\n          notes: '',\n          strokeColor: this.radiusStrokeColor,\n          opacity: this.radiusOpacity,\n          thickness: this.radiusThickness,\n          measureType: 'Radius',\n          modifiedDate: modifiedDateRad,\n          borderStyle: '',\n          borderDashArray: '0',\n          author: author,\n          subject: 'Radius calculation',\n          isCommentLock: false\n        };\n        this.pdfViewer.tool = 'DrawTool';\n        break;\n\n      case 'Volume':\n        this.currentAnnotationMode = 'Volume';\n        var modifiedDateVol = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime(); // eslint-disable-next-line max-len\n\n        author = this.pdfViewer.annotationSettings.author !== 'Guest' ? this.pdfViewer.annotationSettings.author : this.pdfViewer.volumeSettings.author ? this.pdfViewer.volumeSettings.author : 'Guest';\n        this.pdfViewer.drawingObject = {\n          // eslint-disable-next-line max-len\n          shapeAnnotationType: 'Polygon',\n          notes: '',\n          fillColor: this.volumeFillColor,\n          strokeColor: this.volumeStrokeColor,\n          opacity: this.volumeOpacity,\n          thickness: this.volumeThickness,\n          measureType: 'Volume',\n          modifiedDate: modifiedDateVol,\n          borderStyle: '',\n          borderDashArray: '0',\n          author: author,\n          subject: 'Volume calculation',\n          isCommentLock: false\n        };\n        this.pdfViewer.tool = 'Polygon';\n        break;\n    }\n  };\n\n  MeasureAnnotation.prototype.updateMeasureproperties = function () {\n    this.distanceFillColor = this.pdfViewer.distanceSettings.fillColor ? this.pdfViewer.distanceSettings.fillColor : '#ff0000';\n    this.distanceStrokeColor = this.pdfViewer.distanceSettings.strokeColor ? this.pdfViewer.distanceSettings.strokeColor : '#ff0000';\n    this.distanceOpacity = this.pdfViewer.distanceSettings.opacity ? this.pdfViewer.distanceSettings.opacity : 1;\n    this.distanceThickness = this.pdfViewer.distanceSettings.thickness ? this.pdfViewer.distanceSettings.thickness : 1;\n    this.distanceDashArray = this.pdfViewer.distanceSettings.borderDashArray ? this.pdfViewer.distanceSettings.borderDashArray : 0;\n    this.leaderLength = this.pdfViewer.distanceSettings.leaderLength != null ? this.pdfViewer.distanceSettings.leaderLength : 40; // eslint-disable-next-line max-len\n\n    this.distanceStartHead = this.pdfViewer.distanceSettings.lineHeadStartStyle ? this.pdfViewer.distanceSettings.lineHeadStartStyle : 'Closed';\n    this.distanceEndHead = this.pdfViewer.distanceSettings.lineHeadEndStyle ? this.pdfViewer.distanceSettings.lineHeadEndStyle : 'Closed';\n    this.perimeterFillColor = this.pdfViewer.perimeterSettings.fillColor ? this.pdfViewer.perimeterSettings.fillColor : '#ffffff00';\n    this.perimeterStrokeColor = this.pdfViewer.perimeterSettings.strokeColor ? this.pdfViewer.perimeterSettings.strokeColor : '#ff0000';\n    this.perimeterOpacity = this.pdfViewer.perimeterSettings.opacity ? this.pdfViewer.perimeterSettings.opacity : 1;\n    this.perimeterThickness = this.pdfViewer.perimeterSettings.thickness ? this.pdfViewer.perimeterSettings.thickness : 1;\n    this.perimeterDashArray = this.pdfViewer.perimeterSettings.borderDashArray ? this.pdfViewer.perimeterSettings.borderDashArray : 0; // eslint-disable-next-line max-len\n\n    this.perimeterStartHead = this.pdfViewer.perimeterSettings.lineHeadStartStyle ? this.pdfViewer.perimeterSettings.lineHeadStartStyle : 'Open';\n    this.perimeterEndHead = this.pdfViewer.perimeterSettings.lineHeadEndStyle ? this.pdfViewer.perimeterSettings.lineHeadEndStyle : 'Open';\n    this.areaFillColor = this.pdfViewer.areaSettings.fillColor ? this.pdfViewer.areaSettings.fillColor : '#ffffff00';\n    this.areaStrokeColor = this.pdfViewer.areaSettings.strokeColor ? this.pdfViewer.areaSettings.strokeColor : '#ff0000';\n    this.areaOpacity = this.pdfViewer.areaSettings.opacity ? this.pdfViewer.areaSettings.opacity : 1;\n    this.areaThickness = this.pdfViewer.areaSettings.thickness ? this.pdfViewer.areaSettings.thickness : 1;\n    this.radiusFillColor = this.pdfViewer.radiusSettings.fillColor ? this.pdfViewer.radiusSettings.fillColor : '#ffffff00';\n    this.radiusStrokeColor = this.pdfViewer.radiusSettings.strokeColor ? this.pdfViewer.radiusSettings.strokeColor : '#ff0000';\n    this.radiusOpacity = this.pdfViewer.radiusSettings.opacity ? this.pdfViewer.radiusSettings.opacity : 1;\n    this.radiusThickness = this.pdfViewer.radiusSettings.thickness ? this.pdfViewer.radiusSettings.thickness : 1;\n    this.volumeFillColor = this.pdfViewer.volumeSettings.fillColor ? this.pdfViewer.volumeSettings.fillColor : '#ffffff00';\n    this.volumeStrokeColor = this.pdfViewer.volumeSettings.strokeColor ? this.pdfViewer.volumeSettings.strokeColor : '#ff0000';\n    this.volumeOpacity = this.pdfViewer.volumeSettings.opacity ? this.pdfViewer.volumeSettings.opacity : 1;\n    this.volumeThickness = this.pdfViewer.volumeSettings.thickness ? this.pdfViewer.volumeSettings.thickness : 1;\n    this.unit = this.pdfViewer.measurementSettings.conversionUnit.toLowerCase();\n    this.displayUnit = this.pdfViewer.measurementSettings.displayUnit.toLowerCase();\n    this.ratio = this.pdfViewer.measurementSettings.scaleRatio;\n    this.volumeDepth = this.pdfViewer.measurementSettings.depth;\n    this.scaleRatioString = '1 ' + this.unit + ' = ' + this.ratio.toString() + ' ' + this.displayUnit;\n  };\n\n  MeasureAnnotation.prototype.createAnnotationObject = function (annotationModel) {\n    var bound;\n    var labelBound;\n    var annotationName = this.pdfViewer.annotation.createGUID(); // eslint-disable-next-line max-len\n\n    var commentsDivid = this.pdfViewer.annotation.stickyNotesAnnotationModule.addComments('shape_measure', annotationModel.pageIndex + 1, annotationModel.measureType);\n\n    if (commentsDivid) {\n      document.getElementById(commentsDivid).id = annotationName;\n    }\n\n    annotationModel.annotName = annotationName;\n    annotationModel.author = this.pdfViewer.annotationModule.updateAnnotationAuthor('measure', annotationModel.subject);\n    this.pdfViewer.annotation.stickyNotesAnnotationModule.addTextToComments(annotationName, annotationModel.notes);\n\n    if (annotationModel.wrapper.bounds) {\n      bound = {\n        // eslint-disable-next-line max-len\n        left: annotationModel.wrapper.bounds.x,\n        top: annotationModel.wrapper.bounds.y,\n        height: annotationModel.wrapper.bounds.height,\n        width: annotationModel.wrapper.bounds.width,\n        right: annotationModel.wrapper.bounds.right,\n        bottom: annotationModel.wrapper.bounds.bottom\n      };\n      labelBound = this.pdfViewer.annotationModule.inputElementModule.calculateLabelBounds(annotationModel.wrapper.bounds);\n    } else {\n      bound = {\n        left: 0,\n        top: 0,\n        height: 0,\n        width: 0,\n        right: 0,\n        bottom: 0\n      };\n      labelBound = {\n        left: 0,\n        top: 0,\n        height: 0,\n        width: 0,\n        right: 0,\n        bottom: 0\n      };\n    } // eslint-disable-next-line radix\n\n\n    var borderDashArray = parseInt(annotationModel.borderDashArray);\n    borderDashArray = isNaN(borderDashArray) ? 0 : borderDashArray; // eslint-disable-next-line max-len\n\n    var measure = {\n      ratio: this.scaleRatioString,\n      x: [this.createNumberFormat('x')],\n      distance: [this.createNumberFormat('d')],\n      area: [this.createNumberFormat('a')]\n    };\n\n    if (annotationModel.measureType === 'Volume') {\n      measure.depth = this.volumeDepth;\n    } // eslint-disable-next-line\n\n\n    var annotationSettings = this.pdfViewer.annotationModule.findAnnotationSettings(annotationModel, true); // eslint-disable-next-line\n\n    var allowedInteractions = this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotationModel);\n    annotationModel.isPrint = annotationSettings.isPrint;\n    var setting = this.pdfViewer.shapeLabelSettings;\n    var labelSettings = {\n      borderColor: annotationModel.strokeColor,\n      fillColor: annotationModel.fillColor,\n      fontColor: annotationModel.fontColor,\n      fontSize: annotationModel.fontSize,\n      labelContent: annotationModel.labelContent,\n      labelHeight: setting.labelHeight,\n      labelWidth: setting.labelMaxWidth,\n      opacity: annotationModel.opacity\n    };\n    return {\n      // eslint-disable-next-line max-len\n      id: annotationModel.id,\n      shapeAnnotationType: this.getShapeAnnotType(annotationModel.measureType),\n      author: annotationModel.author,\n      allowedInteractions: allowedInteractions,\n      subject: annotationModel.subject,\n      note: annotationModel.notes,\n      strokeColor: annotationModel.strokeColor,\n      fillColor: annotationModel.fillColor,\n      opacity: annotationModel.opacity,\n      thickness: annotationModel.thickness,\n      // eslint-disable-next-line max-len\n      borderStyle: annotationModel.borderStyle,\n      borderDashArray: borderDashArray,\n      bounds: bound,\n      // eslint-disable-next-line max-len\n      modifiedDate: this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime(),\n      rotateAngle: 'RotateAngle' + annotationModel.rotateAngle,\n      isCloudShape: annotationModel.isCloudShape,\n      cloudIntensity: annotationModel.cloudIntensity,\n      // eslint-disable-next-line max-len\n      vertexPoints: annotationModel.vertexPoints,\n      lineHeadStart: this.pdfViewer.annotation.getArrowTypeForCollection(annotationModel.sourceDecoraterShapes),\n      lineHeadEnd: this.pdfViewer.annotation.getArrowTypeForCollection(annotationModel.taregetDecoraterShapes),\n      rectangleDifference: [],\n      isLocked: annotationSettings.isLock,\n      // eslint-disable-next-line max-len\n      leaderLength: annotationModel.leaderHeight,\n      leaderLineExtension: 2,\n      leaderLineOffset: 0,\n      calibrate: measure,\n      caption: true,\n      captionPosition: 'Top',\n      indent: this.getIndent(annotationModel.measureType),\n      annotName: annotationName,\n      comments: [],\n      review: {\n        state: '',\n        stateModel: '',\n        modifiedDate: this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime(),\n        author: annotationModel.author\n      },\n      // eslint-disable-next-line max-len\n      labelContent: annotationModel.labelContent,\n      enableShapeLabel: annotationModel.enableShapeLabel,\n      labelFillColor: annotationModel.labelFillColor,\n      labelBorderColor: annotationModel.labelBorderColor,\n      fontColor: annotationModel.fontColor,\n      fontSize: annotationModel.fontSize,\n      // eslint-disable-next-line max-len\n      labelBounds: labelBound,\n      annotationSelectorSettings: this.getSelector(annotationModel.subject),\n      labelSettings: labelSettings,\n      annotationSettings: annotationSettings,\n      customData: this.pdfViewer.annotation.getMeasureData(annotationModel.subject),\n      isPrint: annotationModel.isPrint,\n      isCommentLock: annotationModel.isCommentLock,\n      isAnnotationRotated: false\n    };\n  };\n\n  MeasureAnnotation.prototype.getSelector = function (type) {\n    var selector = this.pdfViewer.annotationSelectorSettings;\n\n    if (type === 'Distance calculation' && this.pdfViewer.distanceSettings.annotationSelectorSettings) {\n      selector = this.pdfViewer.distanceSettings.annotationSelectorSettings;\n    } else if (type === 'Perimeter calculation' && this.pdfViewer.perimeterSettings.annotationSelectorSettings) {\n      selector = this.pdfViewer.perimeterSettings.annotationSelectorSettings; // eslint-disable-next-line max-len\n    } else if (type === 'Area calculation' && this.pdfViewer.areaSettings.annotationSelectorSettings) {\n      selector = this.pdfViewer.areaSettings.annotationSelectorSettings;\n    } else if (type === 'Radius calculation' && this.pdfViewer.radiusSettings.annotationSelectorSettings) {\n      selector = this.pdfViewer.radiusSettings.annotationSelectorSettings;\n    } else if (type === 'Volume calculation' && this.pdfViewer.volumeSettings.annotationSelectorSettings) {\n      selector = this.pdfViewer.volumeSettings.annotationSelectorSettings;\n    }\n\n    return selector;\n  };\n\n  MeasureAnnotation.prototype.getShapeAnnotType = function (measureType) {\n    var annotationType;\n\n    switch (measureType) {\n      case 'Distance':\n        annotationType = 'Line';\n        break;\n\n      case 'Perimeter':\n        annotationType = 'Polyline';\n        break;\n\n      case 'Area':\n      case 'Volume':\n        annotationType = 'Polygon';\n        break;\n\n      case 'Radius':\n        annotationType = 'Circle';\n        break;\n    }\n\n    return annotationType;\n  };\n\n  MeasureAnnotation.prototype.getShapeType = function (shape) {\n    var shapeType;\n\n    if (shape.shapeAnnotationType === 'Line') {\n      shapeType = 'Distance';\n    } else if (shape.shapeAnnotationType === 'Polyline') {\n      shapeType = 'LineWidthArrowHead';\n    } else if (shape.shapeAnnotationType === 'Polygon' && shape.indent === 'PolygonDimension') {\n      shapeType = 'Polygon'; // eslint-disable-next-line max-len\n    } else if (shape.shapeAnnotationType === 'Polygon' && shape.indent === 'PolygonRadius' || shape.shapeAnnotationType === 'Circle') {\n      shapeType = 'Radius';\n    } else if (shape.shapeAnnotationType === 'Polygon' && shape.indent === 'PolygonVolume') {\n      shapeType = 'Polygon';\n    }\n\n    return shapeType;\n  };\n\n  MeasureAnnotation.prototype.getMeasureType = function (shape) {\n    var measureType;\n\n    if (shape.shapeAnnotationType === 'Line') {\n      measureType = 'Distance';\n    } else if (shape.shapeAnnotationType === 'Polyline') {\n      measureType = 'Perimeter';\n    } else if (shape.shapeAnnotationType === 'Polygon' && shape.indent === 'PolygonDimension') {\n      measureType = 'Area'; // eslint-disable-next-line max-len\n    } else if (shape.shapeAnnotationType === 'Polygon' && shape.indent === 'PolygonRadius' || shape.shapeAnnotationType === 'Circle') {\n      measureType = 'Radius';\n    } else if (shape.shapeAnnotationType === 'Polygon' && shape.indent === 'PolygonVolume') {\n      measureType = 'Volume';\n    }\n\n    return measureType;\n  };\n\n  MeasureAnnotation.prototype.getIndent = function (measureType) {\n    var indent;\n\n    switch (measureType) {\n      case 'Distance':\n        indent = 'LineDimension';\n        break;\n\n      case 'Perimeter':\n        indent = 'PolyLineDimension';\n        break;\n\n      case 'Area':\n        indent = 'PolygonDimension';\n        break;\n\n      case 'Radius':\n        indent = 'PolygonRadius';\n        break;\n\n      case 'Volume':\n        indent = 'PolygonVolume';\n        break;\n    }\n\n    return indent;\n  }; // eslint-disable-next-line\n\n\n  MeasureAnnotation.prototype.getNumberFormatArray = function (list) {\n    // eslint-disable-next-line\n    var numberFormatArray = new Array();\n\n    if (list) {\n      for (var i = 0; i < list.length; i++) {\n        // eslint-disable-next-line max-len\n        numberFormatArray[i] = {\n          unit: list[i].Unit,\n          fractionalType: list[i].FractionalType,\n          conversionFactor: list[i].ConversionFactor,\n          denominator: list[i].Denominator,\n          formatDenominator: list[i].FormatDenominator\n        };\n      }\n    }\n\n    return numberFormatArray;\n  };\n\n  MeasureAnnotation.prototype.createNumberFormat = function (type) {\n    var cFactor = 1;\n    var unit = this.displayUnit;\n\n    if (type === 'x') {\n      cFactor = this.getFactor(this.unit);\n    }\n\n    if (type === 'a') {\n      unit = 'sq ' + this.displayUnit;\n    } // eslint-disable-next-line max-len\n\n\n    var numberFormat = {\n      unit: unit,\n      fractionalType: 'D',\n      conversionFactor: cFactor,\n      denominator: 100,\n      formatDenominator: false\n    };\n    return numberFormat;\n  };\n  /**\n   * @private\n   */\n\n\n  MeasureAnnotation.prototype.saveMeasureShapeAnnotations = function () {\n    // eslint-disable-next-line\n    var storeObject = window.sessionStorage.getItem(this.pdfViewerBase.documentId + '_annotations_shape_measure');\n\n    if (this.pdfViewerBase.isStorageExceed) {\n      storeObject = this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_shape_measure'];\n    } // eslint-disable-next-line\n\n\n    var annotations = new Array();\n\n    for (var j = 0; j < this.pdfViewerBase.pageCount; j++) {\n      annotations[j] = [];\n    }\n\n    if (storeObject && !this.pdfViewer.annotationSettings.skipDownload) {\n      var annotationCollection = JSON.parse(storeObject);\n\n      for (var i = 0; i < annotationCollection.length; i++) {\n        var newArray = [];\n        var pageAnnotationObject = annotationCollection[i];\n\n        if (pageAnnotationObject) {\n          for (var z = 0; pageAnnotationObject.annotations.length > z; z++) {\n            this.pdfViewer.annotationModule.updateModifiedDate(pageAnnotationObject.annotations[z]);\n\n            if (this.pdfViewerBase.isJsonExported) {\n              if (pageAnnotationObject.annotations[z].isAnnotationRotated) {\n                pageAnnotationObject.annotations[z].bounds = this.pdfViewer.annotation.getBounds(pageAnnotationObject.annotations[z].bounds, pageAnnotationObject.pageIndex);\n                pageAnnotationObject.annotations[z].vertexPoints = this.pdfViewer.annotation.getVertexPoints(pageAnnotationObject.annotations[z].vertexPoints, pageAnnotationObject.pageIndex);\n              } else {\n                var pageDetails = this.pdfViewerBase.pageSize[pageAnnotationObject.pageIndex];\n\n                if (pageDetails) {\n                  pageAnnotationObject.annotations[z].annotationRotation = pageDetails.rotation;\n                }\n              }\n            } // eslint-disable-next-line max-len\n\n\n            pageAnnotationObject.annotations[z].bounds = JSON.stringify(this.pdfViewer.annotation.getBounds(pageAnnotationObject.annotations[z].bounds, pageAnnotationObject.pageIndex));\n            var strokeColorString = pageAnnotationObject.annotations[z].strokeColor;\n            pageAnnotationObject.annotations[z].strokeColor = JSON.stringify(this.getRgbCode(strokeColorString));\n            var fillColorString = pageAnnotationObject.annotations[z].fillColor;\n            pageAnnotationObject.annotations[z].fillColor = JSON.stringify(this.getRgbCode(fillColorString)); // eslint-disable-next-line max-len\n\n            pageAnnotationObject.annotations[z].vertexPoints = JSON.stringify(this.pdfViewer.annotation.getVertexPoints(pageAnnotationObject.annotations[z].vertexPoints, pageAnnotationObject.pageIndex));\n\n            if (pageAnnotationObject.annotations[z].rectangleDifference !== null) {\n              // eslint-disable-next-line max-len\n              pageAnnotationObject.annotations[z].rectangleDifference = JSON.stringify(pageAnnotationObject.annotations[z].rectangleDifference);\n            } // eslint-disable-next-line max-len\n\n\n            pageAnnotationObject.annotations[z].calibrate = this.getStringifiedMeasure(pageAnnotationObject.annotations[z].calibrate);\n\n            if (pageAnnotationObject.annotations[z].enableShapeLabel === true) {\n              // eslint-disable-next-line max-len\n              pageAnnotationObject.annotations[z].labelBounds = JSON.stringify(this.pdfViewer.annotationModule.inputElementModule.calculateLabelBounds(JSON.parse(pageAnnotationObject.annotations[z].bounds), pageAnnotationObject.pageIndex));\n              var labelFillColorString = pageAnnotationObject.annotations[z].labelFillColor;\n              pageAnnotationObject.annotations[z].labelFillColor = JSON.stringify(this.getRgbCode(labelFillColorString));\n              var labelBorderColorString = pageAnnotationObject.annotations[z].labelBorderColor;\n              pageAnnotationObject.annotations[z].labelBorderColor = JSON.stringify(this.getRgbCode(labelBorderColorString));\n              pageAnnotationObject.annotations[z].labelSettings.fillColor = labelFillColorString;\n              var fontColorString = pageAnnotationObject.annotations[z].labelSettings.fontColor;\n              pageAnnotationObject.annotations[z].fontColor = JSON.stringify(this.getRgbCode(fontColorString));\n            }\n          }\n\n          newArray = pageAnnotationObject.annotations;\n        }\n\n        annotations[pageAnnotationObject.pageIndex] = newArray;\n      }\n    }\n\n    return JSON.stringify(annotations);\n  };\n  /**\n   * @private\n   */\n\n\n  MeasureAnnotation.prototype.createScaleRatioWindow = function () {\n    var _this = this;\n\n    if (!isBlazor()) {\n      var elementID = this.pdfViewer.element.id; // eslint-disable-next-line max-len\n\n      var dialogDiv = createElement('div', {\n        id: elementID + '_scale_ratio_window',\n        className: 'e-pv-scale-ratio-window'\n      });\n      this.pdfViewerBase.pageContainer.appendChild(dialogDiv);\n      var contentElement = this.createRatioUI();\n      this.scaleRatioDialog = new Dialog({\n        showCloseIcon: true,\n        closeOnEscape: false,\n        isModal: true,\n        header: this.pdfViewer.localeObj.getConstant('Scale Ratio'),\n        target: this.pdfViewer.element,\n        content: contentElement,\n        close: function () {\n          _this.sourceTextBox.destroy();\n\n          _this.convertUnit.destroy();\n\n          _this.destTextBox.destroy();\n\n          _this.dispUnit.destroy();\n\n          _this.scaleRatioDialog.destroy();\n\n          var dialogElement = _this.pdfViewerBase.getElement('_scale_ratio_window');\n\n          dialogElement.parentElement.removeChild(dialogElement);\n        }\n      });\n\n      if (!Browser.isDevice || this.pdfViewer.enableDesktopMode) {\n        this.scaleRatioDialog.buttons = [// eslint-disable-next-line max-len\n        {\n          buttonModel: {\n            content: this.pdfViewer.localeObj.getConstant('OK'),\n            isPrimary: true\n          },\n          click: this.onOkClicked.bind(this)\n        }, {\n          buttonModel: {\n            content: this.pdfViewer.localeObj.getConstant('Cancel')\n          },\n          click: this.onCancelClicked.bind(this)\n        }];\n      } else {\n        this.scaleRatioDialog.buttons = [{\n          buttonModel: {\n            content: this.pdfViewer.localeObj.getConstant('Cancel')\n          },\n          click: this.onCancelClicked.bind(this)\n        }, // eslint-disable-next-line max-len\n        {\n          buttonModel: {\n            content: this.pdfViewer.localeObj.getConstant('OK'),\n            isPrimary: true\n          },\n          click: this.onOkClicked.bind(this)\n        }];\n      }\n\n      if (this.pdfViewer.enableRtl) {\n        this.scaleRatioDialog.enableRtl = true;\n      }\n\n      this.scaleRatioDialog.appendTo(dialogDiv);\n      this.convertUnit.content = this.createContent(this.pdfViewer.localeObj.getConstant(this.unit)).outerHTML;\n      this.dispUnit.content = this.createContent(this.pdfViewer.localeObj.getConstant(this.displayUnit)).outerHTML;\n      this.depthUnit.content = this.createContent(this.pdfViewer.localeObj.getConstant(this.displayUnit)).outerHTML;\n    } else {\n      this.pdfViewer._dotnetInstance.invokeMethodAsync('OpenScaleRatioDialog');\n    }\n  };\n\n  MeasureAnnotation.prototype.createRatioUI = function () {\n    var element = createElement('div');\n    var elementID = this.pdfViewer.element.id; // eslint-disable-next-line max-len\n\n    var items = [{\n      text: this.pdfViewer.localeObj.getConstant('pt'),\n      label: 'pt'\n    }, {\n      text: this.pdfViewer.localeObj.getConstant('in'),\n      label: 'in'\n    }, {\n      text: this.pdfViewer.localeObj.getConstant('mm'),\n      label: 'mm'\n    }, {\n      text: this.pdfViewer.localeObj.getConstant('cm'),\n      label: 'cm'\n    }, {\n      text: this.pdfViewer.localeObj.getConstant('p'),\n      label: 'p'\n    }, {\n      text: this.pdfViewer.localeObj.getConstant('ft'),\n      label: 'ft'\n    }, {\n      text: this.pdfViewer.localeObj.getConstant('ft_in'),\n      label: 'ft_in'\n    }, {\n      text: this.pdfViewer.localeObj.getConstant('m'),\n      label: 'm'\n    }];\n    var labelText = createElement('div', {\n      id: elementID + '_scale_ratio_label',\n      className: 'e-pv-scale-ratio-text'\n    });\n    labelText.textContent = this.pdfViewer.localeObj.getConstant('Scale Ratio');\n    element.appendChild(labelText);\n    var sourceContainer = createElement('div', {\n      id: elementID + '_scale_src_container'\n    });\n    element.appendChild(sourceContainer); // eslint-disable-next-line max-len\n\n    var srcInputElement = this.createInputElement('input', 'e-pv-scale-ratio-src-input', elementID + '_src_input', sourceContainer);\n    this.sourceTextBox = new NumericTextBox({\n      value: 1,\n      format: '##',\n      cssClass: 'e-pv-scale-ratio-src-input',\n      min: 1,\n      max: 100\n    }, srcInputElement); // eslint-disable-next-line max-len\n\n    var srcUnitElement = this.createInputElement('button', 'e-pv-scale-ratio-src-unit', elementID + '_src_unit', sourceContainer);\n    this.convertUnit = new DropDownButton({\n      items: items,\n      cssClass: 'e-pv-scale-ratio-src-unit'\n    }, srcUnitElement);\n    this.convertUnit.select = this.convertUnitSelect.bind(this);\n    var destinationContainer = createElement('div', {\n      id: elementID + '_scale_dest_container'\n    }); // eslint-disable-next-line max-len\n\n    var destInputElement = this.createInputElement('input', 'e-pv-scale-ratio-dest-input', elementID + '_dest_input', destinationContainer);\n    this.destTextBox = new NumericTextBox({\n      value: 1,\n      format: '##',\n      cssClass: 'e-pv-scale-ratio-dest-input',\n      min: 1,\n      max: 100\n    }, destInputElement); // eslint-disable-next-line max-len\n\n    var destUnitElement = this.createInputElement('button', 'e-pv-scale-ratio-dest-unit', elementID + '_dest_unit', destinationContainer);\n    this.dispUnit = new DropDownButton({\n      items: items,\n      cssClass: 'e-pv-scale-ratio-dest-unit'\n    }, destUnitElement);\n    this.dispUnit.select = this.dispUnitSelect.bind(this);\n    element.appendChild(destinationContainer);\n    var depthLabelText = createElement('div', {\n      id: elementID + '_depth_label',\n      className: 'e-pv-depth-text'\n    });\n    depthLabelText.textContent = this.pdfViewer.localeObj.getConstant('Depth');\n    element.appendChild(depthLabelText);\n    var depthContainer = createElement('div', {\n      id: elementID + '_depth_container'\n    });\n    element.appendChild(depthContainer); // eslint-disable-next-line max-len\n\n    var depthInputElement = this.createInputElement('input', 'e-pv-depth-input', elementID + '_depth_input', depthContainer);\n    this.depthTextBox = new NumericTextBox({\n      value: this.volumeDepth,\n      format: '##',\n      cssClass: 'e-pv-depth-input',\n      min: 1\n    }, depthInputElement); // eslint-disable-next-line max-len\n\n    var depthUnitElement = this.createInputElement('button', 'e-pv-depth-unit', elementID + '_depth_unit', depthContainer);\n    this.depthUnit = new DropDownButton({\n      items: items,\n      cssClass: 'e-pv-depth-unit'\n    }, depthUnitElement);\n    this.depthUnit.select = this.depthUnitSelect.bind(this);\n    return element;\n  };\n\n  MeasureAnnotation.prototype.convertUnitSelect = function (args) {\n    this.convertUnit.content = this.createContent(args.item.text).outerHTML;\n  };\n\n  MeasureAnnotation.prototype.dispUnitSelect = function (args) {\n    this.dispUnit.content = this.createContent(args.item.text).outerHTML;\n    this.depthUnit.content = this.createContent(args.item.text).outerHTML;\n  };\n\n  MeasureAnnotation.prototype.depthUnitSelect = function (args) {\n    this.depthUnit.content = this.createContent(args.item.text).outerHTML;\n  };\n\n  MeasureAnnotation.prototype.createContent = function (text) {\n    var divElement = createElement('div', {\n      className: 'e-pv-scale-unit-content'\n    });\n    divElement.textContent = text;\n    return divElement;\n  };\n\n  MeasureAnnotation.prototype.createInputElement = function (input, className, idString, parentElement) {\n    var container = createElement('div', {\n      id: idString + '_container',\n      className: className + '-container'\n    });\n    var textBoxInput = createElement(input, {\n      id: idString\n    });\n\n    if (input === 'input') {\n      textBoxInput.type = 'text';\n    }\n\n    container.appendChild(textBoxInput);\n    parentElement.appendChild(container);\n    return textBoxInput;\n  };\n  /**\n   * @private\n   */\n\n\n  MeasureAnnotation.prototype.onOkClicked = function () {\n    if (isBlazor()) {\n      // eslint-disable-next-line\n      var unitElement = document.querySelector('#' + this.pdfViewer.element.id + '_src_unit'); // eslint-disable-next-line\n\n      var displayElement = document.querySelector('#' + this.pdfViewer.element.id + '_dest_unit'); // eslint-disable-next-line\n\n      var sourceTextBox = document.querySelector('#' + this.pdfViewer.element.id + '_ratio_input'); // eslint-disable-next-line\n\n      var destTextBox = document.querySelector('#' + this.pdfViewer.element.id + '_dest_input'); // eslint-disable-next-line\n\n      var depthTextBox = document.querySelector('#' + this.pdfViewer.element.id + '_depth_input');\n\n      if (unitElement && displayElement && sourceTextBox && destTextBox && depthTextBox) {\n        this.unit = unitElement.value;\n        this.displayUnit = displayElement.value; // eslint-disable-next-line\n\n        this.ratio = parseInt(destTextBox.value) / parseInt(sourceTextBox.value); // eslint-disable-next-line\n\n        this.volumeDepth = parseInt(depthTextBox.value);\n      } // eslint-disable-next-line\n\n\n      this.scaleRatioString = parseInt(sourceTextBox.value) + ' ' + this.unit + ' = ' + parseInt(destTextBox.value) + ' ' + this.displayUnit;\n      this.updateMeasureValues(this.scaleRatioString, this.displayUnit, this.unit, this.volumeDepth);\n    } else {\n      this.unit = this.getContent(this.convertUnit.content);\n      this.displayUnit = this.getContent(this.dispUnit.content);\n      this.ratio = this.destTextBox.value / this.sourceTextBox.value;\n      this.volumeDepth = this.depthTextBox.value;\n      this.scaleRatioString = this.sourceTextBox.value + ' ' + this.unit + ' = ' + this.destTextBox.value + ' ' + this.displayUnit;\n      this.scaleRatioDialog.hide();\n      var originalUnit = void 0;\n      var originalDisplayUnit = void 0;\n      originalUnit = this.restoreUnit(this.convertUnit);\n      originalDisplayUnit = this.restoreUnit(this.dispUnit);\n      this.updateMeasureValues(this.scaleRatioString, originalDisplayUnit, originalUnit, this.volumeDepth);\n    }\n  };\n\n  MeasureAnnotation.prototype.restoreUnit = function (dropdownObject) {\n    var calibUnit;\n\n    for (var i = 0; i < dropdownObject.items.length; i++) {\n      var convertUnitItem = dropdownObject.items[i];\n\n      if (this.unit === convertUnitItem.text) {\n        calibUnit = convertUnitItem.label;\n      }\n    }\n\n    return calibUnit;\n  };\n  /**\n   * @param ratio\n   * @param displayUnit\n   * @param conversionUnit\n   * @param depth\n   * @private\n   */\n\n\n  MeasureAnnotation.prototype.updateMeasureValues = function (ratio, displayUnit, conversionUnit, depth) {\n    this.scaleRatioString = ratio;\n    this.displayUnit = displayUnit;\n    this.unit = conversionUnit;\n    this.volumeDepth = depth;\n\n    for (var i = 0; i < this.pdfViewerBase.pageCount; i++) {\n      var pageAnnotations = this.getAnnotations(i, null);\n\n      if (pageAnnotations) {\n        for (var j = 0; j < pageAnnotations.length; j++) {\n          pageAnnotations = this.getAnnotations(i, null);\n          var measureObject = pageAnnotations[j];\n\n          if (!measureObject.annotationSettings.isLock) {\n            measureObject.calibrate.ratio = ratio;\n            measureObject.calibrate.x[0].unit = displayUnit;\n            measureObject.calibrate.distance[0].unit = displayUnit;\n            measureObject.calibrate.area[0].unit = displayUnit;\n            measureObject.calibrate.x[0].conversionFactor = this.getFactor(conversionUnit);\n\n            if (measureObject.indent === 'PolygonVolume') {\n              measureObject.calibrate.depth = depth;\n            }\n\n            pageAnnotations[j] = measureObject;\n            this.manageAnnotations(pageAnnotations, i);\n            this.pdfViewer.annotation.updateCalibrateValues(this.getAnnotationBaseModel(measureObject.id));\n          }\n        }\n      }\n\n      this.pdfViewer.annotation.renderAnnotations(i, null, null, null, null, false);\n    }\n  };\n\n  MeasureAnnotation.prototype.getAnnotationBaseModel = function (id) {\n    var annotationBase = null;\n\n    for (var i = 0; i < this.pdfViewer.annotations.length; i++) {\n      if (id === this.pdfViewer.annotations[i].id) {\n        annotationBase = this.pdfViewer.annotations[i];\n        break;\n      }\n    }\n\n    return annotationBase;\n  };\n\n  MeasureAnnotation.prototype.getContent = function (unit) {\n    return unit.split('</div>')[0].split('\">')[1];\n  };\n  /**\n   * @param value\n   * @param currentAnnot\n   * @private\n   */\n  // eslint-disable-next-line\n\n\n  MeasureAnnotation.prototype.setConversion = function (value, currentAnnot) {\n    // eslint-disable-next-line\n    var values;\n\n    if (currentAnnot) {\n      var pageIndex = currentAnnot.pageIndex;\n\n      if (currentAnnot.id === 'diagram_helper') {\n        pageIndex = currentAnnot.pageIndex ? currentAnnot.pageIndex : this.pdfViewerBase.activeElements.activePageID;\n        currentAnnot = this.getCurrentObject(pageIndex, null, currentAnnot.annotName);\n      }\n\n      if (currentAnnot) {\n        values = this.getCurrentValues(currentAnnot.id, pageIndex);\n      } else {\n        values = this.getCurrentValues();\n      }\n    } else {\n      values = this.getCurrentValues();\n    }\n\n    var scaledValue = value * values.ratio;\n    return this.convertPointToUnits(values.factor, scaledValue, values.unit);\n  };\n\n  MeasureAnnotation.prototype.onCancelClicked = function () {\n    this.scaleRatioDialog.hide();\n  };\n  /**\n   * @param property\n   * @param pageNumber\n   * @param annotationBase\n   * @param isNewlyAdded\n   * @param property\n   * @param pageNumber\n   * @param annotationBase\n   * @param isNewlyAdded\n   * @param property\n   * @param pageNumber\n   * @param annotationBase\n   * @param isNewlyAdded\n   * @param property\n   * @param pageNumber\n   * @param annotationBase\n   * @param isNewlyAdded\n   * @private\n   */\n  // eslint-disable-next-line\n\n\n  MeasureAnnotation.prototype.modifyInCollection = function (property, pageNumber, annotationBase, isNewlyAdded) {\n    if (!isNewlyAdded) {\n      this.pdfViewerBase.updateDocumentEditedProperty(true);\n    }\n\n    var currentAnnotObject = null;\n    var pageAnnotations = this.getAnnotations(pageNumber, null);\n\n    if (pageAnnotations != null && annotationBase) {\n      for (var i = 0; i < pageAnnotations.length; i++) {\n        if (annotationBase.id === pageAnnotations[i].id) {\n          if (property === 'bounds') {\n            this.pdfViewer.annotationModule.stickyNotesAnnotationModule.updateAnnotationModifiedDate(annotationBase, true);\n\n            if (pageAnnotations[i].shapeAnnotationType === 'Line' || pageAnnotations[i].shapeAnnotationType === 'Polyline') {\n              pageAnnotations[i].vertexPoints = annotationBase.vertexPoints; // eslint-disable-next-line max-len\n\n              pageAnnotations[i].bounds = {\n                left: annotationBase.bounds.x,\n                top: annotationBase.bounds.y,\n                width: annotationBase.bounds.width,\n                height: annotationBase.bounds.height,\n                right: annotationBase.bounds.right,\n                bottom: annotationBase.bounds.bottom\n              };\n            } else if (pageAnnotations[i].shapeAnnotationType === 'Polygon') {\n              pageAnnotations[i].vertexPoints = annotationBase.vertexPoints; // eslint-disable-next-line max-len\n\n              pageAnnotations[i].bounds = {\n                left: annotationBase.bounds.x,\n                top: annotationBase.bounds.y,\n                width: annotationBase.bounds.width,\n                height: annotationBase.bounds.height,\n                right: annotationBase.bounds.right,\n                bottom: annotationBase.bounds.bottom\n              };\n            } else {\n              // eslint-disable-next-line max-len\n              pageAnnotations[i].bounds = {\n                left: annotationBase.bounds.x,\n                top: annotationBase.bounds.y,\n                width: annotationBase.bounds.width,\n                height: annotationBase.bounds.height,\n                right: annotationBase.bounds.right,\n                bottom: annotationBase.bounds.bottom\n              };\n            }\n\n            if (pageAnnotations[i].enableShapeLabel === true && annotationBase.wrapper) {\n              // eslint-disable-next-line max-len\n              pageAnnotations[i].labelBounds = this.pdfViewer.annotationModule.inputElementModule.calculateLabelBounds(annotationBase.wrapper.bounds);\n            }\n          } else if (property === 'fill') {\n            pageAnnotations[i].fillColor = annotationBase.wrapper.children[0].style.fill;\n\n            if (this.pdfViewer.enableShapeLabel) {\n              pageAnnotations[i].labelFillColor = annotationBase.wrapper.children[0].style.fill;\n            }\n          } else if (property === 'stroke') {\n            pageAnnotations[i].strokeColor = annotationBase.wrapper.children[0].style.strokeColor;\n          } else if (property === 'opacity') {\n            pageAnnotations[i].opacity = annotationBase.wrapper.children[0].style.opacity;\n          } else if (property === 'thickness') {\n            pageAnnotations[i].thickness = annotationBase.wrapper.children[0].style.strokeWidth;\n          } else if (property === 'dashArray') {\n            pageAnnotations[i].borderDashArray = annotationBase.wrapper.children[0].style.strokeDashArray;\n            pageAnnotations[i].borderStyle = annotationBase.borderStyle;\n          } else if (property === 'startArrow') {\n            // eslint-disable-next-line max-len\n            pageAnnotations[i].lineHeadStart = this.pdfViewer.annotation.getArrowTypeForCollection(annotationBase.sourceDecoraterShapes);\n          } else if (property === 'endArrow') {\n            // eslint-disable-next-line max-len\n            pageAnnotations[i].lineHeadEnd = this.pdfViewer.annotation.getArrowTypeForCollection(annotationBase.taregetDecoraterShapes);\n          } else if (property === 'leaderLength') {\n            pageAnnotations[i].leaderLength = annotationBase.leaderHeight;\n          } else if (property === 'notes') {\n            pageAnnotations[i].note = annotationBase.notes;\n\n            if (pageAnnotations[i].enableShapeLabel === true) {\n              pageAnnotations[i].labelContent = annotationBase.notes;\n            }\n          } else if (property === 'delete') {\n            currentAnnotObject = pageAnnotations.splice(i, 1)[0];\n            break;\n          } else if (property === 'labelContent') {\n            pageAnnotations[i].note = annotationBase.labelContent;\n            pageAnnotations[i].labelContent = annotationBase.labelContent;\n            break;\n          } else if (property === 'fontColor') {\n            pageAnnotations[i].fontColor = annotationBase.fontColor;\n          } else if (property === 'fontSize') {\n            pageAnnotations[i].fontSize = annotationBase.fontSize;\n          } // eslint-disable-next-line max-len\n\n\n          pageAnnotations[i].modifiedDate = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n          this.pdfViewer.annotationModule.storeAnnotationCollections(pageAnnotations[i], pageNumber);\n        }\n      }\n\n      this.manageAnnotations(pageAnnotations, pageNumber);\n    }\n\n    return currentAnnotObject;\n  };\n  /**\n   * @param pageNumber\n   * @param annotationBase\n   * @param pageNumber\n   * @param annotationBase\n   * @private\n   */\n\n\n  MeasureAnnotation.prototype.addInCollection = function (pageNumber, annotationBase) {\n    var pageAnnotations = this.getAnnotations(pageNumber, null);\n\n    if (pageAnnotations) {\n      pageAnnotations.push(annotationBase);\n    }\n\n    this.manageAnnotations(pageAnnotations, pageNumber);\n  };\n\n  MeasureAnnotation.prototype.manageAnnotations = function (pageAnnotations, pageNumber) {\n    // eslint-disable-next-line\n    var storeObject = window.sessionStorage.getItem(this.pdfViewerBase.documentId + '_annotations_shape_measure');\n\n    if (this.pdfViewerBase.isStorageExceed) {\n      storeObject = this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_shape_measure'];\n    }\n\n    if (storeObject) {\n      var annotObject = JSON.parse(storeObject);\n\n      if (!this.pdfViewerBase.isStorageExceed) {\n        window.sessionStorage.removeItem(this.pdfViewerBase.documentId + '_annotations_shape_measure');\n      }\n\n      var index = this.pdfViewer.annotationModule.getPageCollection(annotObject, pageNumber);\n\n      if (annotObject[index]) {\n        annotObject[index].annotations = pageAnnotations;\n      }\n\n      var annotationStringified = JSON.stringify(annotObject);\n\n      if (this.pdfViewerBase.isStorageExceed) {\n        this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_shape_measure'] = annotationStringified;\n      } else {\n        window.sessionStorage.setItem(this.pdfViewerBase.documentId + '_annotations_shape_measure', annotationStringified);\n      }\n    }\n  }; // eslint-disable-next-line\n\n\n  MeasureAnnotation.prototype.getAnnotations = function (pageIndex, shapeAnnotations) {\n    // eslint-disable-next-line\n    var annotationCollection; // eslint-disable-next-line\n\n    var storeObject = window.sessionStorage.getItem(this.pdfViewerBase.documentId + '_annotations_shape_measure');\n\n    if (this.pdfViewerBase.isStorageExceed) {\n      storeObject = this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_shape_measure'];\n    }\n\n    if (storeObject) {\n      var annotObject = JSON.parse(storeObject);\n      var index = this.pdfViewer.annotationModule.getPageCollection(annotObject, pageIndex);\n\n      if (annotObject[index]) {\n        annotationCollection = annotObject[index].annotations;\n      } else {\n        annotationCollection = shapeAnnotations;\n      }\n    } else {\n      annotationCollection = shapeAnnotations;\n    }\n\n    return annotationCollection;\n  };\n\n  MeasureAnnotation.prototype.getCurrentObject = function (pageNumber, id, annotName) {\n    var currentAnnotObject = null;\n    var pageAnnotations = this.getAnnotations(pageNumber, null);\n\n    if (pageAnnotations != null) {\n      for (var i = 0; i < pageAnnotations.length; i++) {\n        if (id) {\n          if (id === pageAnnotations[i].id) {\n            currentAnnotObject = pageAnnotations[i];\n            break;\n          }\n        } else if (annotName) {\n          if (annotName === pageAnnotations[i].annotName) {\n            currentAnnotObject = pageAnnotations[i];\n            break;\n          }\n        }\n      }\n    }\n\n    return currentAnnotObject;\n  }; // eslint-disable-next-line\n\n\n  MeasureAnnotation.prototype.getCurrentValues = function (id, pageNumber) {\n    var ratio;\n    var unit;\n    var factor;\n    var depth;\n\n    if (id && !isNaN(pageNumber)) {\n      var currentAnnotObject = this.getCurrentObject(pageNumber, id);\n\n      if (currentAnnotObject) {\n        ratio = this.getCurrentRatio(currentAnnotObject.calibrate.ratio);\n        unit = currentAnnotObject.calibrate.x[0].unit;\n        factor = currentAnnotObject.calibrate.x[0].conversionFactor;\n        depth = currentAnnotObject.calibrate.depth;\n      } else {\n        ratio = this.ratio;\n        unit = this.displayUnit;\n        factor = this.getFactor(this.unit);\n        depth = this.volumeDepth;\n      }\n    } else {\n      ratio = this.ratio;\n      unit = this.displayUnit;\n      factor = this.getFactor(this.unit);\n      depth = this.volumeDepth;\n    }\n\n    return {\n      ratio: ratio,\n      unit: unit,\n      factor: factor,\n      depth: depth\n    };\n  };\n\n  MeasureAnnotation.prototype.getCurrentRatio = function (ratioString) {\n    var stringArray = ratioString.split(' ');\n\n    if (stringArray[3] === '=') {\n      return parseFloat(stringArray[4]) / parseFloat(stringArray[0]);\n    } else {\n      return parseFloat(stringArray[3]) / parseFloat(stringArray[0]);\n    }\n  };\n  /**\n   * @param points\n   * @param id\n   * @param pageNumber\n   * @param points\n   * @param id\n   * @param pageNumber\n   * @param points\n   * @param id\n   * @param pageNumber\n   * @private\n   */\n\n\n  MeasureAnnotation.prototype.calculateArea = function (points, id, pageNumber) {\n    // eslint-disable-next-line\n    var values = this.getCurrentValues(id, pageNumber);\n    var area = this.getArea(points, values.factor, values.unit) * values.ratio;\n\n    if (values.unit === 'ft_in') {\n      // eslint-disable-next-line\n      var calculateValue = Math.round(area * 100) / 100;\n\n      if (calculateValue >= 12) {\n        calculateValue = (Math.round(calculateValue / 12 * 100) / 100).toString();\n        calculateValue = calculateValue.split('.');\n\n        if (calculateValue[1]) {\n          // eslint-disable-next-line\n          var inchValue = 0;\n\n          if (calculateValue[1].charAt(1)) {\n            // eslint-disable-next-line\n            inchValue = parseInt(calculateValue[1].charAt(0)) + '.' + parseInt(calculateValue[1].charAt(1));\n            inchValue = Math.round(inchValue);\n          } else {\n            inchValue = calculateValue[1];\n          }\n\n          if (!inchValue) {\n            return calculateValue[0] + ' ' + this.pdfViewer.localeObj.getConstant('sq') + ' ' + this.pdfViewer.localeObj.getConstant('ft');\n          } else {\n            return calculateValue[0] + ' ' + this.pdfViewer.localeObj.getConstant('sq') + ' ' + this.pdfViewer.localeObj.getConstant('ft') + ' ' + inchValue + ' ' + this.pdfViewer.localeObj.getConstant('in');\n          }\n        } else {\n          return calculateValue[0] + ' ' + this.pdfViewer.localeObj.getConstant('sq') + ' ' + this.pdfViewer.localeObj.getConstant('ft');\n        }\n      } else {\n        return Math.round(area * 100) / 100 + ' ' + this.pdfViewer.localeObj.getConstant('sq') + ' ' + this.pdfViewer.localeObj.getConstant('in');\n      }\n    }\n\n    if (values.unit === 'm') {\n      return area * 100 / 100 + ' ' + this.pdfViewer.localeObj.getConstant('sq') + ' ' + this.pdfViewer.localeObj.getConstant(values.unit);\n    }\n\n    return Math.round(area * 100) / 100 + ' ' + this.pdfViewer.localeObj.getConstant('sq') + ' ' + this.pdfViewer.localeObj.getConstant(values.unit);\n  };\n\n  MeasureAnnotation.prototype.getArea = function (points, factor, unit) {\n    var area = 0;\n    var j = points.length - 1;\n\n    for (var i = 0; i < points.length; i++) {\n      // eslint-disable-next-line max-len\n      area += (points[j].x * this.pixelToPointFactor * factor + points[i].x * this.pixelToPointFactor * factor) * (points[j].y * this.pixelToPointFactor * factor - points[i].y * this.pixelToPointFactor * factor);\n      j = i;\n    }\n\n    if (unit === 'ft_in') {\n      return Math.abs(area * 2.0);\n    } else {\n      return Math.abs(area / 2.0);\n    }\n  };\n  /**\n   * @param points\n   * @param id\n   * @param pageNumber\n   * @param points\n   * @param id\n   * @param pageNumber\n   * @param points\n   * @param id\n   * @param pageNumber\n   * @private\n   */\n\n\n  MeasureAnnotation.prototype.calculateVolume = function (points, id, pageNumber) {\n    // eslint-disable-next-line\n    var values = this.getCurrentValues(id, pageNumber);\n    var depth = values.depth ? values.depth : this.volumeDepth;\n    var area = this.getArea(points, values.factor, values.unit);\n    var volume = area * (depth * this.convertUnitToPoint(values.unit) * values.factor) * values.ratio;\n\n    if (values.unit === 'ft_in') {\n      // eslint-disable-next-line\n      var calculateValue = Math.round(volume * 100) / 100;\n\n      if (calculateValue >= 12) {\n        calculateValue = (Math.round(calculateValue / 12 * 100) / 100).toString();\n        calculateValue = calculateValue.split('.');\n\n        if (calculateValue[1]) {\n          // eslint-disable-next-line\n          var inchValue = 0;\n\n          if (calculateValue[1].charAt(1)) {\n            // eslint-disable-next-line\n            inchValue = parseInt(calculateValue[1].charAt(0)) + '.' + parseInt(calculateValue[1].charAt(1));\n            inchValue = Math.round(inchValue);\n          } else {\n            inchValue = calculateValue[1];\n          }\n\n          if (!inchValue) {\n            return calculateValue[0] + ' ' + this.pdfViewer.localeObj.getConstant('cu') + ' ' + this.pdfViewer.localeObj.getConstant('ft');\n          } else {\n            return calculateValue[0] + ' ' + this.pdfViewer.localeObj.getConstant('cu') + ' ' + this.pdfViewer.localeObj.getConstant('ft') + ' ' + inchValue + ' ' + this.pdfViewer.localeObj.getConstant('in');\n          }\n        } else {\n          return calculateValue[0] + ' ' + this.pdfViewer.localeObj.getConstant('cu') + ' ' + this.pdfViewer.localeObj.getConstant('ft');\n        }\n      } else {\n        return Math.round(volume * 100) / 100 + ' ' + this.pdfViewer.localeObj.getConstant('cu') + ' ' + this.pdfViewer.localeObj.getConstant('in');\n      }\n    }\n\n    return Math.round(volume * 100) / 100 + ' ' + this.pdfViewer.localeObj.getConstant('cu') + ' ' + this.pdfViewer.localeObj.getConstant(values.unit);\n  };\n  /**\n   * @param pdfAnnotationBase\n   * @private\n   */\n\n\n  MeasureAnnotation.prototype.calculatePerimeter = function (pdfAnnotationBase) {\n    var perimeter = Point.getLengthFromListOfPoints(pdfAnnotationBase.vertexPoints);\n    return this.setConversion(perimeter * this.pixelToPointFactor, pdfAnnotationBase);\n  };\n\n  MeasureAnnotation.prototype.getFactor = function (unit) {\n    var factor;\n\n    switch (unit) {\n      case 'in':\n        factor = 1 / 72;\n        break;\n\n      case 'cm':\n        factor = 1 / 28.346;\n        break;\n\n      case 'mm':\n        factor = 1 / 2.835;\n        break;\n\n      case 'pt':\n        factor = 1;\n        break;\n\n      case 'p':\n        factor = 1 / 12;\n        break;\n\n      case 'ft':\n        factor = 1 / 864;\n        break;\n\n      case 'ft_in':\n        factor = 1 / 72;\n        break;\n\n      case 'm':\n        factor = 1 / 2834.64567;\n        break;\n    }\n\n    return factor;\n  };\n\n  MeasureAnnotation.prototype.convertPointToUnits = function (factor, value, unit) {\n    var convertedValue;\n\n    if (unit === 'ft_in') {\n      // eslint-disable-next-line\n      var calculateValue = Math.round(value * factor * 100) / 100;\n\n      if (calculateValue >= 12) {\n        calculateValue = (Math.round(calculateValue / 12 * 100) / 100).toString();\n        calculateValue = calculateValue.split('.');\n\n        if (calculateValue[1]) {\n          // eslint-disable-next-line\n          var inchValue = 0;\n\n          if (calculateValue[1].charAt(1)) {\n            // eslint-disable-next-line\n            inchValue = parseInt(calculateValue[1].charAt(0)) + '.' + parseInt(calculateValue[1].charAt(1));\n            inchValue = Math.round(inchValue);\n          } else {\n            inchValue = calculateValue[1];\n          }\n\n          if (!inchValue) {\n            convertedValue = calculateValue[0] + ' ' + this.pdfViewer.localeObj.getConstant('ft');\n          } else {\n            convertedValue = calculateValue[0] + ' ' + this.pdfViewer.localeObj.getConstant('ft') + ' ' + inchValue + ' ' + this.pdfViewer.localeObj.getConstant('in');\n          }\n        } else {\n          convertedValue = calculateValue[0] + ' ' + this.pdfViewer.localeObj.getConstant('ft');\n        }\n      } else {\n        convertedValue = Math.round(value * factor * 100) / 100 + ' ' + this.pdfViewer.localeObj.getConstant('in');\n      }\n    } else {\n      convertedValue = Math.round(value * factor * 100) / 100 + ' ' + this.pdfViewer.localeObj.getConstant(unit);\n    }\n\n    return convertedValue;\n  };\n\n  MeasureAnnotation.prototype.convertUnitToPoint = function (unit) {\n    var factor;\n\n    switch (unit) {\n      case 'in':\n        factor = 72;\n        break;\n\n      case 'cm':\n        factor = 28.346;\n        break;\n\n      case 'mm':\n        factor = 2.835;\n        break;\n\n      case 'pt':\n        factor = 1;\n        break;\n\n      case 'p':\n        factor = 12;\n        break;\n\n      case 'ft':\n        factor = 864;\n        break;\n\n      case 'ft_in':\n        factor = 72;\n        break;\n\n      case 'm':\n        factor = 2834.64567;\n        break;\n    }\n\n    return factor;\n  }; // eslint-disable-next-line\n\n\n  MeasureAnnotation.prototype.getStringifiedMeasure = function (measure) {\n    if (!isNullOrUndefined(measure)) {\n      measure.angle = JSON.stringify(measure.angle);\n      measure.area = JSON.stringify(measure.area);\n      measure.distance = JSON.stringify(measure.distance);\n      measure.volume = JSON.stringify(measure.volume);\n    }\n\n    return JSON.stringify(measure);\n  }; // eslint-disable-next-line\n\n\n  MeasureAnnotation.prototype.getRgbCode = function (colorString) {\n    if (!colorString.match(/#([a-z0-9]+)/gi) && !colorString.match(/^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/)) {\n      colorString = this.pdfViewer.annotationModule.nameToHash(colorString);\n    }\n\n    var stringArray = colorString.split(',');\n\n    if (isNullOrUndefined(stringArray[1])) {\n      colorString = this.pdfViewer.annotationModule.getValue(colorString, 'rgba');\n      stringArray = colorString.split(',');\n    } // eslint-disable-next-line radix\n\n\n    var r = parseInt(stringArray[0].split('(')[1]); // eslint-disable-next-line radix\n\n    var g = parseInt(stringArray[1]); // eslint-disable-next-line radix\n\n    var b = parseInt(stringArray[2]); // eslint-disable-next-line radix\n\n    var a = parseInt(stringArray[3]);\n    return {\n      r: r,\n      g: g,\n      b: b,\n      a: a\n    };\n  };\n  /**\n   * @param annotation\n   * @param pageNumber\n   * @param annotation\n   * @param pageNumber\n   * @private\n   */\n  // eslint-disable-next-line\n\n\n  MeasureAnnotation.prototype.saveImportedMeasureAnnotations = function (annotation, pageNumber) {\n    var annotationObject = null;\n    var vertexPoints = null;\n\n    if (annotation.VertexPoints) {\n      vertexPoints = [];\n\n      for (var j = 0; j < annotation.VertexPoints.length; j++) {\n        var point = {\n          x: annotation.VertexPoints[j].X,\n          y: annotation.VertexPoints[j].Y\n        };\n        vertexPoints.push(point);\n      }\n    }\n\n    var measureObject = {\n      // eslint-disable-next-line max-len\n      ratio: annotation.Calibrate.Ratio,\n      x: this.getNumberFormatArray(annotation.Calibrate.X),\n      distance: this.getNumberFormatArray(annotation.Calibrate.Distance),\n      area: this.getNumberFormatArray(annotation.Calibrate.Area),\n      angle: this.getNumberFormatArray(annotation.Calibrate.Angle),\n      volume: this.getNumberFormatArray(annotation.Calibrate.Volume),\n      targetUnitConversion: annotation.Calibrate.TargetUnitConversion\n    };\n\n    if (annotation.Calibrate.Depth) {\n      measureObject.depth = annotation.Calibrate.Depth;\n    }\n\n    if (annotation.Bounds && annotation.EnableShapeLabel === true) {\n      // eslint-disable-next-line max-len\n      annotation.LabelBounds = this.pdfViewer.annotationModule.inputElementModule.calculateLabelBoundsFromLoadedDocument(annotation.Bounds);\n      annotation.LabelBorderColor = annotation.LabelBorderColor ? annotation.LabelBorderColor : annotation.StrokeColor;\n      annotation.FontColor = annotation.FontColor ? annotation.FontColor : annotation.StrokeColor;\n      annotation.LabelFillColor = annotation.LabelFillColor ? annotation.LabelFillColor : annotation.FillColor;\n      annotation.FontSize = annotation.FontSize ? annotation.FontSize : 16;\n      annotation.LabelSettings = annotation.LabelSettings ? annotation.LabelSettings : this.pdfViewer.shapeLabelSettings;\n    } // eslint-disable-next-line max-len\n\n\n    annotation.AnnotationSettings = annotation.AnnotationSettings ? annotation.AnnotationSettings : this.pdfViewer.annotationModule.updateAnnotationSettings(annotation);\n    annotation.Author = this.pdfViewer.annotationModule.updateAnnotationAuthor('measure', annotation.Subject);\n    annotationObject = {\n      // eslint-disable-next-line max-len\n      id: 'measure',\n      shapeAnnotationType: annotation.ShapeAnnotationType,\n      author: annotation.Author,\n      modifiedDate: annotation.ModifiedDate,\n      subject: annotation.Subject,\n      note: annotation.Note,\n      strokeColor: annotation.StrokeColor,\n      fillColor: annotation.FillColor,\n      opacity: annotation.Opacity,\n      thickness: annotation.Thickness,\n      rectangleDifference: annotation.RectangleDifference,\n      // eslint-disable-next-line max-len\n      borderStyle: annotation.BorderStyle,\n      borderDashArray: annotation.BorderDashArray,\n      rotateAngle: annotation.RotateAngle,\n      isCloudShape: annotation.IsCloudShape,\n      cloudIntensity: annotation.CloudIntensity,\n      vertexPoints: vertexPoints,\n      lineHeadStart: annotation.LineHeadStart,\n      lineHeadEnd: annotation.LineHeadEnd,\n      isLocked: annotation.IsLocked,\n      // eslint-disable-next-line max-len\n      bounds: {\n        left: annotation.Bounds.X,\n        top: annotation.Bounds.Y,\n        width: annotation.Bounds.Width,\n        height: annotation.Bounds.Height,\n        right: annotation.Bounds.Right,\n        bottom: annotation.Bounds.Bottom\n      },\n      caption: annotation.Caption,\n      captionPosition: annotation.CaptionPosition,\n      calibrate: measureObject,\n      leaderLength: annotation.LeaderLength,\n      leaderLineExtension: annotation.LeaderLineExtension,\n      // eslint-disable-next-line max-len\n      leaderLineOffset: annotation.LeaderLineOffset,\n      indent: annotation.Indent,\n      annotName: annotation.AnnotName,\n      comments: this.pdfViewer.annotationModule.getAnnotationComments(annotation.Comments, annotation, annotation.Author),\n      review: {\n        state: annotation.State,\n        stateModel: annotation.StateModel,\n        modifiedDate: annotation.ModifiedDate,\n        author: annotation.Author\n      },\n      labelContent: annotation.LabelContent,\n      enableShapeLabel: annotation.EnableShapeLabel,\n      labelFillColor: annotation.LabelFillColor,\n      labelBorderColor: annotation.LabelBorderColor,\n      fontColor: annotation.FontColor,\n      fontSize: annotation.FontSize,\n      // eslint-disable-next-line max-len\n      labelBounds: annotation.LabelBounds,\n      annotationSelectorSettings: this.getSettings(annotation),\n      labelSettings: annotation.LabelSettings,\n      annotationSettings: annotation.AnnotationSettings,\n      customData: this.pdfViewer.annotation.getCustomData(annotation),\n      isPrint: annotation.IsPrint,\n      isCommentLock: annotation.IsCommentLock,\n      isAnnotationRotated: false\n    };\n    this.pdfViewer.annotationModule.storeAnnotations(pageNumber, annotationObject, '_annotations_shape_measure');\n  };\n  /**\n   * @param annotation\n   * @param pageNumber\n   * @private\n   */\n  // eslint-disable-next-line\n\n\n  MeasureAnnotation.prototype.updateMeasureAnnotationCollections = function (annotation, pageNumber) {\n    // eslint-disable-next-line\n    var annotationObject = null;\n    var vertexPoints = null;\n\n    if (annotation.VertexPoints) {\n      vertexPoints = [];\n\n      for (var j = 0; j < annotation.VertexPoints.length; j++) {\n        var point = {\n          x: annotation.VertexPoints[j].X,\n          y: annotation.VertexPoints[j].Y\n        };\n        vertexPoints.push(point);\n      }\n    }\n\n    var measureObject = {\n      // eslint-disable-next-line max-len\n      ratio: annotation.Calibrate.Ratio,\n      x: this.getNumberFormatArray(annotation.Calibrate.X),\n      distance: this.getNumberFormatArray(annotation.Calibrate.Distance),\n      area: this.getNumberFormatArray(annotation.Calibrate.Area),\n      angle: this.getNumberFormatArray(annotation.Calibrate.Angle),\n      volume: this.getNumberFormatArray(annotation.Calibrate.Volume),\n      targetUnitConversion: annotation.Calibrate.TargetUnitConversion\n    };\n\n    if (annotation.Calibrate.Depth) {\n      measureObject.depth = annotation.Calibrate.Depth;\n    }\n\n    if (annotation.Bounds && annotation.EnableShapeLabel === true) {\n      // eslint-disable-next-line max-len\n      annotation.LabelBounds = this.pdfViewer.annotationModule.inputElementModule.calculateLabelBoundsFromLoadedDocument(annotation.Bounds);\n      annotation.LabelBorderColor = annotation.LabelBorderColor ? annotation.LabelBorderColor : annotation.StrokeColor;\n      annotation.FontColor = annotation.FontColor ? annotation.FontColor : annotation.StrokeColor;\n      annotation.LabelFillColor = annotation.LabelFillColor ? annotation.LabelFillColor : annotation.FillColor;\n      annotation.FontSize = annotation.FontSize ? annotation.FontSize : 16;\n      var settings = this.pdfViewer.shapeLabelSettings;\n      var labelSettings = {\n        borderColor: annotation.StrokeColor,\n        fillColor: annotation.FillColor,\n        fontColor: annotation.FontColor,\n        fontSize: annotation.FontSize,\n        labelContent: annotation.LabelContent,\n        labelHeight: settings.labelHeight,\n        labelWidth: settings.labelWidth,\n        opacity: annotation.Opacity\n      };\n      annotation.LabelSettings = annotation.LabelSettings ? annotation.LabelSettings : labelSettings;\n    } // eslint-disable-next-line max-len\n\n\n    annotation.AnnotationSelectorSettings = annotation.AnnotationSelectorSettings ? annotation.AnnotationSelectorSettings : this.pdfViewer.annotationSelectorSettings; // eslint-disable-next-line max-len\n\n    annotation.AnnotationSettings = annotation.AnnotationSettings ? annotation.AnnotationSettings : this.pdfViewer.annotationModule.updateAnnotationSettings(annotation);\n\n    if (annotation.IsLocked) {\n      annotation.AnnotationSettings.isLock = annotation.IsLocked;\n    }\n\n    annotationObject = {\n      // eslint-disable-next-line max-len\n      id: 'measure',\n      shapeAnnotationType: annotation.ShapeAnnotationType,\n      author: annotation.Author,\n      modifiedDate: annotation.ModifiedDate,\n      subject: annotation.Subject,\n      note: annotation.Note,\n      strokeColor: annotation.StrokeColor,\n      fillColor: annotation.FillColor,\n      opacity: annotation.Opacity,\n      thickness: annotation.Thickness,\n      rectangleDifference: annotation.RectangleDifference,\n      // eslint-disable-next-line max-len\n      borderStyle: annotation.BorderStyle,\n      borderDashArray: annotation.BorderDashArray,\n      rotateAngle: annotation.RotateAngle,\n      isCloudShape: annotation.IsCloudShape,\n      cloudIntensity: annotation.CloudIntensity,\n      vertexPoints: vertexPoints,\n      lineHeadStart: annotation.LineHeadStart,\n      lineHeadEnd: annotation.LineHeadEnd,\n      isLocked: annotation.IsLocked,\n      // eslint-disable-next-line max-len\n      bounds: {\n        left: annotation.Bounds.X,\n        top: annotation.Bounds.Y,\n        width: annotation.Bounds.Width,\n        height: annotation.Bounds.Height,\n        right: annotation.Bounds.Right,\n        bottom: annotation.Bounds.Bottom\n      },\n      caption: annotation.Caption,\n      captionPosition: annotation.CaptionPosition,\n      calibrate: measureObject,\n      leaderLength: annotation.LeaderLength,\n      leaderLineExtension: annotation.LeaderLineExtension,\n      // eslint-disable-next-line max-len\n      leaderLineOffset: annotation.LeaderLineOffset,\n      indent: annotation.Indent,\n      annotationId: annotation.AnnotName,\n      comments: this.pdfViewer.annotationModule.getAnnotationComments(annotation.Comments, annotation, annotation.Author),\n      review: {\n        state: annotation.State,\n        stateModel: annotation.StateModel,\n        modifiedDate: annotation.ModifiedDate,\n        author: annotation.Author\n      },\n      labelContent: annotation.LabelContent,\n      enableShapeLabel: annotation.EnableShapeLabel,\n      labelFillColor: annotation.LabelFillColor,\n      labelBorderColor: annotation.LabelBorderColor,\n      fontColor: annotation.FontColor,\n      fontSize: annotation.FontSize,\n      // eslint-disable-next-line max-len\n      labelBounds: annotation.LabelBounds,\n      pageNumber: pageNumber,\n      annotationSelectorSettings: annotation.AnnotationSelectorSettings,\n      labelSettings: annotation.labelSettings,\n      annotationSettings: annotation.AnnotationSettings,\n      customData: this.pdfViewer.annotation.getCustomData(annotation),\n      isPrint: annotation.IsPrint\n    };\n    return annotationObject;\n  };\n  /**\n  * This method used to add annotations with using program.\n  *\n  * @param annotationType - It describes the annotation type\n  * @param annotationObject - It describes type of annotation object\n  * @param offset - It describes about the annotation bounds or location\n  * @returns Object\n  * @private\n  */\n\n\n  MeasureAnnotation.prototype.updateAddAnnotationDetails = function (annotationType, annotationObject, offset) {\n    //Creating new object if annotationObject is null\n    if (!annotationObject) {\n      annotationObject = {\n        offset: {\n          x: 10,\n          y: 10\n        },\n        pageNumber: 0,\n        width: undefined,\n        height: undefined\n      };\n      offset = annotationObject.offset;\n    } else if (!annotationObject.offset) offset = {\n      x: 10,\n      y: 10\n    };else offset = annotationObject.offset; //Initialize the annotation settings\n\n\n    var annotationSelectorSettings = null;\n    var allowedInteractions = null;\n    var annotationSettings = null;\n    var measureAnnotationType = '';\n    var shapeAnnotationType = '';\n    var subject = '';\n    var isArrow = false;\n    var vertexPoints = []; //Creating the CurrentDate and Annotation name\n\n    var currentDateString = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n    var annotationName = this.pdfViewer.annotation.createGUID();\n\n    if (annotationType == 'Distance') {\n      //Creating annotation settings\n      annotationSelectorSettings = this.pdfViewer.lineSettings.annotationSelectorSettings ? this.pdfViewer.lineSettings.annotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n      annotationSettings = this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.lineSettings);\n      allowedInteractions = this.pdfViewer.lineSettings.allowedInteractions ? this.pdfViewer.lineSettings.allowedInteractions : this.pdfViewer.annotationSettings.allowedInteractions;\n      measureAnnotationType = 'LineDimension';\n      shapeAnnotationType = 'Line';\n      subject = 'Distance calculation';\n      isArrow = true;\n      if (annotationObject.vertexPoints) vertexPoints = annotationObject.vertexPoints;else vertexPoints = [{\n        x: offset.x,\n        y: offset.y\n      }, {\n        x: offset.x + 100,\n        y: offset.y\n      }];\n      annotationObject.width = annotationObject.width ? annotationObject.width : 1;\n      annotationObject.height = annotationObject.height ? annotationObject.height : 1;\n    } else if (annotationType == 'Perimeter') {\n      //Creating annotation settings\n      annotationSelectorSettings = this.pdfViewer.arrowSettings.annotationSelectorSettings ? this.pdfViewer.arrowSettings.annotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n      annotationSettings = this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.arrowSettings);\n      allowedInteractions = this.pdfViewer.arrowSettings.allowedInteractions ? this.pdfViewer.arrowSettings.allowedInteractions : this.pdfViewer.annotationSettings.allowedInteractions;\n      measureAnnotationType = 'PolyLineDimension';\n      shapeAnnotationType = 'Polyline';\n      subject = 'Perimeter calculation';\n      isArrow = true;\n      if (annotationObject.vertexPoints) vertexPoints = annotationObject.vertexPoints;else vertexPoints = [{\n        x: offset.x,\n        y: offset.y\n      }, {\n        x: offset.x + 85,\n        y: offset.y\n      }, {\n        x: offset.x + 86,\n        y: offset.y + 62\n      }];\n      annotationObject.width = annotationObject.width ? annotationObject.width : 1;\n      annotationObject.height = annotationObject.height ? annotationObject.height : 1;\n    } else if (annotationType == 'Area') {\n      //Creating annotation settings\n      annotationSelectorSettings = this.pdfViewer.rectangleSettings.annotationSelectorSettings ? this.pdfViewer.rectangleSettings.annotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n      annotationSettings = this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.rectangleSettings);\n      allowedInteractions = this.pdfViewer.rectangleSettings.allowedInteractions ? this.pdfViewer.rectangleSettings.allowedInteractions : this.pdfViewer.annotationSettings.allowedInteractions;\n      measureAnnotationType = 'PolygonDimension';\n      shapeAnnotationType = 'Polygon';\n      subject = 'Area calculation';\n      if (annotationObject.vertexPoints) vertexPoints = annotationObject.vertexPoints;else vertexPoints = [{\n        x: offset.x,\n        y: offset.y\n      }, {\n        x: offset.x + 88,\n        y: offset.y - 1\n      }, {\n        x: offset.x + 89,\n        y: offset.y + 53\n      }, {\n        x: offset.x,\n        y: offset.y\n      }];\n      annotationObject.width = annotationObject.width ? annotationObject.width : 1;\n      annotationObject.height = annotationObject.height ? annotationObject.height : 1;\n    } else if (annotationType == 'Radius') {\n      //Creating annotation settings\n      annotationSelectorSettings = this.pdfViewer.circleSettings.annotationSelectorSettings ? this.pdfViewer.circleSettings.annotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n      annotationSettings = this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.circleSettings);\n      allowedInteractions = this.pdfViewer.circleSettings.allowedInteractions ? this.pdfViewer.circleSettings.allowedInteractions : this.pdfViewer.annotationSettings.allowedInteractions;\n      measureAnnotationType = 'PolygonRadius';\n      shapeAnnotationType = 'Circle';\n      subject = 'Radius calculation';\n      annotationObject.width = annotationObject.width ? annotationObject.width : 100;\n      annotationObject.height = annotationObject.height ? annotationObject.height : 100;\n      vertexPoints = null;\n    } else if (annotationType == 'Volume') {\n      //Creating annotation settings\n      annotationSelectorSettings = this.pdfViewer.polygonSettings.annotationSelectorSettings ? this.pdfViewer.polygonSettings.annotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n      annotationSettings = this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.polygonSettings);\n      allowedInteractions = this.pdfViewer.polygonSettings.allowedInteractions ? this.pdfViewer.polygonSettings.allowedInteractions : this.pdfViewer.annotationSettings.allowedInteractions;\n      measureAnnotationType = 'PolygonVolume';\n      shapeAnnotationType = 'Polygon';\n      subject = 'Volume calculation';\n      if (annotationObject.vertexPoints) vertexPoints = annotationObject.vertexPoints;else vertexPoints = [{\n        x: offset.x,\n        y: offset.y\n      }, {\n        x: offset.x,\n        y: offset.y + 109\n      }, {\n        x: offset.x + 120,\n        y: offset.y + 109\n      }, {\n        x: offset.x + 120,\n        y: offset.y - 1\n      }, {\n        x: offset.x,\n        y: offset.y\n      }];\n      annotationObject.width = annotationObject.width ? annotationObject.width : 1;\n      annotationObject.height = annotationObject.height ? annotationObject.height : 1;\n    }\n\n    annotationSettings.isLock = annotationObject.isLock ? annotationObject.isLock : false;\n    annotationSettings.minHeight = annotationObject.minHeight ? annotationObject.minHeight : 0;\n    annotationSettings.minWidth = annotationObject.minWidth ? annotationObject.minWidth : 0;\n    annotationSettings.maxWidth = annotationObject.maxWidth ? annotationObject.maxWidth : 0;\n    annotationSettings.maxHeight = annotationObject.maxHeight ? annotationObject.maxHeight : 0; //Calculating area for all the measurements\n\n    var values = {\n      depth: 96,\n      factor: 0.013888888888888888,\n      ratio: 1,\n      unit: 'in'\n    };\n    var notes = '';\n\n    if (vertexPoints || annotationType == 'Radius' || annotationType == 'Volume') {\n      if (annotationType == 'Distance' || annotationType == 'Perimeter' || annotationType == 'Radius') {\n        var length_1 = 0;\n\n        if (annotationType == 'Radius') {\n          length_1 = annotationObject.width / 2 * this.pixelToPointFactor;\n        } else {\n          for (var i_1 = 0; i_1 < vertexPoints.length - 1; i_1++) {\n            length_1 += Math.sqrt(Math.pow(vertexPoints[i_1].x - vertexPoints[i_1 + 1].x, 2) + Math.pow(vertexPoints[i_1].y - vertexPoints[i_1 + 1].y, 2));\n          }\n\n          length_1 = length_1 * this.pixelToPointFactor;\n        }\n\n        var scaledValue = length_1 * values.ratio;\n        notes = this.convertPointToUnits(values.factor, scaledValue, values.unit);\n      } else if (annotationType == 'Area' || annotationType == 'Volume') {\n        var area = 0;\n        var j = vertexPoints.length - 1;\n\n        for (var i = 0; i < vertexPoints.length; i++) {\n          area += (vertexPoints[j].x * this.pixelToPointFactor * values.factor + vertexPoints[i].x * this.pixelToPointFactor * values.factor) * (vertexPoints[j].y * this.pixelToPointFactor * values.factor - vertexPoints[i].y * this.pixelToPointFactor * values.factor);\n          j = i;\n        }\n\n        area = Math.abs(area / 2.0);\n\n        if (annotationType == 'Volume') {\n          area = area * (values.depth * this.convertUnitToPoint(values.unit) * values.factor) * values.ratio;\n          notes = Math.round(area * 100) / 100 + this.pdfViewer.localeObj.getConstant('cu') + ' ' + this.pdfViewer.localeObj.getConstant(values.unit);\n        } else notes = Math.round(area * 100) / 100 + this.pdfViewer.localeObj.getConstant('sq') + ' ' + this.pdfViewer.localeObj.getConstant(values.unit);\n      }\n    } //Converting points model into vertex property\n\n\n    if (vertexPoints) vertexPoints = this.pdfViewer.annotation.getVertexPointsXY(vertexPoints); //Creating Annotation objects with it's proper properties\n\n    var measureShapeAnnotation = [];\n    var shape = {\n      AllowedInteractions: annotationObject.allowedInteractions ? annotationObject.allowedInteractions : allowedInteractions,\n      AnnotName: annotationName,\n      AnnotType: 'shape_measure',\n      AnnotationSelectorSettings: annotationObject.annotationSelectorSettings ? annotationObject.annotationSelectorSettings : annotationSelectorSettings,\n      AnnotationSettings: annotationSettings,\n      Author: annotationObject.author ? annotationObject.author : 'Guest',\n      BorderDashArray: annotationObject.borderDashArray ? annotationObject.borderDashArray : 0,\n      BorderStyle: 'Solid',\n      Bounds: {\n        X: offset.x,\n        Y: offset.y,\n        Width: annotationObject.width,\n        Height: annotationObject.height,\n        Left: offset.x,\n        Top: offset.y,\n        Location: {\n          X: offset.x,\n          Y: offset.y\n        },\n        Size: {\n          Height: annotationObject.height,\n          IsEmpty: false,\n          Width: annotationObject.width\n        }\n      },\n      Calibrate: {\n        Area: [{\n          ConversionFactor: 1,\n          Denominator: 100,\n          FormatDenominator: false,\n          FractionalType: 'D',\n          Unit: 'sq in'\n        }],\n        Depth: annotationObject.depth ? annotationObject.depth : 0,\n        Distance: [{\n          ConversionFactor: 1,\n          Denominator: 100,\n          FormatDenominator: false,\n          FractionalType: 'D',\n          Unit: 'in'\n        }],\n        Ratio: '1 in = 1 in',\n        TargetUnitConversion: 0,\n        Volume: null,\n        X: [{\n          ConversionFactor: 0.013888889,\n          Denominator: 100,\n          FormatDenominator: false,\n          FractionalType: 'D',\n          Unit: 'in'\n        }]\n      },\n      Caption: true,\n      CaptionPosition: 'Top',\n      CloudIntensity: 0,\n      Comments: null,\n      CustomData: annotationObject.customData ? annotationObject.customData : null,\n      CreatedDate: currentDateString,\n      EnableShapeLabel: false,\n      ExistingCustomData: null,\n      FillColor: annotationObject.fillColor ? annotationObject.fillColor : '#ffffff00',\n      FontColor: null,\n      FontSize: 0,\n      Indent: measureAnnotationType,\n      IsCloudShape: false,\n      IsCommentLock: false,\n      IsLocked: annotationObject.isLock ? annotationObject.isLock : false,\n      IsPrint: annotationObject.isPrint ? annotationObject.isPrint : true,\n      LabelBorderColor: null,\n      LabelBounds: {\n        X: 0,\n        Y: 0,\n        Width: 0,\n        Height: 0\n      },\n      LabelContent: null,\n      LabelFillColor: null,\n      LabelSettings: null,\n      LeaderLength: 0,\n      LeaderLineExtension: 0,\n      LeaderLineOffset: 0,\n      LineHeadEnd: annotationObject.lineHeadStartStyle ? annotationObject.lineHeadStartStyle : isArrow ? 'ClosedArrow' : 'None',\n      LineHeadStart: annotationObject.lineHeadEndStyle ? annotationObject.lineHeadEndStyle : isArrow ? 'ClosedArrow' : 'None',\n      ModifiedDate: '',\n      Note: notes,\n      Opacity: annotationObject.opacity ? annotationObject.opacity : 1,\n      RectangleDifference: null,\n      RotateAngle: 'RotateAngle0',\n      ShapeAnnotationType: shapeAnnotationType,\n      State: '',\n      StateModel: '',\n      StrokeColor: annotationObject.strokeColor ? annotationObject.strokeColor : '#ff0000',\n      Subject: subject,\n      Thickness: annotationObject.thickness ? annotationObject.thickness : 1,\n      VertexPoints: vertexPoints\n    }; //Adding the annotation object to an array and return it\n\n    measureShapeAnnotation[0] = shape;\n    return {\n      measureShapeAnnotation: measureShapeAnnotation\n    };\n  };\n\n  return MeasureAnnotation;\n}();\n\nexport { MeasureAnnotation };","map":{"version":3,"names":["NumericTextBox","createElement","Browser","isNullOrUndefined","isBlazor","Dialog","DropDownButton","Point","MeasureAnnotation","pdfviewer","pdfViewerBase","measureShapeCount","isAddAnnotationProgramatically","pdfViewer","Object","defineProperty","prototype","get","enumerable","configurable","renderMeasureShapeAnnotations","shapeAnnotations","pageNumber","isImportAction","length","measureAnnots","annotation","getStoredAnnotations","i","annotationObject","annotationAddMode","annotationModule","findAnnotationMode","AnnotType","isAnnotationRotated","ShapeAnnotationType","isJsonImported","Bounds","importJsonForRotatedDocuments","Rotate","AnnotationRotation","isPageRotated","vertexPoints","VertexPoints","calculateVertexPoints","j","x","X","y","Y","point","push","EnableShapeLabel","LabelBounds","inputElementModule","calculateLabelBoundsFromLoadedDocument","LabelBorderColor","StrokeColor","FontColor","LabelFillColor","FillColor","FontSize","LabelSettings","shapeLabelSettings","AnnotationSettings","updateAnnotationSettings","allowedInteractions","AllowedInteractions","updateAnnotationAllowedInteractions","isPrint","measureObject","ratio","Calibrate","Ratio","getNumberFormatArray","distance","Distance","area","Area","angle","Angle","volume","Volume","targetUnitConversion","TargetUnitConversion","Depth","depth","left","top_1","width","Width","height","Height","id","shapeAnnotationType","author","Author","modifiedDate","ModifiedDate","subject","Subject","note","Note","strokeColor","fillColor","opacity","Opacity","thickness","Thickness","rectangleDifference","RectangleDifference","borderStyle","BorderStyle","borderDashArray","BorderDashArray","rotateAngle","RotateAngle","isCloudShape","IsCloudShape","cloudIntensity","CloudIntensity","lineHeadStart","LineHeadStart","lineHeadEnd","LineHeadEnd","isLocked","IsLocked","bounds","top","right","Right","bottom","Bottom","caption","Caption","captionPosition","CaptionPosition","calibrate","leaderLength","LeaderLength","leaderLineExtension","LeaderLineExtension","leaderLineOffset","LeaderLineOffset","indent","Indent","annotName","AnnotName","comments","getAnnotationComments","Comments","review","state","State","stateModel","StateModel","labelContent","LabelContent","enableShapeLabel","labelFillColor","fontColor","labelBorderColor","fontSize","labelBounds","annotationSelectorSettings","getSettings","labelSettings","annotationSettings","customData","getCustomData","isCommentLock","IsCommentLock","annot","vPoints","AnnotationSelectorSettings","getShapeType","notes","toString","parseFloat","split","taregetDecoraterShapes","getArrowType","sourceDecoraterShapes","leaderHeight","pageIndex","measureType","getMeasureType","storeAnnotations","settings","fireAnnotationAdd","add","createAnnotationObject","triggerAnnotationAdd","selector","getSelector","setAnnotationType","type","updateMeasureproperties","disableTextSelectionMode","currentAnnotationMode","modifiedDateDist","stickyNotesAnnotationModule","getDateAndTime","distanceSettings","drawingObject","distanceStartHead","distanceEndHead","distanceFillColor","distanceStrokeColor","distanceOpacity","distanceThickness","distanceDashArray","tool","modifiedDatePeri","perimeterSettings","perimeterFillColor","perimeterStrokeColor","perimeterOpacity","perimeterThickness","perimeterStartHead","perimeterEndHead","perimeterDashArray","modifiedDateArea","areaSettings","areaFillColor","areaStrokeColor","areaThickness","areaOpacity","modifiedDateRad","radiusSettings","radiusFillColor","radiusStrokeColor","radiusOpacity","radiusThickness","modifiedDateVol","volumeSettings","volumeFillColor","volumeStrokeColor","volumeOpacity","volumeThickness","lineHeadStartStyle","lineHeadEndStyle","unit","measurementSettings","conversionUnit","toLowerCase","displayUnit","scaleRatio","volumeDepth","scaleRatioString","annotationModel","bound","labelBound","annotationName","createGUID","commentsDivid","addComments","document","getElementById","updateAnnotationAuthor","addTextToComments","wrapper","calculateLabelBounds","parseInt","isNaN","measure","createNumberFormat","findAnnotationSettings","setting","borderColor","labelHeight","labelWidth","labelMaxWidth","getShapeAnnotType","getArrowTypeForCollection","isLock","getIndent","getMeasureData","annotationType","shape","shapeType","list","numberFormatArray","Array","Unit","fractionalType","FractionalType","conversionFactor","ConversionFactor","denominator","Denominator","formatDenominator","FormatDenominator","cFactor","getFactor","numberFormat","saveMeasureShapeAnnotations","storeObject","window","sessionStorage","getItem","documentId","isStorageExceed","annotationStorage","annotations","pageCount","skipDownload","annotationCollection","JSON","parse","newArray","pageAnnotationObject","z","updateModifiedDate","isJsonExported","getBounds","getVertexPoints","pageDetails","pageSize","annotationRotation","rotation","stringify","strokeColorString","getRgbCode","fillColorString","getStringifiedMeasure","labelFillColorString","labelBorderColorString","fontColorString","createScaleRatioWindow","_this","elementID","element","dialogDiv","className","pageContainer","appendChild","contentElement","createRatioUI","scaleRatioDialog","showCloseIcon","closeOnEscape","isModal","header","localeObj","getConstant","target","content","close","sourceTextBox","destroy","convertUnit","destTextBox","dispUnit","dialogElement","getElement","parentElement","removeChild","isDevice","enableDesktopMode","buttons","buttonModel","isPrimary","click","onOkClicked","bind","onCancelClicked","enableRtl","appendTo","createContent","outerHTML","depthUnit","_dotnetInstance","invokeMethodAsync","items","text","label","labelText","textContent","sourceContainer","srcInputElement","createInputElement","value","format","cssClass","min","max","srcUnitElement","select","convertUnitSelect","destinationContainer","destInputElement","destUnitElement","dispUnitSelect","depthLabelText","depthContainer","depthInputElement","depthTextBox","depthUnitElement","depthUnitSelect","args","item","divElement","input","idString","container","textBoxInput","unitElement","querySelector","displayElement","updateMeasureValues","getContent","hide","originalUnit","originalDisplayUnit","restoreUnit","dropdownObject","calibUnit","convertUnitItem","pageAnnotations","getAnnotations","manageAnnotations","updateCalibrateValues","getAnnotationBaseModel","renderAnnotations","annotationBase","setConversion","currentAnnot","values","activeElements","activePageID","getCurrentObject","getCurrentValues","scaledValue","convertPointToUnits","factor","modifyInCollection","property","isNewlyAdded","updateDocumentEditedProperty","currentAnnotObject","updateAnnotationModifiedDate","children","style","fill","strokeWidth","strokeDashArray","splice","storeAnnotationCollections","addInCollection","annotObject","removeItem","index","getPageCollection","annotationStringified","setItem","getCurrentRatio","ratioString","stringArray","calculateArea","points","getArea","calculateValue","Math","round","inchValue","charAt","pixelToPointFactor","abs","calculateVolume","convertUnitToPoint","calculatePerimeter","pdfAnnotationBase","perimeter","getLengthFromListOfPoints","convertedValue","colorString","match","nameToHash","getValue","r","g","b","a","saveImportedMeasureAnnotations","IsPrint","updateMeasureAnnotationCollections","annotationId","updateAddAnnotationDetails","offset","undefined","measureAnnotationType","isArrow","currentDateString","lineSettings","updateSettings","arrowSettings","rectangleSettings","circleSettings","polygonSettings","minHeight","minWidth","maxWidth","maxHeight","length_1","i_1","sqrt","pow","getVertexPointsXY","measureShapeAnnotation","Left","Top","Location","Size","IsEmpty","CustomData","CreatedDate","ExistingCustomData"],"sources":["/home/morgan/Desktop/Projets/ENT4/Jwt-Auth-pdf/react-jwt-auth/react-jwt-auth/node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/annotation/measure-annotation.js"],"sourcesContent":["import { NumericTextBox } from '@syncfusion/ej2-inputs';\nimport { createElement, Browser, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { DropDownButton } from '@syncfusion/ej2-splitbuttons';\nimport { Point } from '@syncfusion/ej2-drawings';\n/**\n * @hidden\n */\nvar MeasureAnnotation = /** @class */ (function () {\n    function MeasureAnnotation(pdfviewer, pdfViewerBase) {\n        /**\n         * @private\n         */\n        this.measureShapeCount = 0;\n        /**\n         * @private\n         */\n        this.isAddAnnotationProgramatically = false;\n        this.pdfViewer = pdfviewer;\n        this.pdfViewerBase = pdfViewerBase;\n    }\n    Object.defineProperty(MeasureAnnotation.prototype, \"pixelToPointFactor\", {\n        /**\n         * @private\n         */\n        get: function () {\n            return (72 / 96);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param shapeAnnotations\n     * @param pageNumber\n     * @param isImportAction\n     * @param shapeAnnotations\n     * @param pageNumber\n     * @param isImportAction\n     * @private\n     */\n    // eslint-disable-next-line\n    MeasureAnnotation.prototype.renderMeasureShapeAnnotations = function (shapeAnnotations, pageNumber, isImportAction) {\n        if (shapeAnnotations) {\n            if (shapeAnnotations.length >= 1) {\n                // eslint-disable-next-line\n                var measureAnnots = this.pdfViewer.annotation.getStoredAnnotations(pageNumber, shapeAnnotations, '_annotations_shape_measure');\n                if (!measureAnnots || isImportAction) {\n                    for (var i = 0; i < shapeAnnotations.length; i++) {\n                        // eslint-disable-next-line\n                        var annotation = shapeAnnotations[i];\n                        var annotationObject = null;\n                        this.measureShapeCount = this.measureShapeCount + 1;\n                        // eslint-disable-next-line max-len\n                        annotation.annotationAddMode = this.pdfViewer.annotationModule.findAnnotationMode(annotation, pageNumber, annotation.AnnotType);\n                        var isAnnotationRotated = void 0;\n                        if (annotation.ShapeAnnotationType) {\n                            if (isImportAction) {\n                                if (this.pdfViewerBase.isJsonImported) {\n                                    annotation.Bounds = this.pdfViewerBase.importJsonForRotatedDocuments(annotation.Rotate, pageNumber, annotation.Bounds, annotation.AnnotationRotation);\n                                    isAnnotationRotated = this.pdfViewerBase.isPageRotated;\n                                }\n                            }\n                            var vertexPoints = null;\n                            if (annotation.VertexPoints) {\n                                vertexPoints = [];\n                                if (isImportAction && this.pdfViewerBase.isJsonImported) {\n                                    vertexPoints = this.pdfViewerBase.calculateVertexPoints(annotation.Rotate, pageNumber, annotation.VertexPoints, annotation.AnnotationRotation);\n                                }\n                                else {\n                                    for (var j = 0; j < annotation.VertexPoints.length; j++) {\n                                        var x = annotation.VertexPoints[j].X ? annotation.VertexPoints[j].X : annotation.VertexPoints[j].x;\n                                        var y = annotation.VertexPoints[j].Y ? annotation.VertexPoints[j].Y : annotation.VertexPoints[j].y;\n                                        var point = { x: x, y: y };\n                                        vertexPoints.push(point);\n                                    }\n                                }\n                            }\n                            if (annotation.Bounds && annotation.EnableShapeLabel === true) {\n                                // eslint-disable-next-line max-len\n                                annotation.LabelBounds = this.pdfViewer.annotationModule.inputElementModule.calculateLabelBoundsFromLoadedDocument(annotation.Bounds);\n                                annotation.LabelBorderColor = annotation.LabelBorderColor ? annotation.LabelBorderColor : annotation.StrokeColor;\n                                annotation.FontColor = annotation.FontColor ? annotation.FontColor : annotation.StrokeColor;\n                                annotation.LabelFillColor = annotation.LabelFillColor ? annotation.LabelFillColor : annotation.FillColor;\n                                annotation.FontSize = annotation.FontSize ? annotation.FontSize : 16;\n                                // eslint-disable-next-line max-len\n                                annotation.LabelSettings = annotation.LabelSettings ? annotation.LabelSettings : this.pdfViewer.shapeLabelSettings;\n                            }\n                            // eslint-disable-next-line max-len\n                            annotation.AnnotationSettings = annotation.AnnotationSettings ? annotation.AnnotationSettings : this.pdfViewer.annotationModule.updateAnnotationSettings(annotation);\n                            // eslint-disable-next-line max-len\n                            annotation.allowedInteractions = annotation.AllowedInteractions ? annotation.AllowedInteractions : this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation);\n                            var isPrint = annotation.AnnotationSettings.isPrint;\n                            var measureObject = {\n                                // eslint-disable-next-line max-len\n                                ratio: annotation.Calibrate.Ratio, x: this.getNumberFormatArray(annotation.Calibrate.X), distance: this.getNumberFormatArray(annotation.Calibrate.Distance), area: this.getNumberFormatArray(annotation.Calibrate.Area), angle: this.getNumberFormatArray(annotation.Calibrate.Angle), volume: this.getNumberFormatArray(annotation.Calibrate.Volume),\n                                targetUnitConversion: annotation.Calibrate.TargetUnitConversion\n                            };\n                            if (annotation.Calibrate.Depth) {\n                                measureObject.depth = annotation.Calibrate.Depth;\n                            }\n                            var left = annotation.Bounds.X ? annotation.Bounds.X : annotation.Bounds.x;\n                            var top_1 = annotation.Bounds.Y ? annotation.Bounds.Y : annotation.Bounds.y;\n                            var width = annotation.Bounds.Width ? annotation.Bounds.Width : annotation.Bounds.width;\n                            var height = annotation.Bounds.Height ? annotation.Bounds.Height : annotation.Bounds.height;\n                            annotationObject = {\n                                // eslint-disable-next-line max-len\n                                id: 'measure' + this.measureShapeCount, shapeAnnotationType: annotation.ShapeAnnotationType, author: annotation.Author, allowedInteractions: annotation.allowedInteractions, modifiedDate: annotation.ModifiedDate, subject: annotation.Subject,\n                                note: annotation.Note, strokeColor: annotation.StrokeColor, fillColor: annotation.FillColor, opacity: annotation.Opacity, thickness: annotation.Thickness, rectangleDifference: annotation.RectangleDifference,\n                                // eslint-disable-next-line max-len\n                                borderStyle: annotation.BorderStyle, borderDashArray: annotation.BorderDashArray, rotateAngle: annotation.RotateAngle, isCloudShape: annotation.IsCloudShape,\n                                cloudIntensity: annotation.CloudIntensity, vertexPoints: vertexPoints, lineHeadStart: annotation.LineHeadStart, lineHeadEnd: annotation.LineHeadEnd, isLocked: annotation.IsLocked,\n                                // eslint-disable-next-line max-len\n                                bounds: { left: left, top: top_1, width: width, height: height, right: annotation.Bounds.Right, bottom: annotation.Bounds.Bottom },\n                                caption: annotation.Caption, captionPosition: annotation.CaptionPosition, calibrate: measureObject, leaderLength: annotation.LeaderLength, leaderLineExtension: annotation.LeaderLineExtension,\n                                // eslint-disable-next-line max-len\n                                leaderLineOffset: annotation.LeaderLineOffset, indent: annotation.Indent, annotName: annotation.AnnotName, comments: this.pdfViewer.annotationModule.getAnnotationComments(annotation.Comments, annotation, annotation.Author),\n                                review: { state: annotation.State, stateModel: annotation.StateModel, modifiedDate: annotation.ModifiedDate, author: annotation.Author },\n                                // eslint-disable-next-line max-len\n                                labelContent: annotation.LabelContent, enableShapeLabel: annotation.EnableShapeLabel, labelFillColor: annotation.LabelFillColor,\n                                fontColor: annotation.FontColor, labelBorderColor: annotation.LabelBorderColor, fontSize: annotation.FontSize,\n                                // eslint-disable-next-line max-len\n                                labelBounds: annotation.LabelBounds, annotationSelectorSettings: this.getSettings(annotation), labelSettings: annotation.LabelSettings, annotationSettings: annotation.AnnotationSettings,\n                                customData: this.pdfViewer.annotation.getCustomData(annotation), isPrint: isPrint, isCommentLock: annotation.IsCommentLock, isAnnotationRotated: isAnnotationRotated\n                            };\n                            var annot = void 0;\n                            // eslint-disable-next-line\n                            var vPoints = annotationObject.vertexPoints;\n                            if (vertexPoints == null) {\n                                vPoints = [];\n                            }\n                            // eslint-disable-next-line max-len\n                            annotation.AnnotationSelectorSettings = annotation.AnnotationSelectorSettings ? annotation.AnnotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n                            // eslint-disable-next-line max-len\n                            annotation.allowedInteractions = annotation.AllowedInteractions ? annotation.AllowedInteractions : this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation);\n                            annot = {\n                                // eslint-disable-next-line max-len\n                                id: 'measure' + this.measureShapeCount, shapeAnnotationType: this.getShapeType(annotationObject), author: annotationObject.author, allowedInteractions: annotation.allowedInteractions, modifiedDate: annotationObject.modifiedDate,\n                                subject: annotationObject.subject, notes: annotationObject.note, fillColor: annotationObject.fillColor, strokeColor: annotationObject.strokeColor, opacity: annotationObject.opacity,\n                                // eslint-disable-next-line max-len\n                                thickness: annotationObject.thickness, borderStyle: annotationObject.borderStyle, borderDashArray: annotationObject.borderDashArray.toString(), rotateAngle: parseFloat(annotationObject.rotateAngle.split('Angle')[1]),\n                                isCloudShape: annotationObject.isCloudShape, cloudIntensity: annotationObject.cloudIntensity, taregetDecoraterShapes: this.pdfViewer.annotation.getArrowType(annotationObject.lineHeadEnd), sourceDecoraterShapes: this.pdfViewer.annotation.getArrowType(annotationObject.lineHeadStart),\n                                // eslint-disable-next-line max-len\n                                vertexPoints: vPoints, bounds: { x: annotationObject.bounds.left, y: annotationObject.bounds.top, width: annotationObject.bounds.width, height: annotationObject.bounds.height }, leaderHeight: annotationObject.leaderLength,\n                                pageIndex: pageNumber, annotName: annotationObject.annotName, comments: annotationObject.comments, review: annotationObject.review,\n                                measureType: this.getMeasureType(annotationObject),\n                                // eslint-disable-next-line max-len\n                                labelContent: annotation.LabelContent, enableShapeLabel: annotation.EnableShapeLabel, labelFillColor: annotation.LabelFillColor,\n                                fontColor: annotation.FontColor, labelBorderColor: annotation.LabelBorderColor, fontSize: annotation.FontSize,\n                                labelBounds: annotation.LabelBounds, annotationSelectorSettings: annotation.AnnotationSelectorSettings,\n                                annotationSettings: annotationObject.annotationSettings, annotationAddMode: annotation.annotationAddMode,\n                                isPrint: isPrint, isCommentLock: annotationObject.isCommentLock\n                            };\n                            this.pdfViewer.annotation.storeAnnotations(pageNumber, annotationObject, '_annotations_shape_measure');\n                            if (this.isAddAnnotationProgramatically) {\n                                var settings = {\n                                    opacity: annot.opacity, strokeColor: annot.strokeColor, thickness: annot.thickness, modifiedDate: annot.modifiedDate,\n                                    width: annot.bounds.width, height: annot.bounds.height\n                                };\n                                this.pdfViewer.fireAnnotationAdd(annot.pageIndex, annot.annotName, annotation.ShapeAnnotationType, annot.bounds, settings);\n                            }\n                            this.pdfViewer.add(annot);\n                        }\n                    }\n                }\n            }\n            else if (shapeAnnotations.shapeAnnotationType) {\n                var annotationObject = this.createAnnotationObject(shapeAnnotations);\n                this.pdfViewer.annotationModule.storeAnnotations(pageNumber, annotationObject, '_annotations_shape_measure');\n                this.pdfViewer.annotationModule.triggerAnnotationAdd(shapeAnnotations);\n            }\n        }\n    };\n    /**\n     * @param annotation\n     * @private\n     */\n    // eslint-disable-next-line\n    MeasureAnnotation.prototype.getSettings = function (annotation) {\n        var selector = this.pdfViewer.annotationSelectorSettings;\n        if (annotation.AnnotationSelectorSettings) {\n            selector = annotation.AnnotationSelectorSettings;\n        }\n        else {\n            selector = this.getSelector(annotation.Subject);\n        }\n        return selector;\n    };\n    /**\n     * @param type\n     * @private\n     */\n    MeasureAnnotation.prototype.setAnnotationType = function (type) {\n        var author = 'Guest';\n        this.updateMeasureproperties();\n        this.pdfViewerBase.disableTextSelectionMode();\n        switch (type) {\n            case 'Distance':\n                this.currentAnnotationMode = 'Distance';\n                var modifiedDateDist = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n                // eslint-disable-next-line max-len\n                author = (this.pdfViewer.annotationSettings.author !== 'Guest') ? this.pdfViewer.annotationSettings.author : this.pdfViewer.distanceSettings.author ? this.pdfViewer.distanceSettings.author : 'Guest';\n                this.pdfViewer.drawingObject = {\n                    sourceDecoraterShapes: this.pdfViewer.annotation.getArrowType(this.distanceStartHead),\n                    taregetDecoraterShapes: this.pdfViewer.annotation.getArrowType(this.distanceEndHead), measureType: 'Distance',\n                    fillColor: this.distanceFillColor, notes: '', strokeColor: this.distanceStrokeColor, leaderHeight: this.leaderLength,\n                    opacity: this.distanceOpacity, thickness: this.distanceThickness, borderDashArray: this.distanceDashArray.toString(),\n                    // eslint-disable-next-line max-len\n                    shapeAnnotationType: 'Distance', author: author, subject: 'Distance calculation', isCommentLock: false\n                };\n                this.pdfViewer.tool = 'Distance';\n                break;\n            case 'Perimeter':\n                this.currentAnnotationMode = 'Perimeter';\n                var modifiedDatePeri = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n                // eslint-disable-next-line max-len\n                author = (this.pdfViewer.annotationSettings.author !== 'Guest') ? this.pdfViewer.annotationSettings.author : this.pdfViewer.perimeterSettings.author ? this.pdfViewer.perimeterSettings.author : 'Guest';\n                this.pdfViewer.drawingObject = {\n                    // eslint-disable-next-line max-len\n                    shapeAnnotationType: 'LineWidthArrowHead', fillColor: this.perimeterFillColor, notes: '', strokeColor: this.perimeterStrokeColor, opacity: this.perimeterOpacity,\n                    thickness: this.perimeterThickness, sourceDecoraterShapes: this.pdfViewer.annotation.getArrowType(this.perimeterStartHead),\n                    // eslint-disable-next-line max-len\n                    taregetDecoraterShapes: this.pdfViewer.annotation.getArrowType(this.perimeterEndHead), measureType: 'Perimeter', borderDashArray: this.perimeterDashArray.toString(),\n                    author: author, subject: 'Perimeter calculation', isCommentLock: false\n                };\n                this.pdfViewer.tool = 'Perimeter';\n                break;\n            case 'Area':\n                this.currentAnnotationMode = 'Area';\n                var modifiedDateArea = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n                // eslint-disable-next-line max-len\n                author = (this.pdfViewer.annotationSettings.author !== 'Guest') ? this.pdfViewer.annotationSettings.author : this.pdfViewer.areaSettings.author ? this.pdfViewer.areaSettings.author : 'Guest';\n                this.pdfViewer.drawingObject = {\n                    // eslint-disable-next-line max-len\n                    shapeAnnotationType: 'Polygon', fillColor: this.areaFillColor, notes: '', strokeColor: this.areaStrokeColor,\n                    thickness: this.areaThickness, opacity: this.areaOpacity, measureType: 'Area',\n                    modifiedDate: modifiedDateArea, borderStyle: '', borderDashArray: '0',\n                    author: author, subject: 'Area calculation', isCommentLock: false\n                };\n                this.pdfViewer.tool = 'Polygon';\n                break;\n            case 'Radius':\n                this.currentAnnotationMode = 'Radius';\n                var modifiedDateRad = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n                // eslint-disable-next-line max-len\n                author = (this.pdfViewer.annotationSettings.author !== 'Guest') ? this.pdfViewer.annotationSettings.author : this.pdfViewer.radiusSettings.author ? this.pdfViewer.radiusSettings.author : 'Guest';\n                this.pdfViewer.drawingObject = {\n                    // eslint-disable-next-line max-len\n                    shapeAnnotationType: 'Radius', fillColor: this.radiusFillColor, notes: '', strokeColor: this.radiusStrokeColor, opacity: this.radiusOpacity,\n                    thickness: this.radiusThickness, measureType: 'Radius', modifiedDate: modifiedDateRad, borderStyle: '', borderDashArray: '0',\n                    author: author, subject: 'Radius calculation', isCommentLock: false\n                };\n                this.pdfViewer.tool = 'DrawTool';\n                break;\n            case 'Volume':\n                this.currentAnnotationMode = 'Volume';\n                var modifiedDateVol = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n                // eslint-disable-next-line max-len\n                author = (this.pdfViewer.annotationSettings.author !== 'Guest') ? this.pdfViewer.annotationSettings.author : this.pdfViewer.volumeSettings.author ? this.pdfViewer.volumeSettings.author : 'Guest';\n                this.pdfViewer.drawingObject = {\n                    // eslint-disable-next-line max-len\n                    shapeAnnotationType: 'Polygon', notes: '', fillColor: this.volumeFillColor, strokeColor: this.volumeStrokeColor,\n                    opacity: this.volumeOpacity, thickness: this.volumeThickness, measureType: 'Volume',\n                    modifiedDate: modifiedDateVol, borderStyle: '', borderDashArray: '0',\n                    author: author, subject: 'Volume calculation', isCommentLock: false\n                };\n                this.pdfViewer.tool = 'Polygon';\n                break;\n        }\n    };\n    MeasureAnnotation.prototype.updateMeasureproperties = function () {\n        this.distanceFillColor = this.pdfViewer.distanceSettings.fillColor ? this.pdfViewer.distanceSettings.fillColor : '#ff0000';\n        this.distanceStrokeColor = this.pdfViewer.distanceSettings.strokeColor ? this.pdfViewer.distanceSettings.strokeColor : '#ff0000';\n        this.distanceOpacity = this.pdfViewer.distanceSettings.opacity ? this.pdfViewer.distanceSettings.opacity : 1;\n        this.distanceThickness = this.pdfViewer.distanceSettings.thickness ? this.pdfViewer.distanceSettings.thickness : 1;\n        this.distanceDashArray = this.pdfViewer.distanceSettings.borderDashArray ? this.pdfViewer.distanceSettings.borderDashArray : 0;\n        this.leaderLength = this.pdfViewer.distanceSettings.leaderLength != null ? this.pdfViewer.distanceSettings.leaderLength : 40;\n        // eslint-disable-next-line max-len\n        this.distanceStartHead = this.pdfViewer.distanceSettings.lineHeadStartStyle ? this.pdfViewer.distanceSettings.lineHeadStartStyle : 'Closed';\n        this.distanceEndHead = this.pdfViewer.distanceSettings.lineHeadEndStyle ? this.pdfViewer.distanceSettings.lineHeadEndStyle : 'Closed';\n        this.perimeterFillColor = this.pdfViewer.perimeterSettings.fillColor ? this.pdfViewer.perimeterSettings.fillColor : '#ffffff00';\n        this.perimeterStrokeColor = this.pdfViewer.perimeterSettings.strokeColor ? this.pdfViewer.perimeterSettings.strokeColor : '#ff0000';\n        this.perimeterOpacity = this.pdfViewer.perimeterSettings.opacity ? this.pdfViewer.perimeterSettings.opacity : 1;\n        this.perimeterThickness = this.pdfViewer.perimeterSettings.thickness ? this.pdfViewer.perimeterSettings.thickness : 1;\n        this.perimeterDashArray = this.pdfViewer.perimeterSettings.borderDashArray ? this.pdfViewer.perimeterSettings.borderDashArray : 0;\n        // eslint-disable-next-line max-len\n        this.perimeterStartHead = this.pdfViewer.perimeterSettings.lineHeadStartStyle ? this.pdfViewer.perimeterSettings.lineHeadStartStyle : 'Open';\n        this.perimeterEndHead = this.pdfViewer.perimeterSettings.lineHeadEndStyle ? this.pdfViewer.perimeterSettings.lineHeadEndStyle : 'Open';\n        this.areaFillColor = this.pdfViewer.areaSettings.fillColor ? this.pdfViewer.areaSettings.fillColor : '#ffffff00';\n        this.areaStrokeColor = this.pdfViewer.areaSettings.strokeColor ? this.pdfViewer.areaSettings.strokeColor : '#ff0000';\n        this.areaOpacity = this.pdfViewer.areaSettings.opacity ? this.pdfViewer.areaSettings.opacity : 1;\n        this.areaThickness = this.pdfViewer.areaSettings.thickness ? this.pdfViewer.areaSettings.thickness : 1;\n        this.radiusFillColor = this.pdfViewer.radiusSettings.fillColor ? this.pdfViewer.radiusSettings.fillColor : '#ffffff00';\n        this.radiusStrokeColor = this.pdfViewer.radiusSettings.strokeColor ? this.pdfViewer.radiusSettings.strokeColor : '#ff0000';\n        this.radiusOpacity = this.pdfViewer.radiusSettings.opacity ? this.pdfViewer.radiusSettings.opacity : 1;\n        this.radiusThickness = this.pdfViewer.radiusSettings.thickness ? this.pdfViewer.radiusSettings.thickness : 1;\n        this.volumeFillColor = this.pdfViewer.volumeSettings.fillColor ? this.pdfViewer.volumeSettings.fillColor : '#ffffff00';\n        this.volumeStrokeColor = this.pdfViewer.volumeSettings.strokeColor ? this.pdfViewer.volumeSettings.strokeColor : '#ff0000';\n        this.volumeOpacity = this.pdfViewer.volumeSettings.opacity ? this.pdfViewer.volumeSettings.opacity : 1;\n        this.volumeThickness = this.pdfViewer.volumeSettings.thickness ? this.pdfViewer.volumeSettings.thickness : 1;\n        this.unit = this.pdfViewer.measurementSettings.conversionUnit.toLowerCase();\n        this.displayUnit = this.pdfViewer.measurementSettings.displayUnit.toLowerCase();\n        this.ratio = this.pdfViewer.measurementSettings.scaleRatio;\n        this.volumeDepth = this.pdfViewer.measurementSettings.depth;\n        this.scaleRatioString = '1 ' + this.unit + ' = ' + this.ratio.toString() + ' ' + this.displayUnit;\n    };\n    MeasureAnnotation.prototype.createAnnotationObject = function (annotationModel) {\n        var bound;\n        var labelBound;\n        var annotationName = this.pdfViewer.annotation.createGUID();\n        // eslint-disable-next-line max-len\n        var commentsDivid = this.pdfViewer.annotation.stickyNotesAnnotationModule.addComments('shape_measure', (annotationModel.pageIndex + 1), annotationModel.measureType);\n        if (commentsDivid) {\n            document.getElementById(commentsDivid).id = annotationName;\n        }\n        annotationModel.annotName = annotationName;\n        annotationModel.author = this.pdfViewer.annotationModule.updateAnnotationAuthor('measure', annotationModel.subject);\n        this.pdfViewer.annotation.stickyNotesAnnotationModule.addTextToComments(annotationName, annotationModel.notes);\n        if (annotationModel.wrapper.bounds) {\n            bound = {\n                // eslint-disable-next-line max-len\n                left: annotationModel.wrapper.bounds.x, top: annotationModel.wrapper.bounds.y, height: annotationModel.wrapper.bounds.height, width: annotationModel.wrapper.bounds.width,\n                right: annotationModel.wrapper.bounds.right, bottom: annotationModel.wrapper.bounds.bottom\n            };\n            labelBound = this.pdfViewer.annotationModule.inputElementModule.calculateLabelBounds(annotationModel.wrapper.bounds);\n        }\n        else {\n            bound = { left: 0, top: 0, height: 0, width: 0, right: 0, bottom: 0 };\n            labelBound = { left: 0, top: 0, height: 0, width: 0, right: 0, bottom: 0 };\n        }\n        // eslint-disable-next-line radix\n        var borderDashArray = parseInt(annotationModel.borderDashArray);\n        borderDashArray = isNaN(borderDashArray) ? 0 : borderDashArray;\n        // eslint-disable-next-line max-len\n        var measure = { ratio: this.scaleRatioString, x: [this.createNumberFormat('x')], distance: [this.createNumberFormat('d')], area: [this.createNumberFormat('a')] };\n        if (annotationModel.measureType === 'Volume') {\n            measure.depth = this.volumeDepth;\n        }\n        // eslint-disable-next-line\n        var annotationSettings = this.pdfViewer.annotationModule.findAnnotationSettings(annotationModel, true);\n        // eslint-disable-next-line\n        var allowedInteractions = this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotationModel);\n        annotationModel.isPrint = annotationSettings.isPrint;\n        var setting = this.pdfViewer.shapeLabelSettings;\n        var labelSettings = { borderColor: annotationModel.strokeColor, fillColor: annotationModel.fillColor, fontColor: annotationModel.fontColor,\n            fontSize: annotationModel.fontSize, labelContent: annotationModel.labelContent, labelHeight: setting.labelHeight, labelWidth: setting.labelMaxWidth, opacity: annotationModel.opacity\n        };\n        return {\n            // eslint-disable-next-line max-len\n            id: annotationModel.id, shapeAnnotationType: this.getShapeAnnotType(annotationModel.measureType), author: annotationModel.author, allowedInteractions: allowedInteractions,\n            subject: annotationModel.subject, note: annotationModel.notes, strokeColor: annotationModel.strokeColor,\n            fillColor: annotationModel.fillColor, opacity: annotationModel.opacity, thickness: annotationModel.thickness,\n            // eslint-disable-next-line max-len\n            borderStyle: annotationModel.borderStyle, borderDashArray: borderDashArray, bounds: bound,\n            // eslint-disable-next-line max-len\n            modifiedDate: this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime(),\n            rotateAngle: 'RotateAngle' + annotationModel.rotateAngle, isCloudShape: annotationModel.isCloudShape, cloudIntensity: annotationModel.cloudIntensity,\n            // eslint-disable-next-line max-len\n            vertexPoints: annotationModel.vertexPoints, lineHeadStart: this.pdfViewer.annotation.getArrowTypeForCollection(annotationModel.sourceDecoraterShapes),\n            lineHeadEnd: this.pdfViewer.annotation.getArrowTypeForCollection(annotationModel.taregetDecoraterShapes), rectangleDifference: [], isLocked: annotationSettings.isLock,\n            // eslint-disable-next-line max-len\n            leaderLength: annotationModel.leaderHeight, leaderLineExtension: 2, leaderLineOffset: 0, calibrate: measure, caption: true, captionPosition: 'Top',\n            indent: this.getIndent(annotationModel.measureType), annotName: annotationName, comments: [], review: { state: '', stateModel: '', modifiedDate: this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime(), author: annotationModel.author },\n            // eslint-disable-next-line max-len\n            labelContent: annotationModel.labelContent, enableShapeLabel: annotationModel.enableShapeLabel, labelFillColor: annotationModel.labelFillColor,\n            labelBorderColor: annotationModel.labelBorderColor, fontColor: annotationModel.fontColor, fontSize: annotationModel.fontSize,\n            // eslint-disable-next-line max-len\n            labelBounds: labelBound, annotationSelectorSettings: this.getSelector(annotationModel.subject), labelSettings: labelSettings, annotationSettings: annotationSettings,\n            customData: this.pdfViewer.annotation.getMeasureData(annotationModel.subject), isPrint: annotationModel.isPrint, isCommentLock: annotationModel.isCommentLock, isAnnotationRotated: false\n        };\n    };\n    MeasureAnnotation.prototype.getSelector = function (type) {\n        var selector = this.pdfViewer.annotationSelectorSettings;\n        if ((type === 'Distance calculation') && this.pdfViewer.distanceSettings.annotationSelectorSettings) {\n            selector = this.pdfViewer.distanceSettings.annotationSelectorSettings;\n        }\n        else if ((type === 'Perimeter calculation') && this.pdfViewer.perimeterSettings.annotationSelectorSettings) {\n            selector = this.pdfViewer.perimeterSettings.annotationSelectorSettings;\n            // eslint-disable-next-line max-len\n        }\n        else if ((type === 'Area calculation') && this.pdfViewer.areaSettings.annotationSelectorSettings) {\n            selector = this.pdfViewer.areaSettings.annotationSelectorSettings;\n        }\n        else if ((type === 'Radius calculation') && this.pdfViewer.radiusSettings.annotationSelectorSettings) {\n            selector = this.pdfViewer.radiusSettings.annotationSelectorSettings;\n        }\n        else if ((type === 'Volume calculation') && this.pdfViewer.volumeSettings.annotationSelectorSettings) {\n            selector = this.pdfViewer.volumeSettings.annotationSelectorSettings;\n        }\n        return selector;\n    };\n    MeasureAnnotation.prototype.getShapeAnnotType = function (measureType) {\n        var annotationType;\n        switch (measureType) {\n            case 'Distance':\n                annotationType = 'Line';\n                break;\n            case 'Perimeter':\n                annotationType = 'Polyline';\n                break;\n            case 'Area':\n            case 'Volume':\n                annotationType = 'Polygon';\n                break;\n            case 'Radius':\n                annotationType = 'Circle';\n                break;\n        }\n        return annotationType;\n    };\n    MeasureAnnotation.prototype.getShapeType = function (shape) {\n        var shapeType;\n        if (shape.shapeAnnotationType === 'Line') {\n            shapeType = 'Distance';\n        }\n        else if (shape.shapeAnnotationType === 'Polyline') {\n            shapeType = 'LineWidthArrowHead';\n        }\n        else if (shape.shapeAnnotationType === 'Polygon' && shape.indent === 'PolygonDimension') {\n            shapeType = 'Polygon';\n            // eslint-disable-next-line max-len\n        }\n        else if ((shape.shapeAnnotationType === 'Polygon' && shape.indent === 'PolygonRadius') || shape.shapeAnnotationType === 'Circle') {\n            shapeType = 'Radius';\n        }\n        else if (shape.shapeAnnotationType === 'Polygon' && shape.indent === 'PolygonVolume') {\n            shapeType = 'Polygon';\n        }\n        return shapeType;\n    };\n    MeasureAnnotation.prototype.getMeasureType = function (shape) {\n        var measureType;\n        if (shape.shapeAnnotationType === 'Line') {\n            measureType = 'Distance';\n        }\n        else if (shape.shapeAnnotationType === 'Polyline') {\n            measureType = 'Perimeter';\n        }\n        else if (shape.shapeAnnotationType === 'Polygon' && shape.indent === 'PolygonDimension') {\n            measureType = 'Area';\n            // eslint-disable-next-line max-len\n        }\n        else if ((shape.shapeAnnotationType === 'Polygon' && shape.indent === 'PolygonRadius') || shape.shapeAnnotationType === 'Circle') {\n            measureType = 'Radius';\n        }\n        else if (shape.shapeAnnotationType === 'Polygon' && shape.indent === 'PolygonVolume') {\n            measureType = 'Volume';\n        }\n        return measureType;\n    };\n    MeasureAnnotation.prototype.getIndent = function (measureType) {\n        var indent;\n        switch (measureType) {\n            case 'Distance':\n                indent = 'LineDimension';\n                break;\n            case 'Perimeter':\n                indent = 'PolyLineDimension';\n                break;\n            case 'Area':\n                indent = 'PolygonDimension';\n                break;\n            case 'Radius':\n                indent = 'PolygonRadius';\n                break;\n            case 'Volume':\n                indent = 'PolygonVolume';\n                break;\n        }\n        return indent;\n    };\n    // eslint-disable-next-line\n    MeasureAnnotation.prototype.getNumberFormatArray = function (list) {\n        // eslint-disable-next-line\n        var numberFormatArray = new Array();\n        if (list) {\n            for (var i = 0; i < list.length; i++) {\n                // eslint-disable-next-line max-len\n                numberFormatArray[i] = { unit: list[i].Unit, fractionalType: list[i].FractionalType, conversionFactor: list[i].ConversionFactor, denominator: list[i].Denominator, formatDenominator: list[i].FormatDenominator };\n            }\n        }\n        return numberFormatArray;\n    };\n    MeasureAnnotation.prototype.createNumberFormat = function (type) {\n        var cFactor = 1;\n        var unit = this.displayUnit;\n        if (type === 'x') {\n            cFactor = this.getFactor(this.unit);\n        }\n        if (type === 'a') {\n            unit = 'sq ' + this.displayUnit;\n        }\n        // eslint-disable-next-line max-len\n        var numberFormat = { unit: unit, fractionalType: 'D', conversionFactor: cFactor, denominator: 100, formatDenominator: false };\n        return numberFormat;\n    };\n    /**\n     * @private\n     */\n    MeasureAnnotation.prototype.saveMeasureShapeAnnotations = function () {\n        // eslint-disable-next-line\n        var storeObject = window.sessionStorage.getItem(this.pdfViewerBase.documentId + '_annotations_shape_measure');\n        if (this.pdfViewerBase.isStorageExceed) {\n            storeObject = this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_shape_measure'];\n        }\n        // eslint-disable-next-line\n        var annotations = new Array();\n        for (var j = 0; j < this.pdfViewerBase.pageCount; j++) {\n            annotations[j] = [];\n        }\n        if (storeObject && !this.pdfViewer.annotationSettings.skipDownload) {\n            var annotationCollection = JSON.parse(storeObject);\n            for (var i = 0; i < annotationCollection.length; i++) {\n                var newArray = [];\n                var pageAnnotationObject = annotationCollection[i];\n                if (pageAnnotationObject) {\n                    for (var z = 0; pageAnnotationObject.annotations.length > z; z++) {\n                        this.pdfViewer.annotationModule.updateModifiedDate(pageAnnotationObject.annotations[z]);\n                        if (this.pdfViewerBase.isJsonExported) {\n                            if (pageAnnotationObject.annotations[z].isAnnotationRotated) {\n                                pageAnnotationObject.annotations[z].bounds = this.pdfViewer.annotation.getBounds(pageAnnotationObject.annotations[z].bounds, pageAnnotationObject.pageIndex);\n                                pageAnnotationObject.annotations[z].vertexPoints = this.pdfViewer.annotation.getVertexPoints(pageAnnotationObject.annotations[z].vertexPoints, pageAnnotationObject.pageIndex);\n                            }\n                            else {\n                                var pageDetails = this.pdfViewerBase.pageSize[pageAnnotationObject.pageIndex];\n                                if (pageDetails) {\n                                    pageAnnotationObject.annotations[z].annotationRotation = pageDetails.rotation;\n                                }\n                            }\n                        }\n                        // eslint-disable-next-line max-len\n                        pageAnnotationObject.annotations[z].bounds = JSON.stringify(this.pdfViewer.annotation.getBounds(pageAnnotationObject.annotations[z].bounds, pageAnnotationObject.pageIndex));\n                        var strokeColorString = pageAnnotationObject.annotations[z].strokeColor;\n                        pageAnnotationObject.annotations[z].strokeColor = JSON.stringify(this.getRgbCode(strokeColorString));\n                        var fillColorString = pageAnnotationObject.annotations[z].fillColor;\n                        pageAnnotationObject.annotations[z].fillColor = JSON.stringify(this.getRgbCode(fillColorString));\n                        // eslint-disable-next-line max-len\n                        pageAnnotationObject.annotations[z].vertexPoints = JSON.stringify(this.pdfViewer.annotation.getVertexPoints(pageAnnotationObject.annotations[z].vertexPoints, pageAnnotationObject.pageIndex));\n                        if (pageAnnotationObject.annotations[z].rectangleDifference !== null) {\n                            // eslint-disable-next-line max-len\n                            pageAnnotationObject.annotations[z].rectangleDifference = JSON.stringify(pageAnnotationObject.annotations[z].rectangleDifference);\n                        }\n                        // eslint-disable-next-line max-len\n                        pageAnnotationObject.annotations[z].calibrate = this.getStringifiedMeasure(pageAnnotationObject.annotations[z].calibrate);\n                        if (pageAnnotationObject.annotations[z].enableShapeLabel === true) {\n                            // eslint-disable-next-line max-len\n                            pageAnnotationObject.annotations[z].labelBounds = JSON.stringify(this.pdfViewer.annotationModule.inputElementModule.calculateLabelBounds(JSON.parse(pageAnnotationObject.annotations[z].bounds), pageAnnotationObject.pageIndex));\n                            var labelFillColorString = pageAnnotationObject.annotations[z].labelFillColor;\n                            pageAnnotationObject.annotations[z].labelFillColor = JSON.stringify(this.getRgbCode(labelFillColorString));\n                            var labelBorderColorString = pageAnnotationObject.annotations[z].labelBorderColor;\n                            pageAnnotationObject.annotations[z].labelBorderColor = JSON.stringify(this.getRgbCode(labelBorderColorString));\n                            pageAnnotationObject.annotations[z].labelSettings.fillColor = labelFillColorString;\n                            var fontColorString = pageAnnotationObject.annotations[z].labelSettings.fontColor;\n                            pageAnnotationObject.annotations[z].fontColor = JSON.stringify(this.getRgbCode(fontColorString));\n                        }\n                    }\n                    newArray = pageAnnotationObject.annotations;\n                }\n                annotations[pageAnnotationObject.pageIndex] = newArray;\n            }\n        }\n        return JSON.stringify(annotations);\n    };\n    /**\n     * @private\n     */\n    MeasureAnnotation.prototype.createScaleRatioWindow = function () {\n        var _this = this;\n        if (!isBlazor()) {\n            var elementID = this.pdfViewer.element.id;\n            // eslint-disable-next-line max-len\n            var dialogDiv = createElement('div', { id: elementID + '_scale_ratio_window', className: 'e-pv-scale-ratio-window' });\n            this.pdfViewerBase.pageContainer.appendChild(dialogDiv);\n            var contentElement = this.createRatioUI();\n            this.scaleRatioDialog = new Dialog({\n                showCloseIcon: true, closeOnEscape: false, isModal: true, header: this.pdfViewer.localeObj.getConstant('Scale Ratio'),\n                target: this.pdfViewer.element, content: contentElement, close: function () {\n                    _this.sourceTextBox.destroy();\n                    _this.convertUnit.destroy();\n                    _this.destTextBox.destroy();\n                    _this.dispUnit.destroy();\n                    _this.scaleRatioDialog.destroy();\n                    var dialogElement = _this.pdfViewerBase.getElement('_scale_ratio_window');\n                    dialogElement.parentElement.removeChild(dialogElement);\n                }\n            });\n            if (!Browser.isDevice || this.pdfViewer.enableDesktopMode) {\n                this.scaleRatioDialog.buttons = [\n                    // eslint-disable-next-line max-len\n                    { buttonModel: { content: this.pdfViewer.localeObj.getConstant('OK'), isPrimary: true }, click: this.onOkClicked.bind(this) },\n                    { buttonModel: { content: this.pdfViewer.localeObj.getConstant('Cancel') }, click: this.onCancelClicked.bind(this) }\n                ];\n            }\n            else {\n                this.scaleRatioDialog.buttons = [\n                    { buttonModel: { content: this.pdfViewer.localeObj.getConstant('Cancel') }, click: this.onCancelClicked.bind(this) },\n                    // eslint-disable-next-line max-len\n                    { buttonModel: { content: this.pdfViewer.localeObj.getConstant('OK'), isPrimary: true }, click: this.onOkClicked.bind(this) }\n                ];\n            }\n            if (this.pdfViewer.enableRtl) {\n                this.scaleRatioDialog.enableRtl = true;\n            }\n            this.scaleRatioDialog.appendTo(dialogDiv);\n            this.convertUnit.content = this.createContent(this.pdfViewer.localeObj.getConstant(this.unit)).outerHTML;\n            this.dispUnit.content = this.createContent(this.pdfViewer.localeObj.getConstant(this.displayUnit)).outerHTML;\n            this.depthUnit.content = this.createContent(this.pdfViewer.localeObj.getConstant(this.displayUnit)).outerHTML;\n        }\n        else {\n            this.pdfViewer._dotnetInstance.invokeMethodAsync('OpenScaleRatioDialog');\n        }\n    };\n    MeasureAnnotation.prototype.createRatioUI = function () {\n        var element = createElement('div');\n        var elementID = this.pdfViewer.element.id;\n        // eslint-disable-next-line max-len\n        var items = [{ text: this.pdfViewer.localeObj.getConstant('pt'), label: 'pt' }, { text: this.pdfViewer.localeObj.getConstant('in'), label: 'in' }, { text: this.pdfViewer.localeObj.getConstant('mm'), label: 'mm' }, { text: this.pdfViewer.localeObj.getConstant('cm'), label: 'cm' }, { text: this.pdfViewer.localeObj.getConstant('p'), label: 'p' }, { text: this.pdfViewer.localeObj.getConstant('ft'), label: 'ft' }, { text: this.pdfViewer.localeObj.getConstant('ft_in'), label: 'ft_in' }, { text: this.pdfViewer.localeObj.getConstant('m'), label: 'm' }];\n        var labelText = createElement('div', { id: elementID + '_scale_ratio_label', className: 'e-pv-scale-ratio-text' });\n        labelText.textContent = this.pdfViewer.localeObj.getConstant('Scale Ratio');\n        element.appendChild(labelText);\n        var sourceContainer = createElement('div', { id: elementID + '_scale_src_container' });\n        element.appendChild(sourceContainer);\n        // eslint-disable-next-line max-len\n        var srcInputElement = this.createInputElement('input', 'e-pv-scale-ratio-src-input', elementID + '_src_input', sourceContainer);\n        this.sourceTextBox = new NumericTextBox({ value: 1, format: '##', cssClass: 'e-pv-scale-ratio-src-input', min: 1, max: 100 }, srcInputElement);\n        // eslint-disable-next-line max-len\n        var srcUnitElement = this.createInputElement('button', 'e-pv-scale-ratio-src-unit', elementID + '_src_unit', sourceContainer);\n        this.convertUnit = new DropDownButton({ items: items, cssClass: 'e-pv-scale-ratio-src-unit' }, srcUnitElement);\n        this.convertUnit.select = this.convertUnitSelect.bind(this);\n        var destinationContainer = createElement('div', { id: elementID + '_scale_dest_container' });\n        // eslint-disable-next-line max-len\n        var destInputElement = this.createInputElement('input', 'e-pv-scale-ratio-dest-input', elementID + '_dest_input', destinationContainer);\n        this.destTextBox = new NumericTextBox({ value: 1, format: '##', cssClass: 'e-pv-scale-ratio-dest-input', min: 1, max: 100 }, destInputElement);\n        // eslint-disable-next-line max-len\n        var destUnitElement = this.createInputElement('button', 'e-pv-scale-ratio-dest-unit', elementID + '_dest_unit', destinationContainer);\n        this.dispUnit = new DropDownButton({ items: items, cssClass: 'e-pv-scale-ratio-dest-unit' }, destUnitElement);\n        this.dispUnit.select = this.dispUnitSelect.bind(this);\n        element.appendChild(destinationContainer);\n        var depthLabelText = createElement('div', { id: elementID + '_depth_label', className: 'e-pv-depth-text' });\n        depthLabelText.textContent = this.pdfViewer.localeObj.getConstant('Depth');\n        element.appendChild(depthLabelText);\n        var depthContainer = createElement('div', { id: elementID + '_depth_container' });\n        element.appendChild(depthContainer);\n        // eslint-disable-next-line max-len\n        var depthInputElement = this.createInputElement('input', 'e-pv-depth-input', elementID + '_depth_input', depthContainer);\n        this.depthTextBox = new NumericTextBox({ value: this.volumeDepth, format: '##', cssClass: 'e-pv-depth-input', min: 1 }, depthInputElement);\n        // eslint-disable-next-line max-len\n        var depthUnitElement = this.createInputElement('button', 'e-pv-depth-unit', elementID + '_depth_unit', depthContainer);\n        this.depthUnit = new DropDownButton({ items: items, cssClass: 'e-pv-depth-unit' }, depthUnitElement);\n        this.depthUnit.select = this.depthUnitSelect.bind(this);\n        return element;\n    };\n    MeasureAnnotation.prototype.convertUnitSelect = function (args) {\n        this.convertUnit.content = this.createContent(args.item.text).outerHTML;\n    };\n    MeasureAnnotation.prototype.dispUnitSelect = function (args) {\n        this.dispUnit.content = this.createContent(args.item.text).outerHTML;\n        this.depthUnit.content = this.createContent(args.item.text).outerHTML;\n    };\n    MeasureAnnotation.prototype.depthUnitSelect = function (args) {\n        this.depthUnit.content = this.createContent(args.item.text).outerHTML;\n    };\n    MeasureAnnotation.prototype.createContent = function (text) {\n        var divElement = createElement('div', { className: 'e-pv-scale-unit-content' });\n        divElement.textContent = text;\n        return divElement;\n    };\n    MeasureAnnotation.prototype.createInputElement = function (input, className, idString, parentElement) {\n        var container = createElement('div', { id: idString + '_container', className: className + '-container' });\n        var textBoxInput = createElement(input, { id: idString });\n        if (input === 'input') {\n            textBoxInput.type = 'text';\n        }\n        container.appendChild(textBoxInput);\n        parentElement.appendChild(container);\n        return textBoxInput;\n    };\n    /**\n     * @private\n     */\n    MeasureAnnotation.prototype.onOkClicked = function () {\n        if (isBlazor()) {\n            // eslint-disable-next-line\n            var unitElement = document.querySelector('#' + this.pdfViewer.element.id + '_src_unit');\n            // eslint-disable-next-line\n            var displayElement = document.querySelector('#' + this.pdfViewer.element.id + '_dest_unit');\n            // eslint-disable-next-line\n            var sourceTextBox = document.querySelector('#' + this.pdfViewer.element.id + '_ratio_input');\n            // eslint-disable-next-line\n            var destTextBox = document.querySelector('#' + this.pdfViewer.element.id + '_dest_input');\n            // eslint-disable-next-line\n            var depthTextBox = document.querySelector('#' + this.pdfViewer.element.id + '_depth_input');\n            if (unitElement && displayElement && sourceTextBox && destTextBox && depthTextBox) {\n                this.unit = unitElement.value;\n                this.displayUnit = displayElement.value;\n                // eslint-disable-next-line\n                this.ratio = parseInt(destTextBox.value) / parseInt(sourceTextBox.value);\n                // eslint-disable-next-line\n                this.volumeDepth = parseInt(depthTextBox.value);\n            }\n            // eslint-disable-next-line\n            this.scaleRatioString = parseInt(sourceTextBox.value) + ' ' + this.unit + ' = ' + parseInt(destTextBox.value) + ' ' + this.displayUnit;\n            this.updateMeasureValues(this.scaleRatioString, this.displayUnit, this.unit, this.volumeDepth);\n        }\n        else {\n            this.unit = this.getContent(this.convertUnit.content);\n            this.displayUnit = this.getContent(this.dispUnit.content);\n            this.ratio = this.destTextBox.value / this.sourceTextBox.value;\n            this.volumeDepth = this.depthTextBox.value;\n            this.scaleRatioString = this.sourceTextBox.value + ' ' + this.unit + ' = ' + this.destTextBox.value + ' ' + this.displayUnit;\n            this.scaleRatioDialog.hide();\n            var originalUnit = void 0;\n            var originalDisplayUnit = void 0;\n            originalUnit = this.restoreUnit(this.convertUnit);\n            originalDisplayUnit = this.restoreUnit(this.dispUnit);\n            this.updateMeasureValues(this.scaleRatioString, originalDisplayUnit, originalUnit, this.volumeDepth);\n        }\n    };\n    MeasureAnnotation.prototype.restoreUnit = function (dropdownObject) {\n        var calibUnit;\n        for (var i = 0; i < dropdownObject.items.length; i++) {\n            var convertUnitItem = dropdownObject.items[i];\n            if (this.unit === convertUnitItem.text) {\n                calibUnit = convertUnitItem.label;\n            }\n        }\n        return calibUnit;\n    };\n    /**\n     * @param ratio\n     * @param displayUnit\n     * @param conversionUnit\n     * @param depth\n     * @private\n     */\n    MeasureAnnotation.prototype.updateMeasureValues = function (ratio, displayUnit, conversionUnit, depth) {\n        this.scaleRatioString = ratio;\n        this.displayUnit = displayUnit;\n        this.unit = conversionUnit;\n        this.volumeDepth = depth;\n        for (var i = 0; i < this.pdfViewerBase.pageCount; i++) {\n            var pageAnnotations = this.getAnnotations(i, null);\n            if (pageAnnotations) {\n                for (var j = 0; j < pageAnnotations.length; j++) {\n                    pageAnnotations = this.getAnnotations(i, null);\n                    var measureObject = pageAnnotations[j];\n                    if (!measureObject.annotationSettings.isLock) {\n                        measureObject.calibrate.ratio = ratio;\n                        measureObject.calibrate.x[0].unit = displayUnit;\n                        measureObject.calibrate.distance[0].unit = displayUnit;\n                        measureObject.calibrate.area[0].unit = displayUnit;\n                        measureObject.calibrate.x[0].conversionFactor = this.getFactor(conversionUnit);\n                        if (measureObject.indent === 'PolygonVolume') {\n                            measureObject.calibrate.depth = depth;\n                        }\n                        pageAnnotations[j] = measureObject;\n                        this.manageAnnotations(pageAnnotations, i);\n                        this.pdfViewer.annotation.updateCalibrateValues(this.getAnnotationBaseModel(measureObject.id));\n                    }\n                }\n            }\n            this.pdfViewer.annotation.renderAnnotations(i, null, null, null, null, false);\n        }\n    };\n    MeasureAnnotation.prototype.getAnnotationBaseModel = function (id) {\n        var annotationBase = null;\n        for (var i = 0; i < this.pdfViewer.annotations.length; i++) {\n            if (id === this.pdfViewer.annotations[i].id) {\n                annotationBase = this.pdfViewer.annotations[i];\n                break;\n            }\n        }\n        return annotationBase;\n    };\n    MeasureAnnotation.prototype.getContent = function (unit) {\n        return unit.split('</div>')[0].split('\">')[1];\n    };\n    /**\n     * @param value\n     * @param currentAnnot\n     * @private\n     */\n    // eslint-disable-next-line\n    MeasureAnnotation.prototype.setConversion = function (value, currentAnnot) {\n        // eslint-disable-next-line\n        var values;\n        if (currentAnnot) {\n            var pageIndex = currentAnnot.pageIndex;\n            if (currentAnnot.id === 'diagram_helper') {\n                pageIndex = currentAnnot.pageIndex ? currentAnnot.pageIndex : this.pdfViewerBase.activeElements.activePageID;\n                currentAnnot = this.getCurrentObject(pageIndex, null, currentAnnot.annotName);\n            }\n            if (currentAnnot) {\n                values = this.getCurrentValues(currentAnnot.id, pageIndex);\n            }\n            else {\n                values = this.getCurrentValues();\n            }\n        }\n        else {\n            values = this.getCurrentValues();\n        }\n        var scaledValue = value * values.ratio;\n        return this.convertPointToUnits(values.factor, scaledValue, values.unit);\n    };\n    MeasureAnnotation.prototype.onCancelClicked = function () {\n        this.scaleRatioDialog.hide();\n    };\n    /**\n     * @param property\n     * @param pageNumber\n     * @param annotationBase\n     * @param isNewlyAdded\n     * @param property\n     * @param pageNumber\n     * @param annotationBase\n     * @param isNewlyAdded\n     * @param property\n     * @param pageNumber\n     * @param annotationBase\n     * @param isNewlyAdded\n     * @param property\n     * @param pageNumber\n     * @param annotationBase\n     * @param isNewlyAdded\n     * @private\n     */\n    // eslint-disable-next-line\n    MeasureAnnotation.prototype.modifyInCollection = function (property, pageNumber, annotationBase, isNewlyAdded) {\n        if (!isNewlyAdded) {\n            this.pdfViewerBase.updateDocumentEditedProperty(true);\n        }\n        var currentAnnotObject = null;\n        var pageAnnotations = this.getAnnotations(pageNumber, null);\n        if (pageAnnotations != null && annotationBase) {\n            for (var i = 0; i < pageAnnotations.length; i++) {\n                if (annotationBase.id === pageAnnotations[i].id) {\n                    if (property === 'bounds') {\n                        this.pdfViewer.annotationModule.stickyNotesAnnotationModule.updateAnnotationModifiedDate(annotationBase, true);\n                        if (pageAnnotations[i].shapeAnnotationType === 'Line' || pageAnnotations[i].shapeAnnotationType === 'Polyline') {\n                            pageAnnotations[i].vertexPoints = annotationBase.vertexPoints;\n                            // eslint-disable-next-line max-len\n                            pageAnnotations[i].bounds = { left: annotationBase.bounds.x, top: annotationBase.bounds.y, width: annotationBase.bounds.width, height: annotationBase.bounds.height, right: annotationBase.bounds.right, bottom: annotationBase.bounds.bottom };\n                        }\n                        else if (pageAnnotations[i].shapeAnnotationType === 'Polygon') {\n                            pageAnnotations[i].vertexPoints = annotationBase.vertexPoints;\n                            // eslint-disable-next-line max-len\n                            pageAnnotations[i].bounds = { left: annotationBase.bounds.x, top: annotationBase.bounds.y, width: annotationBase.bounds.width, height: annotationBase.bounds.height, right: annotationBase.bounds.right, bottom: annotationBase.bounds.bottom };\n                        }\n                        else {\n                            // eslint-disable-next-line max-len\n                            pageAnnotations[i].bounds = { left: annotationBase.bounds.x, top: annotationBase.bounds.y, width: annotationBase.bounds.width, height: annotationBase.bounds.height, right: annotationBase.bounds.right, bottom: annotationBase.bounds.bottom };\n                        }\n                        if (pageAnnotations[i].enableShapeLabel === true && annotationBase.wrapper) {\n                            // eslint-disable-next-line max-len\n                            pageAnnotations[i].labelBounds = this.pdfViewer.annotationModule.inputElementModule.calculateLabelBounds(annotationBase.wrapper.bounds);\n                        }\n                    }\n                    else if (property === 'fill') {\n                        pageAnnotations[i].fillColor = annotationBase.wrapper.children[0].style.fill;\n                        if (this.pdfViewer.enableShapeLabel) {\n                            pageAnnotations[i].labelFillColor = annotationBase.wrapper.children[0].style.fill;\n                        }\n                    }\n                    else if (property === 'stroke') {\n                        pageAnnotations[i].strokeColor = annotationBase.wrapper.children[0].style.strokeColor;\n                    }\n                    else if (property === 'opacity') {\n                        pageAnnotations[i].opacity = annotationBase.wrapper.children[0].style.opacity;\n                    }\n                    else if (property === 'thickness') {\n                        pageAnnotations[i].thickness = annotationBase.wrapper.children[0].style.strokeWidth;\n                    }\n                    else if (property === 'dashArray') {\n                        pageAnnotations[i].borderDashArray = annotationBase.wrapper.children[0].style.strokeDashArray;\n                        pageAnnotations[i].borderStyle = annotationBase.borderStyle;\n                    }\n                    else if (property === 'startArrow') {\n                        // eslint-disable-next-line max-len\n                        pageAnnotations[i].lineHeadStart = this.pdfViewer.annotation.getArrowTypeForCollection(annotationBase.sourceDecoraterShapes);\n                    }\n                    else if (property === 'endArrow') {\n                        // eslint-disable-next-line max-len\n                        pageAnnotations[i].lineHeadEnd = this.pdfViewer.annotation.getArrowTypeForCollection(annotationBase.taregetDecoraterShapes);\n                    }\n                    else if (property === 'leaderLength') {\n                        pageAnnotations[i].leaderLength = annotationBase.leaderHeight;\n                    }\n                    else if (property === 'notes') {\n                        pageAnnotations[i].note = annotationBase.notes;\n                        if (pageAnnotations[i].enableShapeLabel === true) {\n                            pageAnnotations[i].labelContent = annotationBase.notes;\n                        }\n                    }\n                    else if (property === 'delete') {\n                        currentAnnotObject = pageAnnotations.splice(i, 1)[0];\n                        break;\n                    }\n                    else if (property === 'labelContent') {\n                        pageAnnotations[i].note = annotationBase.labelContent;\n                        pageAnnotations[i].labelContent = annotationBase.labelContent;\n                        break;\n                    }\n                    else if (property === 'fontColor') {\n                        pageAnnotations[i].fontColor = annotationBase.fontColor;\n                    }\n                    else if (property === 'fontSize') {\n                        pageAnnotations[i].fontSize = annotationBase.fontSize;\n                    }\n                    // eslint-disable-next-line max-len\n                    pageAnnotations[i].modifiedDate = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n                    this.pdfViewer.annotationModule.storeAnnotationCollections(pageAnnotations[i], pageNumber);\n                }\n            }\n            this.manageAnnotations(pageAnnotations, pageNumber);\n        }\n        return currentAnnotObject;\n    };\n    /**\n     * @param pageNumber\n     * @param annotationBase\n     * @param pageNumber\n     * @param annotationBase\n     * @private\n     */\n    MeasureAnnotation.prototype.addInCollection = function (pageNumber, annotationBase) {\n        var pageAnnotations = this.getAnnotations(pageNumber, null);\n        if (pageAnnotations) {\n            pageAnnotations.push(annotationBase);\n        }\n        this.manageAnnotations(pageAnnotations, pageNumber);\n    };\n    MeasureAnnotation.prototype.manageAnnotations = function (pageAnnotations, pageNumber) {\n        // eslint-disable-next-line\n        var storeObject = window.sessionStorage.getItem(this.pdfViewerBase.documentId + '_annotations_shape_measure');\n        if (this.pdfViewerBase.isStorageExceed) {\n            storeObject = this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_shape_measure'];\n        }\n        if (storeObject) {\n            var annotObject = JSON.parse(storeObject);\n            if (!this.pdfViewerBase.isStorageExceed) {\n                window.sessionStorage.removeItem(this.pdfViewerBase.documentId + '_annotations_shape_measure');\n            }\n            var index = this.pdfViewer.annotationModule.getPageCollection(annotObject, pageNumber);\n            if (annotObject[index]) {\n                annotObject[index].annotations = pageAnnotations;\n            }\n            var annotationStringified = JSON.stringify(annotObject);\n            if (this.pdfViewerBase.isStorageExceed) {\n                this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_shape_measure'] = annotationStringified;\n            }\n            else {\n                window.sessionStorage.setItem(this.pdfViewerBase.documentId + '_annotations_shape_measure', annotationStringified);\n            }\n        }\n    };\n    // eslint-disable-next-line\n    MeasureAnnotation.prototype.getAnnotations = function (pageIndex, shapeAnnotations) {\n        // eslint-disable-next-line\n        var annotationCollection;\n        // eslint-disable-next-line\n        var storeObject = window.sessionStorage.getItem(this.pdfViewerBase.documentId + '_annotations_shape_measure');\n        if (this.pdfViewerBase.isStorageExceed) {\n            storeObject = this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_shape_measure'];\n        }\n        if (storeObject) {\n            var annotObject = JSON.parse(storeObject);\n            var index = this.pdfViewer.annotationModule.getPageCollection(annotObject, pageIndex);\n            if (annotObject[index]) {\n                annotationCollection = annotObject[index].annotations;\n            }\n            else {\n                annotationCollection = shapeAnnotations;\n            }\n        }\n        else {\n            annotationCollection = shapeAnnotations;\n        }\n        return annotationCollection;\n    };\n    MeasureAnnotation.prototype.getCurrentObject = function (pageNumber, id, annotName) {\n        var currentAnnotObject = null;\n        var pageAnnotations = this.getAnnotations(pageNumber, null);\n        if (pageAnnotations != null) {\n            for (var i = 0; i < pageAnnotations.length; i++) {\n                if (id) {\n                    if (id === pageAnnotations[i].id) {\n                        currentAnnotObject = pageAnnotations[i];\n                        break;\n                    }\n                }\n                else if (annotName) {\n                    if (annotName === pageAnnotations[i].annotName) {\n                        currentAnnotObject = pageAnnotations[i];\n                        break;\n                    }\n                }\n            }\n        }\n        return currentAnnotObject;\n    };\n    // eslint-disable-next-line\n    MeasureAnnotation.prototype.getCurrentValues = function (id, pageNumber) {\n        var ratio;\n        var unit;\n        var factor;\n        var depth;\n        if (id && !isNaN(pageNumber)) {\n            var currentAnnotObject = this.getCurrentObject(pageNumber, id);\n            if (currentAnnotObject) {\n                ratio = this.getCurrentRatio(currentAnnotObject.calibrate.ratio);\n                unit = currentAnnotObject.calibrate.x[0].unit;\n                factor = currentAnnotObject.calibrate.x[0].conversionFactor;\n                depth = currentAnnotObject.calibrate.depth;\n            }\n            else {\n                ratio = this.ratio;\n                unit = this.displayUnit;\n                factor = this.getFactor(this.unit);\n                depth = this.volumeDepth;\n            }\n        }\n        else {\n            ratio = this.ratio;\n            unit = this.displayUnit;\n            factor = this.getFactor(this.unit);\n            depth = this.volumeDepth;\n        }\n        return { ratio: ratio, unit: unit, factor: factor, depth: depth };\n    };\n    MeasureAnnotation.prototype.getCurrentRatio = function (ratioString) {\n        var stringArray = ratioString.split(' ');\n        if (stringArray[3] === '=') {\n            return parseFloat(stringArray[4]) / parseFloat(stringArray[0]);\n        }\n        else {\n            return parseFloat(stringArray[3]) / parseFloat(stringArray[0]);\n        }\n    };\n    /**\n     * @param points\n     * @param id\n     * @param pageNumber\n     * @param points\n     * @param id\n     * @param pageNumber\n     * @param points\n     * @param id\n     * @param pageNumber\n     * @private\n     */\n    MeasureAnnotation.prototype.calculateArea = function (points, id, pageNumber) {\n        // eslint-disable-next-line\n        var values = this.getCurrentValues(id, pageNumber);\n        var area = this.getArea(points, values.factor, values.unit) * values.ratio;\n        if (values.unit === 'ft_in') {\n            // eslint-disable-next-line\n            var calculateValue = Math.round(area * 100) / 100;\n            if (calculateValue >= 12) {\n                calculateValue = (Math.round(calculateValue / 12 * 100) / 100).toString();\n                calculateValue = calculateValue.split('.');\n                if (calculateValue[1]) {\n                    // eslint-disable-next-line\n                    var inchValue = 0;\n                    if (calculateValue[1].charAt(1)) {\n                        // eslint-disable-next-line\n                        inchValue = parseInt(calculateValue[1].charAt(0)) + '.' + parseInt(calculateValue[1].charAt(1));\n                        inchValue = Math.round(inchValue);\n                    }\n                    else {\n                        inchValue = calculateValue[1];\n                    }\n                    if (!inchValue) {\n                        return (calculateValue[0] + ' ' + this.pdfViewer.localeObj.getConstant('sq') + ' ' + this.pdfViewer.localeObj.getConstant('ft'));\n                    }\n                    else {\n                        return (calculateValue[0] + ' ' + this.pdfViewer.localeObj.getConstant('sq') + ' ' + this.pdfViewer.localeObj.getConstant('ft') + ' ' + inchValue + ' ' + this.pdfViewer.localeObj.getConstant('in'));\n                    }\n                }\n                else {\n                    return (calculateValue[0] + ' ' + this.pdfViewer.localeObj.getConstant('sq') + ' ' + this.pdfViewer.localeObj.getConstant('ft'));\n                }\n            }\n            else {\n                return (Math.round(area * 100) / 100) + ' ' + this.pdfViewer.localeObj.getConstant('sq') + ' ' + this.pdfViewer.localeObj.getConstant('in');\n            }\n        }\n        if (values.unit === 'm') {\n            return ((area * 100) / 100) + ' ' + this.pdfViewer.localeObj.getConstant('sq') + ' ' + this.pdfViewer.localeObj.getConstant(values.unit);\n        }\n        return (Math.round(area * 100) / 100) + ' ' + this.pdfViewer.localeObj.getConstant('sq') + ' ' + this.pdfViewer.localeObj.getConstant(values.unit);\n    };\n    MeasureAnnotation.prototype.getArea = function (points, factor, unit) {\n        var area = 0;\n        var j = points.length - 1;\n        for (var i = 0; i < points.length; i++) {\n            // eslint-disable-next-line max-len\n            area += (points[j].x * this.pixelToPointFactor * factor + points[i].x * this.pixelToPointFactor * factor) * (points[j].y * this.pixelToPointFactor * factor - points[i].y * this.pixelToPointFactor * factor);\n            j = i;\n        }\n        if (unit === 'ft_in') {\n            return (Math.abs((area) * 2.0));\n        }\n        else {\n            return (Math.abs((area) / 2.0));\n        }\n    };\n    /**\n     * @param points\n     * @param id\n     * @param pageNumber\n     * @param points\n     * @param id\n     * @param pageNumber\n     * @param points\n     * @param id\n     * @param pageNumber\n     * @private\n     */\n    MeasureAnnotation.prototype.calculateVolume = function (points, id, pageNumber) {\n        // eslint-disable-next-line\n        var values = this.getCurrentValues(id, pageNumber);\n        var depth = values.depth ? values.depth : this.volumeDepth;\n        var area = this.getArea(points, values.factor, values.unit);\n        var volume = area * ((depth * this.convertUnitToPoint(values.unit)) * values.factor) * values.ratio;\n        if (values.unit === 'ft_in') {\n            // eslint-disable-next-line\n            var calculateValue = Math.round(volume * 100) / 100;\n            if (calculateValue >= 12) {\n                calculateValue = (Math.round(calculateValue / 12 * 100) / 100).toString();\n                calculateValue = calculateValue.split('.');\n                if (calculateValue[1]) {\n                    // eslint-disable-next-line\n                    var inchValue = 0;\n                    if (calculateValue[1].charAt(1)) {\n                        // eslint-disable-next-line\n                        inchValue = parseInt(calculateValue[1].charAt(0)) + '.' + parseInt(calculateValue[1].charAt(1));\n                        inchValue = Math.round(inchValue);\n                    }\n                    else {\n                        inchValue = calculateValue[1];\n                    }\n                    if (!inchValue) {\n                        return (calculateValue[0] + ' ' + this.pdfViewer.localeObj.getConstant('cu') + ' ' + this.pdfViewer.localeObj.getConstant('ft'));\n                    }\n                    else {\n                        return (calculateValue[0] + ' ' + this.pdfViewer.localeObj.getConstant('cu') + ' ' + this.pdfViewer.localeObj.getConstant('ft') + ' ' + inchValue + ' ' + this.pdfViewer.localeObj.getConstant('in'));\n                    }\n                }\n                else {\n                    return (calculateValue[0] + ' ' + this.pdfViewer.localeObj.getConstant('cu') + ' ' + this.pdfViewer.localeObj.getConstant('ft'));\n                }\n            }\n            else {\n                return (Math.round(volume * 100) / 100) + ' ' + this.pdfViewer.localeObj.getConstant('cu') + ' ' + this.pdfViewer.localeObj.getConstant('in');\n            }\n        }\n        return (Math.round(volume * 100) / 100) + ' ' + this.pdfViewer.localeObj.getConstant('cu') + ' ' + this.pdfViewer.localeObj.getConstant(values.unit);\n    };\n    /**\n     * @param pdfAnnotationBase\n     * @private\n     */\n    MeasureAnnotation.prototype.calculatePerimeter = function (pdfAnnotationBase) {\n        var perimeter = Point.getLengthFromListOfPoints(pdfAnnotationBase.vertexPoints);\n        return this.setConversion(perimeter * this.pixelToPointFactor, pdfAnnotationBase);\n    };\n    MeasureAnnotation.prototype.getFactor = function (unit) {\n        var factor;\n        switch (unit) {\n            case 'in':\n                factor = (1 / 72);\n                break;\n            case 'cm':\n                factor = (1 / 28.346);\n                break;\n            case 'mm':\n                factor = (1 / 2.835);\n                break;\n            case 'pt':\n                factor = 1;\n                break;\n            case 'p':\n                factor = 1 / 12;\n                break;\n            case 'ft':\n                factor = 1 / 864;\n                break;\n            case 'ft_in':\n                factor = 1 / 72;\n                break;\n            case 'm':\n                factor = (1 / 2834.64567);\n                break;\n        }\n        return factor;\n    };\n    MeasureAnnotation.prototype.convertPointToUnits = function (factor, value, unit) {\n        var convertedValue;\n        if (unit === 'ft_in') {\n            // eslint-disable-next-line\n            var calculateValue = Math.round((value * factor) * 100) / 100;\n            if (calculateValue >= 12) {\n                calculateValue = (Math.round(calculateValue / 12 * 100) / 100).toString();\n                calculateValue = calculateValue.split('.');\n                if (calculateValue[1]) {\n                    // eslint-disable-next-line\n                    var inchValue = 0;\n                    if (calculateValue[1].charAt(1)) {\n                        // eslint-disable-next-line\n                        inchValue = parseInt(calculateValue[1].charAt(0)) + '.' + parseInt(calculateValue[1].charAt(1));\n                        inchValue = Math.round(inchValue);\n                    }\n                    else {\n                        inchValue = calculateValue[1];\n                    }\n                    if (!inchValue) {\n                        convertedValue = calculateValue[0] + ' ' + this.pdfViewer.localeObj.getConstant('ft');\n                    }\n                    else {\n                        convertedValue = calculateValue[0] + ' ' + this.pdfViewer.localeObj.getConstant('ft') + ' ' + inchValue + ' ' + this.pdfViewer.localeObj.getConstant('in');\n                    }\n                }\n                else {\n                    convertedValue = calculateValue[0] + ' ' + this.pdfViewer.localeObj.getConstant('ft');\n                }\n            }\n            else {\n                convertedValue = Math.round((value * factor) * 100) / 100 + ' ' + this.pdfViewer.localeObj.getConstant('in');\n            }\n        }\n        else {\n            convertedValue = Math.round((value * factor) * 100) / 100 + ' ' + this.pdfViewer.localeObj.getConstant(unit);\n        }\n        return convertedValue;\n    };\n    MeasureAnnotation.prototype.convertUnitToPoint = function (unit) {\n        var factor;\n        switch (unit) {\n            case 'in':\n                factor = 72;\n                break;\n            case 'cm':\n                factor = 28.346;\n                break;\n            case 'mm':\n                factor = 2.835;\n                break;\n            case 'pt':\n                factor = 1;\n                break;\n            case 'p':\n                factor = 12;\n                break;\n            case 'ft':\n                factor = 864;\n                break;\n            case 'ft_in':\n                factor = 72;\n                break;\n            case 'm':\n                factor = 2834.64567;\n                break;\n        }\n        return factor;\n    };\n    // eslint-disable-next-line\n    MeasureAnnotation.prototype.getStringifiedMeasure = function (measure) {\n        if (!isNullOrUndefined(measure)) {\n            measure.angle = JSON.stringify(measure.angle);\n            measure.area = JSON.stringify(measure.area);\n            measure.distance = JSON.stringify(measure.distance);\n            measure.volume = JSON.stringify(measure.volume);\n        }\n        return JSON.stringify(measure);\n    };\n    // eslint-disable-next-line\n    MeasureAnnotation.prototype.getRgbCode = function (colorString) {\n        if (!colorString.match(/#([a-z0-9]+)/gi) && !colorString.match(/^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/)) {\n            colorString = this.pdfViewer.annotationModule.nameToHash(colorString);\n        }\n        var stringArray = colorString.split(',');\n        if (isNullOrUndefined(stringArray[1])) {\n            colorString = this.pdfViewer.annotationModule.getValue(colorString, 'rgba');\n            stringArray = colorString.split(',');\n        }\n        // eslint-disable-next-line radix\n        var r = parseInt(stringArray[0].split('(')[1]);\n        // eslint-disable-next-line radix\n        var g = parseInt(stringArray[1]);\n        // eslint-disable-next-line radix\n        var b = parseInt(stringArray[2]);\n        // eslint-disable-next-line radix\n        var a = parseInt(stringArray[3]);\n        return { r: r, g: g, b: b, a: a };\n    };\n    /**\n     * @param annotation\n     * @param pageNumber\n     * @param annotation\n     * @param pageNumber\n     * @private\n     */\n    // eslint-disable-next-line\n    MeasureAnnotation.prototype.saveImportedMeasureAnnotations = function (annotation, pageNumber) {\n        var annotationObject = null;\n        var vertexPoints = null;\n        if (annotation.VertexPoints) {\n            vertexPoints = [];\n            for (var j = 0; j < annotation.VertexPoints.length; j++) {\n                var point = { x: annotation.VertexPoints[j].X, y: annotation.VertexPoints[j].Y };\n                vertexPoints.push(point);\n            }\n        }\n        var measureObject = {\n            // eslint-disable-next-line max-len\n            ratio: annotation.Calibrate.Ratio, x: this.getNumberFormatArray(annotation.Calibrate.X), distance: this.getNumberFormatArray(annotation.Calibrate.Distance), area: this.getNumberFormatArray(annotation.Calibrate.Area), angle: this.getNumberFormatArray(annotation.Calibrate.Angle), volume: this.getNumberFormatArray(annotation.Calibrate.Volume),\n            targetUnitConversion: annotation.Calibrate.TargetUnitConversion\n        };\n        if (annotation.Calibrate.Depth) {\n            measureObject.depth = annotation.Calibrate.Depth;\n        }\n        if (annotation.Bounds && annotation.EnableShapeLabel === true) {\n            // eslint-disable-next-line max-len\n            annotation.LabelBounds = this.pdfViewer.annotationModule.inputElementModule.calculateLabelBoundsFromLoadedDocument(annotation.Bounds);\n            annotation.LabelBorderColor = annotation.LabelBorderColor ? annotation.LabelBorderColor : annotation.StrokeColor;\n            annotation.FontColor = annotation.FontColor ? annotation.FontColor : annotation.StrokeColor;\n            annotation.LabelFillColor = annotation.LabelFillColor ? annotation.LabelFillColor : annotation.FillColor;\n            annotation.FontSize = annotation.FontSize ? annotation.FontSize : 16;\n            annotation.LabelSettings = annotation.LabelSettings ? annotation.LabelSettings : this.pdfViewer.shapeLabelSettings;\n        }\n        // eslint-disable-next-line max-len\n        annotation.AnnotationSettings = annotation.AnnotationSettings ? annotation.AnnotationSettings : this.pdfViewer.annotationModule.updateAnnotationSettings(annotation);\n        annotation.Author = this.pdfViewer.annotationModule.updateAnnotationAuthor('measure', annotation.Subject);\n        annotationObject = {\n            // eslint-disable-next-line max-len\n            id: 'measure', shapeAnnotationType: annotation.ShapeAnnotationType, author: annotation.Author, modifiedDate: annotation.ModifiedDate, subject: annotation.Subject,\n            note: annotation.Note, strokeColor: annotation.StrokeColor, fillColor: annotation.FillColor, opacity: annotation.Opacity, thickness: annotation.Thickness, rectangleDifference: annotation.RectangleDifference,\n            // eslint-disable-next-line max-len\n            borderStyle: annotation.BorderStyle, borderDashArray: annotation.BorderDashArray, rotateAngle: annotation.RotateAngle, isCloudShape: annotation.IsCloudShape,\n            cloudIntensity: annotation.CloudIntensity, vertexPoints: vertexPoints, lineHeadStart: annotation.LineHeadStart, lineHeadEnd: annotation.LineHeadEnd, isLocked: annotation.IsLocked,\n            // eslint-disable-next-line max-len\n            bounds: { left: annotation.Bounds.X, top: annotation.Bounds.Y, width: annotation.Bounds.Width, height: annotation.Bounds.Height, right: annotation.Bounds.Right, bottom: annotation.Bounds.Bottom },\n            caption: annotation.Caption, captionPosition: annotation.CaptionPosition, calibrate: measureObject, leaderLength: annotation.LeaderLength, leaderLineExtension: annotation.LeaderLineExtension,\n            // eslint-disable-next-line max-len\n            leaderLineOffset: annotation.LeaderLineOffset, indent: annotation.Indent, annotName: annotation.AnnotName, comments: this.pdfViewer.annotationModule.getAnnotationComments(annotation.Comments, annotation, annotation.Author),\n            review: { state: annotation.State, stateModel: annotation.StateModel, modifiedDate: annotation.ModifiedDate, author: annotation.Author },\n            labelContent: annotation.LabelContent, enableShapeLabel: annotation.EnableShapeLabel, labelFillColor: annotation.LabelFillColor,\n            labelBorderColor: annotation.LabelBorderColor, fontColor: annotation.FontColor, fontSize: annotation.FontSize,\n            // eslint-disable-next-line max-len\n            labelBounds: annotation.LabelBounds, annotationSelectorSettings: this.getSettings(annotation), labelSettings: annotation.LabelSettings, annotationSettings: annotation.AnnotationSettings,\n            customData: this.pdfViewer.annotation.getCustomData(annotation), isPrint: annotation.IsPrint, isCommentLock: annotation.IsCommentLock, isAnnotationRotated: false\n        };\n        this.pdfViewer.annotationModule.storeAnnotations(pageNumber, annotationObject, '_annotations_shape_measure');\n    };\n    /**\n     * @param annotation\n     * @param pageNumber\n     * @private\n     */\n    // eslint-disable-next-line\n    MeasureAnnotation.prototype.updateMeasureAnnotationCollections = function (annotation, pageNumber) {\n        // eslint-disable-next-line\n        var annotationObject = null;\n        var vertexPoints = null;\n        if (annotation.VertexPoints) {\n            vertexPoints = [];\n            for (var j = 0; j < annotation.VertexPoints.length; j++) {\n                var point = { x: annotation.VertexPoints[j].X, y: annotation.VertexPoints[j].Y };\n                vertexPoints.push(point);\n            }\n        }\n        var measureObject = {\n            // eslint-disable-next-line max-len\n            ratio: annotation.Calibrate.Ratio, x: this.getNumberFormatArray(annotation.Calibrate.X), distance: this.getNumberFormatArray(annotation.Calibrate.Distance), area: this.getNumberFormatArray(annotation.Calibrate.Area), angle: this.getNumberFormatArray(annotation.Calibrate.Angle), volume: this.getNumberFormatArray(annotation.Calibrate.Volume),\n            targetUnitConversion: annotation.Calibrate.TargetUnitConversion\n        };\n        if (annotation.Calibrate.Depth) {\n            measureObject.depth = annotation.Calibrate.Depth;\n        }\n        if (annotation.Bounds && annotation.EnableShapeLabel === true) {\n            // eslint-disable-next-line max-len\n            annotation.LabelBounds = this.pdfViewer.annotationModule.inputElementModule.calculateLabelBoundsFromLoadedDocument(annotation.Bounds);\n            annotation.LabelBorderColor = annotation.LabelBorderColor ? annotation.LabelBorderColor : annotation.StrokeColor;\n            annotation.FontColor = annotation.FontColor ? annotation.FontColor : annotation.StrokeColor;\n            annotation.LabelFillColor = annotation.LabelFillColor ? annotation.LabelFillColor : annotation.FillColor;\n            annotation.FontSize = annotation.FontSize ? annotation.FontSize : 16;\n            var settings = this.pdfViewer.shapeLabelSettings;\n            var labelSettings = { borderColor: annotation.StrokeColor, fillColor: annotation.FillColor, fontColor: annotation.FontColor,\n                fontSize: annotation.FontSize, labelContent: annotation.LabelContent, labelHeight: settings.labelHeight, labelWidth: settings.labelWidth, opacity: annotation.Opacity\n            };\n            annotation.LabelSettings = annotation.LabelSettings ? annotation.LabelSettings : labelSettings;\n        }\n        // eslint-disable-next-line max-len\n        annotation.AnnotationSelectorSettings = annotation.AnnotationSelectorSettings ? annotation.AnnotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n        // eslint-disable-next-line max-len\n        annotation.AnnotationSettings = annotation.AnnotationSettings ? annotation.AnnotationSettings : this.pdfViewer.annotationModule.updateAnnotationSettings(annotation);\n        if (annotation.IsLocked) {\n            annotation.AnnotationSettings.isLock = annotation.IsLocked;\n        }\n        annotationObject = {\n            // eslint-disable-next-line max-len\n            id: 'measure', shapeAnnotationType: annotation.ShapeAnnotationType, author: annotation.Author, modifiedDate: annotation.ModifiedDate, subject: annotation.Subject,\n            note: annotation.Note, strokeColor: annotation.StrokeColor, fillColor: annotation.FillColor, opacity: annotation.Opacity, thickness: annotation.Thickness, rectangleDifference: annotation.RectangleDifference,\n            // eslint-disable-next-line max-len\n            borderStyle: annotation.BorderStyle, borderDashArray: annotation.BorderDashArray, rotateAngle: annotation.RotateAngle, isCloudShape: annotation.IsCloudShape,\n            cloudIntensity: annotation.CloudIntensity, vertexPoints: vertexPoints, lineHeadStart: annotation.LineHeadStart, lineHeadEnd: annotation.LineHeadEnd, isLocked: annotation.IsLocked,\n            // eslint-disable-next-line max-len\n            bounds: { left: annotation.Bounds.X, top: annotation.Bounds.Y, width: annotation.Bounds.Width, height: annotation.Bounds.Height, right: annotation.Bounds.Right, bottom: annotation.Bounds.Bottom },\n            caption: annotation.Caption, captionPosition: annotation.CaptionPosition, calibrate: measureObject, leaderLength: annotation.LeaderLength, leaderLineExtension: annotation.LeaderLineExtension,\n            // eslint-disable-next-line max-len\n            leaderLineOffset: annotation.LeaderLineOffset, indent: annotation.Indent, annotationId: annotation.AnnotName, comments: this.pdfViewer.annotationModule.getAnnotationComments(annotation.Comments, annotation, annotation.Author),\n            review: { state: annotation.State, stateModel: annotation.StateModel, modifiedDate: annotation.ModifiedDate, author: annotation.Author },\n            labelContent: annotation.LabelContent, enableShapeLabel: annotation.EnableShapeLabel, labelFillColor: annotation.LabelFillColor,\n            labelBorderColor: annotation.LabelBorderColor, fontColor: annotation.FontColor, fontSize: annotation.FontSize,\n            // eslint-disable-next-line max-len\n            labelBounds: annotation.LabelBounds, pageNumber: pageNumber, annotationSelectorSettings: annotation.AnnotationSelectorSettings, labelSettings: annotation.labelSettings, annotationSettings: annotation.AnnotationSettings,\n            customData: this.pdfViewer.annotation.getCustomData(annotation), isPrint: annotation.IsPrint\n        };\n        return annotationObject;\n    };\n    /**\n    * This method used to add annotations with using program.\n    *\n    * @param annotationType - It describes the annotation type\n    * @param annotationObject - It describes type of annotation object\n    * @param offset - It describes about the annotation bounds or location\n    * @returns Object\n    * @private\n    */\n    MeasureAnnotation.prototype.updateAddAnnotationDetails = function (annotationType, annotationObject, offset) {\n        //Creating new object if annotationObject is null\n        if (!annotationObject) {\n            annotationObject = { offset: { x: 10, y: 10 }, pageNumber: 0, width: undefined, height: undefined };\n            offset = annotationObject.offset;\n        }\n        else if (!annotationObject.offset)\n            offset = { x: 10, y: 10 };\n        else\n            offset = annotationObject.offset;\n        //Initialize the annotation settings\n        var annotationSelectorSettings = null;\n        var allowedInteractions = null;\n        var annotationSettings = null;\n        var measureAnnotationType = '';\n        var shapeAnnotationType = '';\n        var subject = '';\n        var isArrow = false;\n        var vertexPoints = [];\n        //Creating the CurrentDate and Annotation name\n        var currentDateString = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n        var annotationName = this.pdfViewer.annotation.createGUID();\n        if (annotationType == 'Distance') {\n            //Creating annotation settings\n            annotationSelectorSettings = this.pdfViewer.lineSettings.annotationSelectorSettings ? this.pdfViewer.lineSettings.annotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n            annotationSettings = this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.lineSettings);\n            allowedInteractions = this.pdfViewer.lineSettings.allowedInteractions ? this.pdfViewer.lineSettings.allowedInteractions : this.pdfViewer.annotationSettings.allowedInteractions;\n            measureAnnotationType = 'LineDimension';\n            shapeAnnotationType = 'Line';\n            subject = 'Distance calculation';\n            isArrow = true;\n            if (annotationObject.vertexPoints)\n                vertexPoints = annotationObject.vertexPoints;\n            else\n                vertexPoints = [{ x: offset.x, y: offset.y }, { x: offset.x + 100, y: offset.y }];\n            annotationObject.width = annotationObject.width ? annotationObject.width : 1;\n            annotationObject.height = annotationObject.height ? annotationObject.height : 1;\n        }\n        else if (annotationType == 'Perimeter') {\n            //Creating annotation settings\n            annotationSelectorSettings = this.pdfViewer.arrowSettings.annotationSelectorSettings ? this.pdfViewer.arrowSettings.annotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n            annotationSettings = this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.arrowSettings);\n            allowedInteractions = this.pdfViewer.arrowSettings.allowedInteractions ? this.pdfViewer.arrowSettings.allowedInteractions : this.pdfViewer.annotationSettings.allowedInteractions;\n            measureAnnotationType = 'PolyLineDimension';\n            shapeAnnotationType = 'Polyline';\n            subject = 'Perimeter calculation';\n            isArrow = true;\n            if (annotationObject.vertexPoints)\n                vertexPoints = annotationObject.vertexPoints;\n            else\n                vertexPoints = [{ x: offset.x, y: offset.y },\n                    { x: offset.x + 85, y: offset.y },\n                    { x: offset.x + 86, y: offset.y + 62 }];\n            annotationObject.width = annotationObject.width ? annotationObject.width : 1;\n            annotationObject.height = annotationObject.height ? annotationObject.height : 1;\n        }\n        else if (annotationType == 'Area') {\n            //Creating annotation settings\n            annotationSelectorSettings = this.pdfViewer.rectangleSettings.annotationSelectorSettings ? this.pdfViewer.rectangleSettings.annotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n            annotationSettings = this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.rectangleSettings);\n            allowedInteractions = this.pdfViewer.rectangleSettings.allowedInteractions ? this.pdfViewer.rectangleSettings.allowedInteractions : this.pdfViewer.annotationSettings.allowedInteractions;\n            measureAnnotationType = 'PolygonDimension';\n            shapeAnnotationType = 'Polygon';\n            subject = 'Area calculation';\n            if (annotationObject.vertexPoints)\n                vertexPoints = annotationObject.vertexPoints;\n            else\n                vertexPoints = [{ x: offset.x, y: offset.y },\n                    { x: offset.x + 88, y: offset.y - 1 },\n                    { x: offset.x + 89, y: offset.y + 53 },\n                    { x: offset.x, y: offset.y }];\n            annotationObject.width = annotationObject.width ? annotationObject.width : 1;\n            annotationObject.height = annotationObject.height ? annotationObject.height : 1;\n        }\n        else if (annotationType == 'Radius') {\n            //Creating annotation settings\n            annotationSelectorSettings = this.pdfViewer.circleSettings.annotationSelectorSettings ? this.pdfViewer.circleSettings.annotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n            annotationSettings = this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.circleSettings);\n            allowedInteractions = this.pdfViewer.circleSettings.allowedInteractions ? this.pdfViewer.circleSettings.allowedInteractions : this.pdfViewer.annotationSettings.allowedInteractions;\n            measureAnnotationType = 'PolygonRadius';\n            shapeAnnotationType = 'Circle';\n            subject = 'Radius calculation';\n            annotationObject.width = annotationObject.width ? annotationObject.width : 100;\n            annotationObject.height = annotationObject.height ? annotationObject.height : 100;\n            vertexPoints = null;\n        }\n        else if (annotationType == 'Volume') {\n            //Creating annotation settings\n            annotationSelectorSettings = this.pdfViewer.polygonSettings.annotationSelectorSettings ? this.pdfViewer.polygonSettings.annotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n            annotationSettings = this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.polygonSettings);\n            allowedInteractions = this.pdfViewer.polygonSettings.allowedInteractions ? this.pdfViewer.polygonSettings.allowedInteractions : this.pdfViewer.annotationSettings.allowedInteractions;\n            measureAnnotationType = 'PolygonVolume';\n            shapeAnnotationType = 'Polygon';\n            subject = 'Volume calculation';\n            if (annotationObject.vertexPoints)\n                vertexPoints = annotationObject.vertexPoints;\n            else\n                vertexPoints = [\n                    { x: offset.x, y: offset.y },\n                    { x: offset.x, y: offset.y + 109 },\n                    { x: offset.x + 120, y: offset.y + 109 },\n                    { x: offset.x + 120, y: offset.y - 1 },\n                    { x: offset.x, y: offset.y }\n                ];\n            annotationObject.width = annotationObject.width ? annotationObject.width : 1;\n            annotationObject.height = annotationObject.height ? annotationObject.height : 1;\n        }\n        annotationSettings.isLock = annotationObject.isLock ? annotationObject.isLock : false;\n        annotationSettings.minHeight = annotationObject.minHeight ? annotationObject.minHeight : 0;\n        annotationSettings.minWidth = annotationObject.minWidth ? annotationObject.minWidth : 0;\n        annotationSettings.maxWidth = annotationObject.maxWidth ? annotationObject.maxWidth : 0;\n        annotationSettings.maxHeight = annotationObject.maxHeight ? annotationObject.maxHeight : 0;\n        //Calculating area for all the measurements\n        var values = { depth: 96,\n            factor: 0.013888888888888888,\n            ratio: 1,\n            unit: 'in' };\n        var notes = '';\n        if (vertexPoints || annotationType == 'Radius' || annotationType == 'Volume') {\n            if (annotationType == 'Distance' || annotationType == 'Perimeter' || annotationType == 'Radius') {\n                var length_1 = 0;\n                if (annotationType == 'Radius') {\n                    length_1 = (annotationObject.width / 2) * this.pixelToPointFactor;\n                }\n                else {\n                    for (var i_1 = 0; i_1 < vertexPoints.length - 1; i_1++) {\n                        length_1 += Math.sqrt(Math.pow((vertexPoints[i_1].x - vertexPoints[i_1 + 1].x), 2) + Math.pow((vertexPoints[i_1].y - vertexPoints[i_1 + 1].y), 2));\n                    }\n                    length_1 = length_1 * this.pixelToPointFactor;\n                }\n                var scaledValue = length_1 * values.ratio;\n                notes = this.convertPointToUnits(values.factor, scaledValue, values.unit);\n            }\n            else if (annotationType == 'Area' || annotationType == 'Volume') {\n                var area = 0;\n                var j = vertexPoints.length - 1;\n                for (var i = 0; i < vertexPoints.length; i++) {\n                    area += (vertexPoints[j].x * this.pixelToPointFactor * values.factor + vertexPoints[i].x * this.pixelToPointFactor * values.factor) * (vertexPoints[j].y * this.pixelToPointFactor * values.factor - vertexPoints[i].y * this.pixelToPointFactor * values.factor);\n                    j = i;\n                }\n                area = (Math.abs((area) / 2.0));\n                if (annotationType == 'Volume') {\n                    area = area * ((values.depth * this.convertUnitToPoint(values.unit)) * values.factor) * values.ratio;\n                    notes = Math.round(area * 100) / 100 + this.pdfViewer.localeObj.getConstant('cu') + ' ' + this.pdfViewer.localeObj.getConstant(values.unit);\n                }\n                else\n                    notes = Math.round(area * 100) / 100 + this.pdfViewer.localeObj.getConstant('sq') + ' ' + this.pdfViewer.localeObj.getConstant(values.unit);\n            }\n        }\n        //Converting points model into vertex property\n        if (vertexPoints)\n            vertexPoints = this.pdfViewer.annotation.getVertexPointsXY(vertexPoints);\n        //Creating Annotation objects with it's proper properties\n        var measureShapeAnnotation = [];\n        var shape = {\n            AllowedInteractions: annotationObject.allowedInteractions ? annotationObject.allowedInteractions : allowedInteractions,\n            AnnotName: annotationName,\n            AnnotType: 'shape_measure',\n            AnnotationSelectorSettings: annotationObject.annotationSelectorSettings ? annotationObject.annotationSelectorSettings : annotationSelectorSettings,\n            AnnotationSettings: annotationSettings,\n            Author: annotationObject.author ? annotationObject.author : 'Guest',\n            BorderDashArray: annotationObject.borderDashArray ? annotationObject.borderDashArray : 0,\n            BorderStyle: 'Solid',\n            Bounds: { X: offset.x, Y: offset.y, Width: annotationObject.width, Height: annotationObject.height, Left: offset.x, Top: offset.y, Location: { X: offset.x, Y: offset.y }, Size: { Height: annotationObject.height, IsEmpty: false, Width: annotationObject.width } },\n            Calibrate: {\n                Area: [{ ConversionFactor: 1, Denominator: 100, FormatDenominator: false, FractionalType: 'D', Unit: 'sq in' }],\n                Depth: annotationObject.depth ? annotationObject.depth : 0,\n                Distance: [{ ConversionFactor: 1, Denominator: 100, FormatDenominator: false, FractionalType: 'D', Unit: 'in' }],\n                Ratio: '1 in = 1 in',\n                TargetUnitConversion: 0,\n                Volume: null,\n                X: [{ ConversionFactor: 0.013888889, Denominator: 100, FormatDenominator: false, FractionalType: 'D', Unit: 'in' }]\n            },\n            Caption: true,\n            CaptionPosition: 'Top',\n            CloudIntensity: 0,\n            Comments: null,\n            CustomData: annotationObject.customData ? annotationObject.customData : null,\n            CreatedDate: currentDateString,\n            EnableShapeLabel: false,\n            ExistingCustomData: null,\n            FillColor: annotationObject.fillColor ? annotationObject.fillColor : '#ffffff00',\n            FontColor: null,\n            FontSize: 0,\n            Indent: measureAnnotationType,\n            IsCloudShape: false,\n            IsCommentLock: false,\n            IsLocked: annotationObject.isLock ? annotationObject.isLock : false,\n            IsPrint: annotationObject.isPrint ? annotationObject.isPrint : true,\n            LabelBorderColor: null,\n            LabelBounds: { X: 0, Y: 0, Width: 0, Height: 0 },\n            LabelContent: null,\n            LabelFillColor: null,\n            LabelSettings: null,\n            LeaderLength: 0,\n            LeaderLineExtension: 0,\n            LeaderLineOffset: 0,\n            LineHeadEnd: annotationObject.lineHeadStartStyle ? annotationObject.lineHeadStartStyle : isArrow ? 'ClosedArrow' : 'None',\n            LineHeadStart: annotationObject.lineHeadEndStyle ? annotationObject.lineHeadEndStyle : isArrow ? 'ClosedArrow' : 'None',\n            ModifiedDate: '',\n            Note: notes,\n            Opacity: annotationObject.opacity ? annotationObject.opacity : 1,\n            RectangleDifference: null,\n            RotateAngle: 'RotateAngle0',\n            ShapeAnnotationType: shapeAnnotationType,\n            State: '',\n            StateModel: '',\n            StrokeColor: annotationObject.strokeColor ? annotationObject.strokeColor : '#ff0000',\n            Subject: subject,\n            Thickness: annotationObject.thickness ? annotationObject.thickness : 1,\n            VertexPoints: vertexPoints\n        };\n        //Adding the annotation object to an array and return it\n        measureShapeAnnotation[0] = shape;\n        return { measureShapeAnnotation: measureShapeAnnotation };\n    };\n    return MeasureAnnotation;\n}());\nexport { MeasureAnnotation };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}