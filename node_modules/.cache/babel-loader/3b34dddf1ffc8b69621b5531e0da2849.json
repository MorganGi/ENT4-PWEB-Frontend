{"ast":null,"code":"/**\n * Defines util methods used by Rich Text Editor.\n */\nimport { isNullOrUndefined as isNOU, addClass, removeClass, selectAll, createElement } from '@syncfusion/ej2-base';\nimport { Browser, detach, SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nimport * as classes from '../base/classes';\nimport * as CONSTANT from '../base/constant';\nimport * as model from '../models/items';\nimport { toolsLocale, fontNameLocale, formatsLocale, numberFormatListLocale, bulletFormatListLocale } from '../models/default-locale';\nvar undoRedoItems = ['Undo', 'Redo'];\nvar inlineNode = ['a', 'abbr', 'acronym', 'audio', 'b', 'bdi', 'bdo', 'big', 'br', 'button', 'canvas', 'cite', 'code', 'data', 'datalist', 'del', 'dfn', 'em', 'embed', 'font', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'label', 'map', 'mark', 'meter', 'noscript', 'object', 'output', 'picture', 'progress', 'q', 'ruby', 's', 'samp', 'script', 'select', 'slot', 'small', 'span', 'strong', 'strike', 'sub', 'sup', 'svg', 'template', 'textarea', 'time', 'u', 'tt', 'var', 'video', 'wbr'];\n/**\n * @param {string} val - specifies the string value\n * @param {string} items - specifies the value\n * @returns {number} - returns the number value\n * @hidden\n */\n\nexport function getIndex(val, items) {\n  var index = -1;\n  items.some(function (item, i) {\n    if (typeof item === 'string' && val === item.toLocaleLowerCase()) {\n      index = i;\n      return true;\n    }\n\n    return false;\n  });\n  return index;\n}\n/**\n * @param {Element} element - specifies the element\n * @param {string} className - specifies the string value\n * @returns {boolean} - returns the boolean value\n * @hidden\n */\n\nexport function hasClass(element, className) {\n  var hasClass = false;\n\n  if (element.classList.contains(className)) {\n    hasClass = true;\n  }\n\n  return hasClass;\n}\n/**\n * @param {IDropDownItemModel} items - specifies the item model\n * @param {string} value - specifies the string value\n * @param {string} type - specifies the string value\n * @param {string} returnType - specifies the return type\n * @returns {string} - returns the string value\n * @hidden\n */\n\nexport function getDropDownValue(items, value, type, returnType) {\n  var data;\n  var result;\n\n  for (var k = 0; k < items.length; k++) {\n    if (type === 'value' && items[k].value.toLocaleLowerCase() === value.toLocaleLowerCase()) {\n      data = items[k];\n      break;\n    } else if (type === 'text' && items[k].text.toLocaleLowerCase() === value.toLocaleLowerCase()) {\n      data = items[k];\n      break;\n    } else if (type === 'subCommand' && items[k].subCommand.toLocaleLowerCase() === value.toLocaleLowerCase()) {\n      data = items[k];\n      break;\n    }\n  }\n\n  if (!isNOU(data)) {\n    switch (returnType) {\n      case 'text':\n        result = data.text;\n        break;\n\n      case 'value':\n        result = data.value;\n        break;\n\n      case 'iconCss':\n        result = data.iconCss;\n        break;\n    }\n  }\n\n  return result;\n}\n/**\n * @returns {boolean} - returns the boolean value\n * @hidden\n */\n\nexport function isIDevice() {\n  var result = false;\n\n  if (Browser.isDevice && Browser.isIos) {\n    result = true;\n  }\n\n  return result;\n}\n/**\n * @param {string} value - specifies the value\n * @returns {string} - returns the string value\n * @hidden\n */\n\nexport function getFormattedFontSize(value) {\n  if (isNOU(value)) {\n    return '';\n  }\n\n  return value;\n}\n/**\n * @param {MouseEvent} e - specifies the mouse event\n * @param {HTMLElement} parentElement - specifies the parent element\n * @param {boolean} isIFrame - specifies the boolean value\n * @returns {number} - returns the number\n * @hidden\n */\n\nexport function pageYOffset(e, parentElement, isIFrame) {\n  var y = 0;\n\n  if (isIFrame) {\n    y = window.pageYOffset + parentElement.getBoundingClientRect().top + e.clientY;\n  } else {\n    y = e.pageY;\n  }\n\n  return y;\n}\n/**\n * @param {string} item - specifies the string\n * @param {ServiceLocator} serviceLocator - specifies the service locator\n * @returns {string} - returns the string\n * @hidden\n */\n\nexport function getTooltipText(item, serviceLocator) {\n  var i10n = serviceLocator.getService('rteLocale');\n  var itemLocale = toolsLocale[item];\n  var tooltipText = i10n.getConstant(itemLocale);\n  return tooltipText;\n}\n/**\n * @param {ISetToolbarStatusArgs} e - specifies the e element\n * @param {boolean} isPopToolbar - specifies the boolean value\n * @param {IRichTextEditor} self - specifies the parent element\n * @returns {void}\n * @hidden\n */\n\nexport function setToolbarStatus(e, isPopToolbar, self) {\n  updateDropDownFontFormatLocale(self);\n  var dropDown = e.dropDownModule;\n  var data = e.args;\n  var keys = Object.keys(e.args);\n\n  for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n    var key = keys_1[_i];\n\n    for (var j = 0; j < e.tbItems.length; j++) {\n      var item = e.tbItems[j].subCommand;\n      var itemStr = item && item.toLocaleLowerCase();\n\n      if (item && itemStr === key || item === 'UL' && key === 'unorderedlist' || item === 'OL' && key === 'orderedlist' || itemStr === 'pre' && key === 'insertcode') {\n        if (typeof data[key] === 'boolean') {\n          if (data[key] === true) {\n            addClass([e.tbElements[j]], [classes.CLS_ACTIVE]);\n          } else {\n            removeClass([e.tbElements[j]], [classes.CLS_ACTIVE]);\n          }\n        } else if ((typeof data[key] === 'string' || data[key] === null) && getIndex(key, e.parent.toolbarSettings.items) > -1) {\n          var value = data[key] ? data[key] : '';\n          var result = '';\n\n          switch (key) {\n            case 'formats':\n              {\n                if (isNOU(dropDown.formatDropDown) || isPopToolbar || !isNOU(dropDown.formatDropDown) && dropDown.formatDropDown.isDestroyed) {\n                  break;\n                }\n\n                var formatItems = e.parent.format.types;\n                var formatContent = isNOU(e.parent.format.default) ? formatItems[0].text : e.parent.format.default;\n                result = getDropDownValue(formatItems, value, 'subCommand', 'text');\n                dropDown.formatDropDown.content = '<span style=\"display: inline-flex;' + 'width:' + e.parent.format.width + '\" >' + '<span class=\"e-rte-dropdown-btn-text' + ' ' + e.parent.cssClass + '\">' + (isNOU(result) ? formatContent : result) + '</span></span>';\n                dropDown.formatDropDown.dataBind();\n                break;\n              }\n\n            case 'alignments':\n              {\n                if (isNOU(dropDown.alignDropDown) || !isNOU(dropDown.alignDropDown) && dropDown.alignDropDown.isDestroyed) {\n                  break;\n                }\n\n                var alignItems = model.alignmentItems;\n                result = getDropDownValue(alignItems, value, 'subCommand', 'iconCss');\n                dropDown.alignDropDown.iconCss = isNOU(result) ? 'e-icons e-justify-left' : result;\n                dropDown.alignDropDown.dataBind();\n                break;\n              }\n\n            case 'fontname':\n              {\n                if (isNOU(dropDown.fontNameDropDown) || isPopToolbar || !isNOU(dropDown.fontNameDropDown) && dropDown.fontNameDropDown.isDestroyed) {\n                  break;\n                }\n\n                var fontNameItems = e.parent.fontFamily.items;\n                result = getDropDownValue(fontNameItems, value, 'value', 'text');\n                var fontNameContent = isNOU(e.parent.fontFamily.default) ? fontNameItems[0].text : e.parent.fontFamily.default;\n                var name_1 = isNOU(result) ? fontNameContent : result;\n                e.tbElements[j].title = name_1;\n                dropDown.fontNameDropDown.content = '<span style=\"display: inline-flex;' + 'width:' + e.parent.fontFamily.width + '\" >' + '<span class=\"e-rte-dropdown-btn-text' + ' ' + e.parent.cssClass + '\">' + name_1 + '</span></span>';\n                dropDown.fontNameDropDown.dataBind();\n                break;\n              }\n\n            case 'fontsize':\n              {\n                if (isNOU(dropDown.fontSizeDropDown) || !isNOU(dropDown.fontSizeDropDown) && dropDown.fontSizeDropDown.isDestroyed) {\n                  break;\n                }\n\n                var fontSizeItems = e.parent.fontSize.items;\n                var fontSizeContent = isNOU(e.parent.fontSize.default) ? fontSizeItems[1].text : e.parent.fontSize.default;\n                result = getDropDownValue(fontSizeItems, value === '' ? fontSizeContent.replace(/\\s/g, '') : value, 'value', 'text');\n                dropDown.fontSizeDropDown.content = '<span style=\"display: inline-flex;' + 'width:' + e.parent.fontSize.width + '\" >' + '<span class=\"e-rte-dropdown-btn-text' + ' ' + e.parent.cssClass + '\">' + getFormattedFontSize(result) + '</span></span>';\n                dropDown.fontSizeDropDown.dataBind();\n                break;\n              }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * @param {string} items - specifies the string value\n * @returns {string[]} - returns the array value\n * @hidden\n */\n\nexport function getCollection(items) {\n  if (typeof items === 'object') {\n    return items;\n  } else {\n    return [items];\n  }\n}\n/**\n * @param {string[]} items - specifies the array of string value\n * @param {IToolbarItemModel} toolbarItems - specifies the tool bar model\n * @returns {number} - returns the number\n * @hidden\n */\n\nexport function getTBarItemsIndex(items, toolbarItems) {\n  var itemsIndex = [];\n\n  for (var i = 0; i < items.length; i++) {\n    for (var j = 0; j < toolbarItems.length; j++) {\n      if (toolbarItems[j].type === 'Separator') {\n        continue;\n      } else {\n        if (items[i] === 'OrderedList' && toolbarItems[j].subCommand === 'OL') {\n          itemsIndex.push(j);\n          break;\n        } else if (items[i] === 'UnorderedList' && toolbarItems[j].subCommand === 'UL') {\n          itemsIndex.push(j);\n          break;\n        } else if (items[i] === 'InsertCode' && toolbarItems[j].subCommand === 'Pre') {\n          itemsIndex.push(j);\n          break;\n        } else if (items[i] === 'FileManager' && toolbarItems[j].subCommand === 'File') {\n          itemsIndex.push(j);\n          break;\n        } else if (typeof items[i] === 'object' && items[i].command === 'Custom') {\n          itemsIndex.push(i);\n          break;\n        } else if (items[i] === toolbarItems[j].subCommand) {\n          itemsIndex.push(j);\n          break;\n        }\n      }\n    }\n  }\n\n  return itemsIndex;\n}\n/**\n * @param {BaseToolbar} baseToolbar - specifies the base\n * @param {boolean} undoRedoStatus - specifies the boolean value\n * @returns {void}\n * @hidden\n */\n\nexport function updateUndoRedoStatus(baseToolbar, undoRedoStatus) {\n  var i = 0;\n  var trgItems = getTBarItemsIndex(getCollection(undoRedoItems), baseToolbar.toolbarObj.items);\n  var tbItems = selectAll('.' + classes.CLS_TB_ITEM, baseToolbar.toolbarObj.element);\n  var keys = Object.keys(undoRedoStatus);\n\n  for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n    var key = keys_2[_i];\n    var target = tbItems[trgItems[i]];\n\n    if (target) {\n      baseToolbar.toolbarObj.enableItems(target, undoRedoStatus[key]);\n    }\n\n    i++;\n  }\n}\n/**\n * To dispatch the event manually\n *\n * @param {Element} element - specifies the element.\n * @param {string} type - specifies the string type.\n * @returns {void}\n * @hidden\n\n */\n\nexport function dispatchEvent(element, type) {\n  var evt = document.createEvent('HTMLEvents');\n  evt.initEvent(type, false, true);\n  element.dispatchEvent(evt);\n}\n/**\n * To parse the HTML\n *\n * @param {string} value - specifies the string value\n * @returns {DocumentFragment} - returns the document\n * @hidden\n */\n\nexport function parseHtml(value) {\n  var tempNode = createElement('template');\n  tempNode.innerHTML = value;\n\n  if (tempNode.content instanceof DocumentFragment) {\n    return tempNode.content;\n  } else {\n    return document.createRange().createContextualFragment(value);\n  }\n}\n/**\n * @param {Document} docElement - specifies the document element\n * @param {Element} node - specifies the node\n * @returns {Node[]} - returns the node array\n * @hidden\n */\n\nexport function getTextNodesUnder(docElement, node) {\n  var nodes = [];\n\n  for (node = node.firstChild; node; node = node.nextSibling) {\n    if (node.nodeType === 3) {\n      nodes.push(node);\n    } else {\n      nodes = nodes.concat(getTextNodesUnder(docElement, node));\n    }\n  }\n\n  return nodes;\n}\n/**\n * @param {IToolsItemConfigs} obj - specifies the configuration\n * @returns {void}\n * @hidden\n */\n\nexport function toObjectLowerCase(obj) {\n  var convertedValue = {};\n  var keys = Object.keys(obj);\n\n  for (var i = 0; i < Object.keys(obj).length; i++) {\n    convertedValue[keys[i].toLocaleLowerCase()] = obj[keys[i]];\n  }\n\n  return convertedValue;\n}\n/**\n * @param {string} value - specifies the string value\n * @param {IRichTextEditor} rteObj - specifies the rte object\n * @returns {string} - returns the string\n * @hidden\n */\n\nexport function getEditValue(value, rteObj) {\n  var val;\n\n  if (value !== null && value !== '') {\n    val = rteObj.enableHtmlEncode ? updateTextNode(decode(value), rteObj) : updateTextNode(value, rteObj);\n    rteObj.setProperties({\n      value: val\n    }, true);\n  } else {\n    if (rteObj.enterKey === 'DIV') {\n      val = rteObj.enableHtmlEncode ? '&lt;div&gt;&lt;br/&gt;&lt;/div&gt;' : '<div><br/></div>';\n    } else if (rteObj.enterKey === 'BR') {\n      val = rteObj.enableHtmlEncode ? '&lt;br/&gt;' : '<br/>';\n    } else {\n      val = rteObj.enableHtmlEncode ? '&lt;p&gt;&lt;br/&gt;&lt;/p&gt;' : '<p><br/></p>';\n    }\n  }\n\n  return val;\n}\n/**\n * @param {string} value - specifies the value\n * @param {IRichTextEditor} rteObj - specifies the rich text editor instance.\n * @returns {string} - returns the string\n * @hidden\n */\n\nexport function updateTextNode(value, rteObj) {\n  var tempNode = document.createElement('div');\n  var resultElm = document.createElement('div');\n  var childNodes = tempNode.childNodes;\n  tempNode.innerHTML = value;\n  tempNode.setAttribute('class', 'tempDiv');\n\n  if (childNodes.length > 0) {\n    var isPreviousInlineElem = void 0;\n    var previousParent = void 0;\n    var insertElem = void 0;\n\n    while (tempNode.firstChild) {\n      var emptyBlockElem = tempNode.querySelectorAll(CONSTANT.blockEmptyNodes);\n\n      for (var i = 0; i < emptyBlockElem.length; i++) {\n        emptyBlockElem[i].innerHTML = '<br>';\n      }\n\n      var emptyInlineElem = tempNode.querySelectorAll(CONSTANT.inlineEmptyNodes);\n\n      for (var i = 0; i < emptyInlineElem.length; i++) {\n        emptyInlineElem[i].innerHTML = '&ZeroWidthSpace;';\n      }\n\n      if (rteObj.enterKey !== 'BR' && (tempNode.firstChild.nodeName === '#text' && (tempNode.firstChild.textContent.indexOf('\\n') < 0 || tempNode.firstChild.textContent.trim() !== '') || inlineNode.indexOf(tempNode.firstChild.nodeName.toLocaleLowerCase()) >= 0)) {\n        if (!isPreviousInlineElem) {\n          if (rteObj.enterKey === 'DIV') {\n            insertElem = createElement('div');\n          } else {\n            insertElem = createElement('p');\n          }\n\n          resultElm.appendChild(insertElem);\n          insertElem.appendChild(tempNode.firstChild);\n        } else {\n          previousParent.appendChild(tempNode.firstChild);\n        }\n\n        previousParent = insertElem;\n        isPreviousInlineElem = true;\n      } else if (tempNode.firstChild.nodeName === '#text' && (tempNode.firstChild.textContent === '\\n' || tempNode.firstChild.textContent.indexOf('\\n') >= 0 && tempNode.firstChild.textContent.trim() === '')) {\n        detach(tempNode.firstChild);\n      } else {\n        resultElm.appendChild(tempNode.firstChild);\n        isPreviousInlineElem = false;\n      }\n    }\n\n    var imageElm = resultElm.querySelectorAll('img');\n\n    for (var i = 0; i < imageElm.length; i++) {\n      if (!imageElm[i].classList.contains(classes.CLS_RTE_IMAGE)) {\n        imageElm[i].classList.add(classes.CLS_RTE_IMAGE);\n      }\n\n      if (!(imageElm[i].classList.contains(classes.CLS_IMGINLINE) || imageElm[i].classList.contains(classes.CLS_IMGBREAK))) {\n        imageElm[i].classList.add(classes.CLS_IMGINLINE);\n      }\n    }\n  }\n\n  return resultElm.innerHTML;\n}\n/**\n * @param {IRichTextEditor} rteObj - specifies the rte object\n * @returns {string} - returns the value based on enter configuration.\n * @hidden\n */\n\nexport function getDefaultValue(rteObj) {\n  var currentVal;\n\n  if (rteObj.enterKey === 'DIV') {\n    currentVal = rteObj.enableHtmlEncode ? '&lt;div&gt;&lt;br/&gt;&lt;/div&gt;' : '<div><br/></div>';\n  } else if (rteObj.enterKey === 'BR') {\n    currentVal = rteObj.enableHtmlEncode ? '&lt;br/&gt;' : '<br/>';\n  } else {\n    currentVal = rteObj.enableHtmlEncode ? '&lt;p&gt;&lt;br/&gt;&lt;/p&gt;' : '<p><br/></p>';\n  }\n\n  return currentVal;\n}\n/**\n * @param {string} value - specifies the value\n * @returns {boolean} - returns the boolean value\n * @hidden\n */\n\nexport function isEditableValueEmpty(value) {\n  return value === '<p><br></p>' || value === '&lt;p&gt;&lt;br&gt;&lt;/p&gt;' || value === '<div><br></div>' || value === '&lt;div&gt;&lt;br&gt;&lt;/div&gt;' || value === '<br>' || value === '&lt;br&gt;' || value === '' ? true : false;\n}\n/**\n * @param {string} value - specifies the string value\n * @returns {string} - returns the string\n * @hidden\n */\n\nexport function decode(value) {\n  return value.replace(/&amp;/g, '&').replace(/&amp;lt;/g, '<').replace(/&lt;/g, '<').replace(/&amp;gt;/g, '>').replace(/&gt;/g, '>').replace(/&nbsp;/g, ' ').replace(/&amp;nbsp;/g, ' ').replace(/&quot;/g, '');\n}\n/**\n * @param {string} value - specifies the string value\n * @param {IRichTextEditor} parent - specifies the rte\n * @returns {string} - returns the string value\n * @hidden\n */\n\nexport function sanitizeHelper(value, parent) {\n  if (parent.enableHtmlSanitizer) {\n    var item = SanitizeHtmlHelper.beforeSanitize();\n    var beforeEvent = {\n      cancel: false,\n      helper: null\n    };\n    extend(item, item, beforeEvent);\n    parent.trigger('beforeSanitizeHtml', item);\n\n    if (item.cancel && !isNOU(item.helper)) {\n      value = item.helper(value);\n    } else if (!item.cancel) {\n      value = SanitizeHtmlHelper.serializeValue(item, value);\n    }\n  }\n\n  return value;\n}\n/**\n * @param {string} dataUrl - specifies the string value\n * @returns {BaseToolbar} - returns the value\n * @hidden\n */\n//Converting the base64 url to blob\n\nexport function convertToBlob(dataUrl) {\n  var arr = dataUrl.split(',');\n  var mime = arr[0].match(/:(.*?);/)[1];\n  var bstr = atob(arr[1]);\n  var n = bstr.length;\n  var u8arr = new Uint8Array(n);\n\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n\n  return new Blob([u8arr], {\n    type: mime\n  });\n}\n/**\n * @param {IRichTextEditor} self - specifies the rte\n * @param {string} localeItems - specifies the locale items\n * @param {IDropDownItemModel} item - specifies the dropdown item\n * @returns {string} - returns the value\n * @hidden\n */\n\nexport function getLocaleFontFormat(self, localeItems, item) {\n  for (var i = 0; localeItems.length > i; i++) {\n    if (localeItems[i].value === item.value || localeItems[i].value === item.subCommand) {\n      return self.localeObj.getConstant(localeItems[i].locale);\n    }\n  }\n\n  return item.text;\n}\n/**\n * @param {IRichTextEditor} self - specifies the rte\n * @returns {void}\n * @hidden\n */\n\nexport function updateDropDownFontFormatLocale(self) {\n  model.fontFamily.forEach(function (item, i) {\n    model.fontFamily[i].text = getLocaleFontFormat(self, fontNameLocale, model.fontFamily[i]);\n  });\n  model.formatItems.forEach(function (item, i) {\n    model.formatItems[i].text = getLocaleFontFormat(self, formatsLocale, model.formatItems[i]);\n  });\n  model.numberFormatList.forEach(function (item, i) {\n    model.numberFormatList[i].text = getLocaleFontFormat(self, numberFormatListLocale, model.numberFormatList[i]);\n  });\n  model.bulletFormatList.forEach(function (item, i) {\n    model.bulletFormatList[i].text = getLocaleFontFormat(self, bulletFormatListLocale, model.bulletFormatList[i]);\n  });\n}","map":{"version":3,"names":["isNullOrUndefined","isNOU","addClass","removeClass","selectAll","createElement","Browser","detach","SanitizeHtmlHelper","extend","classes","CONSTANT","model","toolsLocale","fontNameLocale","formatsLocale","numberFormatListLocale","bulletFormatListLocale","undoRedoItems","inlineNode","getIndex","val","items","index","some","item","i","toLocaleLowerCase","hasClass","element","className","classList","contains","getDropDownValue","value","type","returnType","data","result","k","length","text","subCommand","iconCss","isIDevice","isDevice","isIos","getFormattedFontSize","pageYOffset","e","parentElement","isIFrame","y","window","getBoundingClientRect","top","clientY","pageY","getTooltipText","serviceLocator","i10n","getService","itemLocale","tooltipText","getConstant","setToolbarStatus","isPopToolbar","self","updateDropDownFontFormatLocale","dropDown","dropDownModule","args","keys","Object","_i","keys_1","key","j","tbItems","itemStr","tbElements","CLS_ACTIVE","parent","toolbarSettings","formatDropDown","isDestroyed","formatItems","format","types","formatContent","default","content","width","cssClass","dataBind","alignDropDown","alignItems","alignmentItems","fontNameDropDown","fontNameItems","fontFamily","fontNameContent","name_1","title","fontSizeDropDown","fontSizeItems","fontSize","fontSizeContent","replace","getCollection","getTBarItemsIndex","toolbarItems","itemsIndex","push","command","updateUndoRedoStatus","baseToolbar","undoRedoStatus","trgItems","toolbarObj","CLS_TB_ITEM","keys_2","target","enableItems","dispatchEvent","evt","document","createEvent","initEvent","parseHtml","tempNode","innerHTML","DocumentFragment","createRange","createContextualFragment","getTextNodesUnder","docElement","node","nodes","firstChild","nextSibling","nodeType","concat","toObjectLowerCase","obj","convertedValue","getEditValue","rteObj","enableHtmlEncode","updateTextNode","decode","setProperties","enterKey","resultElm","childNodes","setAttribute","isPreviousInlineElem","previousParent","insertElem","emptyBlockElem","querySelectorAll","blockEmptyNodes","emptyInlineElem","inlineEmptyNodes","nodeName","textContent","indexOf","trim","appendChild","imageElm","CLS_RTE_IMAGE","add","CLS_IMGINLINE","CLS_IMGBREAK","getDefaultValue","currentVal","isEditableValueEmpty","sanitizeHelper","enableHtmlSanitizer","beforeSanitize","beforeEvent","cancel","helper","trigger","serializeValue","convertToBlob","dataUrl","arr","split","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","Blob","getLocaleFontFormat","localeItems","localeObj","locale","forEach","numberFormatList","bulletFormatList"],"sources":["/home/morgan/Desktop/Projets/ENT4/Jwt-Auth-pdf/react-jwt-auth/react-jwt-auth/node_modules/@syncfusion/ej2-richtexteditor/src/rich-text-editor/base/util.js"],"sourcesContent":["/**\n * Defines util methods used by Rich Text Editor.\n */\nimport { isNullOrUndefined as isNOU, addClass, removeClass, selectAll, createElement } from '@syncfusion/ej2-base';\nimport { Browser, detach, SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nimport * as classes from '../base/classes';\nimport * as CONSTANT from '../base/constant';\nimport * as model from '../models/items';\nimport { toolsLocale, fontNameLocale, formatsLocale, numberFormatListLocale, bulletFormatListLocale } from '../models/default-locale';\nvar undoRedoItems = ['Undo', 'Redo'];\nvar inlineNode = ['a', 'abbr', 'acronym', 'audio', 'b', 'bdi', 'bdo', 'big', 'br', 'button',\n    'canvas', 'cite', 'code', 'data', 'datalist', 'del', 'dfn', 'em', 'embed', 'font', 'i', 'iframe', 'img', 'input',\n    'ins', 'kbd', 'label', 'map', 'mark', 'meter', 'noscript', 'object', 'output', 'picture', 'progress',\n    'q', 'ruby', 's', 'samp', 'script', 'select', 'slot', 'small', 'span', 'strong', 'strike', 'sub', 'sup', 'svg',\n    'template', 'textarea', 'time', 'u', 'tt', 'var', 'video', 'wbr'];\n/**\n * @param {string} val - specifies the string value\n * @param {string} items - specifies the value\n * @returns {number} - returns the number value\n * @hidden\n */\nexport function getIndex(val, items) {\n    var index = -1;\n    items.some(function (item, i) {\n        if (typeof item === 'string' && val === item.toLocaleLowerCase()) {\n            index = i;\n            return true;\n        }\n        return false;\n    });\n    return index;\n}\n/**\n * @param {Element} element - specifies the element\n * @param {string} className - specifies the string value\n * @returns {boolean} - returns the boolean value\n * @hidden\n */\nexport function hasClass(element, className) {\n    var hasClass = false;\n    if (element.classList.contains(className)) {\n        hasClass = true;\n    }\n    return hasClass;\n}\n/**\n * @param {IDropDownItemModel} items - specifies the item model\n * @param {string} value - specifies the string value\n * @param {string} type - specifies the string value\n * @param {string} returnType - specifies the return type\n * @returns {string} - returns the string value\n * @hidden\n */\nexport function getDropDownValue(items, value, type, returnType) {\n    var data;\n    var result;\n    for (var k = 0; k < items.length; k++) {\n        if (type === 'value' && items[k].value.toLocaleLowerCase() === value.toLocaleLowerCase()) {\n            data = items[k];\n            break;\n        }\n        else if (type === 'text' && items[k].text.toLocaleLowerCase() === value.toLocaleLowerCase()) {\n            data = items[k];\n            break;\n        }\n        else if (type === 'subCommand' && items[k].subCommand.toLocaleLowerCase() === value.toLocaleLowerCase()) {\n            data = items[k];\n            break;\n        }\n    }\n    if (!isNOU(data)) {\n        switch (returnType) {\n            case 'text':\n                result = data.text;\n                break;\n            case 'value':\n                result = data.value;\n                break;\n            case 'iconCss':\n                result = data.iconCss;\n                break;\n        }\n    }\n    return result;\n}\n/**\n * @returns {boolean} - returns the boolean value\n * @hidden\n */\nexport function isIDevice() {\n    var result = false;\n    if (Browser.isDevice && Browser.isIos) {\n        result = true;\n    }\n    return result;\n}\n/**\n * @param {string} value - specifies the value\n * @returns {string} - returns the string value\n * @hidden\n */\nexport function getFormattedFontSize(value) {\n    if (isNOU(value)) {\n        return '';\n    }\n    return value;\n}\n/**\n * @param {MouseEvent} e - specifies the mouse event\n * @param {HTMLElement} parentElement - specifies the parent element\n * @param {boolean} isIFrame - specifies the boolean value\n * @returns {number} - returns the number\n * @hidden\n */\nexport function pageYOffset(e, parentElement, isIFrame) {\n    var y = 0;\n    if (isIFrame) {\n        y = window.pageYOffset + parentElement.getBoundingClientRect().top + e.clientY;\n    }\n    else {\n        y = e.pageY;\n    }\n    return y;\n}\n/**\n * @param {string} item - specifies the string\n * @param {ServiceLocator} serviceLocator - specifies the service locator\n * @returns {string} - returns the string\n * @hidden\n */\nexport function getTooltipText(item, serviceLocator) {\n    var i10n = serviceLocator.getService('rteLocale');\n    var itemLocale = toolsLocale[item];\n    var tooltipText = i10n.getConstant(itemLocale);\n    return tooltipText;\n}\n/**\n * @param {ISetToolbarStatusArgs} e - specifies the e element\n * @param {boolean} isPopToolbar - specifies the boolean value\n * @param {IRichTextEditor} self - specifies the parent element\n * @returns {void}\n * @hidden\n */\nexport function setToolbarStatus(e, isPopToolbar, self) {\n    updateDropDownFontFormatLocale(self);\n    var dropDown = e.dropDownModule;\n    var data = e.args;\n    var keys = Object.keys(e.args);\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        for (var j = 0; j < e.tbItems.length; j++) {\n            var item = e.tbItems[j].subCommand;\n            var itemStr = item && item.toLocaleLowerCase();\n            if (item && (itemStr === key) || (item === 'UL' && key === 'unorderedlist') || (item === 'OL' && key === 'orderedlist') ||\n                (itemStr === 'pre' && key === 'insertcode')) {\n                if (typeof data[key] === 'boolean') {\n                    if (data[key] === true) {\n                        addClass([e.tbElements[j]], [classes.CLS_ACTIVE]);\n                    }\n                    else {\n                        removeClass([e.tbElements[j]], [classes.CLS_ACTIVE]);\n                    }\n                }\n                else if ((typeof data[key] === 'string' || data[key] === null) &&\n                    getIndex(key, e.parent.toolbarSettings.items) > -1) {\n                    var value = ((data[key]) ? data[key] : '');\n                    var result = '';\n                    switch (key) {\n                        case 'formats': {\n                            if (isNOU(dropDown.formatDropDown) || isPopToolbar ||\n                                (!isNOU(dropDown.formatDropDown) && dropDown.formatDropDown.isDestroyed)) {\n                                break;\n                            }\n                            var formatItems = e.parent.format.types;\n                            var formatContent = isNOU(e.parent.format.default) ? formatItems[0].text :\n                                e.parent.format.default;\n                            result = getDropDownValue(formatItems, value, 'subCommand', 'text');\n                            dropDown.formatDropDown.content = ('<span style=\"display: inline-flex;' +\n                                'width:' + e.parent.format.width + '\" >' +\n                                '<span class=\"e-rte-dropdown-btn-text' + ' ' + e.parent.cssClass + '\">'\n                                + (isNOU(result) ? formatContent : result) +\n                                '</span></span>');\n                            dropDown.formatDropDown.dataBind();\n                            break;\n                        }\n                        case 'alignments': {\n                            if (isNOU(dropDown.alignDropDown) ||\n                                (!isNOU(dropDown.alignDropDown) && dropDown.alignDropDown.isDestroyed)) {\n                                break;\n                            }\n                            var alignItems = model.alignmentItems;\n                            result = getDropDownValue(alignItems, value, 'subCommand', 'iconCss');\n                            dropDown.alignDropDown.iconCss = isNOU(result) ? 'e-icons e-justify-left' : result;\n                            dropDown.alignDropDown.dataBind();\n                            break;\n                        }\n                        case 'fontname': {\n                            if (isNOU(dropDown.fontNameDropDown) || isPopToolbar ||\n                                (!isNOU(dropDown.fontNameDropDown) && dropDown.fontNameDropDown.isDestroyed)) {\n                                break;\n                            }\n                            var fontNameItems = e.parent.fontFamily.items;\n                            result = getDropDownValue(fontNameItems, value, 'value', 'text');\n                            var fontNameContent = isNOU(e.parent.fontFamily.default) ? fontNameItems[0].text :\n                                e.parent.fontFamily.default;\n                            var name_1 = (isNOU(result) ? fontNameContent : result);\n                            e.tbElements[j].title = name_1;\n                            dropDown.fontNameDropDown.content = ('<span style=\"display: inline-flex;' +\n                                'width:' + e.parent.fontFamily.width + '\" >' +\n                                '<span class=\"e-rte-dropdown-btn-text' + ' ' + e.parent.cssClass + '\">'\n                                + name_1 + '</span></span>');\n                            dropDown.fontNameDropDown.dataBind();\n                            break;\n                        }\n                        case 'fontsize': {\n                            if (isNOU(dropDown.fontSizeDropDown) ||\n                                (!isNOU(dropDown.fontSizeDropDown) && dropDown.fontSizeDropDown.isDestroyed)) {\n                                break;\n                            }\n                            var fontSizeItems = e.parent.fontSize.items;\n                            var fontSizeContent = isNOU(e.parent.fontSize.default) ? fontSizeItems[1].text :\n                                e.parent.fontSize.default;\n                            result = getDropDownValue(fontSizeItems, (value === '' ? fontSizeContent.replace(/\\s/g, '') : value), 'value', 'text');\n                            dropDown.fontSizeDropDown.content = ('<span style=\"display: inline-flex;' +\n                                'width:' + e.parent.fontSize.width + '\" >' +\n                                '<span class=\"e-rte-dropdown-btn-text' + ' ' + e.parent.cssClass + '\">'\n                                + getFormattedFontSize(result) + '</span></span>');\n                            dropDown.fontSizeDropDown.dataBind();\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n/**\n * @param {string} items - specifies the string value\n * @returns {string[]} - returns the array value\n * @hidden\n */\nexport function getCollection(items) {\n    if (typeof items === 'object') {\n        return items;\n    }\n    else {\n        return [items];\n    }\n}\n/**\n * @param {string[]} items - specifies the array of string value\n * @param {IToolbarItemModel} toolbarItems - specifies the tool bar model\n * @returns {number} - returns the number\n * @hidden\n */\nexport function getTBarItemsIndex(items, toolbarItems) {\n    var itemsIndex = [];\n    for (var i = 0; i < items.length; i++) {\n        for (var j = 0; j < toolbarItems.length; j++) {\n            if (toolbarItems[j].type === 'Separator') {\n                continue;\n            }\n            else {\n                if (items[i] === 'OrderedList' && toolbarItems[j].subCommand === 'OL') {\n                    itemsIndex.push(j);\n                    break;\n                }\n                else if (items[i] === 'UnorderedList' && toolbarItems[j].subCommand === 'UL') {\n                    itemsIndex.push(j);\n                    break;\n                }\n                else if (items[i] === 'InsertCode' && toolbarItems[j].subCommand === 'Pre') {\n                    itemsIndex.push(j);\n                    break;\n                }\n                else if (items[i] === 'FileManager' && toolbarItems[j].subCommand === 'File') {\n                    itemsIndex.push(j);\n                    break;\n                }\n                else if (typeof (items[i]) === 'object' && items[i].command === 'Custom') {\n                    itemsIndex.push(i);\n                    break;\n                }\n                else if (items[i] === toolbarItems[j].subCommand) {\n                    itemsIndex.push(j);\n                    break;\n                }\n            }\n        }\n    }\n    return itemsIndex;\n}\n/**\n * @param {BaseToolbar} baseToolbar - specifies the base\n * @param {boolean} undoRedoStatus - specifies the boolean value\n * @returns {void}\n * @hidden\n */\nexport function updateUndoRedoStatus(baseToolbar, undoRedoStatus) {\n    var i = 0;\n    var trgItems = getTBarItemsIndex(getCollection(undoRedoItems), baseToolbar.toolbarObj.items);\n    var tbItems = selectAll('.' + classes.CLS_TB_ITEM, baseToolbar.toolbarObj.element);\n    var keys = Object.keys(undoRedoStatus);\n    for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n        var key = keys_2[_i];\n        var target = tbItems[trgItems[i]];\n        if (target) {\n            baseToolbar.toolbarObj.enableItems(target, undoRedoStatus[key]);\n        }\n        i++;\n    }\n}\n/**\n * To dispatch the event manually\n *\n * @param {Element} element - specifies the element.\n * @param {string} type - specifies the string type.\n * @returns {void}\n * @hidden\n\n */\nexport function dispatchEvent(element, type) {\n    var evt = document.createEvent('HTMLEvents');\n    evt.initEvent(type, false, true);\n    element.dispatchEvent(evt);\n}\n/**\n * To parse the HTML\n *\n * @param {string} value - specifies the string value\n * @returns {DocumentFragment} - returns the document\n * @hidden\n */\nexport function parseHtml(value) {\n    var tempNode = createElement('template');\n    tempNode.innerHTML = value;\n    if (tempNode.content instanceof DocumentFragment) {\n        return tempNode.content;\n    }\n    else {\n        return document.createRange().createContextualFragment(value);\n    }\n}\n/**\n * @param {Document} docElement - specifies the document element\n * @param {Element} node - specifies the node\n * @returns {Node[]} - returns the node array\n * @hidden\n */\nexport function getTextNodesUnder(docElement, node) {\n    var nodes = [];\n    for (node = node.firstChild; node; node = node.nextSibling) {\n        if (node.nodeType === 3) {\n            nodes.push(node);\n        }\n        else {\n            nodes = nodes.concat(getTextNodesUnder(docElement, node));\n        }\n    }\n    return nodes;\n}\n/**\n * @param {IToolsItemConfigs} obj - specifies the configuration\n * @returns {void}\n * @hidden\n */\nexport function toObjectLowerCase(obj) {\n    var convertedValue = {};\n    var keys = Object.keys(obj);\n    for (var i = 0; i < Object.keys(obj).length; i++) {\n        convertedValue[keys[i].toLocaleLowerCase()] = obj[keys[i]];\n    }\n    return convertedValue;\n}\n/**\n * @param {string} value - specifies the string value\n * @param {IRichTextEditor} rteObj - specifies the rte object\n * @returns {string} - returns the string\n * @hidden\n */\nexport function getEditValue(value, rteObj) {\n    var val;\n    if (value !== null && value !== '') {\n        val = rteObj.enableHtmlEncode ? updateTextNode(decode(value), rteObj) : updateTextNode(value, rteObj);\n        rteObj.setProperties({ value: val }, true);\n    }\n    else {\n        if (rteObj.enterKey === 'DIV') {\n            val = rteObj.enableHtmlEncode ? '&lt;div&gt;&lt;br/&gt;&lt;/div&gt;' : '<div><br/></div>';\n        }\n        else if (rteObj.enterKey === 'BR') {\n            val = rteObj.enableHtmlEncode ? '&lt;br/&gt;' : '<br/>';\n        }\n        else {\n            val = rteObj.enableHtmlEncode ? '&lt;p&gt;&lt;br/&gt;&lt;/p&gt;' : '<p><br/></p>';\n        }\n    }\n    return val;\n}\n/**\n * @param {string} value - specifies the value\n * @param {IRichTextEditor} rteObj - specifies the rich text editor instance.\n * @returns {string} - returns the string\n * @hidden\n */\nexport function updateTextNode(value, rteObj) {\n    var tempNode = document.createElement('div');\n    var resultElm = document.createElement('div');\n    var childNodes = tempNode.childNodes;\n    tempNode.innerHTML = value;\n    tempNode.setAttribute('class', 'tempDiv');\n    if (childNodes.length > 0) {\n        var isPreviousInlineElem = void 0;\n        var previousParent = void 0;\n        var insertElem = void 0;\n        while (tempNode.firstChild) {\n            var emptyBlockElem = tempNode.querySelectorAll(CONSTANT.blockEmptyNodes);\n            for (var i = 0; i < emptyBlockElem.length; i++) {\n                emptyBlockElem[i].innerHTML = '<br>';\n            }\n            var emptyInlineElem = tempNode.querySelectorAll(CONSTANT.inlineEmptyNodes);\n            for (var i = 0; i < emptyInlineElem.length; i++) {\n                emptyInlineElem[i].innerHTML = '&ZeroWidthSpace;';\n            }\n            if (rteObj.enterKey !== 'BR' && ((tempNode.firstChild.nodeName === '#text' &&\n                (tempNode.firstChild.textContent.indexOf('\\n') < 0 || tempNode.firstChild.textContent.trim() !== '')) ||\n                inlineNode.indexOf(tempNode.firstChild.nodeName.toLocaleLowerCase()) >= 0)) {\n                if (!isPreviousInlineElem) {\n                    if (rteObj.enterKey === 'DIV') {\n                        insertElem = createElement('div');\n                    }\n                    else {\n                        insertElem = createElement('p');\n                    }\n                    resultElm.appendChild(insertElem);\n                    insertElem.appendChild(tempNode.firstChild);\n                }\n                else {\n                    previousParent.appendChild(tempNode.firstChild);\n                }\n                previousParent = insertElem;\n                isPreviousInlineElem = true;\n            }\n            else if (tempNode.firstChild.nodeName === '#text' && (tempNode.firstChild.textContent === '\\n' ||\n                (tempNode.firstChild.textContent.indexOf('\\n') >= 0 && tempNode.firstChild.textContent.trim() === ''))) {\n                detach(tempNode.firstChild);\n            }\n            else {\n                resultElm.appendChild(tempNode.firstChild);\n                isPreviousInlineElem = false;\n            }\n        }\n        var imageElm = resultElm.querySelectorAll('img');\n        for (var i = 0; i < imageElm.length; i++) {\n            if (!imageElm[i].classList.contains(classes.CLS_RTE_IMAGE)) {\n                imageElm[i].classList.add(classes.CLS_RTE_IMAGE);\n            }\n            if (!(imageElm[i].classList.contains(classes.CLS_IMGINLINE) ||\n                imageElm[i].classList.contains(classes.CLS_IMGBREAK))) {\n                imageElm[i].classList.add(classes.CLS_IMGINLINE);\n            }\n        }\n    }\n    return resultElm.innerHTML;\n}\n/**\n * @param {IRichTextEditor} rteObj - specifies the rte object\n * @returns {string} - returns the value based on enter configuration.\n * @hidden\n */\nexport function getDefaultValue(rteObj) {\n    var currentVal;\n    if (rteObj.enterKey === 'DIV') {\n        currentVal = rteObj.enableHtmlEncode ? '&lt;div&gt;&lt;br/&gt;&lt;/div&gt;' : '<div><br/></div>';\n    }\n    else if (rteObj.enterKey === 'BR') {\n        currentVal = rteObj.enableHtmlEncode ? '&lt;br/&gt;' : '<br/>';\n    }\n    else {\n        currentVal = rteObj.enableHtmlEncode ? '&lt;p&gt;&lt;br/&gt;&lt;/p&gt;' : '<p><br/></p>';\n    }\n    return currentVal;\n}\n/**\n * @param {string} value - specifies the value\n * @returns {boolean} - returns the boolean value\n * @hidden\n */\nexport function isEditableValueEmpty(value) {\n    return (value === '<p><br></p>' || value === '&lt;p&gt;&lt;br&gt;&lt;/p&gt;'\n        || value === '<div><br></div>' || value === '&lt;div&gt;&lt;br&gt;&lt;/div&gt;'\n        || value === '<br>' || value === '&lt;br&gt;'\n        || value === '') ? true : false;\n}\n/**\n * @param {string} value - specifies the string value\n * @returns {string} - returns the string\n * @hidden\n */\nexport function decode(value) {\n    return value.replace(/&amp;/g, '&').replace(/&amp;lt;/g, '<')\n        .replace(/&lt;/g, '<').replace(/&amp;gt;/g, '>')\n        .replace(/&gt;/g, '>').replace(/&nbsp;/g, ' ')\n        .replace(/&amp;nbsp;/g, ' ').replace(/&quot;/g, '');\n}\n/**\n * @param {string} value - specifies the string value\n * @param {IRichTextEditor} parent - specifies the rte\n * @returns {string} - returns the string value\n * @hidden\n */\nexport function sanitizeHelper(value, parent) {\n    if (parent.enableHtmlSanitizer) {\n        var item = SanitizeHtmlHelper.beforeSanitize();\n        var beforeEvent = {\n            cancel: false,\n            helper: null\n        };\n        extend(item, item, beforeEvent);\n        parent.trigger('beforeSanitizeHtml', item);\n        if (item.cancel && !isNOU(item.helper)) {\n            value = item.helper(value);\n        }\n        else if (!item.cancel) {\n            value = SanitizeHtmlHelper.serializeValue(item, value);\n        }\n    }\n    return value;\n}\n/**\n * @param {string} dataUrl - specifies the string value\n * @returns {BaseToolbar} - returns the value\n * @hidden\n */\n//Converting the base64 url to blob\nexport function convertToBlob(dataUrl) {\n    var arr = dataUrl.split(',');\n    var mime = arr[0].match(/:(.*?);/)[1];\n    var bstr = atob(arr[1]);\n    var n = bstr.length;\n    var u8arr = new Uint8Array(n);\n    while (n--) {\n        u8arr[n] = bstr.charCodeAt(n);\n    }\n    return new Blob([u8arr], { type: mime });\n}\n/**\n * @param {IRichTextEditor} self - specifies the rte\n * @param {string} localeItems - specifies the locale items\n * @param {IDropDownItemModel} item - specifies the dropdown item\n * @returns {string} - returns the value\n * @hidden\n */\nexport function getLocaleFontFormat(self, localeItems, item) {\n    for (var i = 0; localeItems.length > i; i++) {\n        if (localeItems[i].value === item.value || localeItems[i].value === item.subCommand) {\n            return self.localeObj.getConstant(localeItems[i].locale);\n        }\n    }\n    return item.text;\n}\n/**\n * @param {IRichTextEditor} self - specifies the rte\n * @returns {void}\n * @hidden\n */\nexport function updateDropDownFontFormatLocale(self) {\n    model.fontFamily.forEach(function (item, i) {\n        model.fontFamily[i].text = getLocaleFontFormat(self, fontNameLocale, model.fontFamily[i]);\n    });\n    model.formatItems.forEach(function (item, i) {\n        model.formatItems[i].text = getLocaleFontFormat(self, formatsLocale, model.formatItems[i]);\n    });\n    model.numberFormatList.forEach(function (item, i) {\n        model.numberFormatList[i].text = getLocaleFontFormat(self, numberFormatListLocale, model.numberFormatList[i]);\n    });\n    model.bulletFormatList.forEach(function (item, i) {\n        model.bulletFormatList[i].text = getLocaleFontFormat(self, bulletFormatListLocale, model.bulletFormatList[i]);\n    });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}