{"ast":null,"code":"import * as CONSTANT from './../base/constant';\n/**\n * Link internal component\n *\n * @hidden\n\n */\n\nvar MDInsertText =\n/** @class */\nfunction () {\n  /**\n   * Constructor for creating the insert text plugin\n   *\n   * @param {MarkdownParser} parent - specifies the parent element\n   * @hidden\n    */\n  function MDInsertText(parent) {\n    this.parent = parent;\n    this.selection = this.parent.markdownSelection;\n    this.addEventListener();\n  }\n\n  MDInsertText.prototype.addEventListener = function () {\n    this.parent.observer.on(CONSTANT.INSERT_TEXT_COMMAND, this.InsertTextExec, this);\n  };\n\n  MDInsertText.prototype.InsertTextExec = function (e) {\n    var textArea = this.parent.element;\n    textArea.focus();\n    var start = textArea.selectionStart;\n    var end = textArea.selectionEnd;\n    var text = e.value.text;\n    var startOffset = start + text.length;\n    var endOffset = end + text.length;\n    textArea.value = textArea.value.substr(0, start) + text + textArea.value.substr(end, textArea.value.length);\n    this.parent.markdownSelection.setSelection(textArea, startOffset, endOffset);\n    this.restore(textArea, startOffset, endOffset, e);\n  };\n\n  MDInsertText.prototype.restore = function (textArea, start, end, event) {\n    this.selection.save(start, end);\n    this.selection.restore(textArea);\n\n    if (event && event.callBack) {\n      event.callBack({\n        requestType: event.subCommand,\n        selectedText: this.selection.getSelectedText(textArea),\n        editorMode: 'Markdown',\n        event: event.event\n      });\n    }\n  };\n\n  return MDInsertText;\n}();\n\nexport { MDInsertText };","map":{"version":3,"names":["CONSTANT","MDInsertText","parent","selection","markdownSelection","addEventListener","prototype","observer","on","INSERT_TEXT_COMMAND","InsertTextExec","e","textArea","element","focus","start","selectionStart","end","selectionEnd","text","value","startOffset","length","endOffset","substr","setSelection","restore","event","save","callBack","requestType","subCommand","selectedText","getSelectedText","editorMode"],"sources":["/home/morgan/Desktop/Projets/ENT4/Jwt-Auth-pdf/react-jwt-auth/react-jwt-auth/node_modules/@syncfusion/ej2-richtexteditor/src/markdown-parser/plugin/insert-text.js"],"sourcesContent":["import * as CONSTANT from './../base/constant';\n/**\n * Link internal component\n *\n * @hidden\n\n */\nvar MDInsertText = /** @class */ (function () {\n    /**\n     * Constructor for creating the insert text plugin\n     *\n     * @param {MarkdownParser} parent - specifies the parent element\n     * @hidden\n\n     */\n    function MDInsertText(parent) {\n        this.parent = parent;\n        this.selection = this.parent.markdownSelection;\n        this.addEventListener();\n    }\n    MDInsertText.prototype.addEventListener = function () {\n        this.parent.observer.on(CONSTANT.INSERT_TEXT_COMMAND, this.InsertTextExec, this);\n    };\n    MDInsertText.prototype.InsertTextExec = function (e) {\n        var textArea = this.parent.element;\n        textArea.focus();\n        var start = textArea.selectionStart;\n        var end = textArea.selectionEnd;\n        var text = e.value.text;\n        var startOffset = start + text.length;\n        var endOffset = end + text.length;\n        textArea.value = textArea.value.substr(0, start)\n            + text + textArea.value.substr(end, textArea.value.length);\n        this.parent.markdownSelection.setSelection(textArea, startOffset, endOffset);\n        this.restore(textArea, startOffset, endOffset, e);\n    };\n    MDInsertText.prototype.restore = function (textArea, start, end, event) {\n        this.selection.save(start, end);\n        this.selection.restore(textArea);\n        if (event && event.callBack) {\n            event.callBack({\n                requestType: event.subCommand,\n                selectedText: this.selection.getSelectedText(textArea),\n                editorMode: 'Markdown',\n                event: event.event\n            });\n        }\n    };\n    return MDInsertText;\n}());\nexport { MDInsertText };\n"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,oBAA1B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,YAAY;AAAG;AAAe,YAAY;EAC1C;AACJ;AACA;AACA;AACA;AACA;EAEI,SAASA,YAAT,CAAsBC,MAAtB,EAA8B;IAC1B,KAAKA,MAAL,GAAcA,MAAd;IACA,KAAKC,SAAL,GAAiB,KAAKD,MAAL,CAAYE,iBAA7B;IACA,KAAKC,gBAAL;EACH;;EACDJ,YAAY,CAACK,SAAb,CAAuBD,gBAAvB,GAA0C,YAAY;IAClD,KAAKH,MAAL,CAAYK,QAAZ,CAAqBC,EAArB,CAAwBR,QAAQ,CAACS,mBAAjC,EAAsD,KAAKC,cAA3D,EAA2E,IAA3E;EACH,CAFD;;EAGAT,YAAY,CAACK,SAAb,CAAuBI,cAAvB,GAAwC,UAAUC,CAAV,EAAa;IACjD,IAAIC,QAAQ,GAAG,KAAKV,MAAL,CAAYW,OAA3B;IACAD,QAAQ,CAACE,KAAT;IACA,IAAIC,KAAK,GAAGH,QAAQ,CAACI,cAArB;IACA,IAAIC,GAAG,GAAGL,QAAQ,CAACM,YAAnB;IACA,IAAIC,IAAI,GAAGR,CAAC,CAACS,KAAF,CAAQD,IAAnB;IACA,IAAIE,WAAW,GAAGN,KAAK,GAAGI,IAAI,CAACG,MAA/B;IACA,IAAIC,SAAS,GAAGN,GAAG,GAAGE,IAAI,CAACG,MAA3B;IACAV,QAAQ,CAACQ,KAAT,GAAiBR,QAAQ,CAACQ,KAAT,CAAeI,MAAf,CAAsB,CAAtB,EAAyBT,KAAzB,IACXI,IADW,GACJP,QAAQ,CAACQ,KAAT,CAAeI,MAAf,CAAsBP,GAAtB,EAA2BL,QAAQ,CAACQ,KAAT,CAAeE,MAA1C,CADb;IAEA,KAAKpB,MAAL,CAAYE,iBAAZ,CAA8BqB,YAA9B,CAA2Cb,QAA3C,EAAqDS,WAArD,EAAkEE,SAAlE;IACA,KAAKG,OAAL,CAAad,QAAb,EAAuBS,WAAvB,EAAoCE,SAApC,EAA+CZ,CAA/C;EACH,CAZD;;EAaAV,YAAY,CAACK,SAAb,CAAuBoB,OAAvB,GAAiC,UAAUd,QAAV,EAAoBG,KAApB,EAA2BE,GAA3B,EAAgCU,KAAhC,EAAuC;IACpE,KAAKxB,SAAL,CAAeyB,IAAf,CAAoBb,KAApB,EAA2BE,GAA3B;IACA,KAAKd,SAAL,CAAeuB,OAAf,CAAuBd,QAAvB;;IACA,IAAIe,KAAK,IAAIA,KAAK,CAACE,QAAnB,EAA6B;MACzBF,KAAK,CAACE,QAAN,CAAe;QACXC,WAAW,EAAEH,KAAK,CAACI,UADR;QAEXC,YAAY,EAAE,KAAK7B,SAAL,CAAe8B,eAAf,CAA+BrB,QAA/B,CAFH;QAGXsB,UAAU,EAAE,UAHD;QAIXP,KAAK,EAAEA,KAAK,CAACA;MAJF,CAAf;IAMH;EACJ,CAXD;;EAYA,OAAO1B,YAAP;AACH,CA1CiC,EAAlC;;AA2CA,SAASA,YAAT"},"metadata":{},"sourceType":"module"}