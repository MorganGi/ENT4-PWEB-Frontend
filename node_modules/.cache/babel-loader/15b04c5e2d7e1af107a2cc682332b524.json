{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { Size } from '../../primitives/size';\nimport { DrawingElement } from './drawing-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\n\nvar PathElement =\n/** @class */\nfunction (_super) {\n  __extends(PathElement, _super);\n  /**\n   * set the id for each element\n   */\n\n\n  function PathElement() {\n    var _this = _super.call(this) || this;\n    /**\n     * Gets or sets the geometry of the path element\n     */\n\n\n    _this.pathData = '';\n    /**\n     * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n     */\n\n    _this.transformPath = true;\n    /**\n     * Gets/Sets the equivalent path, that will have the origin as 0,0\n     */\n\n    _this.absolutePath = '';\n    /**   @private  */\n\n    _this.canMeasurePath = false; //Private variables\n\n    /**   @private  */\n\n    _this.absoluteBounds = new Rect();\n    return _this;\n  }\n\n  Object.defineProperty(PathElement.prototype, \"data\", {\n    /**\n     * Gets the geometry of the path element\n     */\n    get: function () {\n      return this.pathData;\n    },\n\n    /**\n     * Sets the geometry of the path element\n     */\n    set: function (value) {\n      if (this.pathData !== value) {\n        this.pathData = value;\n        this.isDirt = true;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Measures the minimum space that is required to render the element\n   * @param availableSize\n   */\n\n  PathElement.prototype.measure = function (availableSize) {\n    //Performance issue - Avoiding measuring the connector path\n    if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n      this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n    } else if (this.isDirt && (this.transformPath || this.width === undefined || this.height === undefined) && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n      //Measure the element only whent the path data is changed/ size is not specified\n      this.absoluteBounds = measurePath(this.data ? this.data : '');\n    }\n\n    if (this.width === undefined) {\n      this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n    } else if (this.height === undefined) {\n      this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n    } else {\n      this.desiredSize = new Size(this.width, this.height);\n    }\n\n    this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n    this.canMeasurePath = false;\n    return this.desiredSize;\n  };\n  /**\n   * Arranges the path element\n   * @param desiredSize\n   */\n\n\n  PathElement.prototype.arrange = function (desiredSize) {\n    if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n      this.isDirt = true;\n      this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n\n      if (!this.staticSize) {\n        this.points = null;\n      }\n    }\n\n    this.actualSize = this.desiredSize;\n    this.updateBounds();\n    this.isDirt = false;\n    return this.actualSize;\n  };\n  /**\n   * Translates the path to 0,0 and scales the path based on the actual size\n   * @param pathData\n   * @param bounds\n   * @param actualSize\n   */\n\n\n  PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n    var isScale = false;\n    var newPathString = '';\n    var scaleX = -bounds.x;\n    var scaleY = -bounds.y;\n    var arrayCollection = [];\n\n    if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n      scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n      scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n      isScale = true;\n    }\n\n    arrayCollection = processPathData(pathData);\n    arrayCollection = splitArrayCollection(arrayCollection);\n\n    if ((isScale || this.isDirt) && this.transformPath) {\n      newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n    } else {\n      newPathString = getPathString(arrayCollection);\n    }\n\n    isScale = false;\n    return newPathString;\n  };\n\n  return PathElement;\n}(DrawingElement);\n\nexport { PathElement };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Size","DrawingElement","Rect","measurePath","processPathData","splitArrayCollection","transformPath","getPathString","PathElement","_super","_this","call","pathData","absolutePath","canMeasurePath","absoluteBounds","defineProperty","get","set","value","isDirt","enumerable","configurable","measure","availableSize","staticSize","width","undefined","height","offsetX","pivot","x","offsetY","y","data","desiredSize","validateDesiredSize","arrange","actualSize","updatePath","points","updateBounds","bounds","isScale","newPathString","scaleX","scaleY","arrayCollection","Number"],"sources":["/home/morgan/Desktop/Projets/ENT4/Jwt-Auth-pdf/react-jwt-auth/react-jwt-auth/node_modules/@syncfusion/ej2-drawings/src/drawing/core/elements/path-element.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DrawingElement } from './drawing-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DrawingElement));\nexport { PathElement };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}