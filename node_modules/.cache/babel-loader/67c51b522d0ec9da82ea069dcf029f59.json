{"ast":null,"code":"import { LineTool } from '../index';\nimport { ZOrderPageTable, PdfAnnotationBase, PdfFormFieldBase } from './pdf-annotation';\nimport { Rect, Point, identityMatrix, rotateMatrix, getDiagramElement, ThumbsConstraints, scaleMatrix, cornersPointsBeforeRotation, ImageElement } from '@syncfusion/ej2-drawings';\nimport { DrawingElement } from '@syncfusion/ej2-drawings';\nimport { PathElement } from '@syncfusion/ej2-drawings';\nimport { createMeasureElements } from '@syncfusion/ej2-drawings';\nimport { randomId } from '@syncfusion/ej2-drawings';\nimport { Size, transformPointByMatrix, RotateTransform, TextElement } from '@syncfusion/ej2-drawings';\nimport { Canvas, refreshDiagramElements, DrawingRenderer } from '@syncfusion/ej2-drawings';\nimport { Selector } from './selector';\nimport { SvgRenderer } from '@syncfusion/ej2-drawings';\nimport { isLineShapes, setElementStype, findPointsLength, getBaseShapeAttributes, isLeader, cloneObject } from './drawing-util';\nimport { getConnectorPoints, updateSegmentElement, getSegmentElement, updateDecoratorElement, getDecoratorElement, clipDecorators, initDistanceLabel, initLeaders, initLeader, getPolygonPath, initPerimeterLabel } from './connector-util';\nimport { isNullOrUndefined, isBlazor, Browser } from '@syncfusion/ej2-base';\nimport { DiagramHtmlElement } from './html-element';\n/**\n * Renderer module is used to render basic diagram elements\n *\n * @hidden\n */\n\nvar Drawing =\n/** @class */\nfunction () {\n  function Drawing(viewer) {\n    this.isDynamicStamps = false;\n    this.pdfViewer = viewer;\n    this.renderer = new DrawingRenderer('this.pdfViewer.element.id', false);\n    this.svgRenderer = new SvgRenderer();\n  }\n  /**\n   * @private\n   * @param {PdfViewer} viewer - Specified the pdfViewer element.\n   * @returns {void}\n   */\n\n\n  Drawing.prototype.renderLabels = function (viewer) {\n    var annotations = viewer.annotations;\n\n    if (annotations) {\n      for (var i = 0; i < annotations.length; i++) {\n        var annotation = annotations[i];\n        this.initObject(annotation);\n      }\n    }\n  };\n\n  Drawing.prototype.createNewZindexTable = function (pageId) {\n    var zIndexTable = new ZOrderPageTable();\n    this.pdfViewer.zIndex++;\n    zIndexTable.pageId = this.pdfViewer.zIndex;\n    this.pdfViewer.zIndexTable.push(zIndexTable);\n    return zIndexTable;\n  };\n  /**\n   * @private\n   * @param {number} pageId - Specified the page Id.\n   * @returns {ZOrderPageTable} - Returns the ZOrder page table.\n   */\n\n\n  Drawing.prototype.getPageTable = function (pageId) {\n    var zIndexTable;\n\n    if (this.pdfViewer.zIndexTable.length !== undefined) {\n      var notFound = true;\n\n      for (var i = 0; i < this.pdfViewer.zIndexTable.length; i++) {\n        if (this.pdfViewer.zIndexTable[i].pageId === pageId) {\n          notFound = false;\n          zIndexTable = this.pdfViewer.zIndexTable[i];\n          break;\n        }\n      }\n\n      if (notFound) {\n        zIndexTable = this.createNewZindexTable(pageId);\n        zIndexTable.pageId = pageId;\n      }\n    } else {\n      zIndexTable = this.createNewZindexTable(pageId);\n    }\n\n    return zIndexTable;\n  };\n  /**\n   * @private\n   * @param {number} index - Specified the page index value.\n   * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n   * @returns {void}\n   */\n\n\n  Drawing.prototype.setZIndex = function (index, obj) {\n    if (obj.pageIndex !== undefined) {\n      var pageTable = this.getPageTable(obj.pageIndex);\n\n      if (obj.zIndex === -1) {\n        pageTable.zIndex++;\n        obj.zIndex = pageTable.zIndex;\n        pageTable.objects.push(obj);\n      } else {\n        var index_1 = obj.zIndex;\n        var tabelLength = pageTable.objects.length;\n        obj.zIndex = tabelLength++;\n        pageTable.objects.push(obj);\n      }\n    }\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel | PdfFormFieldBaseModel} obj - Specified the annotation object.\n   * @returns {PdfAnnotationBaseModel | PdfFormFieldBaseModel} - Returns the annotaion or form fields model.\n   */\n\n\n  Drawing.prototype.initObject = function (obj) {\n    //Move the common properties like zindex and id to an abstract class\n    this.setZIndex(this.pdfViewer.zIndex, obj);\n    createMeasureElements();\n\n    if (!isLineShapes(obj)) {\n      this.initNode(obj);\n    } else {\n      this.initLine(obj);\n      obj.wrapper.measure(new Size(undefined, undefined));\n      obj.wrapper.arrange(obj.wrapper.desiredSize);\n    }\n\n    if (obj.wrapper === null) {//Init default wrapper\n    } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n    this.pdfViewer.nameTable[obj.id] = obj;\n\n    if (obj.formFieldAnnotationType) {\n      this.nodePropertyChange(obj, {\n        bounds: {\n          width: obj.bounds.width,\n          height: obj.bounds.height\n        }\n      });\n    } //Add some methodologies to add the children of group to name table\n\n\n    return obj;\n  };\n\n  Drawing.prototype.initNode = function (obj) {\n    var canvas = this.initContainer(obj);\n    var content;\n\n    if (!canvas.children) {\n      canvas.children = [];\n    }\n\n    if (!content) {\n      content = this.init(obj, canvas);\n    } //canvas.children.push(content);\n\n\n    canvas.rotateAngle = obj.rotateAngle; // eslint-disable-next-line max-len\n\n    canvas.measure(new Size(obj.wrapper.width, obj.wrapper.height));\n    canvas.arrange(canvas.desiredSize);\n\n    if (this.isDynamicStamps) {\n      this.pdfViewer.annotation.stampAnnotationModule.updateSessionStorage(obj, null, 'dynamicStamp');\n      this.isDynamicStamps = false;\n    }\n  };\n  /**\n   * Allows to initialize the UI of a node\n   */\n\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel | PdfFormFieldBaseModel} obj - Specified the annotation object.\n   * @param {Container} canvas - Specified the canvas element.\n   * @returns {DrawingElement} - Returns the drawing element.\n   */\n\n\n  Drawing.prototype.init = function (obj, canvas) {\n    var content;\n    content = new DrawingElement();\n    var pathContent;\n    var basicElement;\n    var isStamp = false; // eslint-disable-next-line\n\n    var annotationSettings = this.pdfViewer.annotationModule ? this.pdfViewer.annotationModule.findAnnotationSettings(obj) : {};\n    var annotationMaxHeight = 0;\n    var annotationMaxWidth = 0;\n    var annotationMinHeight = 0;\n    var annotationMinWidth = 0;\n\n    if (annotationSettings.minWidth || annotationSettings.maxWidth || annotationSettings.minHeight || annotationSettings.maxHeight) {\n      annotationMaxHeight = annotationSettings.maxHeight ? annotationSettings.maxHeight : 2000;\n      annotationMaxWidth = annotationSettings.maxWidth ? annotationSettings.maxWidth : 2000;\n      annotationMinHeight = annotationSettings.minHeight ? annotationSettings.minHeight : 0;\n      annotationMinWidth = annotationSettings.minWidth ? annotationSettings.minWidth : 0;\n    }\n\n    var isAnnotationSet = false;\n\n    if (annotationMinHeight || annotationMinWidth || annotationMaxHeight || annotationMaxWidth) {\n      isAnnotationSet = true;\n    }\n\n    if (obj.formFieldAnnotationType) {\n      content = this.initFormFields(obj, content, canvas);\n    } else {\n      // eslint-disable-next-line max-len\n      content = this.initAnnotationObject(obj, pathContent, content, canvas, isStamp, basicElement, isAnnotationSet, annotationMaxHeight, annotationMaxWidth, annotationMinWidth, annotationMinHeight);\n    }\n\n    content.id = obj.id + '_content';\n    content.relativeMode = 'Object';\n\n    if (obj.shapeAnnotationType !== 'Stamp') {\n      if (obj.bounds.width !== undefined) {\n        content.width = obj.bounds.width;\n\n        if (isAnnotationSet) {\n          if (content.width < annotationMinWidth || content.width > annotationMaxWidth) {\n            if (content.width < annotationMinWidth) {\n              content.width = annotationMinWidth;\n            }\n\n            if (content.width > annotationMaxWidth) {\n              content.width = annotationMaxWidth;\n            }\n          }\n        }\n      }\n\n      content.horizontalAlignment = 'Stretch';\n\n      if (obj.bounds.height !== undefined) {\n        content.height = obj.bounds.height;\n\n        if (isAnnotationSet) {\n          if (content.height < annotationMinHeight || content.width > annotationMaxHeight) {\n            if (content.height < annotationMinHeight) {\n              content.height = annotationMinHeight;\n            }\n\n            if (content.height > annotationMaxHeight) {\n              content.height = annotationMaxHeight;\n            }\n          }\n        }\n      }\n\n      setElementStype(obj, content);\n\n      if (this.pdfViewer.viewerBase.drawSignatureWithTool && obj.shapeAnnotationType === 'SignatureText') {\n        content.style.strokeWidth = 0;\n      }\n    }\n\n    content.isRectElement = true;\n    content.verticalAlignment = 'Stretch';\n    return content;\n  };\n\n  Drawing.prototype.initFormFields = function (obj, content, canvas) {\n    switch (obj.formFieldAnnotationType) {\n      case 'Textbox':\n      case 'PasswordField':\n      case 'Checkbox':\n      case 'RadioButton':\n      case 'DropdownList':\n      case 'ListBox':\n      case 'SignatureField':\n      case 'InitialField':\n        // eslint-disable-next-line\n        var htmlContent = new DiagramHtmlElement();\n        content = htmlContent;\n        content.id = obj.id + '_content';\n        canvas.children.push(content);\n        break;\n    }\n\n    return content;\n  }; // eslint-disable-next-line\n\n\n  Drawing.prototype.initAnnotationObject = function (obj, pathContent, content, canvas, isStamp, basicElement, isAnnotationSet, annotationMaxHeight, annotationMaxWidth, annotationMinWidth, annotationMinHeight) {\n    switch (obj.shapeAnnotationType) {\n      case 'Ellipse':\n        pathContent = new PathElement();\n        pathContent.data = 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' + 'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z';\n        content = pathContent;\n        canvas.children.push(content);\n\n        if (obj.enableShapeLabel) {\n          var textLabel = this.textElement(obj);\n          textLabel.content = obj.labelContent;\n          textLabel.style.color = obj.fontColor;\n          textLabel.style.strokeColor = obj.labelBorderColor;\n          textLabel.style.fill = obj.labelFillColor;\n          textLabel.style.fontSize = obj.fontSize;\n          textLabel.style.fontFamily = obj.fontFamily;\n          textLabel.style.opacity = obj.labelOpacity;\n          canvas.children.push(textLabel);\n        }\n\n        break;\n\n      case 'Path':\n        pathContent = new PathElement();\n        pathContent.data = obj.data;\n        content = pathContent;\n        canvas.children.push(content);\n        break;\n\n      case 'HandWrittenSignature':\n      case 'Ink':\n        pathContent = new PathElement();\n        pathContent.data = obj.data;\n        pathContent.style.strokeColor = obj.strokeColor;\n        pathContent.style.strokeWidth = obj.thickness;\n        pathContent.style.opacity = obj.opacity;\n        content = pathContent;\n        canvas.children.push(content);\n        break;\n\n      case 'Polygon':\n        pathContent = new PathElement();\n        pathContent.data = getPolygonPath(obj.vertexPoints);\n        content = pathContent;\n        canvas.children.push(content);\n        break;\n\n      case 'Stamp':\n        isStamp = true;\n        this.isDynamicStamps = true;\n\n        if (obj && obj.annotationAddMode && (obj.annotationAddMode === 'Existing Annotation' || obj.annotationAddMode === 'Imported Annotation')) {\n          obj.bounds.width = obj.bounds.width - 20;\n          obj.bounds.height = obj.bounds.height - 20;\n        }\n\n        if (obj.isDynamicStamp) {\n          canvas.horizontalAlignment = 'Left';\n          basicElement = new DrawingElement();\n          content = basicElement;\n          content.cornerRadius = 10;\n          content.style.fill = obj.stampFillColor;\n          content.style.strokeColor = obj.stampStrokeColor;\n          canvas.children.push(content);\n          var textele_1 = this.textElement(obj);\n          textele_1 = new TextElement();\n          textele_1.style.fontFamily = 'Helvetica';\n          textele_1.style.fontSize = 14;\n          textele_1.style.italic = true;\n          textele_1.style.bold = true;\n          textele_1.style.color = obj.fillColor;\n          textele_1.rotateValue = undefined;\n          textele_1.content = obj.dynamicText;\n          textele_1.relativeMode = 'Point';\n          textele_1.margin.left = 10;\n          textele_1.margin.bottom = -7;\n          textele_1.setOffsetWithRespectToBounds(0, 0.57, null);\n          textele_1.relativeMode = 'Point';\n          canvas.children.push(textele_1); // eslint-disable-next-line\n\n          var pathContent1 = new PathElement();\n          pathContent1.id = randomId() + '_stamp';\n          pathContent1.data = obj.data;\n          pathContent1.width = obj.bounds.width;\n\n          if (isAnnotationSet && obj.bounds.width > annotationMaxWidth) {\n            pathContent1.width = annotationMaxWidth;\n            obj.bounds.width = annotationMaxWidth;\n          }\n\n          pathContent1.height = obj.bounds.height / 2;\n\n          if (isAnnotationSet && obj.bounds.height > annotationMaxHeight) {\n            pathContent1.height = annotationMaxHeight / 2;\n            obj.bounds.height = annotationMaxHeight / 2;\n          }\n\n          pathContent1.rotateValue = undefined;\n          pathContent1.margin.left = 10;\n          pathContent1.margin.bottom = -5;\n          pathContent1.relativeMode = 'Point';\n          pathContent1.setOffsetWithRespectToBounds(0, 0.1, null); // eslint-disable-next-line\n\n          var content1 = pathContent1;\n          pathContent1.style.fill = obj.fillColor;\n          pathContent1.style.strokeColor = obj.strokeColor;\n          pathContent1.style.opacity = obj.opacity;\n          content.width = obj.bounds.width + 20;\n          content.height = obj.bounds.height + 20;\n          content.style.opacity = obj.opacity;\n          canvas.children.push(content1);\n        } else {\n          canvas.horizontalAlignment = 'Left';\n          basicElement = new DrawingElement();\n          content = basicElement;\n          content.cornerRadius = 10;\n          content.style.fill = obj.stampFillColor;\n          content.style.strokeColor = obj.stampStrokeColor;\n          canvas.children.push(content); // eslint-disable-next-line\n\n          var pathContent1 = new PathElement();\n          pathContent1.id = randomId() + '_stamp';\n          pathContent1.data = obj.data;\n          pathContent1.width = obj.bounds.width;\n\n          if (isAnnotationSet && obj.bounds.width > annotationMaxWidth) {\n            pathContent1.width = annotationMaxWidth;\n            obj.bounds.width = annotationMaxWidth;\n          }\n\n          pathContent1.height = obj.bounds.height;\n\n          if (isAnnotationSet && obj.bounds.height > annotationMaxHeight) {\n            pathContent1.height = annotationMaxHeight;\n            obj.bounds.height = annotationMaxHeight;\n          }\n\n          pathContent1.minWidth = pathContent1.width / 2;\n          pathContent1.minHeight = pathContent1.height / 2; // eslint-disable-next-line\n\n          var content1 = pathContent1;\n          pathContent1.style.fill = obj.fillColor;\n          pathContent1.style.strokeColor = obj.strokeColor;\n          pathContent1.style.opacity = obj.opacity;\n          content.width = obj.bounds.width + 20;\n          content.height = obj.bounds.height + 20;\n          content.minWidth = pathContent1.width / 2;\n          content.minHeight = pathContent1.height / 2;\n          content.style.opacity = obj.opacity;\n          canvas.children.push(content1);\n          canvas.minHeight = content.minHeight + 20;\n          canvas.minWidth = content.minWidth + 20;\n        }\n\n        break;\n\n      case 'Image':\n      case 'SignatureImage':\n        // eslint-disable-next-line\n        var pathContent11 = new ImageElement();\n        pathContent11.source = obj.data;\n        content = pathContent11;\n        content.style.strokeWidth = 0;\n        canvas.children.push(content);\n        break;\n\n      case 'Rectangle':\n        basicElement = new DrawingElement();\n        content = basicElement;\n        canvas.children.push(content);\n\n        if (obj.enableShapeLabel) {\n          var textLabel = this.textElement(obj);\n          textLabel.content = obj.labelContent;\n          textLabel.style.color = obj.fontColor;\n          textLabel.style.strokeColor = obj.labelBorderColor;\n          textLabel.style.fill = obj.labelFillColor;\n          textLabel.style.fontSize = obj.fontSize;\n          textLabel.style.fontFamily = obj.fontFamily;\n          textLabel.style.opacity = obj.labelOpacity;\n          canvas.children.push(textLabel);\n        }\n\n        break;\n\n      case 'Perimeter':\n        pathContent = new PathElement();\n        pathContent.data = 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' + 'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z';\n        content = pathContent;\n        setElementStype(obj, pathContent);\n        canvas.children.push(content);\n        basicElement = new DrawingElement();\n        basicElement.id = 'perimeter_' + randomId();\n        basicElement.height = .2;\n        basicElement.width = .2;\n        basicElement.transform = RotateTransform.Self;\n        basicElement.horizontalAlignment = 'Stretch';\n        this.setNodePosition(basicElement, obj);\n        basicElement.rotateAngle = obj.rotateAngle;\n        setElementStype(obj, basicElement);\n        canvas.children.push(basicElement); // eslint-disable-next-line\n\n        var textele = this.textElement(obj);\n        textele = new TextElement();\n        textele.content = textele.content = findPointsLength([{\n          x: obj.bounds.x,\n          y: obj.bounds.y\n        }, {\n          x: obj.bounds.x + obj.bounds.width,\n          y: obj.bounds.y + obj.bounds.height\n        }]).toString();\n        textele.rotateValue = {\n          y: -10,\n          angle: obj.rotateAngle\n        };\n        canvas.children.push(textele);\n        break;\n\n      case 'Radius':\n        pathContent = new PathElement();\n        pathContent.data = 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' + 'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z';\n        content = pathContent;\n        setElementStype(obj, pathContent);\n        canvas.children.push(content);\n        basicElement = new DrawingElement();\n        basicElement.id = 'radius_' + randomId();\n        basicElement.height = .2;\n        basicElement.width = obj.bounds.width / 2;\n        basicElement.transform = RotateTransform.Self;\n        this.setNodePosition(basicElement, obj);\n        basicElement.rotateAngle = obj.rotateAngle;\n        setElementStype(obj, basicElement);\n        canvas.children.push(basicElement); // eslint-disable-next-line\n\n        var radiusTextEle = this.textElement(obj);\n\n        if (obj.enableShapeLabel) {\n          radiusTextEle.style.color = obj.fontColor;\n          radiusTextEle.style.strokeColor = obj.labelBorderColor;\n          radiusTextEle.style.fill = obj.labelFillColor;\n          radiusTextEle.style.fontSize = obj.fontSize;\n          radiusTextEle.style.fontFamily = obj.fontFamily;\n          radiusTextEle.style.opacity = obj.labelOpacity;\n        } // eslint-disable-next-line\n\n\n        var length_1 = findPointsLength([{\n          x: obj.bounds.x,\n          y: obj.bounds.y\n        }, {\n          x: obj.bounds.x + obj.bounds.width,\n          y: obj.bounds.y + obj.bounds.height\n        }]);\n\n        if (!this.pdfViewer.enableImportAnnotationMeasurement && obj.notes && obj.notes !== '') {\n          radiusTextEle.content = obj.notes;\n        } else {\n          // eslint-disable-next-line max-len\n          radiusTextEle.content = this.pdfViewer.annotation.measureAnnotationModule.setConversion(obj.bounds.width / 2 * this.pdfViewer.annotation.measureAnnotationModule.pixelToPointFactor, obj);\n        }\n\n        radiusTextEle.rotateValue = {\n          y: -10,\n          x: obj.bounds.width / 4,\n          angle: obj.rotateAngle\n        };\n        canvas.children.push(radiusTextEle);\n        break;\n\n      case 'StickyNotes':\n        // eslint-disable-next-line\n        var pathContent2 = new ImageElement();\n        pathContent2.source = obj.data;\n        pathContent2.width = obj.bounds.width;\n        pathContent2.height = obj.bounds.height;\n        pathContent2.style.strokeColor = obj.strokeColor;\n        pathContent2.style.strokeWidth = 0;\n        content = pathContent2;\n        canvas.children.push(content);\n        break;\n\n      case 'SignatureText':\n        //eslint-disable-next-line\n        var rectElements = new DrawingElement();\n        rectElements.style.strokeWidth = 0;\n        content = rectElements;\n        content.style.strokeWidth = 0;\n        canvas.style.strokeWidth = 0;\n        canvas.children.push(content); // eslint-disable-next-line\n\n        var signatureText = this.textElement(obj);\n        signatureText.style.fontFamily = obj.fontFamily;\n        signatureText.style.fontSize = obj.fontSize;\n        signatureText.style.textAlign = 'Left';\n        signatureText.rotateValue = undefined;\n        signatureText.content = obj.data;\n        signatureText.style.strokeWidth = 0;\n        canvas.children.push(signatureText);\n        break;\n\n      case 'FreeText':\n        // eslint-disable-next-line\n        var rectElement = new DrawingElement();\n        content = rectElement;\n        canvas.children.push(content); // eslint-disable-next-line\n\n        var freeTextEle = this.textElement(obj);\n        freeTextEle = new TextElement();\n        freeTextEle.style.fontFamily = obj.fontFamily;\n        freeTextEle.style.fontSize = obj.fontSize;\n        freeTextEle.style.textAlign = 'Left';\n\n        if (obj.textAlign.toLowerCase() === 'center') {\n          freeTextEle.style.textAlign = 'Center';\n        } else if (obj.textAlign.toLowerCase() === 'right') {\n          freeTextEle.style.textAlign = 'Right';\n        } else if (obj.textAlign.toLowerCase() === 'justify') {\n          freeTextEle.style.textAlign = 'Justify';\n        }\n\n        freeTextEle.style.color = obj.fontColor;\n        freeTextEle.style.bold = obj.font.isBold;\n        freeTextEle.style.italic = obj.font.isItalic;\n\n        if (obj.font.isUnderline === true) {\n          freeTextEle.style.textDecoration = 'Underline';\n        } else if (obj.font.isStrikeout === true) {\n          freeTextEle.style.textDecoration = 'LineThrough';\n        }\n\n        freeTextEle.rotateValue = undefined;\n        freeTextEle.content = obj.dynamicText;\n        freeTextEle.style.opacity = obj.opacity;\n        freeTextEle.margin.left = 4;\n        freeTextEle.margin.top = 5 * (obj.fontSize / 16);\n\n        if (this.pdfViewer.freeTextSettings.enableAutoFit) {\n          freeTextEle.style.textWrapping = 'Wrap';\n        } else {\n          freeTextEle.style.textWrapping = 'WrapWithOverflow';\n        }\n\n        freeTextEle.relativeMode = 'Point';\n        freeTextEle.setOffsetWithRespectToBounds(0, 0, null);\n        freeTextEle.relativeMode = 'Point';\n        canvas.children.push(freeTextEle);\n        break;\n    }\n\n    content.id = obj.id + '_content';\n    content.relativeMode = 'Object';\n\n    if (!isStamp) {\n      if (obj.bounds.width !== undefined) {\n        content.width = obj.bounds.width;\n\n        if (isAnnotationSet) {\n          if (content.width < annotationMinWidth || content.width > annotationMaxWidth) {\n            if (content.width < annotationMinWidth) {\n              content.width = annotationMinWidth;\n            }\n\n            if (content.width > annotationMaxWidth) {\n              content.width = annotationMaxWidth;\n            }\n          }\n        }\n      }\n\n      content.horizontalAlignment = 'Stretch';\n\n      if (obj.bounds.height !== undefined) {\n        content.height = obj.bounds.height;\n\n        if (isAnnotationSet) {\n          if (content.height < annotationMinHeight || content.width > annotationMaxHeight) {\n            if (content.height < annotationMinHeight) {\n              content.height = annotationMinHeight;\n            }\n\n            if (content.height > annotationMaxHeight) {\n              content.height = annotationMaxHeight;\n            }\n          }\n        }\n      }\n\n      setElementStype(obj, content);\n    }\n\n    content.isRectElement = true;\n    content.verticalAlignment = 'Stretch';\n    return content;\n  };\n\n  Drawing.prototype.textElement = function (obj) {\n    var textele = new TextElement();\n    setElementStype(obj, textele);\n    textele.horizontalAlignment = 'Center';\n    obj.shapeAnnotationType === 'SignatureText' ? textele.verticalAlignment = 'Center' : textele.verticalAlignment = 'Top';\n    textele.relativeMode = 'Object';\n    textele.setOffsetWithRespectToBounds(.5, .5, 'Absolute');\n    return textele;\n  };\n  /**\n   * @private\n   * @param {DrawingElement} obj - Specified the drawing element.\n   * @param {PdfAnnotationBaseModel} node - Specified the node element.\n   * @returns {void}\n   */\n\n\n  Drawing.prototype.setNodePosition = function (obj, node) {\n    if (node.shapeAnnotationType === 'Perimeter') {\n      obj.offsetX = node.bounds.x + node.bounds.width / 2;\n      obj.offsetY = node.bounds.y + node.bounds.height / 2;\n    } else if (node.shapeAnnotationType === 'Radius') {\n      // eslint-disable-next-line max-len\n      var trasPoint = {\n        x: node.bounds.x + node.bounds.width / 2 + node.bounds.width / 4,\n        y: node.bounds.y + node.bounds.height / 2\n      };\n      var center = {\n        x: node.bounds.x + node.bounds.width / 2,\n        y: node.bounds.y + node.bounds.height / 2\n      };\n      var matrix = identityMatrix();\n      rotateMatrix(matrix, node.rotateAngle, center.x, center.y);\n      var rotatedPoint = transformPointByMatrix(matrix, trasPoint);\n      var newPoint1 = {\n        x: rotatedPoint.x,\n        y: rotatedPoint.y\n      };\n      obj.offsetX = newPoint1.x;\n      obj.offsetY = newPoint1.y;\n      obj.width = node.bounds.width / 2;\n    }\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n   * @returns {Container} - Returns the container element.\n   */\n\n\n  Drawing.prototype.initContainer = function (obj) {\n    if (!obj.id) {\n      obj.id = randomId();\n    } // Creates canvas element\n\n\n    var canvas = new Canvas();\n    canvas.id = obj.id;\n    canvas.offsetX = obj.bounds.x + obj.bounds.width * 0.5;\n    canvas.offsetY = obj.bounds.y + obj.bounds.height * 0.5;\n    canvas.style.fill = 'transparent';\n    canvas.style.strokeColor = 'transparent';\n    canvas.rotateAngle = obj.rotateAngle;\n    obj.wrapper = canvas;\n    return canvas;\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n   * @returns {Canvas} - Returns the canvas element.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  Drawing.prototype.initLine = function (obj) {\n    if (!obj.id) {\n      obj.id = randomId();\n    }\n\n    var bpmnElement;\n    var container = new Canvas();\n    var segment = new PathElement();\n    segment.id = obj.id + '_path';\n    var srcDecorator = new PathElement();\n    var targetDecorator = new PathElement();\n\n    if (obj.vertexPoints.length) {\n      obj.sourcePoint = obj.vertexPoints[0];\n      obj.targetPoint = obj.vertexPoints[obj.vertexPoints.length - 1];\n\n      for (var i = 0; i < obj.vertexPoints.length; i++) {\n        if (i !== 0 && i !== obj.vertexPoints.length - 1) {\n          obj.segments.push(obj.vertexPoints[i]);\n        }\n      }\n    }\n\n    segment = getSegmentElement(obj, segment);\n    var points = [];\n    points = getConnectorPoints(obj); //  points = this.clipDecorators(this, points);\n\n    var leaders = [];\n    var labels = [];\n\n    if (obj.shapeAnnotationType === 'Distance') {\n      leaders = initLeaders(obj, points);\n      labels = initDistanceLabel(obj, points, this.pdfViewer.annotation.measureAnnotationModule, this.pdfViewer);\n    }\n\n    if ((obj.shapeAnnotationType === 'Line' || obj.shapeAnnotationType === 'LineWidthArrowHead') && obj.measureType === 'Perimeter') {\n      labels = initPerimeterLabel(obj, points, this.pdfViewer.annotation.measureAnnotationModule, this.pdfViewer);\n    }\n\n    if (obj.enableShapeLabel === true && !(obj.shapeAnnotationType === 'Distance') && !(obj.measureType === 'Perimeter')) {\n      var angle = Point.findAngle(points[0], points[1]);\n      var textele = this.textElement(obj);\n      textele.id = randomId();\n\n      if (!this.pdfViewer.enableImportAnnotationMeasurement && obj.notes && obj.notes !== '') {\n        textele.content = obj.notes;\n      } else {\n        textele.content = obj.labelContent;\n      }\n\n      textele.style.strokeColor = obj.labelBorderColor;\n      textele.style.fill = obj.labelFillColor;\n      textele.style.fontSize = obj.fontSize;\n      textele.style.color = obj.fontColor;\n      textele.style.fontFamily = obj.fontFamily;\n      textele.style.opacity = obj.labelOpacity;\n      textele.rotateValue = {\n        y: -10,\n        angle: angle\n      };\n      labels.push(textele);\n    }\n\n    points = clipDecorators(obj, points);\n    var bounds = Rect.toBounds(points);\n    container.width = bounds.width;\n    container.height = bounds.height;\n    container.offsetX = bounds.x + container.pivot.x * bounds.width;\n    container.offsetY = bounds.y + container.pivot.y * bounds.height;\n    var anglePoints = obj.vertexPoints;\n    var accessContent = 'getDescription'; // eslint-disable-next-line max-len\n\n    if (obj.shapeAnnotationType === 'Line' || obj.shapeAnnotationType === 'LineWidthArrowHead' || obj.shapeAnnotationType === 'Distance') {\n      srcDecorator = getDecoratorElement(obj, points[0], anglePoints[1], true);\n      targetDecorator = getDecoratorElement(obj, points[points.length - 1], anglePoints[anglePoints.length - 2], false);\n    }\n\n    srcDecorator.id = obj.id + '_srcDec';\n    targetDecorator.id = obj.id + '_tarDec';\n    /* eslint-disable @typescript-eslint/dot-notation */\n\n    segment.style['fill'] = 'transparent';\n    container.style.strokeColor = 'transparent';\n    container.style.fill = 'transparent';\n    container.style.strokeWidth = 0;\n    container.children = [];\n    setElementStype(obj, segment);\n    container.children.push(segment);\n\n    if (leaders.length > 0) {\n      for (var i = 0; i < leaders.length; i++) {\n        container.children.push(leaders[i]);\n      }\n    }\n\n    if (labels.length > 0) {\n      for (var i = 0; i < labels.length; i++) {\n        container.children.push(labels[i]);\n      }\n    }\n\n    container.children.push(srcDecorator);\n    container.children.push(targetDecorator);\n\n    if (obj.shapeAnnotationType === 'LineWidthArrowHead') {\n      container.children[1].width = 12 * obj.thickness;\n      container.children[1].height = 12 * obj.thickness;\n      container.children[2].width = 12 * obj.thickness;\n      container.children[2].height = 12 * obj.thickness;\n    }\n\n    container.id = obj.id;\n    container.offsetX = segment.offsetX;\n    container.offsetY = segment.offsetY;\n    container.width = segment.width;\n    container.height = segment.height;\n    points = getConnectorPoints(obj);\n    obj.wrapper = container;\n    return container;\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n   * @returns {PdfAnnotationBaseModel} - Returns the added annotaion object.\n   */\n\n\n  Drawing.prototype.add = function (obj) {\n    var allowServerDataBind = this.pdfViewer.allowServerDataBinding;\n    this.pdfViewer.enableServerDataBinding(false);\n\n    if (obj.formFieldAnnotationType && this.pdfViewer.formDesignerModule) {\n      obj = new PdfFormFieldBase(this.pdfViewer, 'formFields', obj, true);\n      obj = this.initObject(obj);\n      this.pdfViewer.formFields.push(obj);\n    } else {\n      obj = new PdfAnnotationBase(this.pdfViewer, 'annotations', obj, true);\n      obj = this.initObject(obj);\n      this.pdfViewer.annotations.push(obj);\n    }\n\n    this.pdfViewer.enableServerDataBinding(allowServerDataBind, true);\n    return obj;\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n   * @returns {void}\n   */\n\n\n  Drawing.prototype.remove = function (obj) {\n    var allowServerDataBind = this.pdfViewer.allowServerDataBinding;\n    this.pdfViewer.enableServerDataBinding(false);\n    var index = obj.pageIndex;\n\n    for (var i = 0; i < this.pdfViewer.annotations.length; i++) {\n      var annotation = this.pdfViewer.annotations[i];\n\n      if (annotation.id && (annotation.id === obj.id || annotation.id.split('_')[0] === obj.id) || annotation.wrapper && annotation.wrapper.id === obj.id) {\n        this.pdfViewer.annotations.splice(i, 1);\n        var objects = this.getPageObjects(obj.pageIndex);\n\n        for (var j = 0; j < objects.length; j++) {\n          if (objects[j].id === obj.id) {\n            objects.splice(j, 1);\n\n            if (obj.shapeAnnotationType === 'Path' || obj.shapeAnnotationType === 'SignatureImage' || obj.shapeAnnotationType === 'SignatureText') {\n              this.refreshCanvasDiagramLayer(undefined, index, obj.id);\n            } else {\n              this.pdfViewer.renderDrawing(undefined, index);\n            }\n          }\n        } // need to add code snippet to remove from z index table   \n\n      }\n    }\n\n    for (var i = 0; i < this.pdfViewer.formFields.length; i++) {\n      var element = this.pdfViewer.formFields[i];\n\n      if (element.id === obj.id || element.wrapper.id === obj.id) {\n        this.pdfViewer.formFields.splice(i, 1);\n\n        if (this.pdfViewer.formDesignerModule && obj.formFieldAnnotationType) {\n          this.pdfViewer.formFieldCollection.splice(i, 1);\n        }\n\n        var objects = this.getPageObjects(obj.pageIndex);\n\n        for (var j = 0; j < objects.length; j++) {\n          if (objects[j].id === obj.id) {\n            objects.splice(j, 1);\n            break;\n          }\n\n          if (objects[j] && objects[j].id && objects[j].id.indexOf(obj.id) !== -1) {\n            objects.splice(j, 1);\n          }\n        }\n      }\n    }\n\n    if (obj.formFieldAnnotationType === 'Textbox' || obj.formFieldAnnotationType === 'Checkbox' || obj.formFieldAnnotationType === 'RadioButton' || obj.formFieldAnnotationType === 'PasswordField' || obj.formFieldAnnotationType === 'DropdownList' || obj.formFieldAnnotationType === 'ListBox' || obj.formFieldAnnotationType === 'SignatureField' || obj.formFieldAnnotationType === 'InitialField') {\n      for (var i = 0; i < this.pdfViewer.formFieldCollections.length; i++) {\n        // eslint-disable-next-line\n        var element = this.pdfViewer.formFieldCollections[i];\n\n        if (element.id === obj.id) {\n          this.pdfViewer.formFieldCollections.splice(i, 1);\n        }\n      }\n    }\n\n    if (obj.formFieldAnnotationType === 'Textbox' || obj.formFieldAnnotationType === 'Checkbox' || obj.formFieldAnnotationType === 'RadioButton' || obj.formFieldAnnotationType === 'PasswordField' || obj.formFieldAnnotationType === 'DropdownList' || obj.formFieldAnnotationType === 'ListBox' || obj.formFieldAnnotationType === 'SignatureField' || obj.formFieldAnnotationType === 'InitialField') {\n      // eslint-disable-next-line\n      var inputField = document.getElementById('form_field_' + obj.id + '_content_html_element');\n\n      if (inputField) {\n        inputField.remove();\n        this.pdfViewer.renderDrawing(undefined, index);\n        var field = {\n          // eslint-disable-next-line\n          name: obj.name,\n          id: obj.id,\n          value: obj.value,\n          fontFamily: obj.fontFamily,\n          fontSize: obj.fontSize,\n          fontStyle: obj.fontStyle,\n          // eslint-disable-next-line\n          color: obj.color,\n          backgroundColor: obj.backgroundColor,\n          alignment: obj.alignment,\n          isReadonly: obj.isReadonly,\n          visibility: obj.visibility,\n          // eslint-disable-next-line\n          maxLength: obj.maxLength,\n          isRequired: obj.isRequired,\n          isPrint: obj.isPrint,\n          rotation: obj.rotateAngle,\n          tooltip: obj.tooltip,\n          // eslint-disable-next-line\n          options: obj.options,\n          isChecked: obj.isChecked,\n          isSelected: obj.isSelected\n        };\n        this.pdfViewer.fireFormFieldRemoveEvent('formFieldRemove', field, obj.pageIndex);\n        this.pdfViewer.formDesignerModule.removeFieldsFromAnnotationCollections(obj.id);\n      }\n    }\n\n    this.pdfViewer.enableServerDataBinding(allowServerDataBind, true);\n  };\n  /**\n   * @private\n   * @param {number} pageIndex - Specified the page index.\n   * @returns {PdfAnnotationBaseModel[]} - Returns the annotation base model collections.\n   */\n\n\n  Drawing.prototype.getPageObjects = function (pageIndex) {\n    var pageTable = this.getPageTable(pageIndex);\n    return pageTable.objects;\n  };\n  /**\n   * @private\n   * @param {HTMLCanvasElement} diagramLayer - Specified the diagram layer element.\n   * @param {number} pageIndex - Specified the page index.\n   * @param {string} objectId - Specified the object id.\n   * @returns {void}\n   */\n\n\n  Drawing.prototype.refreshCanvasDiagramLayer = function (diagramLayer, pageIndex, objectId) {\n    if (!diagramLayer) {\n      diagramLayer = document.getElementById(this.pdfViewer.element.id + '_annotationCanvas_' + pageIndex);\n    }\n\n    if (diagramLayer) {\n      var zoom = this.pdfViewer.viewerBase.getZoomFactor();\n      var width = diagramLayer.width / zoom;\n      var height = diagramLayer.height / zoom;\n      var ctx = diagramLayer.getContext('2d');\n      ctx.lineCap = \"round\";\n      ctx.lineJoin = \"round\";\n\n      if (zoom < 1) {\n        ctx.lineWidth = ctx.lineWidth / zoom;\n      }\n\n      var devicePixelRatio_1 = this.pdfViewer.viewerBase.getWindowDevicePixelRatio();\n      var zoomRatio = zoom * devicePixelRatio_1;\n\n      if (!Browser.isDevice || Browser.isDevice && zoom <= 0.7) {\n        ctx.setTransform(zoomRatio, 0, 0, zoomRatio, 0, 0);\n      } else {\n        ctx.setTransform(zoom, 0, 0, zoom, 0, 0);\n      }\n\n      ctx.clearRect(0, 0, width, height);\n      var objects = this.getPageObjects(pageIndex);\n\n      for (var i = 0; i < objects.length; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var renderElement = void 0;\n\n        if (diagramLayer.id === this.pdfViewer.element.id + '_print_annotation_layer_' + pageIndex) {\n          if (objects[i].isPrint) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            renderElement = this.pdfViewer.nameTable[objects[i].id].wrapper;\n\n            if (!isNullOrUndefined(renderElement)) {\n              refreshDiagramElements(diagramLayer, [renderElement], this.renderer);\n            }\n          }\n        } else {\n          // eslint-disable-next-line\n          renderElement = this.pdfViewer.nameTable[objects[i].id].wrapper;\n          refreshDiagramElements(diagramLayer, [renderElement], this.renderer);\n        }\n      }\n    }\n  };\n  /**\n   * @private\n   * @param {number} index - Specified the page index.\n   * @returns {void}\n   */\n\n\n  Drawing.prototype.clearHighlighter = function (index) {\n    var adornerSvg = this.getAdornerLayerSvg(this.pdfViewer.element.id + index + '_diagramAdornerLayer', index);\n\n    if (adornerSvg) {\n      var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n\n      if (highlighter) {\n        highlighter.parentNode.removeChild(highlighter);\n      }\n    }\n  };\n  /**\n   * @private\n   * @param {string} diagramId - Specified the diagram id.\n   * @param {number} index - Specified the page index.\n   * @returns {SVGSVGElement} Return the svg element.\n   */\n\n\n  Drawing.prototype.getSelectorElement = function (diagramId, index) {\n    var adornerLayer = null;\n    var adornerSvg = this.getAdornerLayerSvg(diagramId, index);\n\n    if (adornerSvg) {\n      adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    }\n\n    return adornerLayer;\n  };\n  /**\n   * @private\n   * @param {string} diagramId - Specified the diagram id.\n   * @param {number} index - Specified the page index.\n   * @returns {SVGSVGElement} Return the svg element.\n   */\n\n\n  Drawing.prototype.getAdornerLayerSvg = function (diagramId, index) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId + index + '_diagramAdornerLayer'); // eslint-disable-next-line\n\n    var elementcoll;\n\n    if (diagramElement) {\n      elementcoll = diagramElement.getElementsByClassName('e-adorner-layer' + index);\n      adornerLayerSvg = elementcoll[0];\n    }\n\n    return adornerLayerSvg;\n  };\n  /**\n   * @private\n   * @param {number} index - Specified the page index.\n   * @returns {void}\n   */\n\n\n  Drawing.prototype.clearSelectorLayer = function (index) {\n    var adornerSvg = this.getAdornerLayerSvg(this.pdfViewer.element.id, index);\n\n    if (adornerSvg) {\n      var selectionRect = adornerSvg.getElementById(this.pdfViewer.adornerSvgLayer.id + '_selected_region');\n\n      if (selectionRect) {\n        selectionRect.parentNode.removeChild(selectionRect);\n      }\n\n      this.clearHighlighter(index);\n      var childNodes = this.getSelectorElement(this.pdfViewer.element.id, index).childNodes;\n      var child = void 0;\n\n      for (var i = childNodes.length; i > 0; i--) {\n        child = childNodes[i - 1];\n        child.parentNode.removeChild(child);\n      }\n    }\n  };\n  /**\n   * @private\n   * @param {number} select - Specified the select value.\n   * @param {AnnotationSelectorSettingsModel} currentSelector - Specified the annotation selector element.\n   * @param {PdfAnnotationBaseModel} helper - Specified the annotation helper element.\n   * @param {boolean} isSelect - Specified the is select or not.\n   * @returns {void}\n   */\n  // eslint-disable-next-line max-len\n\n\n  Drawing.prototype.renderSelector = function (select, currentSelector, helper, isSelect) {\n    if (!helper || isSelect) {\n      var size = new Size();\n      var selectorModel = this.pdfViewer.selectedItems;\n      this.clearSelectorLayer(select);\n\n      if (selectorModel.wrapper) {\n        selectorModel.wrapper.measure(size);\n        var zoom = this.pdfViewer.viewerBase.getZoomFactor();\n        selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n        selectorModel.width = selectorModel.wrapper.actualSize.width;\n        selectorModel.height = selectorModel.wrapper.actualSize.height;\n        selectorModel.offsetX = selectorModel.wrapper.offsetX;\n        selectorModel.offsetY = selectorModel.wrapper.offsetY;\n\n        if (selectorModel.annotations.length === 1) {\n          selectorModel.rotateAngle = selectorModel.annotations[0].rotateAngle;\n          selectorModel.wrapper.rotateAngle = selectorModel.annotations[0].rotateAngle; //selectorModel.pivot = selectorModel.annotations[0].pivot;\n        }\n\n        var bounds = selectorModel.wrapper.bounds; // eslint-disable-next-line\n\n        var selectorElement = void 0;\n\n        if (selectorModel.formFields.length) {\n          for (var i = 0; i < selectorModel.formFields.length; i++) {\n            var node = selectorModel.formFields[i];\n            selectorElement = this.getSelectorElement(this.pdfViewer.element.id, select);\n\n            if (selectorElement && node.pageIndex === select && this.pdfViewer.designerMode) {\n              this.renderResizeHandle(node.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, zoom, undefined, undefined, undefined, false, true, null, null, currentSelector);\n            }\n\n            if (this.pdfViewer.formDesignerModule && node.formFieldAnnotationType) {\n              // eslint-disable-next-line max-len\n              if (!this.pdfViewer.viewerBase.isFormFieldSelect && !this.pdfViewer.viewerBase.isFormFieldMouseDown && !this.pdfViewer.viewerBase.isFormFieldMouseMove) {\n                this.pdfViewer.viewerBase.isFormFieldSelect = true;\n                var field = {\n                  // eslint-disable-next-line\n                  name: node.name,\n                  id: node.id,\n                  value: node.value,\n                  fontFamily: node.fontFamily,\n                  fontSize: node.fontSize,\n                  fontStyle: node.fontStyle,\n                  color: node.color,\n                  backgroundColor: node.backgroundColor,\n                  alignment: node.alignment,\n                  isReadonly: node.isReadonly,\n                  visibility: node.visibility,\n                  // eslint-disable-next-line\n                  maxLength: node.maxLength,\n                  isRequired: node.isRequired,\n                  isPrint: node.isPrint,\n                  rotation: node.rotateAngle,\n                  tooltip: node.tooltip,\n                  // eslint-disable-next-line\n                  options: node.options,\n                  isChecked: node.isChecked,\n                  isSelected: node.isSelected\n                };\n                this.pdfViewer.fireFormFieldSelectEvent('formFieldSelect', field, node.pageIndex, this.pdfViewer.formDesignerModule.isProgrammaticSelection);\n              }\n            }\n          }\n        }\n\n        if (selectorModel.annotations.length) {\n          for (var j = 0; j < selectorModel.annotations.length; j++) {\n            var node = selectorModel.annotations[j];\n            selectorElement = this.getSelectorElement(this.pdfViewer.element.id, select);\n            var constraints = true;\n\n            if (selectorElement && node.pageIndex === select) {\n              if (node.shapeAnnotationType === 'Distance' || node.shapeAnnotationType === 'Line' || node.shapeAnnotationType === 'LineWidthArrowHead' || node.shapeAnnotationType === 'Polygon') {\n                this.renderEndPointHandle(node, selectorElement, selectorModel.thumbsConstraints, {\n                  scale: zoom,\n                  tx: 0,\n                  ty: 0\n                }, undefined, undefined, true, currentSelector);\n              } else {\n                if (node.shapeAnnotationType === 'StickyNotes') {\n                  this.renderResizeHandle(node.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, zoom, undefined, undefined, undefined, false, true, null, null, currentSelector);\n                } else {\n                  if (this.pdfViewer.tool !== 'Stamp') {\n                    // eslint-disable-next-line\n                    var isSignature = node.shapeAnnotationType === 'Path' || node.formFieldAnnotationType === 'SignatureField' || node.formFieldAnnotationType === 'InitialField';\n                    this.renderResizeHandle(node.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, zoom, undefined, undefined, undefined, node.shapeAnnotationType === 'Stamp', false, isSignature, node.shapeAnnotationType === 'FreeText' || node.shapeAnnotationType === 'HandWrittenSignature' || node.shapeAnnotationType === 'SignatureImage' || node.shapeAnnotationType === 'Image' || node.shapeAnnotationType === 'SignatureText', currentSelector);\n                  }\n                }\n              }\n\n              if (!this.pdfViewer.viewerBase.isNewSignatureAdded && (node.shapeAnnotationType === 'HandWrittenSignature' || node.shapeAnnotationType === 'SignatureText' || node.shapeAnnotationType === 'SignatureImage')) {\n                this.pdfViewer.annotationModule.selectSignature(node.signatureName, node.pageIndex, node);\n              }\n\n              if (this.pdfViewer.formDesignerModule && node.formFieldAnnotationType) {\n                // eslint-disable-next-line max-len\n                if (!this.pdfViewer.viewerBase.isFormFieldSelect && !this.pdfViewer.viewerBase.isFormFieldMouseDown && !this.pdfViewer.viewerBase.isFormFieldMouseMove) {\n                  this.pdfViewer.viewerBase.isFormFieldSelect = true;\n                  var field = {\n                    // eslint-disable-next-line\n                    value: node.value,\n                    fontFamily: node.fontFamily,\n                    fontSize: node.fontSize,\n                    fontStyle: node.fontStyle,\n                    // eslint-disable-next-line\n                    color: node.color,\n                    backgroundColor: node.backgroundColor,\n                    alignment: node.alignment,\n                    isReadonly: node.isReadonly,\n                    visibility: node.visibility,\n                    // eslint-disable-next-line\n                    maxLength: node.maxLength,\n                    isRequired: node.isRequired,\n                    isPrint: node.isPrint,\n                    rotation: node.rotateAngle,\n                    tooltip: node.tooltip,\n                    // eslint-disable-next-line\n                    options: node.options,\n                    isChecked: node.isChecked,\n                    isSelected: node.isSelected\n                  };\n                  this.pdfViewer.fireFormFieldSelectEvent('formFieldSelect', field, node.pageIndex, this.pdfViewer.formDesignerModule.isProgrammaticSelection);\n                }\n              }\n\n              if (node.annotName !== '' && node.annotName !== 'SignatureText') {\n                if (helper && node === helper && !node.formFieldAnnotationType) {\n                  // eslint-disable-next-line max-len\n                  if (!this.pdfViewer.viewerBase.isAddComment && !this.pdfViewer.viewerBase.isAnnotationSelect && !this.pdfViewer.viewerBase.isAnnotationMouseDown && !this.pdfViewer.viewerBase.isAnnotationMouseMove && !this.pdfViewer.viewerBase.isInkAdded && !this.pdfViewer.viewerBase.isNewStamp) {\n                    this.pdfViewer.viewerBase.isAnnotationSelect = true;\n                    this.pdfViewer.annotationModule.annotationSelect(node.annotName, node.pageIndex, node);\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n  /**\n   * Rotates the given nodes/connectors by the given angle\n   *\n   * @private\n   * @param {PdfAnnotationBaseModel | SelectorModel} obj - Specified the objects to be rotated.\n   * @param {number} angle - Specified the angle by which the objects have to be rotated.\n   * @param {PointModel} pivot - Specified the reference point with reference to which the objects have to be rotated.\n   * @param {AnnotationSelectorSettingsModel} currentSelector - Specified the current selector value.\n   * @returns {void}\n   */\n  // eslint-disable-next-line max-len\n\n\n  Drawing.prototype.rotate = function (obj, angle, pivot, currentSelector) {\n    var checkBoundaryConstraints;\n\n    if (obj) {\n      pivot = pivot || {\n        x: obj.wrapper.offsetX,\n        y: obj.wrapper.offsetY\n      };\n\n      if (obj instanceof Selector) {\n        obj.rotateAngle += angle;\n        obj.wrapper.rotateAngle += angle;\n        var objects = [];\n        objects = objects.concat(obj.annotations);\n        this.rotateObjects(obj, objects, angle, pivot, null, currentSelector);\n      } else {\n        this.rotateObjects(obj, [obj], angle, pivot);\n      }\n    }\n\n    return checkBoundaryConstraints;\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel | SelectorModel} parent - Specified the annotation object.\n   * @param {PdfAnnotationBaseModel[]} objects - Specified the annotation objects.\n   * @param {number} angle - Specified the annotation angle.\n   * @param {PointModel} pivot - Specified the pivot value.\n   * @param {boolean} includeParent - Specified the include parent value.\n   * @param {AnnotationSelectorSettingsModel} currentSelector - Specified the current selector value.\n   * @returns {void}\n   */\n\n\n  Drawing.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent, currentSelector) {\n    pivot = pivot || {};\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, pivot.x, pivot.y);\n\n    for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n      var obj = objects_1[_i];\n\n      if (obj instanceof PdfAnnotationBase) {\n        if (includeParent !== false || parent !== obj) {\n          obj.rotateAngle += angle;\n          obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n          var newOffset = transformPointByMatrix(matrix, {\n            x: obj.wrapper.offsetX,\n            y: obj.wrapper.offsetY\n          });\n          obj.wrapper.offsetX = newOffset.x;\n          obj.wrapper.offsetY = newOffset.y;\n          this.nodePropertyChange(obj, {\n            rotateAngle: obj.rotateAngle\n          });\n        }\n\n        this.renderSelector(obj.pageIndex, currentSelector);\n      }\n    }\n  };\n\n  Drawing.prototype.getParentSvg = function (element, targetElement, canvas) {\n    if (element && element.id) {\n      if (targetElement && targetElement === 'selector') {\n        return this.pdfViewer.adornerSvgLayer;\n      }\n    }\n\n    return canvas;\n  };\n  /**\n   * @private\n   * @param {DrawingElement} selector - Specified the annotation selector object.\n   * @param {HTMLCanvasElement | SVGElement} canvas - Specified the canvas element.\n   * @param {any} currentSelector - Specified the current selector value.\n   * @param {Transforms} transform - Specfied the transform value.\n   * @param {number} enableNode - Specified the node number.\n   * @param {boolean} isBorderTickness - Specified is thickness or not.\n   * @param {boolean} isSwimlane - Specified is swimlane annotation or not.\n   * @param {boolean} isSticky - Specified is sticky annotation or not.\n   * @returns {void}\n   */\n  // eslint-disable-next-line\n\n\n  Drawing.prototype.renderBorder = function (selector, canvas, currentSelector, transform, enableNode, isBorderTickness, isSwimlane, isSticky) {\n    var wrapper = selector;\n    var options = getBaseShapeAttributes(wrapper, transform);\n    transform = transform || {\n      scale: 1,\n      tx: 0,\n      ty: 0\n    };\n\n    if (!isSticky) {\n      options.x *= transform.scale;\n      options.y *= transform.scale;\n      options.width *= transform.scale;\n      options.height *= transform.scale;\n      options.fill = 'transparent'; // eslint-disable-next-line max-len\n\n      var shapeType = this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType;\n\n      if (currentSelector && typeof currentSelector !== 'object' && currentSelector !== '') {\n        // eslint-disable-next-line\n        var annotationSelector = JSON.parse(currentSelector);\n        var borderColor = annotationSelector.selectionBorderColor === '' ? 'black' : annotationSelector.selectionBorderColor;\n        options.stroke = borderColor;\n        options.strokeWidth = currentSelector.selectionBorderThickness === 1 ? 1 : annotationSelector.selectionBorderThickness; // eslint-disable-next-line max-len\n\n        var lineDash = annotationSelector.selectorLineDashArray.length === 0 ? [6, 3] : annotationSelector.selectorLineDashArray;\n\n        if (lineDash.length > 2) {\n          lineDash = [lineDash[0], lineDash[1]];\n        }\n\n        options.dashArray = lineDash.toString();\n      } else {\n        if (!this.pdfViewer.designerMode) {\n          if (shapeType === 'HandWrittenSignature' || shapeType === 'SignatureText' || shapeType === 'SignatureImage' || shapeType === 'Ink') {\n            // eslint-disable-next-line\n            var formField = this.pdfViewer.nameTable[selector.id.split('_')[0]];\n            var isFormFieldSign = this.pdfViewer.viewerBase.checkSignatureFormField(selector.id); // if (isFormFieldSign && options.width + 21 !== formField.bounds.width && options.height + 21 !== formField.bounds.height) {\n            //     if (this.pdfViewer.signatureFitMode === 'Default') {\n            //         let selectorBounds: any = this.pdfViewer.formFieldsModule.getDefaultBoundsforSign(formField.bounds);\n            //         options.x = selectorBounds.x; options.y = selectorBounds.y; options.width = selectorBounds.width; options.height = selectorBounds.height;\n            //     } else {\n            //         options.x = formField.bounds.x; options.y = formField.bounds.y; options.width = formField.bounds.width; options.height = formField.bounds.height;\n            //     }\n            // }\n\n            this.getSignBorder(shapeType, options, isFormFieldSign);\n          } else {\n            this.getBorderSelector(shapeType, options);\n          }\n        }\n      }\n\n      options.class = 'e-pv-diagram-border';\n\n      if (isSwimlane) {\n        options.class += ' e-diagram-lane';\n      }\n\n      options.id = 'borderRect';\n      options.id = 'borderRect';\n\n      if (!enableNode) {\n        options.class += ' e-disabled';\n      }\n\n      if (isBorderTickness) {\n        options.class += ' e-thick-border';\n      }\n\n      options.cornerRadius = 0;\n    } else {\n      options.x *= transform.scale;\n      options.y *= transform.scale;\n      options.width *= transform.scale;\n      options.height *= transform.scale; // eslint-disable-next-line max-len\n\n      var shapeType = this.pdfViewer.selectedItems.annotations.length > 0 ? this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType : this.pdfViewer.selectedItems.formFields[0].formFieldAnnotationType;\n\n      if (currentSelector && typeof currentSelector !== 'object' && currentSelector !== '') {\n        var annotationSelector = JSON.parse(currentSelector);\n        var borderColor = annotationSelector.selectionBorderColor === '' ? 'black' : annotationSelector.selectionBorderColor;\n        options.stroke = borderColor;\n        options.strokeWidth = currentSelector.selectionBorderThickness === 1 ? 1 : annotationSelector.selectionBorderThickness; // eslint-disable-next-line max-len\n\n        var lineDash = annotationSelector.selectorLineDashArray.length === 0 ? [6, 3] : annotationSelector.selectorLineDashArray;\n\n        if (lineDash.length > 2) {\n          lineDash = [lineDash[0], lineDash[1]];\n        }\n\n        options.dashArray = lineDash.toString();\n      } else {\n        this.getBorderSelector(shapeType, options);\n      }\n    }\n\n    var parentSvg = this.getParentSvg(selector, 'selector'); // eslint-disable-next-line max-len\n\n    this.svgRenderer.drawRectangle(canvas, options, this.pdfViewer.element.id, undefined, true, parentSvg);\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} type - Specified the annotation object.\n   * @param {BaseAttributes} options - Specified the options value.\n   * @param {boolean} isFormFieldSign - Specified is form field sign or not.\n   * @returns {void}\n   */\n\n\n  Drawing.prototype.getSignBorder = function (type, options, isFormFieldSign) {\n    if (!isFormFieldSign && (type === 'HandWrittenSignature' || type === 'SignatureText' || type === 'SignatureImage') && this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings) {\n      var borderColor = isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectionBorderColor === '' ? '#0000ff' : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectionBorderColor;\n      options.stroke = borderColor; // eslint-disable-next-line max-len\n\n      var thickness = isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectionBorderThickness;\n      options.strokeWidth = thickness; // eslint-disable-next-line max-len\n\n      var lineDash = isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectorLineDashArray;\n\n      if (lineDash.length > 2) {\n        lineDash = [lineDash[0], lineDash[1]];\n      }\n\n      options.dashArray = lineDash.toString();\n    } else if (type === 'Ink' && this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings) {\n      var borderColor = isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectionBorderColor === '' ? '#0000ff' : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectionBorderColor;\n      options.stroke = borderColor; // eslint-disable-next-line max-len\n\n      var thickness = isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectionBorderThickness;\n      options.strokeWidth = thickness; // eslint-disable-next-line max-len\n\n      var lineDash = isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectorLineDashArray;\n\n      if (lineDash.length > 2) {\n        lineDash = [lineDash[0], lineDash[1]];\n      }\n\n      options.dashArray = lineDash.toString();\n    } else {\n      var annotationSelector = this.pdfViewer.annotationSelectorSettings;\n      var borderColor = annotationSelector.selectionBorderColor === '' ? 'black' : annotationSelector.selectionBorderColor;\n      options.stroke = borderColor;\n      options.strokeWidth = annotationSelector.selectionBorderThickness === 1 ? 1 : annotationSelector.selectionBorderThickness; // eslint-disable-next-line max-len\n\n      var lineDash = annotationSelector.selectorLineDashArray.length === 0 ? [6, 3] : annotationSelector.selectorLineDashArray;\n\n      if (lineDash.length > 2) {\n        lineDash = [lineDash[0], lineDash[1]];\n      }\n\n      options.dashArray = lineDash.toString();\n    }\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} type - Specified the annotation object.\n   * @param {BaseAttributes} options - Specified the base attributes.\n   * @returns {void}\n   */\n\n\n  Drawing.prototype.getBorderSelector = function (type, options) {\n    var annotationSelector = this.pdfViewer.annotationSelectorSettings;\n    var borderColor = isNullOrUndefined(annotationSelector.selectionBorderColor) || annotationSelector.selectionBorderColor === '' ? 'black' : annotationSelector.selectionBorderColor;\n    options.stroke = borderColor; // eslint-disable-next-line max-len\n\n    options.strokeWidth = isNullOrUndefined(annotationSelector.selectionBorderThickness) || annotationSelector.selectionBorderThickness === 1 ? 1 : annotationSelector.selectionBorderThickness; // eslint-disable-next-line max-len\n\n    var lineDash = isNullOrUndefined(annotationSelector.selectorLineDashArray) || annotationSelector.selectorLineDashArray.length === 0 ? [6, 3] : annotationSelector.selectorLineDashArray;\n\n    if (lineDash.length > 2) {\n      lineDash = [lineDash[0], lineDash[1]];\n    }\n\n    options.dashArray = lineDash.toString();\n\n    if (type === 'Rectangle' && this.pdfViewer.rectangleSettings.annotationSelectorSettings) {\n      var borderColor_1 = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderColor === '' ? 'black' : this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderColor;\n      options.stroke = borderColor_1; // eslint-disable-next-line max-len\n\n      var thickness = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderThickness;\n      options.strokeWidth = thickness; // eslint-disable-next-line max-len\n\n      var lineDash_1 = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectorLineDashArray;\n\n      if (lineDash_1.length > 2) {\n        lineDash_1 = [lineDash_1[0], lineDash_1[1]];\n      }\n\n      options.dashArray = lineDash_1.toString();\n    } else if ((type === 'Textbox' || type === 'Checkbox' || type === 'RadioButton' || type === 'SignatureField' || type === 'InitialField' || type === 'DropdownList' || type === 'ListBox' || type === 'PasswordField') && this.pdfViewer.rectangleSettings.annotationSelectorSettings) {\n      var borderColor_2 = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderColor === '' ? 'black' : this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderColor;\n      options.stroke = borderColor_2; // eslint-disable-next-line max-len\n\n      var thickness = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderThickness;\n      options.strokeWidth = thickness; // eslint-disable-next-line max-len\n\n      var lineDash_2 = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectorLineDashArray;\n\n      if (lineDash_2.length > 2) {\n        lineDash_2 = [lineDash_2[0], lineDash_2[1]];\n      }\n\n      options.dashArray = lineDash_2.toString();\n    } else if (type === 'Ellipse' && this.pdfViewer.circleSettings.annotationSelectorSettings) {\n      var borderColor_3 = isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.circleSettings.annotationSelectorSettings.selectionBorderColor === '' ? 'black' : this.pdfViewer.circleSettings.annotationSelectorSettings.selectionBorderColor;\n      options.stroke = borderColor_3; // eslint-disable-next-line max-len\n\n      var thickness = isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.circleSettings.annotationSelectorSettings.selectionBorderThickness;\n      options.strokeWidth = thickness; // eslint-disable-next-line max-len\n\n      var lineDash_3 = isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.circleSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.circleSettings.annotationSelectorSettings.selectorLineDashArray;\n\n      if (lineDash_3.length > 2) {\n        lineDash_3 = [lineDash_3[0], lineDash_3[1]];\n      }\n\n      options.dashArray = lineDash_3.toString();\n    } else if (type === 'Radius' && this.pdfViewer.radiusSettings.annotationSelectorSettings) {\n      var borderColor_4 = isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.radiusSettings.annotationSelectorSettings.selectionBorderColor === '' ? 'black' : this.pdfViewer.radiusSettings.annotationSelectorSettings.selectionBorderColor;\n      options.stroke = borderColor_4; // eslint-disable-next-line max-len\n\n      var thickness = isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.radiusSettings.annotationSelectorSettings.selectionBorderThickness;\n      options.strokeWidth = thickness; // eslint-disable-next-line max-len\n\n      var lineDash_4 = isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.radiusSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.radiusSettings.annotationSelectorSettings.selectorLineDashArray;\n\n      if (lineDash_4.length > 2) {\n        lineDash_4 = [lineDash_4[0], lineDash_4[1]];\n      }\n\n      options.dashArray = lineDash_4.toString();\n    } else if (type === 'FreeText' && this.pdfViewer.freeTextSettings.annotationSelectorSettings) {\n      var borderColor_5 = isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectionBorderColor === '' ? 'black' : this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectionBorderColor;\n      options.stroke = borderColor_5; // eslint-disable-next-line max-len\n\n      var thickness = isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectionBorderThickness;\n      options.strokeWidth = thickness; // eslint-disable-next-line max-len\n\n      var lineDash_5 = isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectorLineDashArray;\n\n      if (lineDash_5.length > 2) {\n        lineDash_5 = [lineDash_5[0], lineDash_5[1]];\n      }\n\n      options.dashArray = lineDash_5.toString();\n    } else if (type === 'StickyNotes' && this.pdfViewer.stickyNotesSettings.annotationSelectorSettings) {\n      var borderColor_6 = isNullOrUndefined(this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectionBorderColor === '' ? 'black' : this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectionBorderColor;\n      options.stroke = borderColor_6; // eslint-disable-next-line max-len\n\n      var thickness = isNullOrUndefined(this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectionBorderThickness;\n      options.strokeWidth = thickness; // eslint-disable-next-line max-len\n\n      var lineDash_6 = isNullOrUndefined(this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [6, 3] : this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectorLineDashArray;\n\n      if (lineDash_6.length > 2) {\n        lineDash_6 = [lineDash_6[0], lineDash_6[1]];\n      }\n\n      options.dashArray = lineDash_6.toString();\n    } else if (type === 'Stamp' && this.pdfViewer.stampSettings.annotationSelectorSettings) {\n      var borderColor_7 = isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.stampSettings.annotationSelectorSettings.selectionBorderColor === '' ? '#0000ff' : this.pdfViewer.stampSettings.annotationSelectorSettings.selectionBorderColor;\n      options.stroke = borderColor_7; // eslint-disable-next-line max-len\n\n      var thickness = isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.stampSettings.annotationSelectorSettings.selectionBorderThickness;\n      options.strokeWidth = thickness; // eslint-disable-next-line max-len\n\n      var lineDash_7 = isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.stampSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.stampSettings.annotationSelectorSettings.selectorLineDashArray;\n\n      if (lineDash_7.length > 2) {\n        lineDash_7 = [lineDash_7[0], lineDash_7[1]];\n      }\n\n      options.dashArray = lineDash_7.toString();\n    }\n  };\n  /**\n   * @private\n   * @param {string} id - Specified the annotaion id.\n   * @param {DrawingElement} selector - Specified the drawing element.\n   * @param {number} cx - Specified the cx number.\n   * @param {number} cy - Specified the cy number.\n   * @param {HTMLCanvasElement | SVGElement} canvas - Specified the html canvas element.\n   * @param {boolean} visible - Specified the annotation visible or not.\n   * @param {number} enableSelector - Specified the enable selector value.\n   * @param {Transforms} t - Specified the transforms value.\n   * @param {boolean} connected - Specified is connected or not.\n   * @param {boolean} canMask - Specified is mask or not.\n   * @param {Object} ariaLabel - Specified the aria label object.\n   * @param {number} count - Specified the count value.\n   * @param {string} className - Specified the class name.\n   * @param {AnnotationSelectorSettingsModel} currentSelector - Specified the annotation selector settings.\n   * @returns {void}\n   */\n\n\n  Drawing.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className, currentSelector) {\n    var wrapper = selector;\n    var radius = 7;\n    var newPoint = {\n      x: cx,\n      y: cy\n    };\n    t = t || {\n      scale: 1,\n      tx: 0,\n      ty: 0\n    };\n\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n      var matrix = identityMatrix();\n      rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n      newPoint = transformPointByMatrix(matrix, newPoint);\n    }\n\n    var options = getBaseShapeAttributes(wrapper);\n    var shapeType;\n\n    if (this.pdfViewer.selectedItems.annotations.length > 0 && this.pdfViewer.selectedItems.annotations[0].measureType) {\n      shapeType = this.pdfViewer.selectedItems.annotations[0].measureType;\n    } else if (this.pdfViewer.selectedItems.formFields.length > 0) {\n      shapeType = this.pdfViewer.selectedItems.formFields[0].formFieldAnnotationType;\n    } else {\n      shapeType = this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType;\n    }\n\n    this.getResizerColors(shapeType, options, currentSelector, t);\n    this.getShapeSize(shapeType, options, currentSelector, t);\n    options.strokeWidth = 1;\n\n    if (count !== undefined) {\n      radius = 5;\n      options.id = 'segmentEnd_' + count;\n    }\n\n    options.centerX = (newPoint.x + t.tx) * t.scale;\n    options.centerY = (newPoint.y + t.ty) * t.scale;\n    options.angle = 0;\n    options.id = id;\n    options.visible = visible;\n    options.class = className;\n    options.opacity = 1;\n\n    if (connected) {\n      options.class += ' e-connected';\n    }\n\n    if (canMask) {\n      options.visible = false;\n    }\n\n    options.x = newPoint.x * t.scale - options.width / 2;\n    options.y = newPoint.y * t.scale - options.height / 2;\n    var parentSvg = this.getParentSvg(selector, 'selector');\n\n    if (this.getShape(shapeType, currentSelector) === 'Square') {\n      this.svgRenderer.drawRectangle(canvas, options, id, undefined, true, parentSvg);\n    } else if (this.getShape(shapeType, currentSelector) === 'Circle') {\n      this.svgRenderer.drawCircle(canvas, options, 1);\n    }\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} type - Specified the annotaion object.\n   * @param {CircleAttributes} options - Specified the circle attributes value.\n   * @param {any} currentSelector - Specified the current selector value.\n   * @param {Transforms} t - Specified the transforms value.\n   * @returns {void}\n   */\n  // eslint-disable-next-line\n\n\n  Drawing.prototype.getShapeSize = function (type, options, currentSelector, t) {\n    if (currentSelector && typeof currentSelector !== 'object' && currentSelector !== '') {\n      // eslint-disable-next-line\n      var annotationSelector = JSON.parse(currentSelector); // eslint-disable-next-line max-len\n\n      options.radius = (isNullOrUndefined(annotationSelector.resizerSize) || annotationSelector.resizerSize === 8 ? 8 : annotationSelector.resizerSize) / 2; // eslint-disable-next-line max-len\n\n      options.width = (isNullOrUndefined(annotationSelector.resizerSize) || annotationSelector.resizerSize === 8 ? 8 : annotationSelector.resizerSize) * t.scale; // eslint-disable-next-line max-len\n\n      options.height = (isNullOrUndefined(annotationSelector.resizerSize) || annotationSelector.resizerSize === 8 ? 8 : annotationSelector.resizerSize) * t.scale;\n    } else {\n      // eslint-disable-next-line\n      var annotationSelector = this.pdfViewer.annotationSelectorSettings; // eslint-disable-next-line max-len\n\n      options.radius = (isNullOrUndefined(annotationSelector.resizerSize) || annotationSelector.resizerSize === 8 ? 8 : annotationSelector.resizerSize) / 2; // eslint-disable-next-line max-len\n\n      options.width = (isNullOrUndefined(annotationSelector.resizerSize) || annotationSelector.resizerSize === 8 ? 8 : annotationSelector.resizerSize) * t.scale; // eslint-disable-next-line max-len\n\n      options.height = (isNullOrUndefined(annotationSelector.resizerSize) || annotationSelector.resizerSize === 8 ? 8 : annotationSelector.resizerSize) * t.scale;\n\n      if (type === 'Line' && this.pdfViewer.lineSettings.annotationSelectorSettings) {\n        // eslint-disable-next-line max-len\n        options.radius = (isNullOrUndefined(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize) / 2; // eslint-disable-next-line max-len\n\n        options.width = (isNullOrUndefined(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize) * t.scale; // eslint-disable-next-line max-len\n\n        options.height = (isNullOrUndefined(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize) * t.scale;\n      } else if (type === 'LineWidthArrowHead' && this.pdfViewer.arrowSettings.annotationSelectorSettings) {\n        // eslint-disable-next-line max-len\n        options.radius = (isNullOrUndefined(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize) / 2; // eslint-disable-next-line max-len\n\n        options.width = (isNullOrUndefined(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize) * t.scale; // eslint-disable-next-line max-len\n\n        options.height = (isNullOrUndefined(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize) * t.scale;\n      } else if (type === 'Rectangle' && this.pdfViewer.rectangleSettings.annotationSelectorSettings) {\n        // eslint-disable-next-line max-len\n        options.radius = (isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize) / 2; // eslint-disable-next-line max-len\n\n        options.width = (isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize) * t.scale; // eslint-disable-next-line max-len\n\n        options.height = (isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize) * t.scale;\n      } else if (type === 'Ellipse' && this.pdfViewer.circleSettings.annotationSelectorSettings) {\n        // eslint-disable-next-line max-len\n        options.radius = (isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize) / 2; // eslint-disable-next-line max-len\n\n        options.width = (isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize) * t.scale; // eslint-disable-next-line max-len\n\n        options.height = (isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize) * t.scale;\n      } else if (type === 'Distance' && this.pdfViewer.distanceSettings.annotationSelectorSettings) {\n        // eslint-disable-next-line max-len\n        options.radius = (isNullOrUndefined(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize) / 2; // eslint-disable-next-line max-len\n\n        options.width = (isNullOrUndefined(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize) * t.scale; // eslint-disable-next-line max-len\n\n        options.height = (isNullOrUndefined(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize) * t.scale;\n      } else if (type === 'Polygon' && this.pdfViewer.polygonSettings.annotationSelectorSettings) {\n        // eslint-disable-next-line max-len\n        options.radius = (isNullOrUndefined(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize) / 2; // eslint-disable-next-line max-len\n\n        options.width = (isNullOrUndefined(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize) * t.scale; // eslint-disable-next-line max-len\n\n        options.height = (isNullOrUndefined(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize) * t.scale;\n      } else if (type === 'Radius' && this.pdfViewer.radiusSettings.annotationSelectorSettings) {\n        // eslint-disable-next-line max-len\n        options.radius = (isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize) / 2; // eslint-disable-next-line max-len\n\n        options.width = (isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize) * t.scale; // eslint-disable-next-line max-len\n\n        options.height = (isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize) * t.scale;\n      } else if (type === 'Stamp' && this.pdfViewer.stampSettings.annotationSelectorSettings) {\n        // eslint-disable-next-line max-len\n        options.radius = (isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize) / 2; // eslint-disable-next-line max-len\n\n        options.width = (isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize) * t.scale; // eslint-disable-next-line max-len\n\n        options.height = (isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize) * t.scale;\n      } else if (type === 'FreeText' && this.pdfViewer.freeTextSettings.annotationSelectorSettings) {\n        // eslint-disable-next-line max-len\n        options.radius = (isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize) / 2; // eslint-disable-next-line max-len\n\n        options.width = (isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize) * t.scale; // eslint-disable-next-line max-len\n\n        options.height = (isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize) * t.scale;\n      } else if ((type === 'HandWrittenSignature' || type === 'SignatureText' || type === 'SignatureImage') && this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings) {\n        // eslint-disable-next-line max-len\n        options.radius = (isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize) / 2; // eslint-disable-next-line max-len\n\n        options.width = (isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize) * t.scale; // eslint-disable-next-line max-len\n\n        options.height = (isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize) * t.scale;\n      } else if (type === 'Perimeter' && this.pdfViewer.perimeterSettings.annotationSelectorSettings) {\n        // eslint-disable-next-line max-len\n        options.radius = (isNullOrUndefined(this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize) / 2; // eslint-disable-next-line max-len\n\n        options.width = (isNullOrUndefined(this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize) * t.scale; // eslint-disable-next-line max-len\n\n        options.height = (isNullOrUndefined(this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize) * t.scale;\n      } else if (type === 'Area' && this.pdfViewer.areaSettings.annotationSelectorSettings) {\n        // eslint-disable-next-line max-len\n        options.radius = (isNullOrUndefined(this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize) / 2; // eslint-disable-next-line max-len\n\n        options.width = (isNullOrUndefined(this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize) * t.scale; // eslint-disable-next-line max-len\n\n        options.height = (isNullOrUndefined(this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize) * t.scale;\n      } else if (type === 'Volume' && this.pdfViewer.volumeSettings.annotationSelectorSettings) {\n        // eslint-disable-next-line max-len\n        options.radius = (isNullOrUndefined(this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize) / 2; // eslint-disable-next-line max-len\n\n        options.width = (isNullOrUndefined(this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize) * t.scale; // eslint-disable-next-line max-len\n\n        options.height = (isNullOrUndefined(this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize) * t.scale;\n      } else if (type === 'Ink' && this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings) {\n        // eslint-disable-next-line max-len\n        options.radius = (isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize) / 2; // eslint-disable-next-line max-len\n\n        options.width = (isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize) * t.scale; // eslint-disable-next-line max-len\n\n        options.height = (isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize) * t.scale;\n      }\n    }\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} type - Specified the annotation object.\n   * @param {any} currentSelector - Specified the current selector value.\n   * @returns {AnnotationSelectorSettingsModel} - Specified the annotation selector settings model.\n   */\n  // eslint-disable-next-line\n\n\n  Drawing.prototype.getShape = function (type, currentSelector) {\n    // eslint-disable-next-line\n    var shapeType;\n    {\n      if (currentSelector && typeof currentSelector !== 'object' && currentSelector !== '') {\n        // eslint-disable-next-line\n        var annotationSelector = JSON.parse(currentSelector);\n        shapeType = isNullOrUndefined(annotationSelector.resizerShape) || annotationSelector.resizerShape === 'Square' ? 'Square' : annotationSelector.resizerShape;\n      } else {\n        // eslint-disable-next-line\n        var annotationSelector = this.pdfViewer.annotationSelectorSettings;\n        shapeType = isNullOrUndefined(annotationSelector.resizerShape) || annotationSelector.resizerShape === 'Square' ? 'Square' : annotationSelector.resizerShape;\n\n        if (type === 'Line' && this.pdfViewer.lineSettings.annotationSelectorSettings) {\n          shapeType = isNullOrUndefined(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.lineSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.lineSettings.annotationSelectorSettings.resizerShape;\n        } else if (type === 'LineWidthArrowHead' && this.pdfViewer.arrowSettings.annotationSelectorSettings) {\n          shapeType = isNullOrUndefined(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerShape;\n        } else if (type === 'Rectangle' && this.pdfViewer.rectangleSettings.annotationSelectorSettings) {\n          shapeType = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerShape;\n        } else if (type === 'Ellipse' && this.pdfViewer.circleSettings.annotationSelectorSettings) {\n          shapeType = isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.circleSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.circleSettings.annotationSelectorSettings.resizerShape;\n        } else if (type === 'Polygon' && this.pdfViewer.polygonSettings.annotationSelectorSettings) {\n          shapeType = isNullOrUndefined(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerShape;\n        } else if (type === 'Distance' && this.pdfViewer.distanceSettings.annotationSelectorSettings) {\n          shapeType = isNullOrUndefined(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerShape;\n        } else if (type === 'Radius' && this.pdfViewer.radiusSettings.annotationSelectorSettings) {\n          shapeType = isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerShape;\n        } else if (type === 'Stamp' && this.pdfViewer.stampSettings.annotationSelectorSettings) {\n          shapeType = isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.stampSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.stampSettings.annotationSelectorSettings.resizerShape;\n        } else if (type === 'FreeText' && this.pdfViewer.freeTextSettings.annotationSelectorSettings) {\n          shapeType = isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerShape;\n        } else if ((type === 'HandWrittenSignature' || type === 'SignatureText' || type === 'SignatureImage') && this.pdfViewer.handWrittenSignatureSettings && this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings) {\n          shapeType = isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerShape;\n        } else if (type === 'Perimeter' && this.pdfViewer.perimeterSettings.annotationSelectorSettings) {\n          shapeType = isNullOrUndefined(this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerShape;\n        } else if (type === 'Area' && this.pdfViewer.areaSettings.annotationSelectorSettings) {\n          shapeType = isNullOrUndefined(this.pdfViewer.areaSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.areaSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.areaSettings.annotationSelectorSettings.resizerShape;\n        } else if (type === 'Volume' && this.pdfViewer.volumeSettings.annotationSelectorSettings) {\n          shapeType = isNullOrUndefined(this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerShape;\n        } else if (type === 'Ink' && this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings) {\n          shapeType = isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerShape;\n        }\n      }\n\n      return shapeType;\n    }\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} type - Specified the annotaion object.\n   * @param {CircleAttributes} options - Specified the circle attributes value.\n   * @param {any} currentSelector - Specified the current selector value.\n   * @param {Transforms} t - Specified the transforms value.\n   * @returns {void}\n   */\n  // eslint-disable-next-line\n\n\n  Drawing.prototype.getResizerColors = function (type, options, currentSelector, t) {\n    if (currentSelector && typeof currentSelector !== 'object' && currentSelector !== '') {\n      // eslint-disable-next-line\n      var annotationSelector = JSON.parse(currentSelector);\n      options.stroke = isNullOrUndefined(annotationSelector.resizerBorderColor) || annotationSelector.resizerBorderColor === 'black' ? 'black' : annotationSelector.resizerBorderColor;\n      options.fill = isNullOrUndefined(annotationSelector.resizerFillColor) || annotationSelector.resizerFillColor === '#FF4081' ? '#FF4081' : annotationSelector.resizerFillColor;\n    } else {\n      // eslint-disable-next-line\n      var annotationSelector = this.pdfViewer.annotationSelectorSettings;\n      options.stroke = isNullOrUndefined(annotationSelector.resizerBorderColor) || annotationSelector.resizerBorderColor === 'black' ? 'black' : annotationSelector.resizerBorderColor;\n      options.fill = isNullOrUndefined(annotationSelector.resizerFillColor) || annotationSelector.resizerFillColor === '#FF4081' ? '#FF4081' : annotationSelector.resizerFillColor;\n\n      if (type === 'Line' && this.pdfViewer.lineSettings.annotationSelectorSettings) {\n        options.stroke = isNullOrUndefined(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.lineSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.lineSettings.annotationSelectorSettings.resizerBorderColor;\n        options.fill = isNullOrUndefined(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.lineSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.lineSettings.annotationSelectorSettings.resizerFillColor;\n      } else if (type === 'LineWidthArrowHead' && this.pdfViewer.arrowSettings.annotationSelectorSettings) {\n        options.stroke = isNullOrUndefined(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerBorderColor;\n        options.fill = isNullOrUndefined(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerFillColor;\n      } else if (type === 'Rectangle' && this.pdfViewer.rectangleSettings.annotationSelectorSettings) {\n        options.stroke = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerBorderColor;\n        options.fill = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerFillColor;\n      } else if (type === 'Ellipse' && this.pdfViewer.circleSettings.annotationSelectorSettings) {\n        options.stroke = isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.circleSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.circleSettings.annotationSelectorSettings.resizerBorderColor;\n        options.fill = isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.circleSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.circleSettings.annotationSelectorSettings.resizerFillColor;\n      } else if (type === 'Distance' && this.pdfViewer.distanceSettings.annotationSelectorSettings) {\n        options.stroke = isNullOrUndefined(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerBorderColor;\n        options.fill = isNullOrUndefined(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerFillColor;\n      } else if (type === 'Polygon' && this.pdfViewer.polygonSettings.annotationSelectorSettings) {\n        options.stroke = isNullOrUndefined(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerBorderColor;\n        options.fill = isNullOrUndefined(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerFillColor;\n      } else if (type === 'Radius' && this.pdfViewer.radiusSettings.annotationSelectorSettings) {\n        options.stroke = isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerBorderColor;\n        options.fill = isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerFillColor;\n      } else if (type === 'Stamp' && this.pdfViewer.stampSettings.annotationSelectorSettings) {\n        options.stroke = isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.stampSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.stampSettings.annotationSelectorSettings.resizerBorderColor;\n        options.fill = isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.stampSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.stampSettings.annotationSelectorSettings.resizerFillColor;\n      } else if (type === 'FreeText' && this.pdfViewer.freeTextSettings.annotationSelectorSettings) {\n        options.stroke = isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerBorderColor;\n        options.fill = isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerFillColor;\n      } else if ((type === 'HandWrittenSignature' || type === 'SignatureText' || type === 'SignatureImage') && this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings) {\n        options.stroke = isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerBorderColor;\n        options.fill = isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerFillColor;\n      } else if (type === 'Perimeter' && this.pdfViewer.perimeterSettings.annotationSelectorSettings) {\n        options.stroke = isNullOrUndefined(this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerBorderColor;\n        options.fill = isNullOrUndefined(this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerFillColor;\n      } else if (type === 'Area' && this.pdfViewer.areaSettings.annotationSelectorSettings) {\n        options.stroke = isNullOrUndefined(this.pdfViewer.areaSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.areaSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.areaSettings.annotationSelectorSettings.resizerBorderColor;\n        options.fill = isNullOrUndefined(this.pdfViewer.areaSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.areaSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.areaSettings.annotationSelectorSettings.resizerFillColor;\n      } else if (type === 'Volume' && this.pdfViewer.volumeSettings.annotationSelectorSettings) {\n        options.stroke = isNullOrUndefined(this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerBorderColor;\n        options.fill = isNullOrUndefined(this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerFillColor;\n      } else if (type === 'Ink' && this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings) {\n        options.stroke = isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerBorderColor;\n        options.fill = isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerFillColor;\n      }\n    }\n  };\n  /**\n   * @private\n   * @param {DrawingElement} wrapper - Specified the drawing element.\n   * @param {HTMLCanvasElement | SVGElement} canvas - Specified the canvas element.\n   * @param {Transforms} transform - Specified the transform value.\n   * @param {SelectorConstraints} selectorConstraints - Specified the selector constraints value.\n   * @param {boolean} canMask - Specified the is mask or not.\n   * @returns {void}\n   */\n\n\n  Drawing.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n    var element = new PathElement();\n    var newPoint;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n    var pivotY = top;\n    pivotX = (pivotX + transform.tx) * transform.scale;\n    pivotY = (pivotY + transform.ty) * transform.scale;\n    newPoint = {\n      x: pivotX,\n      y: pivotY - 25\n    };\n\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n      var matrix = identityMatrix();\n      rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n      newPoint = transformPointByMatrix(matrix, newPoint);\n    }\n\n    var options = getBaseShapeAttributes(wrapper);\n    options.stroke = 'black';\n    options.strokeWidth = 1;\n    options.opacity = 1;\n    options.fill = '#FF4081';\n    options.centerX = newPoint.x;\n    options.centerY = newPoint.y;\n    options.radius = 4;\n    options.angle = 0;\n    options.visible = true;\n    options.class = 'e-diagram-rotate-handle';\n    options.id = 'rotateThumb';\n    this.svgRenderer.drawCircle(canvas, options, ThumbsConstraints.Rotate, {\n      'aria-label': 'Thumb to rotate the selected object'\n    });\n  };\n  /**\n   * @private\n   * @param {DrawingElement} element - Specified the drawing element.\n   * @param {HTMLCanvasElement | SVGElement} canvas - Specified the canvas element.\n   * @param {ThumbsConstraints} constraints - Specified the thumbs constraints element.\n   * @param {number} currentZoom - Specified the current zoom value.\n   * @param {boolean} canMask - Specified the is mask or not.\n   * @param {number} enableNode - Specified the node number.\n   * @param {boolean} nodeConstraints - Specified the node constraints or not.\n   * @param {boolean} isStamp - Specified is stamp or not.\n   * @param {boolean} isSticky - Specified is sticky or not.\n   * @param {boolean} isPath - Specified is path or not.\n   * @param {boolean} isFreeText - Specified is free text or not.\n   * @param {AnnotationSelectorSettingsModel} currentSelector - Specified the current selector settings value.\n   * @returns {void}\n   */\n\n\n  Drawing.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, canMask, enableNode, nodeConstraints, isStamp, isSticky, isPath, isFreeText, currentSelector) {\n    var left = element.offsetX - element.actualSize.width * element.pivot.x;\n    var top = element.offsetY - element.actualSize.height * element.pivot.y;\n    var height = element.actualSize.height;\n    var width = element.actualSize.width;\n    var transform = {\n      scale: currentZoom,\n      tx: 0,\n      ty: 0\n    };\n\n    if (isStamp) {\n      this.renderPivotLine(element, canvas, transform);\n      this.renderRotateThumb(element, canvas, transform);\n    }\n\n    if (isFreeText) {\n      isStamp = true;\n    }\n\n    this.renderBorder(element, canvas, currentSelector, transform, enableNode, nodeConstraints, true, isSticky);\n    var nodeWidth = element.actualSize.width * currentZoom;\n    var nodeHeight = element.actualSize.height * currentZoom; // eslint-disable-next-line max-len\n\n    var shapeType = this.pdfViewer.selectedItems.annotations.length > 0 ? this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType : this.pdfViewer.selectedItems.formFields[0].formFieldAnnotationType;\n    var allowPermission = false;\n\n    if (!this.pdfViewer.formDesignerModule) {\n      // eslint-disable-next-line\n      var annotation = this.pdfViewer.selectedItems.annotations[0]; // eslint-disable-next-line\n\n      var allowedInteraction = this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation);\n      var isLock = this.pdfViewer.annotationModule.checkIsLockSettings(annotation);\n\n      if ((isLock || annotation.annotationSettings.isLock) && this.getAllowedInteractions(allowedInteraction)) {\n        allowPermission = true;\n      }\n    }\n\n    var resizerLocation = this.getResizerLocation(shapeType, currentSelector);\n\n    if (resizerLocation < 1 || resizerLocation > 3) {\n      resizerLocation = 3;\n    }\n\n    var isNodeShape = false;\n\n    if (this.pdfViewer.selectedItems.annotations[0] && (this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'Ellipse' || this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'Radius' || this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'Rectangle' || this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'Ink')) {\n      isNodeShape = true;\n    }\n\n    if (!this.pdfViewer.viewerBase.checkSignatureFormField(element.id) && !nodeConstraints && !isSticky && !isPath && !allowPermission) {\n      if (isStamp || isNodeShape && nodeWidth >= 40 && nodeHeight >= 40 && (resizerLocation === 1 || resizerLocation === 3)) {\n        //Hide corners when the size is less than 40\n        this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, true, constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, {\n          'aria-label': 'Thumb to resize the selected object on top left side direction'\n        }, undefined, 'e-pv-diagram-resize-handle e-northwest', currentSelector);\n        this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, true, constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, {\n          'aria-label': 'Thumb to resize the selected object on top right side direction'\n        }, undefined, 'e-pv-diagram-resize-handle e-northeast', currentSelector);\n        this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, true, constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, {\n          'aria-label': 'Thumb to resize the selected object on bottom left side direction'\n        }, undefined, 'e-pv-diagram-resize-handle e-southwest', currentSelector);\n        this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, true, constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, {\n          'aria-label': 'Thumb to resize the selected object on bottom right side direction'\n        }, undefined, 'e-pv-diagram-resize-handle e-southeast', currentSelector);\n      } // eslint-disable-next-line max-len\n\n\n      if (!isStamp && !isNodeShape || isNodeShape && (resizerLocation === 2 || resizerLocation === 3 || !(nodeWidth >= 40 && nodeHeight >= 40) && resizerLocation === 1)) {\n        this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, true, constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, {\n          'aria-label': 'Thumb to resize the selected object on top side direction'\n        }, undefined, 'e-pv-diagram-resize-handle e-north', currentSelector);\n        this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, true, constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, {\n          'aria-label': 'Thumb to resize the selected object on bottom side direction'\n        }, undefined, 'e-pv-diagram-resize-handle e-south', currentSelector);\n        this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, true, constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, {\n          'aria-label': 'Thumb to resize the selected object on left side direction'\n        }, undefined, 'e-pv-diagram-resize-handle e-west', currentSelector);\n        this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, true, constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, {\n          'aria-label': 'Thumb to resize the selected object on right side direction'\n        }, undefined, 'e-pv-diagram-resize-handle e-east', currentSelector);\n      }\n    }\n\n    if (shapeType === 'Textbox' || shapeType === 'Checkbox' || shapeType === 'RadioButton' || shapeType === 'SignatureField' || shapeType === 'InitialField' || shapeType === 'DropdownList' || shapeType === 'ListBox' || shapeType === 'PasswordField') {\n      this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, true, constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, {\n        'aria-label': 'Thumb to resize the selected object on top side direction'\n      }, undefined, 'e-pv-diagram-resize-handle e-north', currentSelector);\n      this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, true, constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, {\n        'aria-label': 'Thumb to resize the selected object on bottom side direction'\n      }, undefined, 'e-pv-diagram-resize-handle e-south', currentSelector);\n      this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, true, constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, {\n        'aria-label': 'Thumb to resize the selected object on left side direction'\n      }, undefined, 'e-pv-diagram-resize-handle e-west', currentSelector);\n      this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, true, constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, {\n        'aria-label': 'Thumb to resize the selected object on right side direction'\n      }, undefined, 'e-pv-diagram-resize-handle e-east', currentSelector);\n    }\n  }; // eslint-disable-next-line\n\n\n  Drawing.prototype.getAllowedInteractions = function (allowedInteraction) {\n    if (allowedInteraction && allowedInteraction.length > 0) {\n      for (var i = 0; i < allowedInteraction.length; i++) {\n        if (allowedInteraction[0] !== 'None' && allowedInteraction[i] === 'Resize') {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} type - Specified the annotation base model.\n   * @param {any} currentSelector - Specified the current selector value\n   * @returns {AnnotationResizerLocation} - Returns the annotation resizer location value.\n   */\n  // eslint-disable-next-line\n\n\n  Drawing.prototype.getResizerLocation = function (type, currentSelector) {\n    // eslint-disable-next-line\n    var resizerLocation;\n    {\n      if (currentSelector && typeof currentSelector !== 'object' && currentSelector !== '') {\n        // eslint-disable-next-line\n        var annotationSelector = JSON.parse(currentSelector); // eslint-disable-next-line max-len\n\n        resizerLocation = isNullOrUndefined(annotationSelector.resizerLocation) || annotationSelector.resizerLocation === 3 ? 3 : annotationSelector.resizerLocation;\n      } else {\n        // eslint-disable-next-line\n        var annotationSelector = this.pdfViewer.annotationSelectorSettings; // eslint-disable-next-line max-len\n\n        resizerLocation = isNullOrUndefined(annotationSelector.resizerLocation) || annotationSelector.resizerLocation === 3 ? 3 : annotationSelector.resizerLocation;\n\n        if (type === 'Line' && this.pdfViewer.lineSettings.annotationSelectorSettings) {\n          // eslint-disable-next-line max-len\n          resizerLocation = isNullOrUndefined(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.lineSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.lineSettings.annotationSelectorSettings.resizerLocation;\n        } else if (type === 'LineWidthArrowHead' && this.pdfViewer.arrowSettings.annotationSelectorSettings) {\n          // eslint-disable-next-line max-len\n          resizerLocation = isNullOrUndefined(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerLocation;\n        } else if (type === 'Rectangle' && this.pdfViewer.rectangleSettings.annotationSelectorSettings) {\n          // eslint-disable-next-line max-len\n          resizerLocation = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerLocation;\n        } else if (type === 'Ellipse' && this.pdfViewer.circleSettings.annotationSelectorSettings) {\n          // eslint-disable-next-line max-len\n          resizerLocation = isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.circleSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.circleSettings.annotationSelectorSettings.resizerLocation;\n        } else if (type === 'Polygon' && this.pdfViewer.polygonSettings.annotationSelectorSettings) {\n          // eslint-disable-next-line max-len\n          resizerLocation = isNullOrUndefined(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerLocation;\n        } else if (type === 'Distance') {\n          // eslint-disable-next-line max-len\n          resizerLocation = isNullOrUndefined(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerLocation;\n        } else if (type === 'Radius' && this.pdfViewer.radiusSettings.annotationSelectorSettings) {\n          // eslint-disable-next-line max-len\n          resizerLocation = isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerLocation;\n        } else if (type === 'Stamp' && this.pdfViewer.stampSettings.annotationSelectorSettings) {\n          // eslint-disable-next-line max-len\n          resizerLocation = isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.stampSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.stampSettings.annotationSelectorSettings.resizerLocation;\n        } else if (type === 'FreeText' && this.pdfViewer.freeTextSettings.annotationSelectorSettings) {\n          // eslint-disable-next-line max-len\n          resizerLocation = isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerLocation;\n        } else if ((type === 'HandWrittenSignature' || type === 'SignatureText' || type === 'SignatureImage') && this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings) {\n          // eslint-disable-next-line max-len\n          resizerLocation = isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerLocation;\n        } else if (type === 'Ink' && this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings) {\n          // eslint-disable-next-line max-len\n          resizerLocation = isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerLocation;\n        }\n      }\n\n      return resizerLocation;\n    }\n  };\n  /**\n   * @private\n   * @param {DrawingElement} element - Specified the drawing element.\n   * @param {HTMLCanvasElement | SVGAElement} canvas - Specified the canvas element.\n   * @param {Transforms} transform - Specified the transform values.\n   * @param {SelectorConstraints} selectorConstraints - Specified the selector constraints value.\n   * @param {boolean} canMask - Specified is mask value or not.\n   * @returns {void}\n   */\n\n\n  Drawing.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n    var wrapper = element;\n    var dashArray = '2,3';\n    var visible = true;\n\n    if (canMask) {\n      visible = false;\n    }\n\n    var options = getBaseShapeAttributes(wrapper, transform);\n    options.fill = 'None';\n    options.stroke = 'black';\n    options.strokeWidth = 1;\n    options.dashArray = dashArray;\n    options.visible = visible;\n    var scale = transform.scale;\n    options.x *= scale;\n    options.y *= scale;\n    options.width *= scale;\n    options.height *= scale;\n    options.id = 'pivotLine';\n    options.class = 'e-diagram-pivot-line';\n    var startPoint = {\n      x: wrapper.actualSize.width * wrapper.pivot.x * scale,\n      y: -20\n    };\n    var endPoint = {\n      x: wrapper.actualSize.width * wrapper.pivot.x * scale,\n      y: 0\n    };\n    options.startPoint = startPoint;\n    options.endPoint = endPoint;\n    this.svgRenderer.drawLine(canvas, options);\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} selector - Specified the annotation element.\n   * @param {HTMLCanvasElement | SVGAElement} canvas - Specified the canvas element.\n   * @param {SelectorConstraints} constraints - Specified the selector constraints value.\n   * @param {Transforms} transform - Specified the transform values.\n   * @param {boolean} connectedSource - Specified is connected source or not.\n   * @param {boolean} connectedTarget - Specified is connected target or not.\n   * @param {boolean} isSegmentEditing - Specified is segment editing or not.\n   * @param {AnnotationSelectorSettingsModel} currentSelector - Specified the current selector value.\n   * @returns {void}\n   */\n\n\n  Drawing.prototype.renderEndPointHandle = function (selector, canvas, constraints, transform, connectedSource, connectedTarget, isSegmentEditing, currentSelector) {\n    transform = transform || {\n      tx: 0,\n      ty: 0,\n      scale: 1\n    };\n    var sourcePoint = selector.sourcePoint;\n    var targetPoint = selector.targetPoint;\n    var wrapper = selector.wrapper;\n    var i;\n\n    for (i = 0; i < selector.vertexPoints.length; i++) {\n      var segment = selector.vertexPoints[i];\n      this.renderCircularHandle('segementThumb_' + (i + 1), wrapper, segment.x, segment.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i, null, currentSelector);\n    }\n\n    var leaderCount = 0;\n\n    if (selector.shapeAnnotationType === 'Distance') {\n      for (i = 0; i < selector.wrapper.children.length; i++) {\n        var segment = selector.wrapper.children[i];\n        var newPoint1 = void 0;\n        var angle = Point.findAngle(selector.sourcePoint, selector.targetPoint);\n\n        if (segment.id.indexOf('leader') > -1) {\n          var center = selector.wrapper.children[0].bounds.center;\n\n          if (leaderCount === 0) {\n            newPoint1 = {\n              x: selector.sourcePoint.x,\n              y: selector.sourcePoint.y - selector.leaderHeight\n            };\n            center = sourcePoint;\n          } else {\n            newPoint1 = {\n              x: selector.targetPoint.x,\n              y: selector.targetPoint.y - selector.leaderHeight\n            };\n            center = targetPoint;\n          }\n\n          var matrix = identityMatrix();\n          rotateMatrix(matrix, angle, center.x, center.y);\n          var rotatedPoint = transformPointByMatrix(matrix, {\n            x: newPoint1.x,\n            y: newPoint1.y\n          });\n          this.renderCircularHandle('leaderThumb_' + (i + 1), wrapper, rotatedPoint.x, rotatedPoint.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i, null, currentSelector);\n          leaderCount++;\n        }\n      }\n    }\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n\n\n  Drawing.prototype.initSelectorWrapper = function () {\n    var selectorModel = this.pdfViewer.selectedItems;\n    selectorModel.init(this);\n  };\n  /**\n   * @private\n   * @param {string[]} objArray - Specified the annotation object array.\n   * @param {any} currentSelector - Specified the current selector value.\n   * @param {boolean} multipleSelection - Specified the multiple selection or not.\n   * @param {boolean} preventUpdate - Specified the prevent update or not.\n   * @returns {void}\n   */\n  // eslint-disable-next-line\n\n\n  Drawing.prototype.select = function (objArray, currentSelector, multipleSelection, preventUpdate) {\n    var selectorModel = this.pdfViewer.selectedItems;\n\n    for (var i = 0; i < objArray.length; i++) {\n      // eslint-disable-next-line\n      var obj = this.pdfViewer.nameTable[objArray[i]];\n\n      if (obj.formFieldAnnotationType && this.pdfViewer.designerMode) {\n        selectorModel.formFields.push(obj);\n        this.initSelectorWrapper();\n        selectorModel.wrapper.children.push(obj.wrapper);\n        this.renderSelector(obj.pageIndex, currentSelector, obj, true);\n      } else if (obj && !obj.formFieldAnnotationType) {\n        if (!(obj instanceof Selector) && obj.wrapper.visible && this.pdfViewer.annotationModule) {\n          // eslint-disable-next-line\n          var annotationSettings = void 0;\n\n          if (obj.annotationSettings) {\n            annotationSettings = obj.annotationSettings;\n            annotationSettings.isLock = JSON.parse(annotationSettings.isLock);\n          } else if (!obj.formFieldAnnotationType) {\n            annotationSettings = this.pdfViewer.annotationModule.findAnnotationSettings(obj, true);\n            obj.annotationSettings = annotationSettings;\n          }\n\n          var isLock = !obj.formFieldAnnotationType ? annotationSettings.isLock : false;\n\n          if (annotationSettings && annotationSettings.isLock && this.pdfViewer.annotationModule.checkAllowedInteractions('Select', obj)) {\n            isLock = false;\n          }\n\n          if (!isLock) {\n            selectorModel.annotations.push(obj);\n            this.initSelectorWrapper();\n            selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n            selectorModel.wrapper.children.push(obj.wrapper);\n\n            if (!preventUpdate) {\n              this.renderSelector(obj.pageIndex, currentSelector, obj, true);\n            }\n          }\n        }\n      }\n    }\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} obj - Specified the annotaion object.\n   * @param {number} tx - Specified the tx value.\n   * @param {number} ty - Specified the ty value.\n   * @param {number} pageIndex - Specified the page index value.\n   * @param {any} currentSelector - Specified the current selector value.\n   * @param {PdfAnnotationBaseModel} helper - Specified the helper object.\n   * @returns {void}\n   */\n  // eslint-disable-next-line\n\n\n  Drawing.prototype.dragSelectedObjects = function (tx, ty, pageIndex, currentSelector, helper) {\n    var obj = this.pdfViewer.selectedItems;\n    this.drag(obj, tx, ty, currentSelector, helper);\n    return true;\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} obj - Specified the annotaion object.\n   * @param {number} tx - Specified the tx value.\n   * @param {number} ty - Specified the ty value.\n   * @param {any} currentSelector - Specified the current selector value.\n   * @param {PdfAnnotationBaseModel} helper - Specified the helper object.\n   * @returns {void}\n   */\n  // eslint-disable-next-line\n\n\n  Drawing.prototype.drag = function (obj, tx, ty, currentSelector, helper) {\n    if (obj instanceof Selector) {\n      if (obj.annotations.length) {\n        for (var _i = 0, _a = obj.annotations; _i < _a.length; _i++) {\n          var node = _a[_i];\n          this.drag(node, tx, ty, currentSelector, helper);\n          this.renderSelector(node.pageIndex, currentSelector, helper);\n        }\n      } else if (obj.formFields.length) {\n        for (var _b = 0, _c = obj.formFields; _b < _c.length; _b++) {\n          var node = _c[_b];\n          this.drag(node, tx, ty, currentSelector, helper);\n          this.renderSelector(node.pageIndex, currentSelector, helper);\n        }\n      }\n    } else {\n      this.dragAnnotation(obj, tx, ty);\n    }\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} obj - Specified the annotaion object.\n   * @param {number} tx - Specified the tx value.\n   * @param {number} ty - Specified the ty value.\n   * @returns {void}\n   */\n\n\n  Drawing.prototype.dragAnnotation = function (obj, tx, ty) {\n    var tempNode;\n    var elements = []; // eslint-disable-next-line\n\n    var oldValues = {\n      x: obj.wrapper.offsetX,\n      y: obj.wrapper.offsetY\n    };\n    obj.wrapper.offsetX += tx;\n    obj.wrapper.offsetY += ty;\n\n    if (isLineShapes(obj) || obj.shapeAnnotationType === 'Polygon') {\n      if (obj.wrapper.children.length) {\n        var nodes = obj.wrapper.children;\n\n        for (var i = 0; i < nodes.length; i++) {\n          nodes[i].offsetX += tx;\n          nodes[i].offsetY += ty;\n        }\n      }\n\n      this.dragControlPoint(obj, tx, ty, true);\n    }\n\n    this.nodePropertyChange(obj, {\n      bounds: {\n        x: obj.wrapper.offsetX,\n        y: obj.wrapper.offsetY\n      }\n    });\n    obj.wrapper.measureChildren = false; // eslint-disable-next-line\n\n    var canvas = document.getElementById(this.pdfViewer.element.id + '_annotationCanvas_' + obj.pageIndex); // eslint-disable-next-line\n\n    this.pdfViewer.renderDrawing(canvas, obj.pageIndex);\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} obj - Specified the annotaion object.\n   * @param {number} tx - Specified the tx value.\n   * @param {number} ty - Specified the ty value.\n   * @param {boolean} preventUpdate - Specified the prevent update or not.\n   * @param {number} segmentNumber - Specified the segment value.\n   * @returns {boolean} - Returns true or false.\n   */\n\n\n  Drawing.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n    // eslint-disable-next-line\n    var connector = this.pdfViewer.nameTable[obj.id];\n\n    for (var i = 0; i < connector.vertexPoints.length; i++) {\n      connector.vertexPoints[i].x += tx;\n      connector.vertexPoints[i].y += ty;\n    }\n\n    if (!preventUpdate) {\n      this.updateEndPoint(connector);\n    }\n\n    return true;\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} connector - Specified the connector object.\n   * @returns {void}\n   */\n\n\n  Drawing.prototype.updateEndPoint = function (connector) {\n    this.nodePropertyChange(connector, {\n      vertexPoints: connector.vertexPoints\n    });\n    this.renderSelector(connector.pageIndex);\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} actualObject - Specified the actual annotaion object.\n   * @param {PdfAnnotationBaseModel} node - Specified the node annotation object.\n   * @returns {void}\n   */\n\n\n  Drawing.prototype.nodePropertyChange = function (actualObject, node) {\n    var existingBounds = actualObject.wrapper.outerBounds;\n    var existingInnerBounds = actualObject.wrapper.bounds;\n    var updateConnector = false;\n    var i;\n    var j;\n    var offsetX;\n    var offsetY;\n    var update;\n    var tx;\n    var ty;\n\n    if (node.bounds) {\n      if (node.bounds.width !== undefined) {\n        actualObject.bounds.width = actualObject.wrapper.width = node.bounds.width;\n      }\n\n      if (node.bounds.height !== undefined) {\n        actualObject.bounds.height = actualObject.wrapper.height = node.bounds.height;\n      }\n\n      if (node.bounds.x !== undefined) {\n        actualObject.bounds.x = node.bounds.x - actualObject.bounds.width * 0.5;\n        actualObject.wrapper.offsetX = node.bounds.x;\n        update = true;\n        updateConnector = true;\n      }\n\n      if (node.bounds.y !== undefined) {\n        actualObject.bounds.y = node.bounds.y - actualObject.bounds.height * 0.5;\n        actualObject.wrapper.offsetY = node.bounds.y;\n        update = true;\n        updateConnector = true;\n      }\n\n      if (node.leaderHeight !== undefined) {\n        actualObject.leaderHeight = node.leaderHeight;\n        this.updateConnector(actualObject, actualObject.vertexPoints);\n      }\n\n      if (actualObject.wrapper.children.length) {\n        var children = actualObject.wrapper.children;\n\n        for (var i_1 = 0; i_1 < children.length; i_1++) {\n          if (children[i_1].id) {\n            var names = children[i_1].id.split('_');\n\n            if (names.length && (names.indexOf('perimeter') > -1 || names.indexOf('radius') > -1)) {\n              this.setNodePosition(children[i_1], actualObject);\n            } else if (names.length && names.indexOf('srcDec') > -1) {\n              children[i_1].offsetX = actualObject.vertexPoints[0].x;\n              children[i_1].offsetY = actualObject.vertexPoints[0].y;\n            } else if (names.length && names.indexOf('tarDec') > -1) {\n              children[i_1].offsetX = actualObject.vertexPoints[actualObject.vertexPoints.length - 1].x;\n              children[i_1].offsetY = actualObject.vertexPoints[actualObject.vertexPoints.length - 1].y;\n            } else if (names.length && names.indexOf('stamp') > -1) {\n              // eslint-disable-next-line\n              var ratio = 0;\n              var heightRatio = 2;\n\n              if (actualObject.wrapper.width !== undefined && actualObject.wrapper.height !== undefined) {\n                ratio = 20;\n                heightRatio = 2.9;\n              }\n\n              if (actualObject.isDynamicStamp) {\n                children[i_1].width = actualObject.bounds.width - ratio;\n                children[i_1].height = actualObject.bounds.height / 2 - ratio; // eslint-disable-next-line\n\n                var element = children[1]; // eslint-disable-next-line\n\n                var annotationSettings = this.pdfViewer.stampSettings ? this.pdfViewer.stampSettings : this.pdfViewer.annotationSettings; // eslint-disable-next-line max-len\n\n                if (annotationSettings && (annotationSettings.maxHeight || annotationSettings.maxWidth) && actualObject.bounds.height > 60) {\n                  if (ratio != 0) {\n                    element.style.fontSize = actualObject.bounds.width / ratio;\n                  } else {\n                    element.style.fontSize = actualObject.wrapper.bounds.width / 20;\n                  }\n                } else {\n                  if (ratio != 0) {\n                    element.style.fontSize = this.fontSizeCalculation(actualObject, element, actualObject.bounds.width - 20);\n                  } else {\n                    element.style.fontSize = this.fontSizeCalculation(actualObject, element, actualObject.wrapper.bounds.width - 20);\n                  }\n                }\n\n                if (ratio !== 0) {\n                  element.margin.bottom = -(children[i_1].height / 2);\n                }\n              } else {\n                children[i_1].width = actualObject.bounds.width - ratio;\n                children[i_1].height = actualObject.bounds.height - ratio;\n              }\n\n              children[i_1].offsetX = actualObject.wrapper.offsetX;\n              children[i_1].offsetY = actualObject.wrapper.offsetX;\n              children[i_1].isDirt = true;\n            }\n          }\n        }\n      }\n    }\n\n    if (node.sourceDecoraterShapes !== undefined) {\n      actualObject.sourceDecoraterShapes = node.sourceDecoraterShapes;\n      this.updateConnector(actualObject, actualObject.vertexPoints);\n    }\n\n    if (node.isReadonly !== undefined && actualObject.shapeAnnotationType === 'FreeText') {\n      actualObject.isReadonly = node.isReadonly;\n    }\n\n    if (node.taregetDecoraterShapes !== undefined) {\n      actualObject.taregetDecoraterShapes = node.taregetDecoraterShapes;\n      update = true;\n      this.updateConnector(actualObject, actualObject.vertexPoints);\n    }\n\n    if (node.fillColor !== undefined) {\n      actualObject.fillColor = node.fillColor;\n      actualObject.wrapper.children[0].style.fill = node.fillColor;\n\n      if ((actualObject.enableShapeLabel || actualObject.measureType) && actualObject.wrapper && actualObject.wrapper.children) {\n        // eslint-disable-next-line\n        var children = actualObject.wrapper.children;\n\n        for (var i_2 = 0; i_2 < children.length; i_2++) {\n          if (children[i_2].textNodes) {\n            if (actualObject.enableShapeLabel) {\n              actualObject.labelFillColor = node.fillColor;\n              children[i_2].style.fill = node.fillColor;\n            }\n\n            if (actualObject.measureType) {\n              children[i_2].style.fill = node.fillColor;\n            }\n          }\n        }\n      }\n\n      update = true;\n    }\n\n    if (actualObject.enableShapeLabel && node.labelFillColor !== undefined) {\n      if (actualObject.enableShapeLabel && actualObject.wrapper && actualObject.wrapper.children) {\n        // eslint-disable-next-line\n        var children = actualObject.wrapper.children;\n\n        for (var i_3 = 0; i_3 < children.length; i_3++) {\n          if (children[i_3].textNodes) {\n            actualObject.labelFillColor = node.labelFillColor;\n            children[i_3].style.fill = node.labelFillColor;\n          }\n        }\n      }\n    }\n\n    if (node.opacity !== undefined) {\n      if (actualObject.shapeAnnotationType === 'Stamp' || actualObject.shapeAnnotationType === 'FreeText') {\n        actualObject.wrapper.children[1].style.opacity = node.opacity;\n\n        if (actualObject.wrapper.children[2]) {\n          actualObject.wrapper.children[2].style.opacity = node.opacity;\n        }\n      } else {\n        if (actualObject.shapeAnnotationType === 'StickyNotes') {\n          // eslint-disable-next-line\n          this.pdfViewer.nameTable[actualObject.annotName].wrapper.children[0].style.opacity = node.opacity;\n        }\n\n        actualObject.opacity = node.opacity;\n      }\n\n      actualObject.wrapper.children[0].style.opacity = node.opacity;\n\n      if (actualObject.enableShapeLabel && actualObject.wrapper && actualObject.wrapper.children) {\n        // eslint-disable-next-line\n        var children = actualObject.wrapper.children;\n\n        for (var i_4 = 0; i_4 < children.length; i_4++) {\n          if (children[i_4].textNodes) {\n            children[i_4].style.opacity = node.labelOpacity;\n          }\n        }\n      }\n\n      update = true;\n      updateConnector = true;\n    }\n\n    if (actualObject.enableShapeLabel && node.labelOpacity !== undefined) {\n      if (actualObject.enableShapeLabel && actualObject.wrapper && actualObject.wrapper.children) {\n        // eslint-disable-next-line\n        var children = actualObject.wrapper.children;\n\n        for (var i_5 = 0; i_5 < children.length; i_5++) {\n          if (children[i_5].textNodes) {\n            children[i_5].style.opacity = node.labelOpacity;\n          }\n        }\n      }\n    }\n\n    if (node.rotateAngle !== undefined) {\n      actualObject.rotateAngle = node.rotateAngle;\n      actualObject.wrapper.rotateAngle = node.rotateAngle;\n      update = true;\n      updateConnector = true;\n    }\n\n    if (node.strokeColor !== undefined) {\n      actualObject.strokeColor = node.strokeColor;\n      actualObject.wrapper.children[0].style.strokeColor = node.strokeColor;\n      update = true;\n      updateConnector = true;\n    }\n\n    if (node.fontColor !== undefined) {\n      actualObject.fontColor = node.fontColor;\n\n      if (actualObject.shapeAnnotationType === 'FreeText' && actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n        // eslint-disable-next-line\n        var children = actualObject.wrapper.children;\n        children[1].style.color = node.fontColor;\n\n        if (actualObject.textAlign === 'Justify') {\n          children[1].horizontalAlignment = 'Center';\n        } else {\n          children[1].horizontalAlignment = 'Auto';\n        }\n      }\n\n      if (actualObject.enableShapeLabel && actualObject.wrapper && actualObject.wrapper.children) {\n        // eslint-disable-next-line\n        var children = actualObject.wrapper.children;\n\n        for (var i_6 = 0; i_6 < children.length; i_6++) {\n          if (children[i_6].textNodes) {\n            children[i_6].style.color = node.fontColor;\n          }\n        }\n      }\n\n      update = true;\n      updateConnector = true;\n    }\n\n    if (node.fontFamily !== undefined) {\n      actualObject.fontFamily = node.fontFamily;\n\n      if (actualObject.shapeAnnotationType === 'FreeText' && actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n        // eslint-disable-next-line\n        var children = actualObject.wrapper.children;\n        children[1].style.fontFamily = node.fontFamily;\n      }\n\n      if (actualObject.enableShapeLabel && actualObject.wrapper && actualObject.wrapper.children) {\n        // eslint-disable-next-line\n        var children = actualObject.wrapper.children;\n\n        for (var i_7 = 0; i_7 < children.length; i_7++) {\n          if (children[i_7].textNodes) {\n            children[i_7].style.fontFamily = node.fontFamily;\n          }\n        }\n      }\n\n      update = true;\n      updateConnector = true;\n    }\n\n    if (node.fontSize !== undefined) {\n      actualObject.fontSize = node.fontSize;\n\n      if ((actualObject.shapeAnnotationType === 'FreeText' || actualObject.shapeAnnotationType === 'SignatureText') && actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n        // eslint-disable-next-line\n        var children = actualObject.wrapper.children;\n        children[1].style.fontSize = node.fontSize;\n\n        if (actualObject.shapeAnnotationType === 'SignatureText') {\n          actualObject.wrapper.children[1].bounds.width = actualObject.bounds.width;\n          actualObject.wrapper.children[1].desiredSize.width = actualObject.bounds.width;\n          actualObject.wrapper.children[1].actualSize.width = actualObject.bounds.width;\n          children[1].horizontalAlignment = 'Center';\n          children[1].verticalAlignment = 'Center';\n          children[1].setOffsetWithRespectToBounds(0, 0, 'Absolute');\n        }\n      }\n\n      if (actualObject.enableShapeLabel && actualObject.wrapper && actualObject.wrapper.children) {\n        // eslint-disable-next-line\n        var children = actualObject.wrapper.children;\n\n        for (var i_8 = 0; i_8 < children.length; i_8++) {\n          if (children[i_8].textNodes) {\n            children[i_8].style.fontSize = node.fontSize;\n          }\n        }\n      }\n\n      update = true;\n      updateConnector = true;\n    }\n\n    if (node.font !== undefined) {\n      if (actualObject.shapeAnnotationType === 'FreeText' && actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n        // eslint-disable-next-line\n        var children = actualObject.wrapper.children;\n\n        if (node.font.isBold !== undefined) {\n          children[1].style.bold = node.font.isBold;\n          actualObject.font.isBold = node.font.isBold;\n        }\n\n        if (node.font.isItalic !== undefined) {\n          children[1].style.italic = node.font.isItalic;\n          actualObject.font.isItalic = node.font.isItalic;\n        }\n\n        if (node.font.isUnderline !== undefined) {\n          if (node.font.isUnderline) {\n            actualObject.font.isStrikeout = false;\n          }\n\n          if (node.font.isUnderline === true) {\n            children[1].style.textDecoration = 'Underline';\n          } else {\n            if (!node.font.isStrikeout) {\n              children[1].style.textDecoration = 'None';\n            }\n          }\n\n          actualObject.font.isUnderline = node.font.isUnderline;\n        }\n\n        if (node.font.isStrikeout !== undefined) {\n          if (node.font.isStrikeout) {\n            actualObject.font.isUnderline = false;\n          }\n\n          if (node.font.isStrikeout === true) {\n            children[1].style.textDecoration = 'LineThrough';\n          } else {\n            if (!node.font.isUnderline) {\n              children[1].style.textDecoration = 'None';\n            }\n          }\n\n          actualObject.font.isStrikeout = node.font.isStrikeout;\n        }\n      }\n\n      update = true;\n      updateConnector = true;\n    }\n\n    if (node.textAlign !== undefined) {\n      actualObject.textAlign = node.textAlign;\n\n      if (actualObject.shapeAnnotationType === 'FreeText' && actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n        // eslint-disable-next-line\n        var children = actualObject.wrapper.children;\n        children[1].style.textAlign = node.textAlign;\n\n        if (children[1].childNodes.length === 1) {\n          if (actualObject.textAlign === 'Justify') {\n            children[1].horizontalAlignment = 'Left';\n            children[1].setOffsetWithRespectToBounds(0, 0, null);\n          } else if (actualObject.textAlign === 'Right') {\n            children[1].horizontalAlignment = 'Right';\n            children[1].setOffsetWithRespectToBounds(0.97, 0, null);\n          } else if (actualObject.textAlign === 'Left') {\n            children[1].horizontalAlignment = 'Left';\n            children[1].setOffsetWithRespectToBounds(0, 0, null);\n          } else if (actualObject.textAlign === 'Center') {\n            children[1].horizontalAlignment = 'Center';\n            children[1].setOffsetWithRespectToBounds(0.46, 0, null);\n          }\n        } else if (children[1].childNodes.length > 1 && actualObject.textAlign === 'Justify') {\n          children[1].horizontalAlignment = 'Center';\n        } else {\n          children[1].horizontalAlignment = 'Auto';\n        }\n      }\n\n      update = true;\n      updateConnector = true;\n    }\n\n    if (node.thickness !== undefined) {\n      actualObject.thickness = node.thickness;\n      actualObject.wrapper.children[0].style.strokeWidth = node.thickness;\n\n      if (actualObject.shapeAnnotationType === 'LineWidthArrowHead') {\n        actualObject.wrapper.children[1].width = 12 * node.thickness;\n        actualObject.wrapper.children[1].height = 12 * node.thickness;\n        actualObject.wrapper.children[2].width = 12 * node.thickness;\n        actualObject.wrapper.children[2].height = 12 * node.thickness;\n      }\n\n      update = true;\n      updateConnector = true;\n    }\n\n    if (node.borderDashArray !== undefined) {\n      actualObject.borderDashArray = node.borderDashArray;\n      actualObject.wrapper.children[0].style.strokeDashArray = node.borderDashArray;\n    }\n\n    if (node.borderStyle !== undefined) {\n      actualObject.borderStyle = node.borderStyle;\n    }\n\n    if (node.author !== undefined) {\n      actualObject.author = node.author;\n    }\n\n    if (node.modifiedDate !== undefined) {\n      actualObject.modifiedDate = node.modifiedDate;\n    }\n\n    if (node.subject !== undefined) {\n      actualObject.subject = node.subject;\n    }\n\n    if (node.vertexPoints !== undefined) {\n      actualObject.vertexPoints = node.vertexPoints; // eslint-disable-next-line\n\n      this.pdfViewer.nameTable[actualObject.id].vertexPoints = node.vertexPoints;\n      this.updateConnector(actualObject, node.vertexPoints);\n    }\n\n    if (node.leaderHeight !== undefined && actualObject.shapeAnnotationType !== 'Polygon') {\n      actualObject.leaderHeight = node.leaderHeight;\n      this.updateConnector(actualObject, actualObject.vertexPoints);\n    }\n\n    if (node.notes !== undefined) {\n      actualObject.notes = node.notes;\n    }\n\n    if (node.annotName !== undefined) {\n      actualObject.annotName = node.annotName;\n    }\n\n    if (actualObject.shapeAnnotationType === 'Distance') {\n      for (i = 0; i < actualObject.wrapper.children.length; i++) {\n        // eslint-disable-next-line\n        var segment = actualObject.wrapper.children[i]; // eslint-disable-next-line\n\n        var points = getConnectorPoints(actualObject);\n\n        if (segment.id.indexOf('leader1') > -1) {\n          this.setLineDistance(actualObject, points, segment, false);\n        }\n\n        if (segment.id.indexOf('leader2') > -1) {\n          this.setLineDistance(actualObject, points, segment, true);\n        }\n      }\n\n      this.updateConnector(actualObject, actualObject.vertexPoints);\n    }\n\n    if (actualObject.shapeAnnotationType === 'Polygon' && node.vertexPoints) {\n      actualObject.data = getPolygonPath(actualObject.vertexPoints); // eslint-disable-next-line\n\n      var path = actualObject.wrapper.children[0];\n      path.data = actualObject.data;\n      path.canMeasurePath = true;\n    }\n\n    if (isLineShapes(actualObject)) {\n      for (var i_9 = 0; i_9 < actualObject.wrapper.children.length; i_9++) {\n        // eslint-disable-next-line\n        var childElement = actualObject.wrapper.children[i_9];\n\n        if (!childElement.textNodes) {\n          setElementStype(actualObject, actualObject.wrapper.children[i_9]);\n        }\n\n        if (actualObject.enableShapeLabel === true) {\n          if (actualObject.wrapper.children[i_9] instanceof TextElement) {\n            actualObject.wrapper.children[i_9].style.fill = actualObject.labelFillColor;\n          }\n\n          if (actualObject.wrapper.children[i_9] instanceof PathElement && actualObject.measureType === 'Perimeter') {\n            actualObject.wrapper.children[i_9].style.fill = 'transparent';\n          }\n        } else {\n          if (actualObject.wrapper.children[i_9] instanceof PathElement && actualObject.measureType === 'Perimeter' || actualObject.wrapper.children[i_9] instanceof TextElement) {\n            actualObject.wrapper.children[i_9].style.fill = 'transparent';\n          }\n        }\n      }\n    }\n\n    if (actualObject && (actualObject.shapeAnnotationType === 'FreeText' || actualObject.enableShapeLabel === true)) {\n      if (actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n        // eslint-disable-next-line\n        var children = actualObject.wrapper.children;\n\n        for (var i_10 = 0; i_10 < children.length; i_10++) {\n          if (children[i_10].textNodes) {\n            if (actualObject.shapeAnnotationType === 'FreeText') {\n              if (node.dynamicText) {\n                children[i_10].content = node.dynamicText;\n                actualObject.dynamicText = node.dynamicText;\n              } else {\n                children[i_10].content = actualObject.dynamicText;\n              }\n\n              children[i_10].width = actualObject.bounds.width;\n            } else if (actualObject.enableShapeLabel === true && actualObject.measureType) {\n              if (node.labelContent) {\n                children[i_10].content = node.labelContent;\n                actualObject.labelContent = node.labelContent;\n              } else {\n                children[i_10].content = actualObject.labelContent;\n              }\n\n              actualObject.notes = children[i_10].content;\n            } else if (actualObject.enableShapeLabel === true) {\n              if (node.labelContent) {\n                children[i_10].content = node.labelContent;\n                actualObject.labelContent = node.labelContent;\n              } else {\n                children[i_10].content = actualObject.labelContent;\n              }\n\n              actualObject.notes = children[i_10].content;\n            }\n\n            children[i_10].isDirt = true;\n          }\n          /** set text node width less than the parent */\n\n        }\n      }\n    }\n\n    actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n\n    if (actualObject && actualObject.formFieldAnnotationType) {\n      if (actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n        // eslint-disable-next-line\n        var children = actualObject.wrapper.children[0];\n        children.actualSize.width = actualObject.wrapper.desiredSize.width;\n        children.actualSize.height = actualObject.wrapper.desiredSize.height;\n      }\n    }\n\n    if (actualObject && actualObject.shapeAnnotationType === 'FreeText' && actualObject.subject === 'Text Box') {\n      if (actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n        // eslint-disable-next-line\n        var children = actualObject.wrapper.children;\n\n        if (children[1].childNodes.length > 1 && actualObject.textAlign === 'Justify') {\n          children[1].horizontalAlignment = 'Center';\n        } else if (children[1].childNodes.length === 1) {\n          if (actualObject.textAlign === 'Justify') {\n            children[1].horizontalAlignment = 'Left';\n            children[1].setOffsetWithRespectToBounds(0, 0, null);\n          } else if (actualObject.textAlign === 'Right') {\n            children[1].horizontalAlignment = 'Right';\n            children[1].setOffsetWithRespectToBounds(0.97, 0, null);\n          } else if (actualObject.textAlign === 'Left') {\n            children[1].horizontalAlignment = 'Left';\n            children[1].setOffsetWithRespectToBounds(0, 0, null);\n          } else if (actualObject.textAlign === 'Center') {\n            children[1].horizontalAlignment = 'Center';\n            children[1].setOffsetWithRespectToBounds(0.46, 0, null);\n          }\n        }\n\n        for (var i_11 = 0; i_11 < children.length; i_11++) {\n          if (children[i_11].textNodes && children[i_11].textNodes.length > 0) {\n            children[i_11].isDirt = true;\n            var childNodeHeight = children[i_11].textNodes.length * children[i_11].textNodes[0].dy;\n            var heightDiff = actualObject.bounds.height - childNodeHeight;\n\n            if (heightDiff > 0 && heightDiff < children[i_11].textNodes[0].dy) {\n              childNodeHeight = childNodeHeight + children[i_11].textNodes[0].dy;\n            }\n\n            if (childNodeHeight > actualObject.bounds.height) {\n              var contString = '';\n\n              for (var index = 0; index < children[i_11].textNodes.length; index++) {\n                // eslint-disable-next-line\n                var childHeight = children[i_11].textNodes[0].dy * (index + 1); // eslint-disable-next-line\n\n                childHeight = childHeight;\n                contString = contString + children[i_11].textNodes[index].text;\n              }\n\n              children[i_11].content = contString;\n            }\n          }\n          /** set text node width less than the parent */\n\n\n          children[i_11].width = actualObject.bounds.width;\n        }\n      }\n\n      actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n      actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n    }\n\n    this.pdfViewer.renderDrawing(undefined, actualObject.pageIndex);\n\n    if (actualObject && actualObject.shapeAnnotationType === 'FreeText') {\n      if (actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n        // eslint-disable-next-line\n        var children = actualObject.wrapper.children;\n\n        if (children[1].childNodes.length === 1 && actualObject.textAlign === 'Justify') {\n          children[1].horizontalAlignment = 'Left';\n          children[1].setOffsetWithRespectToBounds(0.5, 0, null);\n        } else if (children[1].childNodes.length > 1 && actualObject.textAlign === 'Justify') {\n          children[1].horizontalAlignment = 'Center';\n          children[1].setOffsetWithRespectToBounds(0, 0, null);\n        }\n      }\n    }\n  };\n\n  Drawing.prototype.fontSizeCalculation = function (actualObject, element, boundsWidth) {\n    var canvas = document.getElementById(this.pdfViewer.element.id + '_annotationCanvas_' + actualObject.pageIndex);\n    var context = canvas.getContext(\"2d\");\n    var textwidth = 0;\n    var newsize = 0;\n    var fontStyle = '';\n\n    if (element.style.italic && element.style.bold) {\n      fontStyle = 'bold italic ';\n    } else if (element.style.bold) {\n      fontStyle = 'bold ';\n    } else if (element.style.italic) {\n      fontStyle = 'italic ';\n    }\n\n    while (boundsWidth > textwidth) {\n      context.font = fontStyle + newsize + 'px ' + element.style.fontFamily;\n      textwidth = context.measureText(actualObject.dynamicText).width;\n      newsize += 0.1;\n    }\n\n    newsize -= 0.1;\n    return newsize;\n  }; // eslint-disable-next-line\n\n\n  Drawing.prototype.setLineDistance = function (actualObject, points, segment, leader) {\n    var node1;\n\n    if (leader) {\n      node1 = initLeader(actualObject, points[1], points[0], leader);\n    } else {\n      node1 = initLeader(actualObject, points[0], points[1], leader);\n    }\n\n    segment.data = node1.data;\n    segment.offsetX = node1.offsetX;\n    segment.offsetY = node1.offsetY;\n    segment.rotateAngle = node1.rotateAngle;\n    segment.width = node1.width;\n    segment.height = node1.height;\n    segment.pivot = node1.pivot;\n    segment.canMeasurePath = true;\n    segment.isDirt = true;\n  };\n  /**\n   * @private\n   * @param {number} sx - Specified the sx value.\n   * @param {number} sy - Specified the sy value.\n   * @param {PointModel} pivot - Specified the pivot value.\n   * @returns {boolean} - Returns true or false.\n   */\n\n\n  Drawing.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n    var obj = this.pdfViewer.selectedItems;\n    return this.scale(obj, sx, sy, pivot);\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel | SelectorModel} obj - Specified the annotaion object.\n   * @param {number} sx - Specified the sx value.\n   * @param {number} sy - Specified the sy value.\n   * @param {PointModel} pivot - Specified the pivot value.\n   * @returns {boolean} - Returns true or false.\n   */\n\n\n  Drawing.prototype.scale = function (obj, sx, sy, pivot) {\n    var checkBoundaryConstraints = true;\n\n    if (obj instanceof Selector) {\n      if (obj.annotations && obj.annotations.length) {\n        for (var _i = 0, _a = obj.annotations; _i < _a.length; _i++) {\n          var node = _a[_i];\n          checkBoundaryConstraints = this.scaleAnnotation(node, sx, sy, pivot, obj);\n        }\n      } else if (obj.formFields && obj.formFields.length) {\n        for (var _b = 0, _c = obj.formFields; _b < _c.length; _b++) {\n          var node = _c[_b];\n          checkBoundaryConstraints = this.scaleAnnotation(node, sx, sy, pivot, obj);\n        }\n      }\n    } else {\n      checkBoundaryConstraints = this.scaleAnnotation(obj, sx, sy, pivot, undefined);\n    }\n\n    return checkBoundaryConstraints;\n  };\n  /**\n   * @private\n   * @param {number} sw - Specified the sw value.\n   * @param {number} sh - Specified the sh value.\n   * @param {PointModel} pivot - Specified the pivot value.\n   * @param {IElement} obj - Specified the annotation object.\n   * @param {DrawingElement} element - Specified the annotation element.\n   * @param {IElement} refObject - Specified the annotation reference object.\n   * @returns {void}\n   */\n\n\n  Drawing.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n    sw = sw < 0 ? 1 : sw;\n    sh = sh < 0 ? 1 : sh;\n\n    if (sw !== 1 || sh !== 1) {\n      var width = void 0;\n      var height = void 0;\n\n      if (!isLineShapes(obj)) {\n        var node = obj;\n        var isResize = void 0;\n        var bound = void 0;\n        width = node.wrapper.actualSize.width * sw;\n        height = node.wrapper.actualSize.height * sh;\n\n        if (isResize) {\n          width = Math.max(width, bound.right - node.wrapper.bounds.x);\n          height = Math.max(height, bound.bottom - node.wrapper.bounds.y);\n        }\n\n        sw = width / node.wrapper.actualSize.width;\n        sh = height / node.wrapper.actualSize.height;\n      }\n\n      var matrix = identityMatrix();\n\n      if (!refObject) {\n        refObject = obj;\n      }\n\n      var refWrapper = refObject.wrapper;\n      rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n      scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n      rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n\n      if (!isLineShapes(obj)) {\n        var node = obj;\n        var newPosition = transformPointByMatrix(matrix, {\n          x: node.wrapper.offsetX,\n          y: node.wrapper.offsetY\n        });\n\n        if (width > 0) {\n          node.wrapper.width = width;\n          node.wrapper.offsetX = newPosition.x;\n        }\n\n        if (height > 0) {\n          node.wrapper.height = height;\n          node.wrapper.offsetY = newPosition.y;\n        }\n\n        this.nodePropertyChange(obj, {\n          bounds: {\n            width: node.wrapper.width,\n            height: node.wrapper.height,\n            x: node.wrapper.offsetX,\n            y: node.wrapper.offsetY\n          }\n        });\n      }\n    }\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} obj - Specified the annotaion object.\n   * @param {number} sw - Specified the sw value.\n   * @param {number} sh - Specified the sh value.\n   * @param {PointModel} pivot - Specified the pivot value.\n   * @param {IElement} refObject - Specified the reference object.\n   * @returns {boolean} - Returns true or false.\n   */\n\n\n  Drawing.prototype.scaleAnnotation = function (obj, sw, sh, pivot, refObject) {\n    // eslint-disable-next-line\n    var node = this.pdfViewer.nameTable[obj.id];\n    var tempNode = node;\n    var elements = [];\n    var element = node.wrapper;\n\n    if (!refObject) {\n      refObject = obj;\n    }\n\n    var refWrapper = refObject.wrapper;\n    var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n    var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n    var refPoint = this.getShapePoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n\n    if (element.actualSize.width !== undefined && element.actualSize.height !== undefined) {\n      this.scaleObject(sw, sh, refPoint, node, element, refObject);\n    } // eslint-disable-next-line max-len\n\n\n    var constraints = this.checkBoundaryConstraints(undefined, undefined, obj.pageIndex, obj.wrapper.bounds);\n\n    if (!constraints) {\n      this.scaleObject(1 / sw, 1 / sh, refPoint, node, element, refObject);\n    }\n\n    return constraints;\n  };\n  /**\n   * @private\n   * @param {number} tx - Specified the tx value.\n   * @param {number} ty - Specified the ty value.\n   * @param {number} pageIndex - Specified the page index value.\n   * @param {Rect} nodeBounds - Specified the node bounds value.\n   * @param {boolean} isStamp - Specified the annotation is stamp or not.\n   * @param {boolean} isSkip - Specified the annotaion is skip or not.\n   * @returns {boolean} - Returns true or false.\n   */\n  // eslint-disable-next-line max-len\n\n\n  Drawing.prototype.checkBoundaryConstraints = function (tx, ty, pageIndex, nodeBounds, isStamp, isSkip) {\n    var selectorBounds = !nodeBounds ? this.pdfViewer.selectedItems.wrapper.bounds : undefined;\n    var bounds = nodeBounds; // eslint-disable-next-line\n\n    var canvas = document.getElementById(this.pdfViewer.element.id + '_annotationCanvas_' + pageIndex);\n    var heightDifference = 1;\n\n    if (canvas) {\n      var width = canvas.clientWidth / this.pdfViewer.viewerBase.getZoomFactor();\n      var height = canvas.clientHeight / this.pdfViewer.viewerBase.getZoomFactor();\n      var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n      var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n      var top_1 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n      var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n\n      if (isStamp) {\n        heightDifference = 50;\n\n        if (this.pdfViewer.viewerBase.eventArgs && this.pdfViewer.viewerBase.eventArgs.source) {\n          if (this.RestrictStamp(this.pdfViewer.viewerBase.eventArgs.source)) {\n            return false;\n          }\n        }\n      }\n\n      if (right <= width - 3 && left >= 1 && bottom <= height - 3 && top_1 >= heightDifference || isSkip) {\n        return true;\n      }\n    }\n\n    return false;\n  }; // eslint-disable-next-line\n\n\n  Drawing.prototype.RestrictStamp = function (source) {\n    // eslint-disable-next-line max-len\n    if (source && source.pageIndex !== undefined && this.pdfViewer.viewerBase.activeElements && source.pageIndex !== this.pdfViewer.viewerBase.activeElements.activePageID) {\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * @private\n   * @param {DrawingElement} shapeElement - Specified the shape element.\n   * @returns {Rect} - Returns the rectangle object.\n   */\n\n\n  Drawing.prototype.getShapeBounds = function (shapeElement) {\n    var shapeBounds = new Rect();\n    var shapeCorners = cornersPointsBeforeRotation(shapeElement);\n    var shapeMiddleLeft = shapeCorners.middleLeft;\n    var shapeTopCenter = shapeCorners.topCenter;\n    var shapeBottomCenter = shapeCorners.bottomCenter;\n    var shapeMiddleRight = shapeCorners.middleRight;\n    var shapeTopLeft = shapeCorners.topLeft;\n    var shapeTopRight = shapeCorners.topRight;\n    var shapeBottomLeft = shapeCorners.bottomLeft;\n    var shapeBottomRight = shapeCorners.bottomRight;\n    shapeElement.corners = {\n      topLeft: shapeTopLeft,\n      topCenter: shapeTopCenter,\n      topRight: shapeTopRight,\n      middleLeft: shapeMiddleLeft,\n      middleRight: shapeMiddleRight,\n      bottomLeft: shapeBottomLeft,\n      bottomCenter: shapeBottomCenter,\n      bottomRight: shapeBottomRight\n    };\n\n    if (shapeElement.rotateAngle !== 0 || shapeElement.parentTransform !== 0) {\n      var matrix = identityMatrix();\n      rotateMatrix(matrix, shapeElement.rotateAngle + shapeElement.parentTransform, shapeElement.offsetX, shapeElement.offsetY);\n      shapeElement.corners.topLeft = shapeTopLeft = transformPointByMatrix(matrix, shapeTopLeft);\n      shapeElement.corners.topCenter = shapeTopCenter = transformPointByMatrix(matrix, shapeTopCenter);\n      shapeElement.corners.topRight = shapeTopRight = transformPointByMatrix(matrix, shapeTopRight);\n      shapeElement.corners.middleLeft = shapeMiddleLeft = transformPointByMatrix(matrix, shapeMiddleLeft);\n      shapeElement.corners.middleRight = shapeMiddleRight = transformPointByMatrix(matrix, shapeMiddleRight);\n      shapeElement.corners.bottomLeft = shapeBottomLeft = transformPointByMatrix(matrix, shapeBottomLeft);\n      shapeElement.corners.bottomCenter = shapeBottomCenter = transformPointByMatrix(matrix, shapeBottomCenter);\n      shapeElement.corners.bottomRight = shapeBottomRight = transformPointByMatrix(matrix, shapeBottomRight); //Set corners based on rotate angle\n    }\n\n    shapeBounds = Rect.toBounds([shapeTopLeft, shapeTopRight, shapeBottomLeft, shapeBottomRight]);\n    shapeElement.corners.left = shapeBounds.left;\n    shapeElement.corners.right = shapeBounds.right;\n    shapeElement.corners.top = shapeBounds.top;\n    shapeElement.corners.bottom = shapeBounds.bottom;\n    shapeElement.corners.center = shapeBounds.center;\n    shapeElement.corners.width = shapeBounds.width;\n    shapeElement.corners.height = shapeBounds.height;\n    return shapeBounds;\n  };\n  /**\n   * @private\n   * @param {number} x - Specified the x value.\n   * @param {number} y - Specified the y value.\n   * @param {number} w - Specified the w value.\n   * @param {number} h - Specified the h value.\n   * @param {number} angle - Specified the angle value.\n   * @param {number} offsetX - Specified the offset x value.\n   * @param {number} offsetY - Specified the offset y value.\n   * @param {PointModel} cornerPoint - Specified the corner point value.\n   * @returns {PointModel} - Returns the point model.\n   */\n\n\n  Drawing.prototype.getShapePoint = function (x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivotPoint = {\n      x: 0,\n      y: 0\n    };\n    var transformMatrix = identityMatrix();\n    rotateMatrix(transformMatrix, angle, offsetX, offsetY);\n\n    switch (cornerPoint.x) {\n      case 1:\n        switch (cornerPoint.y) {\n          case 1:\n            pivotPoint = transformPointByMatrix(transformMatrix, {\n              x: x + w,\n              y: y + h\n            });\n            break;\n\n          case 0:\n            pivotPoint = transformPointByMatrix(transformMatrix, {\n              x: x + w,\n              y: y\n            });\n            break;\n\n          case 0.5:\n            pivotPoint = transformPointByMatrix(transformMatrix, {\n              x: x + w,\n              y: y + h / 2\n            });\n            break;\n        }\n\n        break;\n\n      case 0:\n        switch (cornerPoint.y) {\n          case 0.5:\n            pivotPoint = transformPointByMatrix(transformMatrix, {\n              x: x,\n              y: y + h / 2\n            });\n            break;\n\n          case 1:\n            pivotPoint = transformPointByMatrix(transformMatrix, {\n              x: x,\n              y: y + h\n            });\n            break;\n\n          case 0:\n            pivotPoint = transformPointByMatrix(transformMatrix, {\n              x: x,\n              y: y\n            });\n            break;\n        }\n\n        break;\n\n      case 0.5:\n        switch (cornerPoint.y) {\n          case 0:\n            pivotPoint = transformPointByMatrix(transformMatrix, {\n              x: x + w / 2,\n              y: y\n            });\n            break;\n\n          case 0.5:\n            pivotPoint = transformPointByMatrix(transformMatrix, {\n              x: x + w / 2,\n              y: y + h / 2\n            });\n            break;\n\n          case 1:\n            pivotPoint = transformPointByMatrix(transformMatrix, {\n              x: x + w / 2,\n              y: y + h\n            });\n            break;\n        }\n\n        break;\n    }\n\n    return {\n      x: pivotPoint.x,\n      y: pivotPoint.y\n    };\n  };\n  /**\n   * @private\n   * @param {string} endPoint - Specified the end point value.\n   * @param {IElement} obj - Specified the annotaion object.\n   * @param {PointModel} point - Specified the annotation points.\n   * @param {PointModel} segment - Specified the annotaion segment.\n   * @param {IElement} target - Specified the target element.\n   * @param {string} targetPortId - Specified the target port id.\n   * @param {any} currentSelector - Specified the current selector value.\n   * @returns {boolean} - Returns true or false.\n   */\n  // eslint-disable-next-line\n\n\n  Drawing.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId, currentSelector) {\n    var selectorModel;\n    var connector;\n    var node;\n    var tx;\n    var segmentPoint;\n    var ty;\n    var index; // eslint-disable-next-line\n\n    var checkBezierThumb = false;\n\n    if (obj instanceof Selector) {\n      selectorModel = obj;\n      connector = selectorModel.annotations[0];\n    } else {\n      connector = obj;\n    }\n\n    point = {\n      x: point.x / this.pdfViewer.viewerBase.getZoomFactor(),\n      y: point.y / this.pdfViewer.viewerBase.getZoomFactor()\n    };\n\n    if (this.checkBoundaryConstraints(undefined, undefined, connector.pageIndex, connector.wrapper.bounds)) {\n      if (connector.shapeAnnotationType === 'Distance') {\n        var leader = isLeader(connector, endPoint);\n\n        if (endPoint === 'Leader0') {\n          if (this.pdfViewer.viewerBase.tool instanceof LineTool) {\n            connector.vertexPoints[0].x = point.x;\n            connector.vertexPoints[0].y = point.y;\n          } else {\n            tx = point.x - leader.point.x;\n            ty = point.y - leader.point.y;\n            connector.vertexPoints[0].x += tx;\n            connector.vertexPoints[0].y += ty;\n          }\n        } else if (endPoint === 'Leader1') {\n          var length_2 = connector.vertexPoints.length - 1;\n\n          if (this.pdfViewer.viewerBase.tool instanceof LineTool) {\n            connector.vertexPoints[length_2].x = point.x;\n            connector.vertexPoints[length_2].y = point.y;\n          } else {\n            tx = point.x - leader.point.x;\n            ty = point.y - leader.point.y;\n            connector.vertexPoints[length_2].x += tx;\n            connector.vertexPoints[length_2].y += ty;\n          }\n        } else {\n          // eslint-disable-next-line\n          var angle = Point.findAngle(connector.sourcePoint, connector.targetPoint); // eslint-disable-next-line\n\n          var center = obj.wrapper.children[0].bounds.center; // eslint-disable-next-line\n\n          var matrix = identityMatrix();\n          rotateMatrix(matrix, -angle, center.x, center.y); // eslint-disable-next-line\n\n          var rotatedPoint = transformPointByMatrix(matrix, {\n            x: point.x,\n            y: point.y\n          });\n\n          if (endPoint.split('_')[0] === 'ConnectorSegmentPoint') {\n            // eslint-disable-next-line\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -angle, center.x, center.y); // eslint-disable-next-line\n\n            var rotatedPoint1 = transformPointByMatrix(matrix, connector.vertexPoints[0]); // eslint-disable-next-line\n\n            var rotatedPoint2 = transformPointByMatrix(matrix, connector.vertexPoints[connector.vertexPoints.length - 1]);\n            ty = rotatedPoint.y - rotatedPoint1.y;\n\n            if (connector.leaderHeight === 0 && connector.leaderHeight != null) {\n              connector.leaderHeight = this.pdfViewer.distanceSettings.leaderLength;\n            } else {\n              connector.leaderHeight += ty;\n              rotatedPoint1.y += ty;\n              rotatedPoint2.y += ty; // eslint-disable-next-line\n\n              var matrix = identityMatrix();\n              rotateMatrix(matrix, angle, center.x, center.y);\n              connector.vertexPoints[0] = transformPointByMatrix(matrix, rotatedPoint1);\n              connector.vertexPoints[connector.vertexPoints.length - 1] = transformPointByMatrix(matrix, rotatedPoint2);\n            }\n          }\n        }\n      } else if (endPoint.split('_')[0] === 'ConnectorSegmentPoint') {\n        var i = Number(endPoint.split('_')[1]);\n        tx = point.x - connector.vertexPoints[i].x;\n        ty = point.y - connector.vertexPoints[i].y;\n        connector.vertexPoints[i].x += tx;\n        connector.vertexPoints[i].y += ty;\n\n        if (connector.vertexPoints.length > 2 && obj.measureType !== 'Perimeter') {\n          if (parseFloat(endPoint.split('_')[1]) === 0) {\n            connector.vertexPoints[connector.vertexPoints.length - 1].x += tx;\n            connector.vertexPoints[connector.vertexPoints.length - 1].y += ty;\n          } else if (parseFloat(endPoint.split('_')[1]) === connector.vertexPoints.length - 1) {\n            connector.vertexPoints[0].x += tx;\n            connector.vertexPoints[0].y += ty;\n          }\n        }\n      }\n\n      this.nodePropertyChange(connector, {\n        vertexPoints: connector.vertexPoints\n      });\n      this.renderSelector(connector.pageIndex, currentSelector);\n    }\n\n    this.pdfViewer.renderDrawing();\n    return true;\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n   * @param {number} tx - Specified the tx value.\n   * @param {number} ty - Specified the y value.\n   * @param {number} i - Specified the index value.\n   * @returns {boolean} - Returns true or false.\n   */\n\n\n  Drawing.prototype.dragSourceEnd = function (obj, tx, ty, i) {\n    // eslint-disable-next-line\n    var connector = this.pdfViewer.nameTable[obj.id];\n    connector.vertexPoints[i].x += tx;\n    connector.vertexPoints[i].y += ty;\n    this.pdfViewer.renderDrawing();\n    return true;\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} connector - Specified the connector object.\n   * @param {PointModel[]} points - Specified the points value.\n   * @returns {void}\n   */\n\n\n  Drawing.prototype.updateConnector = function (connector, points) {\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.vertexPoints = points;\n    updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    var srcPoint = connector.sourcePoint;\n    var anglePoint = connector.vertexPoints; //  points = this.clipDecorators(connector, points);\n\n    var element = connector.wrapper.children[0];\n    element.canMeasurePath = true;\n\n    for (var i = 0; i < connector.wrapper.children.length; i++) {\n      element = connector.wrapper.children[i];\n\n      if (connector.shapeAnnotationType !== 'Polygon') {\n        if (element.id.indexOf('srcDec') > -1) {\n          updateDecoratorElement(connector, element, points[0], anglePoint[1], true);\n        }\n\n        targetPoint = connector.targetPoint;\n\n        if (element.id.indexOf('tarDec') > -1) {\n          updateDecoratorElement(connector, element, points[points.length - 1], anglePoint[anglePoint.length - 2], false);\n        }\n      }\n    }\n  };\n  /**\n   * @private\n   * @returns {Object} - Returns the object.\n   */\n\n\n  Drawing.prototype.copy = function () {\n    this.pdfViewer.clipboardData.pasteIndex = 1;\n    this.pdfViewer.clipboardData.clipObject = this.copyObjects();\n    return this.pdfViewer.clipboardData.clipObject;\n  };\n  /**\n   * @private\n   * @returns {Object[]} - Returns the object array.\n   */\n\n\n  Drawing.prototype.copyObjects = function () {\n    var selectedItems = [];\n    var obj = [];\n    this.pdfViewer.clipboardData.childTable = {};\n\n    if (this.pdfViewer.selectedItems.annotations.length > 0) {\n      selectedItems = this.pdfViewer.selectedItems.annotations;\n\n      for (var j = 0; j < selectedItems.length; j++) {\n        var element = cloneObject(selectedItems[j]);\n        obj.push(element);\n      }\n    }\n\n    if (this.pdfViewer.selectedItems.formFields.length > 0) {\n      selectedItems = this.pdfViewer.selectedItems.formFields;\n\n      for (var j = 0; j < selectedItems.length; j++) {\n        var element = cloneObject(selectedItems[j]);\n        obj.push(element);\n      }\n    }\n\n    if (this.pdfViewer.clipboardData.pasteIndex === 0) {\n      for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n        var item = selectedItems_1[_i]; // eslint-disable-next-line\n\n        if (this.pdfViewer.nameTable[item.id]) {\n          if (!item.formFieldAnnotationType) {\n            if (item.annotName) this.pdfViewer.annotationModule.deleteAnnotationById(item.annotName);else this.pdfViewer.annotationModule.deleteAnnotation();\n          } else {\n            this.pdfViewer.clearSelection(item.pageIndex);\n            this.pdfViewer.formDesignerModule.deleteFormField(item.id);\n          }\n        }\n      } //this.endGroupAction();\n\n    }\n\n    this.sortByZIndex(obj, 'zIndex');\n    return obj;\n  };\n\n  Drawing.prototype.getNewObject = function (obj) {\n    var newObj;\n    var newobjs = [];\n    this.pdfViewer.clipboardData.pasteIndex = 1;\n\n    for (var i = 0; i < obj.length; i++) {\n      newObj = cloneObject(obj[i]);\n      newobjs.push(newObj);\n    }\n\n    return newobjs;\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel[]} obj - Specified the annotation object.\n   * @param {number} index - Specified the annotation index.\n   * @returns {void}\n   */\n\n\n  Drawing.prototype.paste = function (obj, index) {\n    var zoomfactor = this.pdfViewer.viewerBase.getZoomFactor();\n    var allowServerDataBind = this.pdfViewer.allowServerDataBinding;\n    this.pdfViewer.enableServerDataBinding(false);\n\n    if (obj || this.pdfViewer.clipboardData.clipObject) {\n      var copiedItems = obj ? this.getNewObject(obj) : this.pdfViewer.clipboardData.clipObject;\n\n      if (copiedItems) {\n        var objectTable = {};\n\n        if (this.pdfViewer.clipboardData.pasteIndex !== 0) {\n          this.pdfViewer.clearSelection(index);\n        }\n\n        for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n          var copy = copiedItems_1[_i];\n          copy.id += randomId();\n          var fieldName = this.splitFormFieldName(copy);\n          var maxNumber = 0; // this.pdfViewer.formFieldCollection.length;\n\n          if (this.pdfViewer.formDesigner) {\n            this.pdfViewer.formDesigner.setFormFieldIndex();\n            maxNumber = this.pdfViewer.formDesigner.formFieldIndex;\n            copy.name = fieldName + maxNumber;\n          } // eslint-disable-next-line\n\n\n          objectTable[copy.id] = copy;\n        }\n\n        for (var j = 0; j < copiedItems.length; j++) {\n          var copy = copiedItems[j];\n          var pageDiv = this.pdfViewer.viewerBase.getElement('_pageDiv_' + copy.pageIndex); // eslint-disable-next-line\n\n          var events = event;\n\n          if (events && !events.clientX && !events.clientY) {\n            events = {\n              clientX: this.pdfViewer.viewerBase.mouseLeft,\n              clientY: this.pdfViewer.viewerBase.mouseTop\n            };\n          }\n\n          if (isBlazor()) {\n            events = this.pdfViewer.viewerBase.mouseDownEvent;\n          }\n\n          if (isLineShapes(copy)) {\n            this.calculateCopyPosition(copy, pageDiv, events);\n          } else {\n            if (pageDiv) {\n              var pageCurrentRect = pageDiv.getBoundingClientRect();\n              copy.bounds.x = (events.clientX - pageCurrentRect.left) / zoomfactor;\n              copy.bounds.y = (events.clientY - pageCurrentRect.top) / zoomfactor;\n            }\n          }\n\n          var newNode = cloneObject(copy);\n\n          if (this.pdfViewer.viewerBase.contextMenuModule.previousAction !== 'Cut') {\n            newNode.id += randomId();\n\n            if (this.pdfViewer.annotationModule && newNode.shapeAnnotationType !== 'HandWrittenSignature') {\n              newNode.annotName = newNode.id; // eslint-disable-next-line max-len\n\n              this.pdfViewer.annotationModule.stickyNotesAnnotationModule.updateAnnotationCollection(newNode, copiedItems[0], false);\n            }\n\n            if (newNode.shapeAnnotationType === 'SignatureText' || newNode.shapeAnnotationType === 'HandWrittenSignature' || newNode.shapeAnnotationType === 'SignatureImage') {\n              this.pdfViewer.viewerBase.signatureModule.storeSignatureData(newNode.pageIndex, newNode);\n            }\n\n            if (!newNode.formFieldAnnotationType) {\n              this.pdfViewer.annotation.addAction(newNode.pageIndex, null, newNode, 'Addition', '', newNode, newNode);\n            }\n          } else {\n            if (this.pdfViewer.annotationModule) {\n              // eslint-disable-next-line max-len\n              this.pdfViewer.annotationModule.stickyNotesAnnotationModule.updateAnnotationCollection(newNode, copiedItems[0], true);\n            }\n\n            if (newNode.shapeAnnotationType === 'SignatureText' || newNode.shapeAnnotationType === 'HandWrittenSignature' || newNode.shapeAnnotationType === 'SignatureImage') {\n              this.pdfViewer.viewerBase.signatureModule.storeSignatureData(newNode.pageIndex, newNode);\n            }\n          }\n\n          var addedAnnot = this.add(newNode);\n\n          if (this.pdfViewer.formDesigner && addedAnnot.formFieldAnnotationType) {\n            this.pdfViewer.annotation.addAction(newNode.pageIndex, null, addedAnnot, 'Addition', '', addedAnnot, addedAnnot);\n          }\n\n          if ((newNode.shapeAnnotationType === 'FreeText' || newNode.enableShapeLabel) && addedAnnot) {\n            this.nodePropertyChange(addedAnnot, {});\n          }\n\n          if (addedAnnot.formFieldAnnotationType && addedAnnot.pageIndex === index) {\n            this.pdfViewer.formFieldCollection.push(addedAnnot); // eslint-disable-next-line max-len\n\n            var formField = {\n              id: addedAnnot.id,\n              name: addedAnnot.name,\n              value: addedAnnot.value,\n              type: addedAnnot.formFieldAnnotationType,\n              isReadOnly: addedAnnot.isReadonly,\n              fontFamily: addedAnnot.fontFamily,\n              // eslint-disable-next-line max-len\n              fontSize: addedAnnot.fontSize,\n              fontStyle: addedAnnot.fontStyle,\n              color: addedAnnot.color,\n              backgroundColor: addedAnnot.backgroundColor,\n              // eslint-disable-next-line max-len\n              alignment: addedAnnot.alignment,\n              visibility: addedAnnot.visibility,\n              maxLength: addedAnnot.maxLength,\n              isRequired: addedAnnot.isRequired,\n              // eslint-disable-next-line max-len\n              isPrint: addedAnnot.isPrint,\n              isSelected: addedAnnot.isSelected,\n              isChecked: addedAnnot.isChecked,\n              tooltip: addedAnnot.tooltip,\n              bounds: addedAnnot.bounds,\n              thickness: addedAnnot.thickness,\n              borderColor: addedAnnot.borderColor,\n              signatureIndicatorSettings: addedAnnot.signatureIndicatorSettings\n            };\n\n            if (addedAnnot.options && addedAnnot.options.length > 0) {\n              formField.options = addedAnnot.options;\n            }\n\n            this.pdfViewer.formFieldCollections.push(formField); // eslint-disable-next-line max-len\n\n            this.pdfViewer.formDesigner.drawHTMLContent(addedAnnot.formFieldAnnotationType, addedAnnot.wrapper.children[0], addedAnnot, addedAnnot.pageIndex, this.pdfViewer);\n          }\n\n          this.pdfViewer.select([newNode.id], this.pdfViewer.annotationSelectorSettings);\n\n          if (!addedAnnot.formFieldAnnotationType) {\n            this.pdfViewer.annotationModule.triggerAnnotationAddEvent(newNode);\n          }\n\n          ;\n        }\n      }\n\n      this.pdfViewer.renderDrawing(undefined, index);\n      this.pdfViewer.clipboardData.pasteIndex++;\n    }\n\n    this.pdfViewer.enableServerDataBinding(allowServerDataBind, true);\n  };\n\n  Drawing.prototype.splitFormFieldName = function (obj) {\n    // eslint-disable-next-line\n    var field = null;\n\n    if (obj) {\n      switch (obj.formFieldAnnotationType) {\n        case 'Textbox':\n          field = \"Textbox\";\n          break;\n\n        case 'PasswordField':\n          field = \"Password\";\n          break;\n\n        case 'Checkbox':\n          field = \"Check Box\";\n          break;\n\n        case 'RadioButton':\n          field = \"Radio Button\";\n          break;\n\n        case 'DropdownList':\n          field = \"Dropdown\";\n          break;\n\n        case 'ListBox':\n          field = \"List Box\";\n          break;\n\n        case 'SignatureField':\n          field = \"Signature\";\n          break;\n\n        case 'InitialField':\n          field = \"Initial\";\n          break;\n      }\n    }\n\n    return field;\n  };\n\n  Drawing.prototype.calculateCopyPosition = function (copy, pageDiv, events) {\n    var zoomfactor = this.pdfViewer.viewerBase.getZoomFactor();\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n\n    for (var i = 0; i < copy.vertexPoints.length; i++) {\n      if (pageDiv) {\n        if (i === 0) {\n          var pageCurrentRect = pageDiv.getBoundingClientRect();\n          x1 = copy.vertexPoints[i].x;\n          y1 = copy.vertexPoints[i].y;\n          copy.vertexPoints[i].x = (events.clientX - pageCurrentRect.left) / zoomfactor;\n          copy.vertexPoints[i].y = (events.clientY - pageCurrentRect.top) / zoomfactor;\n          x2 = copy.vertexPoints[i].x;\n          y2 = copy.vertexPoints[i].y;\n        } else {\n          copy.vertexPoints[i].x += x2 - x1;\n          copy.vertexPoints[i].y += y2 - y1;\n        }\n      }\n    }\n  };\n  /**\n   * @private\n   * @param {number} index - Specified the annotaion index.\n   * @returns {void}\n   */\n\n\n  Drawing.prototype.cut = function (index) {\n    var allowServerDataBind = this.pdfViewer.allowServerDataBinding;\n    this.pdfViewer.enableServerDataBinding(false);\n\n    if (this.pdfViewer.annotationModule) {\n      this.pdfViewer.annotationModule.removedAnnotationCollection = [];\n    }\n\n    this.pdfViewer.clipboardData.pasteIndex = 0;\n    this.pdfViewer.clipboardData.clipObject = this.copyObjects();\n    this.pdfViewer.renderDrawing(undefined, index);\n    this.pdfViewer.enableServerDataBinding(allowServerDataBind, true);\n  };\n  /**\n   * @private\n   * @param {Object[]} nodeArray - Specified the node array.\n   * @param {string} sortID - Specified the sort id.\n   * @returns {Object[]} - Returns the node array.\n   */\n\n\n  Drawing.prototype.sortByZIndex = function (nodeArray, sortID) {\n    var id = sortID ? sortID : 'zIndex';\n    nodeArray = nodeArray.sort(function (a, b) {\n      // eslint-disable-next-line\n      return a[id] - b[id];\n    });\n    return nodeArray;\n  };\n\n  return Drawing;\n}();\n\nexport { Drawing };","map":{"version":3,"names":["LineTool","ZOrderPageTable","PdfAnnotationBase","PdfFormFieldBase","Rect","Point","identityMatrix","rotateMatrix","getDiagramElement","ThumbsConstraints","scaleMatrix","cornersPointsBeforeRotation","ImageElement","DrawingElement","PathElement","createMeasureElements","randomId","Size","transformPointByMatrix","RotateTransform","TextElement","Canvas","refreshDiagramElements","DrawingRenderer","Selector","SvgRenderer","isLineShapes","setElementStype","findPointsLength","getBaseShapeAttributes","isLeader","cloneObject","getConnectorPoints","updateSegmentElement","getSegmentElement","updateDecoratorElement","getDecoratorElement","clipDecorators","initDistanceLabel","initLeaders","initLeader","getPolygonPath","initPerimeterLabel","isNullOrUndefined","isBlazor","Browser","DiagramHtmlElement","Drawing","viewer","isDynamicStamps","pdfViewer","renderer","svgRenderer","prototype","renderLabels","annotations","i","length","annotation","initObject","createNewZindexTable","pageId","zIndexTable","zIndex","push","getPageTable","undefined","notFound","setZIndex","index","obj","pageIndex","pageTable","objects","index_1","tabelLength","initNode","initLine","wrapper","measure","arrange","desiredSize","nameTable","id","formFieldAnnotationType","nodePropertyChange","bounds","width","height","canvas","initContainer","content","children","init","rotateAngle","stampAnnotationModule","updateSessionStorage","pathContent","basicElement","isStamp","annotationSettings","annotationModule","findAnnotationSettings","annotationMaxHeight","annotationMaxWidth","annotationMinHeight","annotationMinWidth","minWidth","maxWidth","minHeight","maxHeight","isAnnotationSet","initFormFields","initAnnotationObject","relativeMode","shapeAnnotationType","horizontalAlignment","viewerBase","drawSignatureWithTool","style","strokeWidth","isRectElement","verticalAlignment","htmlContent","data","enableShapeLabel","textLabel","textElement","labelContent","color","fontColor","strokeColor","labelBorderColor","fill","labelFillColor","fontSize","fontFamily","opacity","labelOpacity","thickness","vertexPoints","annotationAddMode","isDynamicStamp","cornerRadius","stampFillColor","stampStrokeColor","textele_1","italic","bold","fillColor","rotateValue","dynamicText","margin","left","bottom","setOffsetWithRespectToBounds","pathContent1","content1","pathContent11","source","transform","Self","setNodePosition","textele","x","y","toString","angle","radiusTextEle","length_1","enableImportAnnotationMeasurement","notes","measureAnnotationModule","setConversion","pixelToPointFactor","pathContent2","rectElements","signatureText","textAlign","rectElement","freeTextEle","toLowerCase","font","isBold","isItalic","isUnderline","textDecoration","isStrikeout","top","freeTextSettings","enableAutoFit","textWrapping","node","offsetX","offsetY","trasPoint","center","matrix","rotatedPoint","newPoint1","bpmnElement","container","segment","srcDecorator","targetDecorator","sourcePoint","targetPoint","segments","points","leaders","labels","measureType","findAngle","toBounds","pivot","anglePoints","accessContent","add","allowServerDataBind","allowServerDataBinding","enableServerDataBinding","formDesignerModule","formFields","remove","split","splice","getPageObjects","j","refreshCanvasDiagramLayer","renderDrawing","element","formFieldCollection","indexOf","formFieldCollections","inputField","document","getElementById","field","name","value","fontStyle","backgroundColor","alignment","isReadonly","visibility","maxLength","isRequired","isPrint","rotation","tooltip","options","isChecked","isSelected","fireFormFieldRemoveEvent","removeFieldsFromAnnotationCollections","diagramLayer","objectId","zoom","getZoomFactor","ctx","getContext","lineCap","lineJoin","lineWidth","devicePixelRatio_1","getWindowDevicePixelRatio","zoomRatio","isDevice","setTransform","clearRect","renderElement","clearHighlighter","adornerSvg","getAdornerLayerSvg","highlighter","parentNode","removeChild","getSelectorElement","diagramId","adornerLayer","adornerLayerSvg","diagramElement","elementcoll","getElementsByClassName","clearSelectorLayer","selectionRect","adornerSvgLayer","childNodes","child","renderSelector","select","currentSelector","helper","isSelect","size","selectorModel","selectedItems","actualSize","selectorElement","designerMode","renderResizeHandle","thumbsConstraints","isFormFieldSelect","isFormFieldMouseDown","isFormFieldMouseMove","fireFormFieldSelectEvent","isProgrammaticSelection","constraints","renderEndPointHandle","scale","tx","ty","tool","isSignature","isNewSignatureAdded","selectSignature","signatureName","annotName","isAddComment","isAnnotationSelect","isAnnotationMouseDown","isAnnotationMouseMove","isInkAdded","isNewStamp","annotationSelect","rotate","checkBoundaryConstraints","concat","rotateObjects","parent","includeParent","_i","objects_1","newOffset","getParentSvg","targetElement","renderBorder","selector","enableNode","isBorderTickness","isSwimlane","isSticky","shapeType","annotationSelector","JSON","parse","borderColor","selectionBorderColor","stroke","selectionBorderThickness","lineDash","selectorLineDashArray","dashArray","formField","isFormFieldSign","checkSignatureFormField","getSignBorder","getBorderSelector","class","parentSvg","drawRectangle","type","handWrittenSignatureSettings","annotationSelectorSettings","inkAnnotationSettings","rectangleSettings","borderColor_1","lineDash_1","borderColor_2","lineDash_2","circleSettings","borderColor_3","lineDash_3","radiusSettings","borderColor_4","lineDash_4","borderColor_5","lineDash_5","stickyNotesSettings","borderColor_6","lineDash_6","stampSettings","borderColor_7","lineDash_7","renderCircularHandle","cx","cy","visible","enableSelector","t","connected","canMask","ariaLabel","count","className","radius","newPoint","parentTransform","getResizerColors","getShapeSize","centerX","centerY","getShape","drawCircle","resizerSize","lineSettings","arrowSettings","distanceSettings","polygonSettings","perimeterSettings","areaSettings","volumeSettings","resizerShape","resizerBorderColor","resizerFillColor","renderRotateThumb","selectorConstraints","pivotX","pivotY","Rotate","currentZoom","nodeConstraints","isPath","isFreeText","renderPivotLine","nodeWidth","nodeHeight","allowPermission","allowedInteraction","updateAnnotationAllowedInteractions","isLock","checkIsLockSettings","getAllowedInteractions","resizerLocation","getResizerLocation","isNodeShape","ResizeNorthWest","ResizeNorthEast","ResizeSouthWest","ResizeSouthEast","ResizeNorth","ResizeSouth","ResizeWest","ResizeEast","startPoint","endPoint","drawLine","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","leaderCount","leaderHeight","initSelectorWrapper","objArray","multipleSelection","preventUpdate","checkAllowedInteractions","dragSelectedObjects","drag","_a","_b","_c","dragAnnotation","tempNode","elements","oldValues","nodes","dragControlPoint","measureChildren","segmentNumber","connector","updateEndPoint","actualObject","existingBounds","outerBounds","existingInnerBounds","updateConnector","update","i_1","names","ratio","heightRatio","fontSizeCalculation","isDirt","sourceDecoraterShapes","taregetDecoraterShapes","i_2","textNodes","i_3","i_4","i_5","i_6","i_7","i_8","borderDashArray","strokeDashArray","borderStyle","author","modifiedDate","subject","setLineDistance","path","canMeasurePath","i_9","childElement","i_10","i_11","childNodeHeight","dy","heightDiff","contString","childHeight","text","boundsWidth","context","textwidth","newsize","measureText","leader","node1","scaleSelectedItems","sx","sy","scaleAnnotation","scaleObject","sw","sh","refObject","isResize","bound","Math","max","right","refWrapper","newPosition","refPoint","getShapePoint","nodeBounds","isSkip","selectorBounds","heightDifference","clientWidth","clientHeight","top_1","eventArgs","RestrictStamp","activeElements","activePageID","getShapeBounds","shapeElement","shapeBounds","shapeCorners","shapeMiddleLeft","middleLeft","shapeTopCenter","topCenter","shapeBottomCenter","bottomCenter","shapeMiddleRight","middleRight","shapeTopLeft","topLeft","shapeTopRight","topRight","shapeBottomLeft","bottomLeft","shapeBottomRight","bottomRight","corners","w","h","cornerPoint","pivotPoint","transformMatrix","dragConnectorEnds","point","target","targetPortId","segmentPoint","checkBezierThumb","length_2","rotatedPoint1","rotatedPoint2","leaderLength","Number","parseFloat","dragSourceEnd","tarDecorator","srcPoint","anglePoint","copy","clipboardData","pasteIndex","clipObject","copyObjects","childTable","selectedItems_1","item","deleteAnnotationById","deleteAnnotation","clearSelection","deleteFormField","sortByZIndex","getNewObject","newObj","newobjs","paste","zoomfactor","copiedItems","objectTable","copiedItems_1","fieldName","splitFormFieldName","maxNumber","formDesigner","setFormFieldIndex","formFieldIndex","pageDiv","getElement","events","event","clientX","clientY","mouseLeft","mouseTop","mouseDownEvent","calculateCopyPosition","pageCurrentRect","getBoundingClientRect","newNode","contextMenuModule","previousAction","stickyNotesAnnotationModule","updateAnnotationCollection","signatureModule","storeSignatureData","addAction","addedAnnot","isReadOnly","signatureIndicatorSettings","drawHTMLContent","triggerAnnotationAddEvent","x1","y1","x2","y2","cut","removedAnnotationCollection","nodeArray","sortID","sort","a","b"],"sources":["/home/morgan/Desktop/Projets/ENT4/Jwt-Auth-pdf/react-jwt-auth/react-jwt-auth/node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/drawing/drawing.js"],"sourcesContent":["import { LineTool } from '../index';\nimport { ZOrderPageTable, PdfAnnotationBase, PdfFormFieldBase } from './pdf-annotation';\nimport { Rect, Point, identityMatrix, rotateMatrix, getDiagramElement, ThumbsConstraints, scaleMatrix, cornersPointsBeforeRotation, ImageElement } from '@syncfusion/ej2-drawings';\nimport { DrawingElement } from '@syncfusion/ej2-drawings';\nimport { PathElement } from '@syncfusion/ej2-drawings';\nimport { createMeasureElements } from '@syncfusion/ej2-drawings';\nimport { randomId } from '@syncfusion/ej2-drawings';\nimport { Size, transformPointByMatrix, RotateTransform, TextElement } from '@syncfusion/ej2-drawings';\nimport { Canvas, refreshDiagramElements, DrawingRenderer } from '@syncfusion/ej2-drawings';\nimport { Selector } from './selector';\nimport { SvgRenderer } from '@syncfusion/ej2-drawings';\nimport { isLineShapes, setElementStype, findPointsLength, getBaseShapeAttributes, isLeader, cloneObject } from './drawing-util';\nimport { getConnectorPoints, updateSegmentElement, getSegmentElement, updateDecoratorElement, getDecoratorElement, clipDecorators, initDistanceLabel, initLeaders, initLeader, getPolygonPath, initPerimeterLabel } from './connector-util';\nimport { isNullOrUndefined, isBlazor, Browser } from '@syncfusion/ej2-base';\nimport { DiagramHtmlElement } from './html-element';\n/**\n * Renderer module is used to render basic diagram elements\n *\n * @hidden\n */\nvar Drawing = /** @class */ (function () {\n    function Drawing(viewer) {\n        this.isDynamicStamps = false;\n        this.pdfViewer = viewer;\n        this.renderer = new DrawingRenderer('this.pdfViewer.element.id', false);\n        this.svgRenderer = new SvgRenderer();\n    }\n    /**\n     * @private\n     * @param {PdfViewer} viewer - Specified the pdfViewer element.\n     * @returns {void}\n     */\n    Drawing.prototype.renderLabels = function (viewer) {\n        var annotations = viewer.annotations;\n        if (annotations) {\n            for (var i = 0; i < annotations.length; i++) {\n                var annotation = annotations[i];\n                this.initObject(annotation);\n            }\n        }\n    };\n    Drawing.prototype.createNewZindexTable = function (pageId) {\n        var zIndexTable = new ZOrderPageTable();\n        this.pdfViewer.zIndex++;\n        zIndexTable.pageId = this.pdfViewer.zIndex;\n        this.pdfViewer.zIndexTable.push(zIndexTable);\n        return zIndexTable;\n    };\n    /**\n     * @private\n     * @param {number} pageId - Specified the page Id.\n     * @returns {ZOrderPageTable} - Returns the ZOrder page table.\n     */\n    Drawing.prototype.getPageTable = function (pageId) {\n        var zIndexTable;\n        if (this.pdfViewer.zIndexTable.length !== undefined) {\n            var notFound = true;\n            for (var i = 0; i < this.pdfViewer.zIndexTable.length; i++) {\n                if (this.pdfViewer.zIndexTable[i].pageId === pageId) {\n                    notFound = false;\n                    zIndexTable = this.pdfViewer.zIndexTable[i];\n                    break;\n                }\n            }\n            if (notFound) {\n                zIndexTable = this.createNewZindexTable(pageId);\n                zIndexTable.pageId = pageId;\n            }\n        }\n        else {\n            zIndexTable = this.createNewZindexTable(pageId);\n        }\n        return zIndexTable;\n    };\n    /**\n     * @private\n     * @param {number} index - Specified the page index value.\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n     * @returns {void}\n     */\n    Drawing.prototype.setZIndex = function (index, obj) {\n        if (obj.pageIndex !== undefined) {\n            var pageTable = this.getPageTable(obj.pageIndex);\n            if (obj.zIndex === -1) {\n                pageTable.zIndex++;\n                obj.zIndex = pageTable.zIndex;\n                pageTable.objects.push(obj);\n            }\n            else {\n                var index_1 = obj.zIndex;\n                var tabelLength = pageTable.objects.length;\n                obj.zIndex = tabelLength++;\n                pageTable.objects.push(obj);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel | PdfFormFieldBaseModel} obj - Specified the annotation object.\n     * @returns {PdfAnnotationBaseModel | PdfFormFieldBaseModel} - Returns the annotaion or form fields model.\n     */\n    Drawing.prototype.initObject = function (obj) {\n        //Move the common properties like zindex and id to an abstract class\n        this.setZIndex(this.pdfViewer.zIndex, obj);\n        createMeasureElements();\n        if (!isLineShapes(obj)) {\n            this.initNode(obj);\n        }\n        else {\n            this.initLine(obj);\n            obj.wrapper.measure(new Size(undefined, undefined));\n            obj.wrapper.arrange(obj.wrapper.desiredSize);\n        }\n        if (obj.wrapper === null) {\n            //Init default wrapper\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.pdfViewer.nameTable[obj.id] = obj;\n        if (obj.formFieldAnnotationType) {\n            this.nodePropertyChange(obj, { bounds: { width: obj.bounds.width, height: obj.bounds.height } });\n        }\n        //Add some methodologies to add the children of group to name table\n        return obj;\n    };\n    Drawing.prototype.initNode = function (obj) {\n        var canvas = this.initContainer(obj);\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (!content) {\n            content = this.init(obj, canvas);\n        }\n        //canvas.children.push(content);\n        canvas.rotateAngle = obj.rotateAngle;\n        // eslint-disable-next-line max-len\n        canvas.measure(new Size(obj.wrapper.width, obj.wrapper.height));\n        canvas.arrange(canvas.desiredSize);\n        if (this.isDynamicStamps) {\n            this.pdfViewer.annotation.stampAnnotationModule.updateSessionStorage(obj, null, 'dynamicStamp');\n            this.isDynamicStamps = false;\n        }\n    };\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel | PdfFormFieldBaseModel} obj - Specified the annotation object.\n     * @param {Container} canvas - Specified the canvas element.\n     * @returns {DrawingElement} - Returns the drawing element.\n     */\n    Drawing.prototype.init = function (obj, canvas) {\n        var content;\n        content = new DrawingElement();\n        var pathContent;\n        var basicElement;\n        var isStamp = false;\n        // eslint-disable-next-line\n        var annotationSettings = this.pdfViewer.annotationModule ? this.pdfViewer.annotationModule.findAnnotationSettings(obj) : {};\n        var annotationMaxHeight = 0;\n        var annotationMaxWidth = 0;\n        var annotationMinHeight = 0;\n        var annotationMinWidth = 0;\n        if (annotationSettings.minWidth || annotationSettings.maxWidth || annotationSettings.minHeight || annotationSettings.maxHeight) {\n            annotationMaxHeight = annotationSettings.maxHeight ? annotationSettings.maxHeight : 2000;\n            annotationMaxWidth = annotationSettings.maxWidth ? annotationSettings.maxWidth : 2000;\n            annotationMinHeight = annotationSettings.minHeight ? annotationSettings.minHeight : 0;\n            annotationMinWidth = annotationSettings.minWidth ? annotationSettings.minWidth : 0;\n        }\n        var isAnnotationSet = false;\n        if (annotationMinHeight || annotationMinWidth || annotationMaxHeight || annotationMaxWidth) {\n            isAnnotationSet = true;\n        }\n        if (obj.formFieldAnnotationType) {\n            content = this.initFormFields(obj, content, canvas);\n        }\n        else {\n            // eslint-disable-next-line max-len\n            content = this.initAnnotationObject(obj, pathContent, content, canvas, isStamp, basicElement, isAnnotationSet, annotationMaxHeight, annotationMaxWidth, annotationMinWidth, annotationMinHeight);\n        }\n        content.id = obj.id + '_content';\n        content.relativeMode = 'Object';\n        if (obj.shapeAnnotationType !== 'Stamp') {\n            if (obj.bounds.width !== undefined) {\n                content.width = obj.bounds.width;\n                if (isAnnotationSet) {\n                    if ((content.width < annotationMinWidth) || (content.width > annotationMaxWidth)) {\n                        if (content.width < annotationMinWidth) {\n                            content.width = annotationMinWidth;\n                        }\n                        if (content.width > annotationMaxWidth) {\n                            content.width = annotationMaxWidth;\n                        }\n                    }\n                }\n            }\n            content.horizontalAlignment = 'Stretch';\n            if (obj.bounds.height !== undefined) {\n                content.height = obj.bounds.height;\n                if (isAnnotationSet) {\n                    if ((content.height < annotationMinHeight) || (content.width > annotationMaxHeight)) {\n                        if (content.height < annotationMinHeight) {\n                            content.height = annotationMinHeight;\n                        }\n                        if (content.height > annotationMaxHeight) {\n                            content.height = annotationMaxHeight;\n                        }\n                    }\n                }\n            }\n            setElementStype(obj, content);\n            if (this.pdfViewer.viewerBase.drawSignatureWithTool && obj.shapeAnnotationType === 'SignatureText') {\n                content.style.strokeWidth = 0;\n            }\n        }\n        content.isRectElement = true;\n        content.verticalAlignment = 'Stretch';\n        return content;\n    };\n    Drawing.prototype.initFormFields = function (obj, content, canvas) {\n        switch (obj.formFieldAnnotationType) {\n            case 'Textbox':\n            case 'PasswordField':\n            case 'Checkbox':\n            case 'RadioButton':\n            case 'DropdownList':\n            case 'ListBox':\n            case 'SignatureField':\n            case 'InitialField':\n                // eslint-disable-next-line\n                var htmlContent = new DiagramHtmlElement();\n                content = htmlContent;\n                content.id = obj.id + '_content';\n                canvas.children.push(content);\n                break;\n        }\n        return content;\n    };\n    // eslint-disable-next-line\n    Drawing.prototype.initAnnotationObject = function (obj, pathContent, content, canvas, isStamp, basicElement, isAnnotationSet, annotationMaxHeight, annotationMaxWidth, annotationMinWidth, annotationMinHeight) {\n        switch (obj.shapeAnnotationType) {\n            case 'Ellipse':\n                pathContent = new PathElement();\n                pathContent.data = 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n                    'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z';\n                content = pathContent;\n                canvas.children.push(content);\n                if (obj.enableShapeLabel) {\n                    var textLabel = this.textElement(obj);\n                    textLabel.content = obj.labelContent;\n                    textLabel.style.color = obj.fontColor;\n                    textLabel.style.strokeColor = obj.labelBorderColor;\n                    textLabel.style.fill = obj.labelFillColor;\n                    textLabel.style.fontSize = obj.fontSize;\n                    textLabel.style.fontFamily = obj.fontFamily;\n                    textLabel.style.opacity = obj.labelOpacity;\n                    canvas.children.push(textLabel);\n                }\n                break;\n            case 'Path':\n                pathContent = new PathElement();\n                pathContent.data = obj.data;\n                content = pathContent;\n                canvas.children.push(content);\n                break;\n            case 'HandWrittenSignature':\n            case 'Ink':\n                pathContent = new PathElement();\n                pathContent.data = obj.data;\n                pathContent.style.strokeColor = obj.strokeColor;\n                pathContent.style.strokeWidth = obj.thickness;\n                pathContent.style.opacity = obj.opacity;\n                content = pathContent;\n                canvas.children.push(content);\n                break;\n            case 'Polygon':\n                pathContent = new PathElement();\n                pathContent.data = getPolygonPath(obj.vertexPoints);\n                content = pathContent;\n                canvas.children.push(content);\n                break;\n            case 'Stamp':\n                isStamp = true;\n                this.isDynamicStamps = true;\n                if (obj && obj.annotationAddMode && (obj.annotationAddMode === 'Existing Annotation' || obj.annotationAddMode === 'Imported Annotation')) {\n                    obj.bounds.width = obj.bounds.width - 20;\n                    obj.bounds.height = obj.bounds.height - 20;\n                }\n                if (obj.isDynamicStamp) {\n                    canvas.horizontalAlignment = 'Left';\n                    basicElement = new DrawingElement();\n                    content = basicElement;\n                    content.cornerRadius = 10;\n                    content.style.fill = obj.stampFillColor;\n                    content.style.strokeColor = obj.stampStrokeColor;\n                    canvas.children.push(content);\n                    var textele_1 = this.textElement(obj);\n                    textele_1 = new TextElement();\n                    textele_1.style.fontFamily = 'Helvetica';\n                    textele_1.style.fontSize = 14;\n                    textele_1.style.italic = true;\n                    textele_1.style.bold = true;\n                    textele_1.style.color = obj.fillColor;\n                    textele_1.rotateValue = undefined;\n                    textele_1.content = obj.dynamicText;\n                    textele_1.relativeMode = 'Point';\n                    textele_1.margin.left = 10;\n                    textele_1.margin.bottom = -7;\n                    textele_1.setOffsetWithRespectToBounds(0, 0.57, null);\n                    textele_1.relativeMode = 'Point';\n                    canvas.children.push(textele_1);\n                    // eslint-disable-next-line\n                    var pathContent1 = new PathElement();\n                    pathContent1.id = randomId() + '_stamp';\n                    pathContent1.data = obj.data;\n                    pathContent1.width = obj.bounds.width;\n                    if (isAnnotationSet && (obj.bounds.width > annotationMaxWidth)) {\n                        pathContent1.width = annotationMaxWidth;\n                        obj.bounds.width = annotationMaxWidth;\n                    }\n                    pathContent1.height = obj.bounds.height / 2;\n                    if (isAnnotationSet && (obj.bounds.height > annotationMaxHeight)) {\n                        pathContent1.height = annotationMaxHeight / 2;\n                        obj.bounds.height = annotationMaxHeight / 2;\n                    }\n                    pathContent1.rotateValue = undefined;\n                    pathContent1.margin.left = 10;\n                    pathContent1.margin.bottom = -5;\n                    pathContent1.relativeMode = 'Point';\n                    pathContent1.setOffsetWithRespectToBounds(0, 0.1, null);\n                    // eslint-disable-next-line\n                    var content1 = pathContent1;\n                    pathContent1.style.fill = obj.fillColor;\n                    pathContent1.style.strokeColor = obj.strokeColor;\n                    pathContent1.style.opacity = obj.opacity;\n                    content.width = obj.bounds.width + 20;\n                    content.height = obj.bounds.height + 20;\n                    content.style.opacity = obj.opacity;\n                    canvas.children.push(content1);\n                }\n                else {\n                    canvas.horizontalAlignment = 'Left';\n                    basicElement = new DrawingElement();\n                    content = basicElement;\n                    content.cornerRadius = 10;\n                    content.style.fill = obj.stampFillColor;\n                    content.style.strokeColor = obj.stampStrokeColor;\n                    canvas.children.push(content);\n                    // eslint-disable-next-line\n                    var pathContent1 = new PathElement();\n                    pathContent1.id = randomId() + '_stamp';\n                    pathContent1.data = obj.data;\n                    pathContent1.width = obj.bounds.width;\n                    if (isAnnotationSet && (obj.bounds.width > annotationMaxWidth)) {\n                        pathContent1.width = annotationMaxWidth;\n                        obj.bounds.width = annotationMaxWidth;\n                    }\n                    pathContent1.height = obj.bounds.height;\n                    if (isAnnotationSet && (obj.bounds.height > annotationMaxHeight)) {\n                        pathContent1.height = annotationMaxHeight;\n                        obj.bounds.height = annotationMaxHeight;\n                    }\n                    pathContent1.minWidth = pathContent1.width / 2;\n                    pathContent1.minHeight = pathContent1.height / 2;\n                    // eslint-disable-next-line\n                    var content1 = pathContent1;\n                    pathContent1.style.fill = obj.fillColor;\n                    pathContent1.style.strokeColor = obj.strokeColor;\n                    pathContent1.style.opacity = obj.opacity;\n                    content.width = obj.bounds.width + 20;\n                    content.height = obj.bounds.height + 20;\n                    content.minWidth = pathContent1.width / 2;\n                    content.minHeight = pathContent1.height / 2;\n                    content.style.opacity = obj.opacity;\n                    canvas.children.push(content1);\n                    canvas.minHeight = content.minHeight + 20;\n                    canvas.minWidth = content.minWidth + 20;\n                }\n                break;\n            case 'Image':\n            case 'SignatureImage':\n                // eslint-disable-next-line\n                var pathContent11 = new ImageElement();\n                pathContent11.source = obj.data;\n                content = pathContent11;\n                content.style.strokeWidth = 0;\n                canvas.children.push(content);\n                break;\n            case 'Rectangle':\n                basicElement = new DrawingElement();\n                content = basicElement;\n                canvas.children.push(content);\n                if (obj.enableShapeLabel) {\n                    var textLabel = this.textElement(obj);\n                    textLabel.content = obj.labelContent;\n                    textLabel.style.color = obj.fontColor;\n                    textLabel.style.strokeColor = obj.labelBorderColor;\n                    textLabel.style.fill = obj.labelFillColor;\n                    textLabel.style.fontSize = obj.fontSize;\n                    textLabel.style.fontFamily = obj.fontFamily;\n                    textLabel.style.opacity = obj.labelOpacity;\n                    canvas.children.push(textLabel);\n                }\n                break;\n            case 'Perimeter':\n                pathContent = new PathElement();\n                pathContent.data = 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n                    'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z';\n                content = pathContent;\n                setElementStype(obj, pathContent);\n                canvas.children.push(content);\n                basicElement = new DrawingElement();\n                basicElement.id = 'perimeter_' + randomId();\n                basicElement.height = .2;\n                basicElement.width = .2;\n                basicElement.transform = RotateTransform.Self;\n                basicElement.horizontalAlignment = 'Stretch';\n                this.setNodePosition(basicElement, obj);\n                basicElement.rotateAngle = obj.rotateAngle;\n                setElementStype(obj, basicElement);\n                canvas.children.push(basicElement);\n                // eslint-disable-next-line\n                var textele = this.textElement(obj);\n                textele = new TextElement();\n                textele.content = textele.content = findPointsLength([\n                    { x: obj.bounds.x, y: obj.bounds.y },\n                    { x: obj.bounds.x + obj.bounds.width, y: obj.bounds.y + obj.bounds.height }\n                ]).toString();\n                textele.rotateValue = { y: -10, angle: obj.rotateAngle };\n                canvas.children.push(textele);\n                break;\n            case 'Radius':\n                pathContent = new PathElement();\n                pathContent.data = 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n                    'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z';\n                content = pathContent;\n                setElementStype(obj, pathContent);\n                canvas.children.push(content);\n                basicElement = new DrawingElement();\n                basicElement.id = 'radius_' + randomId();\n                basicElement.height = .2;\n                basicElement.width = obj.bounds.width / 2;\n                basicElement.transform = RotateTransform.Self;\n                this.setNodePosition(basicElement, obj);\n                basicElement.rotateAngle = obj.rotateAngle;\n                setElementStype(obj, basicElement);\n                canvas.children.push(basicElement);\n                // eslint-disable-next-line\n                var radiusTextEle = this.textElement(obj);\n                if (obj.enableShapeLabel) {\n                    radiusTextEle.style.color = obj.fontColor;\n                    radiusTextEle.style.strokeColor = obj.labelBorderColor;\n                    radiusTextEle.style.fill = obj.labelFillColor;\n                    radiusTextEle.style.fontSize = obj.fontSize;\n                    radiusTextEle.style.fontFamily = obj.fontFamily;\n                    radiusTextEle.style.opacity = obj.labelOpacity;\n                }\n                // eslint-disable-next-line\n                var length_1 = findPointsLength([\n                    { x: obj.bounds.x, y: obj.bounds.y },\n                    { x: obj.bounds.x + obj.bounds.width, y: obj.bounds.y + obj.bounds.height }\n                ]);\n                if (!this.pdfViewer.enableImportAnnotationMeasurement && obj.notes && obj.notes !== '') {\n                    radiusTextEle.content = obj.notes;\n                }\n                else {\n                    // eslint-disable-next-line max-len\n                    radiusTextEle.content = this.pdfViewer.annotation.measureAnnotationModule.setConversion((obj.bounds.width / 2) * this.pdfViewer.annotation.measureAnnotationModule.pixelToPointFactor, obj);\n                }\n                radiusTextEle.rotateValue = { y: -10, x: obj.bounds.width / 4, angle: obj.rotateAngle };\n                canvas.children.push(radiusTextEle);\n                break;\n            case 'StickyNotes':\n                // eslint-disable-next-line\n                var pathContent2 = new ImageElement();\n                pathContent2.source = obj.data;\n                pathContent2.width = obj.bounds.width;\n                pathContent2.height = obj.bounds.height;\n                pathContent2.style.strokeColor = obj.strokeColor;\n                pathContent2.style.strokeWidth = 0;\n                content = pathContent2;\n                canvas.children.push(content);\n                break;\n            case 'SignatureText':\n                //eslint-disable-next-line\n                var rectElements = new DrawingElement();\n                rectElements.style.strokeWidth = 0;\n                content = rectElements;\n                content.style.strokeWidth = 0;\n                canvas.style.strokeWidth = 0;\n                canvas.children.push(content);\n                // eslint-disable-next-line\n                var signatureText = this.textElement(obj);\n                signatureText.style.fontFamily = obj.fontFamily;\n                signatureText.style.fontSize = obj.fontSize;\n                signatureText.style.textAlign = 'Left';\n                signatureText.rotateValue = undefined;\n                signatureText.content = obj.data;\n                signatureText.style.strokeWidth = 0;\n                canvas.children.push(signatureText);\n                break;\n            case 'FreeText':\n                // eslint-disable-next-line\n                var rectElement = new DrawingElement();\n                content = rectElement;\n                canvas.children.push(content);\n                // eslint-disable-next-line\n                var freeTextEle = this.textElement(obj);\n                freeTextEle = new TextElement();\n                freeTextEle.style.fontFamily = obj.fontFamily;\n                freeTextEle.style.fontSize = obj.fontSize;\n                freeTextEle.style.textAlign = 'Left';\n                if (obj.textAlign.toLowerCase() === 'center') {\n                    freeTextEle.style.textAlign = 'Center';\n                }\n                else if (obj.textAlign.toLowerCase() === 'right') {\n                    freeTextEle.style.textAlign = 'Right';\n                }\n                else if (obj.textAlign.toLowerCase() === 'justify') {\n                    freeTextEle.style.textAlign = 'Justify';\n                }\n                freeTextEle.style.color = obj.fontColor;\n                freeTextEle.style.bold = obj.font.isBold;\n                freeTextEle.style.italic = obj.font.isItalic;\n                if (obj.font.isUnderline === true) {\n                    freeTextEle.style.textDecoration = 'Underline';\n                }\n                else if (obj.font.isStrikeout === true) {\n                    freeTextEle.style.textDecoration = 'LineThrough';\n                }\n                freeTextEle.rotateValue = undefined;\n                freeTextEle.content = obj.dynamicText;\n                freeTextEle.style.opacity = obj.opacity;\n                freeTextEle.margin.left = 4;\n                freeTextEle.margin.top = 5 * (obj.fontSize / 16);\n                if (this.pdfViewer.freeTextSettings.enableAutoFit) {\n                    freeTextEle.style.textWrapping = 'Wrap';\n                }\n                else {\n                    freeTextEle.style.textWrapping = 'WrapWithOverflow';\n                }\n                freeTextEle.relativeMode = 'Point';\n                freeTextEle.setOffsetWithRespectToBounds(0, 0, null);\n                freeTextEle.relativeMode = 'Point';\n                canvas.children.push(freeTextEle);\n                break;\n        }\n        content.id = obj.id + '_content';\n        content.relativeMode = 'Object';\n        if (!isStamp) {\n            if (obj.bounds.width !== undefined) {\n                content.width = obj.bounds.width;\n                if (isAnnotationSet) {\n                    if ((content.width < annotationMinWidth) || (content.width > annotationMaxWidth)) {\n                        if (content.width < annotationMinWidth) {\n                            content.width = annotationMinWidth;\n                        }\n                        if (content.width > annotationMaxWidth) {\n                            content.width = annotationMaxWidth;\n                        }\n                    }\n                }\n            }\n            content.horizontalAlignment = 'Stretch';\n            if (obj.bounds.height !== undefined) {\n                content.height = obj.bounds.height;\n                if (isAnnotationSet) {\n                    if ((content.height < annotationMinHeight) || (content.width > annotationMaxHeight)) {\n                        if (content.height < annotationMinHeight) {\n                            content.height = annotationMinHeight;\n                        }\n                        if (content.height > annotationMaxHeight) {\n                            content.height = annotationMaxHeight;\n                        }\n                    }\n                }\n            }\n            setElementStype(obj, content);\n        }\n        content.isRectElement = true;\n        content.verticalAlignment = 'Stretch';\n        return content;\n    };\n    Drawing.prototype.textElement = function (obj) {\n        var textele = new TextElement();\n        setElementStype(obj, textele);\n        textele.horizontalAlignment = 'Center';\n        obj.shapeAnnotationType === 'SignatureText' ? textele.verticalAlignment = 'Center' : textele.verticalAlignment = 'Top';\n        textele.relativeMode = 'Object';\n        textele.setOffsetWithRespectToBounds(.5, .5, 'Absolute');\n        return textele;\n    };\n    /**\n     * @private\n     * @param {DrawingElement} obj - Specified the drawing element.\n     * @param {PdfAnnotationBaseModel} node - Specified the node element.\n     * @returns {void}\n     */\n    Drawing.prototype.setNodePosition = function (obj, node) {\n        if (node.shapeAnnotationType === 'Perimeter') {\n            obj.offsetX = node.bounds.x + node.bounds.width / 2;\n            obj.offsetY = node.bounds.y + node.bounds.height / 2;\n        }\n        else if (node.shapeAnnotationType === 'Radius') {\n            // eslint-disable-next-line max-len\n            var trasPoint = { x: node.bounds.x + (node.bounds.width / 2) + (node.bounds.width / 4), y: node.bounds.y + (node.bounds.height / 2) };\n            var center = { x: (node.bounds.x + (node.bounds.width / 2)), y: (node.bounds.y + (node.bounds.height / 2)) };\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, node.rotateAngle, center.x, center.y);\n            var rotatedPoint = transformPointByMatrix(matrix, trasPoint);\n            var newPoint1 = { x: rotatedPoint.x, y: rotatedPoint.y };\n            obj.offsetX = newPoint1.x;\n            obj.offsetY = newPoint1.y;\n            obj.width = node.bounds.width / 2;\n        }\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n     * @returns {Container} - Returns the container element.\n     */\n    Drawing.prototype.initContainer = function (obj) {\n        if (!obj.id) {\n            obj.id = randomId();\n        }\n        // Creates canvas element\n        var canvas = new Canvas();\n        canvas.id = obj.id;\n        canvas.offsetX = obj.bounds.x + (obj.bounds.width * 0.5);\n        canvas.offsetY = obj.bounds.y + (obj.bounds.height * 0.5);\n        canvas.style.fill = 'transparent';\n        canvas.style.strokeColor = 'transparent';\n        canvas.rotateAngle = obj.rotateAngle;\n        obj.wrapper = canvas;\n        return canvas;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n     * @returns {Canvas} - Returns the canvas element.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Drawing.prototype.initLine = function (obj) {\n        if (!obj.id) {\n            obj.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = obj.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        if (obj.vertexPoints.length) {\n            obj.sourcePoint = obj.vertexPoints[0];\n            obj.targetPoint = obj.vertexPoints[obj.vertexPoints.length - 1];\n            for (var i = 0; i < obj.vertexPoints.length; i++) {\n                if (i !== 0 && i !== obj.vertexPoints.length - 1) {\n                    obj.segments.push(obj.vertexPoints[i]);\n                }\n            }\n        }\n        segment = getSegmentElement(obj, segment);\n        var points = [];\n        points = getConnectorPoints(obj);\n        //  points = this.clipDecorators(this, points);\n        var leaders = [];\n        var labels = [];\n        if (obj.shapeAnnotationType === 'Distance') {\n            leaders = initLeaders(obj, points);\n            labels = initDistanceLabel(obj, points, this.pdfViewer.annotation.measureAnnotationModule, this.pdfViewer);\n        }\n        if ((obj.shapeAnnotationType === 'Line' || obj.shapeAnnotationType === 'LineWidthArrowHead') && obj.measureType === 'Perimeter') {\n            labels = initPerimeterLabel(obj, points, this.pdfViewer.annotation.measureAnnotationModule, this.pdfViewer);\n        }\n        if (obj.enableShapeLabel === true && !(obj.shapeAnnotationType === 'Distance') && !(obj.measureType === 'Perimeter')) {\n            var angle = Point.findAngle(points[0], points[1]);\n            var textele = this.textElement(obj);\n            textele.id = randomId();\n            if (!this.pdfViewer.enableImportAnnotationMeasurement && obj.notes && obj.notes !== '') {\n                textele.content = obj.notes;\n            }\n            else {\n                textele.content = obj.labelContent;\n            }\n            textele.style.strokeColor = obj.labelBorderColor;\n            textele.style.fill = obj.labelFillColor;\n            textele.style.fontSize = obj.fontSize;\n            textele.style.color = obj.fontColor;\n            textele.style.fontFamily = obj.fontFamily;\n            textele.style.opacity = obj.labelOpacity;\n            textele.rotateValue = { y: -10, angle: angle };\n            labels.push(textele);\n        }\n        points = clipDecorators(obj, points);\n        var bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        var anglePoints = obj.vertexPoints;\n        var accessContent = 'getDescription';\n        // eslint-disable-next-line max-len\n        if (obj.shapeAnnotationType === 'Line' || obj.shapeAnnotationType === 'LineWidthArrowHead' || obj.shapeAnnotationType === 'Distance') {\n            srcDecorator = getDecoratorElement(obj, points[0], anglePoints[1], true);\n            targetDecorator = getDecoratorElement(obj, points[points.length - 1], anglePoints[anglePoints.length - 2], false);\n        }\n        srcDecorator.id = obj.id + '_srcDec';\n        targetDecorator.id = obj.id + '_tarDec';\n        /* eslint-disable @typescript-eslint/dot-notation */\n        segment.style['fill'] = 'transparent';\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [];\n        setElementStype(obj, segment);\n        container.children.push(segment);\n        if (leaders.length > 0) {\n            for (var i = 0; i < leaders.length; i++) {\n                container.children.push(leaders[i]);\n            }\n        }\n        if (labels.length > 0) {\n            for (var i = 0; i < labels.length; i++) {\n                container.children.push(labels[i]);\n            }\n        }\n        container.children.push(srcDecorator);\n        container.children.push(targetDecorator);\n        if (obj.shapeAnnotationType === 'LineWidthArrowHead') {\n            container.children[1].width = 12 * obj.thickness;\n            container.children[1].height = 12 * obj.thickness;\n            container.children[2].width = 12 * obj.thickness;\n            container.children[2].height = 12 * obj.thickness;\n        }\n        container.id = obj.id;\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        points = getConnectorPoints(obj);\n        obj.wrapper = container;\n        return container;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n     * @returns {PdfAnnotationBaseModel} - Returns the added annotaion object.\n     */\n    Drawing.prototype.add = function (obj) {\n        var allowServerDataBind = this.pdfViewer.allowServerDataBinding;\n        this.pdfViewer.enableServerDataBinding(false);\n        if (obj.formFieldAnnotationType && this.pdfViewer.formDesignerModule) {\n            obj = new PdfFormFieldBase(this.pdfViewer, 'formFields', obj, true);\n            obj = this.initObject(obj);\n            this.pdfViewer.formFields.push(obj);\n        }\n        else {\n            obj = new PdfAnnotationBase(this.pdfViewer, 'annotations', obj, true);\n            obj = this.initObject(obj);\n            this.pdfViewer.annotations.push(obj);\n        }\n        this.pdfViewer.enableServerDataBinding(allowServerDataBind, true);\n        return obj;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n     * @returns {void}\n     */\n    Drawing.prototype.remove = function (obj) {\n        var allowServerDataBind = this.pdfViewer.allowServerDataBinding;\n        this.pdfViewer.enableServerDataBinding(false);\n        var index = obj.pageIndex;\n        for (var i = 0; i < this.pdfViewer.annotations.length; i++) {\n            var annotation = this.pdfViewer.annotations[i];\n            if ((annotation.id && (annotation.id === obj.id || annotation.id.split('_')[0] === obj.id)) || (annotation.wrapper && annotation.wrapper.id === obj.id)) {\n                this.pdfViewer.annotations.splice(i, 1);\n                var objects = this.getPageObjects(obj.pageIndex);\n                for (var j = 0; j < objects.length; j++) {\n                    if (objects[j].id === obj.id) {\n                        objects.splice(j, 1);\n                        if (obj.shapeAnnotationType === 'Path' || obj.shapeAnnotationType === 'SignatureImage' || obj.shapeAnnotationType === 'SignatureText') {\n                            this.refreshCanvasDiagramLayer(undefined, index, obj.id);\n                        }\n                        else {\n                            this.pdfViewer.renderDrawing(undefined, index);\n                        }\n                    }\n                }\n                // need to add code snippet to remove from z index table   \n            }\n        }\n        for (var i = 0; i < this.pdfViewer.formFields.length; i++) {\n            var element = this.pdfViewer.formFields[i];\n            if (element.id === obj.id || element.wrapper.id === obj.id) {\n                this.pdfViewer.formFields.splice(i, 1);\n                if (this.pdfViewer.formDesignerModule && obj.formFieldAnnotationType) {\n                    this.pdfViewer.formFieldCollection.splice(i, 1);\n                }\n                var objects = this.getPageObjects(obj.pageIndex);\n                for (var j = 0; j < objects.length; j++) {\n                    if (objects[j].id === obj.id) {\n                        objects.splice(j, 1);\n                        break;\n                    }\n                    if (objects[j] && objects[j].id && objects[j].id.indexOf(obj.id) !== -1) {\n                        objects.splice(j, 1);\n                    }\n                }\n            }\n        }\n        if (obj.formFieldAnnotationType === 'Textbox' || obj.formFieldAnnotationType === 'Checkbox' || obj.formFieldAnnotationType === 'RadioButton'\n            || obj.formFieldAnnotationType === 'PasswordField' || obj.formFieldAnnotationType === 'DropdownList' || obj.formFieldAnnotationType === 'ListBox' || obj.formFieldAnnotationType === 'SignatureField' || obj.formFieldAnnotationType === 'InitialField') {\n            for (var i = 0; i < this.pdfViewer.formFieldCollections.length; i++) {\n                // eslint-disable-next-line\n                var element = this.pdfViewer.formFieldCollections[i];\n                if (element.id === obj.id) {\n                    this.pdfViewer.formFieldCollections.splice(i, 1);\n                }\n            }\n        }\n        if (obj.formFieldAnnotationType === 'Textbox' || obj.formFieldAnnotationType === 'Checkbox' || obj.formFieldAnnotationType === 'RadioButton'\n            || obj.formFieldAnnotationType === 'PasswordField' || obj.formFieldAnnotationType === 'DropdownList' || obj.formFieldAnnotationType === 'ListBox' || obj.formFieldAnnotationType === 'SignatureField' || obj.formFieldAnnotationType === 'InitialField') {\n            // eslint-disable-next-line\n            var inputField = document.getElementById('form_field_' + obj.id + '_content_html_element');\n            if (inputField) {\n                inputField.remove();\n                this.pdfViewer.renderDrawing(undefined, index);\n                var field = {\n                    // eslint-disable-next-line\n                    name: obj.name, id: obj.id, value: obj.value, fontFamily: obj.fontFamily, fontSize: obj.fontSize, fontStyle: obj.fontStyle,\n                    // eslint-disable-next-line\n                    color: obj.color, backgroundColor: obj.backgroundColor, alignment: obj.alignment, isReadonly: obj.isReadonly, visibility: obj.visibility,\n                    // eslint-disable-next-line\n                    maxLength: obj.maxLength, isRequired: obj.isRequired, isPrint: obj.isPrint, rotation: obj.rotateAngle, tooltip: obj.tooltip,\n                    // eslint-disable-next-line\n                    options: obj.options, isChecked: obj.isChecked, isSelected: obj.isSelected\n                };\n                this.pdfViewer.fireFormFieldRemoveEvent('formFieldRemove', field, obj.pageIndex);\n                this.pdfViewer.formDesignerModule.removeFieldsFromAnnotationCollections(obj.id);\n            }\n        }\n        this.pdfViewer.enableServerDataBinding(allowServerDataBind, true);\n    };\n    /**\n     * @private\n     * @param {number} pageIndex - Specified the page index.\n     * @returns {PdfAnnotationBaseModel[]} - Returns the annotation base model collections.\n     */\n    Drawing.prototype.getPageObjects = function (pageIndex) {\n        var pageTable = this.getPageTable(pageIndex);\n        return pageTable.objects;\n    };\n    /**\n     * @private\n     * @param {HTMLCanvasElement} diagramLayer - Specified the diagram layer element.\n     * @param {number} pageIndex - Specified the page index.\n     * @param {string} objectId - Specified the object id.\n     * @returns {void}\n     */\n    Drawing.prototype.refreshCanvasDiagramLayer = function (diagramLayer, pageIndex, objectId) {\n        if (!diagramLayer) {\n            diagramLayer = document.getElementById(this.pdfViewer.element.id + '_annotationCanvas_' + pageIndex);\n        }\n        if (diagramLayer) {\n            var zoom = this.pdfViewer.viewerBase.getZoomFactor();\n            var width = diagramLayer.width / zoom;\n            var height = diagramLayer.height / zoom;\n            var ctx = diagramLayer.getContext('2d');\n            ctx.lineCap = \"round\";\n            ctx.lineJoin = \"round\";\n            if (zoom < 1) {\n                ctx.lineWidth = ctx.lineWidth / zoom;\n            }\n            var devicePixelRatio_1 = this.pdfViewer.viewerBase.getWindowDevicePixelRatio();\n            var zoomRatio = zoom * devicePixelRatio_1;\n            if (!Browser.isDevice || (Browser.isDevice && zoom <= 0.7)) {\n                ctx.setTransform(zoomRatio, 0, 0, zoomRatio, 0, 0);\n            }\n            else {\n                ctx.setTransform(zoom, 0, 0, zoom, 0, 0);\n            }\n            ctx.clearRect(0, 0, width, height);\n            var objects = this.getPageObjects(pageIndex);\n            for (var i = 0; i < objects.length; i++) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var renderElement = void 0;\n                if (diagramLayer.id === this.pdfViewer.element.id + '_print_annotation_layer_' + pageIndex) {\n                    if (objects[i].isPrint) {\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        renderElement = this.pdfViewer.nameTable[objects[i].id].wrapper;\n                        if (!isNullOrUndefined(renderElement)) {\n                            refreshDiagramElements(diagramLayer, [renderElement], this.renderer);\n                        }\n                    }\n                }\n                else {\n                    // eslint-disable-next-line\n                    renderElement = this.pdfViewer.nameTable[objects[i].id].wrapper;\n                    refreshDiagramElements(diagramLayer, [renderElement], this.renderer);\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} index - Specified the page index.\n     * @returns {void}\n     */\n    Drawing.prototype.clearHighlighter = function (index) {\n        var adornerSvg = this.getAdornerLayerSvg(this.pdfViewer.element.id + index + '_diagramAdornerLayer', index);\n        if (adornerSvg) {\n            var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n            if (highlighter) {\n                highlighter.parentNode.removeChild(highlighter);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {string} diagramId - Specified the diagram id.\n     * @param {number} index - Specified the page index.\n     * @returns {SVGSVGElement} Return the svg element.\n     */\n    Drawing.prototype.getSelectorElement = function (diagramId, index) {\n        var adornerLayer = null;\n        var adornerSvg = this.getAdornerLayerSvg(diagramId, index);\n        if (adornerSvg) {\n            adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n        }\n        return adornerLayer;\n    };\n    /**\n     * @private\n     * @param {string} diagramId - Specified the diagram id.\n     * @param {number} index - Specified the page index.\n     * @returns {SVGSVGElement} Return the svg element.\n     */\n    Drawing.prototype.getAdornerLayerSvg = function (diagramId, index) {\n        var adornerLayerSvg = null;\n        var diagramElement = getDiagramElement(diagramId + index + '_diagramAdornerLayer');\n        // eslint-disable-next-line\n        var elementcoll;\n        if (diagramElement) {\n            elementcoll = diagramElement.getElementsByClassName('e-adorner-layer' + index);\n            adornerLayerSvg = elementcoll[0];\n        }\n        return adornerLayerSvg;\n    };\n    /**\n     * @private\n     * @param {number} index - Specified the page index.\n     * @returns {void}\n     */\n    Drawing.prototype.clearSelectorLayer = function (index) {\n        var adornerSvg = this.getAdornerLayerSvg(this.pdfViewer.element.id, index);\n        if (adornerSvg) {\n            var selectionRect = adornerSvg.getElementById(this.pdfViewer.adornerSvgLayer.id + '_selected_region');\n            if (selectionRect) {\n                selectionRect.parentNode.removeChild(selectionRect);\n            }\n            this.clearHighlighter(index);\n            var childNodes = this.getSelectorElement(this.pdfViewer.element.id, index).childNodes;\n            var child = void 0;\n            for (var i = childNodes.length; i > 0; i--) {\n                child = childNodes[i - 1];\n                child.parentNode.removeChild(child);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} select - Specified the select value.\n     * @param {AnnotationSelectorSettingsModel} currentSelector - Specified the annotation selector element.\n     * @param {PdfAnnotationBaseModel} helper - Specified the annotation helper element.\n     * @param {boolean} isSelect - Specified the is select or not.\n     * @returns {void}\n     */\n    // eslint-disable-next-line max-len\n    Drawing.prototype.renderSelector = function (select, currentSelector, helper, isSelect) {\n        if (!helper || isSelect) {\n            var size = new Size();\n            var selectorModel = this.pdfViewer.selectedItems;\n            this.clearSelectorLayer(select);\n            if (selectorModel.wrapper) {\n                selectorModel.wrapper.measure(size);\n                var zoom = this.pdfViewer.viewerBase.getZoomFactor();\n                selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n                selectorModel.width = selectorModel.wrapper.actualSize.width;\n                selectorModel.height = selectorModel.wrapper.actualSize.height;\n                selectorModel.offsetX = selectorModel.wrapper.offsetX;\n                selectorModel.offsetY = selectorModel.wrapper.offsetY;\n                if (selectorModel.annotations.length === 1) {\n                    selectorModel.rotateAngle = selectorModel.annotations[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.annotations[0].rotateAngle;\n                    //selectorModel.pivot = selectorModel.annotations[0].pivot;\n                }\n                var bounds = selectorModel.wrapper.bounds;\n                // eslint-disable-next-line\n                var selectorElement = void 0;\n                if (selectorModel.formFields.length) {\n                    for (var i = 0; i < selectorModel.formFields.length; i++) {\n                        var node = selectorModel.formFields[i];\n                        selectorElement = this.getSelectorElement(this.pdfViewer.element.id, select);\n                        if (selectorElement && node.pageIndex === select && this.pdfViewer.designerMode) {\n                            this.renderResizeHandle(node.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, zoom, undefined, undefined, undefined, false, true, null, null, currentSelector);\n                        }\n                        if (this.pdfViewer.formDesignerModule && node.formFieldAnnotationType) {\n                            // eslint-disable-next-line max-len\n                            if (!this.pdfViewer.viewerBase.isFormFieldSelect && !this.pdfViewer.viewerBase.isFormFieldMouseDown && !this.pdfViewer.viewerBase.isFormFieldMouseMove) {\n                                this.pdfViewer.viewerBase.isFormFieldSelect = true;\n                                var field = {\n                                    // eslint-disable-next-line\n                                    name: node.name, id: node.id, value: node.value, fontFamily: node.fontFamily, fontSize: node.fontSize, fontStyle: node.fontStyle, color: node.color, backgroundColor: node.backgroundColor, alignment: node.alignment, isReadonly: node.isReadonly, visibility: node.visibility,\n                                    // eslint-disable-next-line\n                                    maxLength: node.maxLength, isRequired: node.isRequired, isPrint: node.isPrint, rotation: node.rotateAngle, tooltip: node.tooltip,\n                                    // eslint-disable-next-line\n                                    options: node.options, isChecked: node.isChecked, isSelected: node.isSelected\n                                };\n                                this.pdfViewer.fireFormFieldSelectEvent('formFieldSelect', field, node.pageIndex, this.pdfViewer.formDesignerModule.isProgrammaticSelection);\n                            }\n                        }\n                    }\n                }\n                if (selectorModel.annotations.length) {\n                    for (var j = 0; j < selectorModel.annotations.length; j++) {\n                        var node = selectorModel.annotations[j];\n                        selectorElement = this.getSelectorElement(this.pdfViewer.element.id, select);\n                        var constraints = true;\n                        if (selectorElement && node.pageIndex === select) {\n                            if (node.shapeAnnotationType === 'Distance' || node.shapeAnnotationType === 'Line' ||\n                                node.shapeAnnotationType === 'LineWidthArrowHead' || node.shapeAnnotationType === 'Polygon') {\n                                this.renderEndPointHandle(node, selectorElement, selectorModel.thumbsConstraints, { scale: zoom, tx: 0, ty: 0 }, undefined, undefined, true, currentSelector);\n                            }\n                            else {\n                                if (node.shapeAnnotationType === 'StickyNotes') {\n                                    this.renderResizeHandle(node.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, zoom, undefined, undefined, undefined, false, true, null, null, currentSelector);\n                                }\n                                else {\n                                    if (this.pdfViewer.tool !== 'Stamp') {\n                                        // eslint-disable-next-line\n                                        var isSignature = node.shapeAnnotationType === 'Path' || node.formFieldAnnotationType === 'SignatureField' || node.formFieldAnnotationType === 'InitialField';\n                                        this.renderResizeHandle(node.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, zoom, undefined, undefined, undefined, node.shapeAnnotationType === 'Stamp', false, isSignature, (node.shapeAnnotationType === 'FreeText' || node.shapeAnnotationType === 'HandWrittenSignature' || node.shapeAnnotationType === 'SignatureImage' || node.shapeAnnotationType === 'Image' || node.shapeAnnotationType === 'SignatureText'), currentSelector);\n                                    }\n                                }\n                            }\n                            if (!this.pdfViewer.viewerBase.isNewSignatureAdded && (node.shapeAnnotationType === 'HandWrittenSignature' || node.shapeAnnotationType === 'SignatureText' || node.shapeAnnotationType === 'SignatureImage')) {\n                                this.pdfViewer.annotationModule.selectSignature(node.signatureName, node.pageIndex, node);\n                            }\n                            if (this.pdfViewer.formDesignerModule && node.formFieldAnnotationType) {\n                                // eslint-disable-next-line max-len\n                                if (!this.pdfViewer.viewerBase.isFormFieldSelect && !this.pdfViewer.viewerBase.isFormFieldMouseDown && !this.pdfViewer.viewerBase.isFormFieldMouseMove) {\n                                    this.pdfViewer.viewerBase.isFormFieldSelect = true;\n                                    var field = {\n                                        // eslint-disable-next-line\n                                        value: node.value, fontFamily: node.fontFamily, fontSize: node.fontSize, fontStyle: node.fontStyle,\n                                        // eslint-disable-next-line\n                                        color: node.color, backgroundColor: node.backgroundColor, alignment: node.alignment, isReadonly: node.isReadonly, visibility: node.visibility,\n                                        // eslint-disable-next-line\n                                        maxLength: node.maxLength, isRequired: node.isRequired, isPrint: node.isPrint, rotation: node.rotateAngle, tooltip: node.tooltip,\n                                        // eslint-disable-next-line\n                                        options: node.options, isChecked: node.isChecked, isSelected: node.isSelected\n                                    };\n                                    this.pdfViewer.fireFormFieldSelectEvent('formFieldSelect', field, node.pageIndex, this.pdfViewer.formDesignerModule.isProgrammaticSelection);\n                                }\n                            }\n                            if (node.annotName !== '' && node.annotName !== 'SignatureText') {\n                                if (helper && (node === helper) && !node.formFieldAnnotationType) {\n                                    // eslint-disable-next-line max-len\n                                    if (!this.pdfViewer.viewerBase.isAddComment && !this.pdfViewer.viewerBase.isAnnotationSelect && !this.pdfViewer.viewerBase.isAnnotationMouseDown && !this.pdfViewer.viewerBase.isAnnotationMouseMove && !this.pdfViewer.viewerBase.isInkAdded && !this.pdfViewer.viewerBase.isNewStamp) {\n                                        this.pdfViewer.viewerBase.isAnnotationSelect = true;\n                                        this.pdfViewer.annotationModule.annotationSelect(node.annotName, node.pageIndex, node);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     *\n     * @private\n     * @param {PdfAnnotationBaseModel | SelectorModel} obj - Specified the objects to be rotated.\n     * @param {number} angle - Specified the angle by which the objects have to be rotated.\n     * @param {PointModel} pivot - Specified the reference point with reference to which the objects have to be rotated.\n     * @param {AnnotationSelectorSettingsModel} currentSelector - Specified the current selector value.\n     * @returns {void}\n     */\n    // eslint-disable-next-line max-len\n    Drawing.prototype.rotate = function (obj, angle, pivot, currentSelector) {\n        var checkBoundaryConstraints;\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var objects = [];\n                objects = objects.concat(obj.annotations);\n                this.rotateObjects(obj, objects, angle, pivot, null, currentSelector);\n            }\n            else {\n                this.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel | SelectorModel} parent - Specified the annotation object.\n     * @param {PdfAnnotationBaseModel[]} objects - Specified the annotation objects.\n     * @param {number} angle - Specified the annotation angle.\n     * @param {PointModel} pivot - Specified the pivot value.\n     * @param {boolean} includeParent - Specified the include parent value.\n     * @param {AnnotationSelectorSettingsModel} currentSelector - Specified the current selector value.\n     * @returns {void}\n     */\n    Drawing.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent, currentSelector) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (obj instanceof PdfAnnotationBase) {\n                if (includeParent !== false || parent !== obj) {\n                    obj.rotateAngle += angle;\n                    obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                    var newOffset = transformPointByMatrix(matrix, { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n                    obj.wrapper.offsetX = newOffset.x;\n                    obj.wrapper.offsetY = newOffset.y;\n                    this.nodePropertyChange(obj, { rotateAngle: obj.rotateAngle });\n                }\n                this.renderSelector(obj.pageIndex, currentSelector);\n            }\n        }\n    };\n    Drawing.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (element && element.id) {\n            if (targetElement && targetElement === 'selector') {\n                return this.pdfViewer.adornerSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    /**\n     * @private\n     * @param {DrawingElement} selector - Specified the annotation selector object.\n     * @param {HTMLCanvasElement | SVGElement} canvas - Specified the canvas element.\n     * @param {any} currentSelector - Specified the current selector value.\n     * @param {Transforms} transform - Specfied the transform value.\n     * @param {number} enableNode - Specified the node number.\n     * @param {boolean} isBorderTickness - Specified is thickness or not.\n     * @param {boolean} isSwimlane - Specified is swimlane annotation or not.\n     * @param {boolean} isSticky - Specified is sticky annotation or not.\n     * @returns {void}\n     */\n    // eslint-disable-next-line\n    Drawing.prototype.renderBorder = function (selector, canvas, currentSelector, transform, enableNode, isBorderTickness, isSwimlane, isSticky) {\n        var wrapper = selector;\n        var options = getBaseShapeAttributes(wrapper, transform);\n        transform = transform || { scale: 1, tx: 0, ty: 0 };\n        if (!isSticky) {\n            options.x *= transform.scale;\n            options.y *= transform.scale;\n            options.width *= transform.scale;\n            options.height *= transform.scale;\n            options.fill = 'transparent';\n            // eslint-disable-next-line max-len\n            var shapeType = this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType;\n            if (currentSelector && (typeof (currentSelector) !== 'object') && currentSelector !== '') {\n                // eslint-disable-next-line\n                var annotationSelector = JSON.parse(currentSelector);\n                var borderColor = annotationSelector.selectionBorderColor === '' ? 'black' : annotationSelector.selectionBorderColor;\n                options.stroke = borderColor;\n                options.strokeWidth = currentSelector.selectionBorderThickness === 1 ? 1 : annotationSelector.selectionBorderThickness;\n                // eslint-disable-next-line max-len\n                var lineDash = annotationSelector.selectorLineDashArray.length === 0 ? [6, 3] : annotationSelector.selectorLineDashArray;\n                if (lineDash.length > 2) {\n                    lineDash = [lineDash[0], lineDash[1]];\n                }\n                options.dashArray = lineDash.toString();\n            }\n            else {\n                if (!this.pdfViewer.designerMode) {\n                    if ((shapeType === 'HandWrittenSignature' || shapeType === 'SignatureText' || shapeType === 'SignatureImage') || shapeType === 'Ink') {\n                        // eslint-disable-next-line\n                        var formField = this.pdfViewer.nameTable[selector.id.split('_')[0]];\n                        var isFormFieldSign = this.pdfViewer.viewerBase.checkSignatureFormField(selector.id);\n                        // if (isFormFieldSign && options.width + 21 !== formField.bounds.width && options.height + 21 !== formField.bounds.height) {\n                        //     if (this.pdfViewer.signatureFitMode === 'Default') {\n                        //         let selectorBounds: any = this.pdfViewer.formFieldsModule.getDefaultBoundsforSign(formField.bounds);\n                        //         options.x = selectorBounds.x; options.y = selectorBounds.y; options.width = selectorBounds.width; options.height = selectorBounds.height;\n                        //     } else {\n                        //         options.x = formField.bounds.x; options.y = formField.bounds.y; options.width = formField.bounds.width; options.height = formField.bounds.height;\n                        //     }\n                        // }\n                        this.getSignBorder(shapeType, options, isFormFieldSign);\n                    }\n                    else {\n                        this.getBorderSelector(shapeType, options);\n                    }\n                }\n            }\n            options.class = 'e-pv-diagram-border';\n            if (isSwimlane) {\n                options.class += ' e-diagram-lane';\n            }\n            options.id = 'borderRect';\n            options.id = 'borderRect';\n            if (!enableNode) {\n                options.class += ' e-disabled';\n            }\n            if (isBorderTickness) {\n                options.class += ' e-thick-border';\n            }\n            options.cornerRadius = 0;\n        }\n        else {\n            options.x *= transform.scale;\n            options.y *= transform.scale;\n            options.width *= transform.scale;\n            options.height *= transform.scale;\n            // eslint-disable-next-line max-len\n            var shapeType = this.pdfViewer.selectedItems.annotations.length > 0 ? this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType\n                : this.pdfViewer.selectedItems.formFields[0].formFieldAnnotationType;\n            if (currentSelector && (typeof (currentSelector) !== 'object') && currentSelector !== '') {\n                var annotationSelector = JSON.parse(currentSelector);\n                var borderColor = annotationSelector.selectionBorderColor === '' ? 'black' : annotationSelector.selectionBorderColor;\n                options.stroke = borderColor;\n                options.strokeWidth = currentSelector.selectionBorderThickness === 1 ? 1 : annotationSelector.selectionBorderThickness;\n                // eslint-disable-next-line max-len\n                var lineDash = annotationSelector.selectorLineDashArray.length === 0 ? [6, 3] : annotationSelector.selectorLineDashArray;\n                if (lineDash.length > 2) {\n                    lineDash = [lineDash[0], lineDash[1]];\n                }\n                options.dashArray = lineDash.toString();\n            }\n            else {\n                this.getBorderSelector(shapeType, options);\n            }\n        }\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        // eslint-disable-next-line max-len\n        this.svgRenderer.drawRectangle(canvas, options, this.pdfViewer.element.id, undefined, true, parentSvg);\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} type - Specified the annotation object.\n     * @param {BaseAttributes} options - Specified the options value.\n     * @param {boolean} isFormFieldSign - Specified is form field sign or not.\n     * @returns {void}\n     */\n    Drawing.prototype.getSignBorder = function (type, options, isFormFieldSign) {\n        if (!isFormFieldSign && (type === 'HandWrittenSignature' || type === 'SignatureText' || type === 'SignatureImage') && this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings) {\n            var borderColor = isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectionBorderColor === '' ? '#0000ff' : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectionBorderColor;\n            options.stroke = borderColor;\n            // eslint-disable-next-line max-len\n            var thickness = isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectionBorderThickness;\n            options.strokeWidth = thickness;\n            // eslint-disable-next-line max-len\n            var lineDash = isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.selectorLineDashArray;\n            if (lineDash.length > 2) {\n                lineDash = [lineDash[0], lineDash[1]];\n            }\n            options.dashArray = lineDash.toString();\n        }\n        else if (type === 'Ink' && this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings) {\n            var borderColor = isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectionBorderColor === '' ? '#0000ff' : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectionBorderColor;\n            options.stroke = borderColor;\n            // eslint-disable-next-line max-len\n            var thickness = isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectionBorderThickness;\n            options.strokeWidth = thickness;\n            // eslint-disable-next-line max-len\n            var lineDash = isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.selectorLineDashArray;\n            if (lineDash.length > 2) {\n                lineDash = [lineDash[0], lineDash[1]];\n            }\n            options.dashArray = lineDash.toString();\n        }\n        else {\n            var annotationSelector = this.pdfViewer.annotationSelectorSettings;\n            var borderColor = annotationSelector.selectionBorderColor === '' ? 'black' : annotationSelector.selectionBorderColor;\n            options.stroke = borderColor;\n            options.strokeWidth = annotationSelector.selectionBorderThickness === 1 ? 1 : annotationSelector.selectionBorderThickness;\n            // eslint-disable-next-line max-len\n            var lineDash = annotationSelector.selectorLineDashArray.length === 0 ? [6, 3] : annotationSelector.selectorLineDashArray;\n            if (lineDash.length > 2) {\n                lineDash = [lineDash[0], lineDash[1]];\n            }\n            options.dashArray = lineDash.toString();\n        }\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} type - Specified the annotation object.\n     * @param {BaseAttributes} options - Specified the base attributes.\n     * @returns {void}\n     */\n    Drawing.prototype.getBorderSelector = function (type, options) {\n        var annotationSelector = this.pdfViewer.annotationSelectorSettings;\n        var borderColor = isNullOrUndefined(annotationSelector.selectionBorderColor) || annotationSelector.selectionBorderColor === '' ? 'black' : annotationSelector.selectionBorderColor;\n        options.stroke = borderColor;\n        // eslint-disable-next-line max-len\n        options.strokeWidth = isNullOrUndefined(annotationSelector.selectionBorderThickness) || annotationSelector.selectionBorderThickness === 1 ? 1 : annotationSelector.selectionBorderThickness;\n        // eslint-disable-next-line max-len\n        var lineDash = isNullOrUndefined(annotationSelector.selectorLineDashArray) || annotationSelector.selectorLineDashArray.length === 0 ? [6, 3] : annotationSelector.selectorLineDashArray;\n        if (lineDash.length > 2) {\n            lineDash = [lineDash[0], lineDash[1]];\n        }\n        options.dashArray = lineDash.toString();\n        if (type === 'Rectangle' && this.pdfViewer.rectangleSettings.annotationSelectorSettings) {\n            var borderColor_1 = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderColor === '' ? 'black' : this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderColor;\n            options.stroke = borderColor_1;\n            // eslint-disable-next-line max-len\n            var thickness = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderThickness;\n            options.strokeWidth = thickness;\n            // eslint-disable-next-line max-len\n            var lineDash_1 = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectorLineDashArray;\n            if (lineDash_1.length > 2) {\n                lineDash_1 = [lineDash_1[0], lineDash_1[1]];\n            }\n            options.dashArray = lineDash_1.toString();\n        }\n        else if ((type === 'Textbox' || type === 'Checkbox' || type === 'RadioButton' || type === 'SignatureField' || type === 'InitialField' || type === 'DropdownList' || type === 'ListBox' || type === 'PasswordField') && this.pdfViewer.rectangleSettings.annotationSelectorSettings) {\n            var borderColor_2 = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderColor === '' ? 'black' : this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderColor;\n            options.stroke = borderColor_2;\n            // eslint-disable-next-line max-len\n            var thickness = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectionBorderThickness;\n            options.strokeWidth = thickness;\n            // eslint-disable-next-line max-len\n            var lineDash_2 = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.rectangleSettings.annotationSelectorSettings.selectorLineDashArray;\n            if (lineDash_2.length > 2) {\n                lineDash_2 = [lineDash_2[0], lineDash_2[1]];\n            }\n            options.dashArray = lineDash_2.toString();\n        }\n        else if (type === 'Ellipse' && this.pdfViewer.circleSettings.annotationSelectorSettings) {\n            var borderColor_3 = isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.circleSettings.annotationSelectorSettings.selectionBorderColor === '' ? 'black' : this.pdfViewer.circleSettings.annotationSelectorSettings.selectionBorderColor;\n            options.stroke = borderColor_3;\n            // eslint-disable-next-line max-len\n            var thickness = isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.circleSettings.annotationSelectorSettings.selectionBorderThickness;\n            options.strokeWidth = thickness;\n            // eslint-disable-next-line max-len\n            var lineDash_3 = isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.circleSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.circleSettings.annotationSelectorSettings.selectorLineDashArray;\n            if (lineDash_3.length > 2) {\n                lineDash_3 = [lineDash_3[0], lineDash_3[1]];\n            }\n            options.dashArray = lineDash_3.toString();\n        }\n        else if (type === 'Radius' && this.pdfViewer.radiusSettings.annotationSelectorSettings) {\n            var borderColor_4 = isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.radiusSettings.annotationSelectorSettings.selectionBorderColor === '' ? 'black' : this.pdfViewer.radiusSettings.annotationSelectorSettings.selectionBorderColor;\n            options.stroke = borderColor_4;\n            // eslint-disable-next-line max-len\n            var thickness = isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.radiusSettings.annotationSelectorSettings.selectionBorderThickness;\n            options.strokeWidth = thickness;\n            // eslint-disable-next-line max-len\n            var lineDash_4 = isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.radiusSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.radiusSettings.annotationSelectorSettings.selectorLineDashArray;\n            if (lineDash_4.length > 2) {\n                lineDash_4 = [lineDash_4[0], lineDash_4[1]];\n            }\n            options.dashArray = lineDash_4.toString();\n        }\n        else if (type === 'FreeText' && this.pdfViewer.freeTextSettings.annotationSelectorSettings) {\n            var borderColor_5 = isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectionBorderColor === '' ? 'black' : this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectionBorderColor;\n            options.stroke = borderColor_5;\n            // eslint-disable-next-line max-len\n            var thickness = isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectionBorderThickness;\n            options.strokeWidth = thickness;\n            // eslint-disable-next-line max-len\n            var lineDash_5 = isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.freeTextSettings.annotationSelectorSettings.selectorLineDashArray;\n            if (lineDash_5.length > 2) {\n                lineDash_5 = [lineDash_5[0], lineDash_5[1]];\n            }\n            options.dashArray = lineDash_5.toString();\n        }\n        else if (type === 'StickyNotes' && this.pdfViewer.stickyNotesSettings.annotationSelectorSettings) {\n            var borderColor_6 = isNullOrUndefined(this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectionBorderColor === '' ? 'black' : this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectionBorderColor;\n            options.stroke = borderColor_6;\n            // eslint-disable-next-line max-len\n            var thickness = isNullOrUndefined(this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectionBorderThickness;\n            options.strokeWidth = thickness;\n            // eslint-disable-next-line max-len\n            var lineDash_6 = isNullOrUndefined(this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [6, 3] : this.pdfViewer.stickyNotesSettings.annotationSelectorSettings.selectorLineDashArray;\n            if (lineDash_6.length > 2) {\n                lineDash_6 = [lineDash_6[0], lineDash_6[1]];\n            }\n            options.dashArray = lineDash_6.toString();\n        }\n        else if (type === 'Stamp' && this.pdfViewer.stampSettings.annotationSelectorSettings) {\n            var borderColor_7 = isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.selectionBorderColor) || this.pdfViewer.stampSettings.annotationSelectorSettings.selectionBorderColor === '' ? '#0000ff' : this.pdfViewer.stampSettings.annotationSelectorSettings.selectionBorderColor;\n            options.stroke = borderColor_7;\n            // eslint-disable-next-line max-len\n            var thickness = isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.selectionBorderThickness) ? 1 : this.pdfViewer.stampSettings.annotationSelectorSettings.selectionBorderThickness;\n            options.strokeWidth = thickness;\n            // eslint-disable-next-line max-len\n            var lineDash_7 = isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.selectorLineDashArray) || this.pdfViewer.stampSettings.annotationSelectorSettings.selectorLineDashArray.length === 0 ? [4] : this.pdfViewer.stampSettings.annotationSelectorSettings.selectorLineDashArray;\n            if (lineDash_7.length > 2) {\n                lineDash_7 = [lineDash_7[0], lineDash_7[1]];\n            }\n            options.dashArray = lineDash_7.toString();\n        }\n    };\n    /**\n     * @private\n     * @param {string} id - Specified the annotaion id.\n     * @param {DrawingElement} selector - Specified the drawing element.\n     * @param {number} cx - Specified the cx number.\n     * @param {number} cy - Specified the cy number.\n     * @param {HTMLCanvasElement | SVGElement} canvas - Specified the html canvas element.\n     * @param {boolean} visible - Specified the annotation visible or not.\n     * @param {number} enableSelector - Specified the enable selector value.\n     * @param {Transforms} t - Specified the transforms value.\n     * @param {boolean} connected - Specified is connected or not.\n     * @param {boolean} canMask - Specified is mask or not.\n     * @param {Object} ariaLabel - Specified the aria label object.\n     * @param {number} count - Specified the count value.\n     * @param {string} className - Specified the class name.\n     * @param {AnnotationSelectorSettingsModel} currentSelector - Specified the annotation selector settings.\n     * @returns {void}\n     */\n    Drawing.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className, currentSelector) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        t = t || { scale: 1, tx: 0, ty: 0 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = getBaseShapeAttributes(wrapper);\n        var shapeType;\n        if (this.pdfViewer.selectedItems.annotations.length > 0 && this.pdfViewer.selectedItems.annotations[0].measureType) {\n            shapeType = this.pdfViewer.selectedItems.annotations[0].measureType;\n        }\n        else if (this.pdfViewer.selectedItems.formFields.length > 0) {\n            shapeType = this.pdfViewer.selectedItems.formFields[0].formFieldAnnotationType;\n        }\n        else {\n            shapeType = this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType;\n        }\n        this.getResizerColors(shapeType, options, currentSelector, t);\n        this.getShapeSize(shapeType, options, currentSelector, t);\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        options.opacity = 1;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        options.x = (newPoint.x * t.scale) - (options.width / 2);\n        options.y = (newPoint.y * t.scale) - (options.height / 2);\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        if (this.getShape(shapeType, currentSelector) === 'Square') {\n            this.svgRenderer.drawRectangle(canvas, options, id, undefined, true, parentSvg);\n        }\n        else if (this.getShape(shapeType, currentSelector) === 'Circle') {\n            this.svgRenderer.drawCircle(canvas, options, 1);\n        }\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} type - Specified the annotaion object.\n     * @param {CircleAttributes} options - Specified the circle attributes value.\n     * @param {any} currentSelector - Specified the current selector value.\n     * @param {Transforms} t - Specified the transforms value.\n     * @returns {void}\n     */\n    // eslint-disable-next-line\n    Drawing.prototype.getShapeSize = function (type, options, currentSelector, t) {\n        if (currentSelector && typeof (currentSelector) !== 'object' && currentSelector !== '') {\n            // eslint-disable-next-line\n            var annotationSelector = JSON.parse(currentSelector);\n            // eslint-disable-next-line max-len\n            options.radius = (isNullOrUndefined(annotationSelector.resizerSize) || annotationSelector.resizerSize === 8 ? 8 : annotationSelector.resizerSize) / 2;\n            // eslint-disable-next-line max-len\n            options.width = (isNullOrUndefined(annotationSelector.resizerSize) || annotationSelector.resizerSize === 8 ? 8 : annotationSelector.resizerSize) * t.scale;\n            // eslint-disable-next-line max-len\n            options.height = (isNullOrUndefined(annotationSelector.resizerSize) || annotationSelector.resizerSize === 8 ? 8 : annotationSelector.resizerSize) * t.scale;\n        }\n        else {\n            // eslint-disable-next-line\n            var annotationSelector = this.pdfViewer.annotationSelectorSettings;\n            // eslint-disable-next-line max-len\n            options.radius = (isNullOrUndefined(annotationSelector.resizerSize) || annotationSelector.resizerSize === 8 ? 8 : annotationSelector.resizerSize) / 2;\n            // eslint-disable-next-line max-len\n            options.width = (isNullOrUndefined(annotationSelector.resizerSize) || annotationSelector.resizerSize === 8 ? 8 : annotationSelector.resizerSize) * t.scale;\n            // eslint-disable-next-line max-len\n            options.height = (isNullOrUndefined(annotationSelector.resizerSize) || annotationSelector.resizerSize === 8 ? 8 : annotationSelector.resizerSize) * t.scale;\n            if (type === 'Line' && this.pdfViewer.lineSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.lineSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if (type === 'LineWidthArrowHead' && this.pdfViewer.arrowSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if (type === 'Rectangle' && this.pdfViewer.rectangleSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if (type === 'Ellipse' && this.pdfViewer.circleSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.circleSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if (type === 'Distance' && this.pdfViewer.distanceSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if (type === 'Polygon' && this.pdfViewer.polygonSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if (type === 'Radius' && this.pdfViewer.radiusSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if (type === 'Stamp' && this.pdfViewer.stampSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.stampSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if (type === 'FreeText' && this.pdfViewer.freeTextSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if ((type === 'HandWrittenSignature' || type === 'SignatureText' || type === 'SignatureImage') && this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if (type === 'Perimeter' && this.pdfViewer.perimeterSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if (type === 'Area' && this.pdfViewer.areaSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.areaSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if (type === 'Volume' && this.pdfViewer.volumeSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n            else if (type === 'Ink' && this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings) {\n                // eslint-disable-next-line max-len\n                options.radius = (isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize) / 2;\n                // eslint-disable-next-line max-len\n                options.width = (isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize) * t.scale;\n                // eslint-disable-next-line max-len\n                options.height = (isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize === 8 ? 8 : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerSize) * t.scale;\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} type - Specified the annotation object.\n     * @param {any} currentSelector - Specified the current selector value.\n     * @returns {AnnotationSelectorSettingsModel} - Specified the annotation selector settings model.\n     */\n    // eslint-disable-next-line\n    Drawing.prototype.getShape = function (type, currentSelector) {\n        // eslint-disable-next-line\n        var shapeType;\n        {\n            if (currentSelector && typeof (currentSelector) !== 'object' && currentSelector !== '') {\n                // eslint-disable-next-line\n                var annotationSelector = JSON.parse(currentSelector);\n                shapeType = isNullOrUndefined(annotationSelector.resizerShape) || annotationSelector.resizerShape === 'Square' ? 'Square' : annotationSelector.resizerShape;\n            }\n            else {\n                // eslint-disable-next-line\n                var annotationSelector = this.pdfViewer.annotationSelectorSettings;\n                shapeType = isNullOrUndefined(annotationSelector.resizerShape) || annotationSelector.resizerShape === 'Square' ? 'Square' : annotationSelector.resizerShape;\n                if (type === 'Line' && this.pdfViewer.lineSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.lineSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.lineSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if (type === 'LineWidthArrowHead' && this.pdfViewer.arrowSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if (type === 'Rectangle' && this.pdfViewer.rectangleSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if (type === 'Ellipse' && this.pdfViewer.circleSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.circleSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.circleSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if (type === 'Polygon' && this.pdfViewer.polygonSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if (type === 'Distance' && this.pdfViewer.distanceSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if (type === 'Radius' && this.pdfViewer.radiusSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if (type === 'Stamp' && this.pdfViewer.stampSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.stampSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.stampSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if (type === 'FreeText' && this.pdfViewer.freeTextSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if ((type === 'HandWrittenSignature' || type === 'SignatureText' || type === 'SignatureImage') && this.pdfViewer.handWrittenSignatureSettings && this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if (type === 'Perimeter' && this.pdfViewer.perimeterSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if (type === 'Area' && this.pdfViewer.areaSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.areaSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.areaSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.areaSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if (type === 'Volume' && this.pdfViewer.volumeSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerShape;\n                }\n                else if (type === 'Ink' && this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings) {\n                    shapeType = isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerShape) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerShape === 'Square' ? 'Square' : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerShape;\n                }\n            }\n            return shapeType;\n        }\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} type - Specified the annotaion object.\n     * @param {CircleAttributes} options - Specified the circle attributes value.\n     * @param {any} currentSelector - Specified the current selector value.\n     * @param {Transforms} t - Specified the transforms value.\n     * @returns {void}\n     */\n    // eslint-disable-next-line\n    Drawing.prototype.getResizerColors = function (type, options, currentSelector, t) {\n        if (currentSelector && typeof (currentSelector) !== 'object' && currentSelector !== '') {\n            // eslint-disable-next-line\n            var annotationSelector = JSON.parse(currentSelector);\n            options.stroke = isNullOrUndefined(annotationSelector.resizerBorderColor) || annotationSelector.resizerBorderColor === 'black' ? 'black' : annotationSelector.resizerBorderColor;\n            options.fill = isNullOrUndefined(annotationSelector.resizerFillColor) || annotationSelector.resizerFillColor === '#FF4081' ? '#FF4081' : annotationSelector.resizerFillColor;\n        }\n        else {\n            // eslint-disable-next-line\n            var annotationSelector = this.pdfViewer.annotationSelectorSettings;\n            options.stroke = isNullOrUndefined(annotationSelector.resizerBorderColor) || annotationSelector.resizerBorderColor === 'black' ? 'black' : annotationSelector.resizerBorderColor;\n            options.fill = isNullOrUndefined(annotationSelector.resizerFillColor) || annotationSelector.resizerFillColor === '#FF4081' ? '#FF4081' : annotationSelector.resizerFillColor;\n            if (type === 'Line' && this.pdfViewer.lineSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.lineSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.lineSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.lineSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.lineSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if (type === 'LineWidthArrowHead' && this.pdfViewer.arrowSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if (type === 'Rectangle' && this.pdfViewer.rectangleSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if (type === 'Ellipse' && this.pdfViewer.circleSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.circleSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.circleSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.circleSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.circleSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if (type === 'Distance' && this.pdfViewer.distanceSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if (type === 'Polygon' && this.pdfViewer.polygonSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if (type === 'Radius' && this.pdfViewer.radiusSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if (type === 'Stamp' && this.pdfViewer.stampSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.stampSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.stampSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.stampSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.stampSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if (type === 'FreeText' && this.pdfViewer.freeTextSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if ((type === 'HandWrittenSignature' || type === 'SignatureText' || type === 'SignatureImage') && this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if (type === 'Perimeter' && this.pdfViewer.perimeterSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.perimeterSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if (type === 'Area' && this.pdfViewer.areaSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.areaSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.areaSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.areaSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.areaSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.areaSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.areaSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if (type === 'Volume' && this.pdfViewer.volumeSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.volumeSettings.annotationSelectorSettings.resizerFillColor;\n            }\n            else if (type === 'Ink' && this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings) {\n                options.stroke = isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerBorderColor) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerBorderColor === 'black' ? 'black' : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerBorderColor;\n                options.fill = isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerFillColor) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerFillColor === '#FF4081' ? '#FF4081' : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerFillColor;\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {DrawingElement} wrapper - Specified the drawing element.\n     * @param {HTMLCanvasElement | SVGElement} canvas - Specified the canvas element.\n     * @param {Transforms} transform - Specified the transform value.\n     * @param {SelectorConstraints} selectorConstraints - Specified the selector constraints value.\n     * @param {boolean} canMask - Specified the is mask or not.\n     * @returns {void}\n     */\n    Drawing.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX, y: pivotY - 25 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = getBaseShapeAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.opacity = 1;\n        options.fill = '#FF4081';\n        options.centerX = newPoint.x;\n        options.centerY = newPoint.y;\n        options.radius = 4;\n        options.angle = 0;\n        options.visible = true;\n        options.class = 'e-diagram-rotate-handle';\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawCircle(canvas, options, ThumbsConstraints.Rotate, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    /**\n     * @private\n     * @param {DrawingElement} element - Specified the drawing element.\n     * @param {HTMLCanvasElement | SVGElement} canvas - Specified the canvas element.\n     * @param {ThumbsConstraints} constraints - Specified the thumbs constraints element.\n     * @param {number} currentZoom - Specified the current zoom value.\n     * @param {boolean} canMask - Specified the is mask or not.\n     * @param {number} enableNode - Specified the node number.\n     * @param {boolean} nodeConstraints - Specified the node constraints or not.\n     * @param {boolean} isStamp - Specified is stamp or not.\n     * @param {boolean} isSticky - Specified is sticky or not.\n     * @param {boolean} isPath - Specified is path or not.\n     * @param {boolean} isFreeText - Specified is free text or not.\n     * @param {AnnotationSelectorSettingsModel} currentSelector - Specified the current selector settings value.\n     * @returns {void}\n     */\n    Drawing.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, canMask, enableNode, nodeConstraints, isStamp, isSticky, isPath, isFreeText, currentSelector) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        var transform = { scale: currentZoom, tx: 0, ty: 0 };\n        if (isStamp) {\n            this.renderPivotLine(element, canvas, transform);\n            this.renderRotateThumb(element, canvas, transform);\n        }\n        if (isFreeText) {\n            isStamp = true;\n        }\n        this.renderBorder(element, canvas, currentSelector, transform, enableNode, nodeConstraints, true, isSticky);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        // eslint-disable-next-line max-len\n        var shapeType = this.pdfViewer.selectedItems.annotations.length > 0 ? this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType : this.pdfViewer.selectedItems.formFields[0].formFieldAnnotationType;\n        var allowPermission = false;\n        if (!this.pdfViewer.formDesignerModule) {\n            // eslint-disable-next-line\n            var annotation = this.pdfViewer.selectedItems.annotations[0];\n            // eslint-disable-next-line\n            var allowedInteraction = this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation);\n            var isLock = this.pdfViewer.annotationModule.checkIsLockSettings(annotation);\n            if ((isLock || annotation.annotationSettings.isLock) && this.getAllowedInteractions(allowedInteraction)) {\n                allowPermission = true;\n            }\n        }\n        var resizerLocation = this.getResizerLocation(shapeType, currentSelector);\n        if (resizerLocation < 1 || resizerLocation > 3) {\n            resizerLocation = 3;\n        }\n        var isNodeShape = false;\n        if (this.pdfViewer.selectedItems.annotations[0] && (this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'Ellipse' || this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'Radius' || this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'Rectangle' || this.pdfViewer.selectedItems.annotations[0].shapeAnnotationType === 'Ink')) {\n            isNodeShape = true;\n        }\n        if (!this.pdfViewer.viewerBase.checkSignatureFormField(element.id) && !nodeConstraints && !isSticky && !isPath && !allowPermission) {\n            if (isStamp || (isNodeShape && (nodeWidth >= 40 && nodeHeight >= 40) && (resizerLocation === 1 || resizerLocation === 3))) {\n                //Hide corners when the size is less than 40\n                this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, true, constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-pv-diagram-resize-handle e-northwest', currentSelector);\n                this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, true, constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-pv-diagram-resize-handle e-northeast', currentSelector);\n                this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, true, constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-pv-diagram-resize-handle e-southwest', currentSelector);\n                this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, true, constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-pv-diagram-resize-handle e-southeast', currentSelector);\n            }\n            // eslint-disable-next-line max-len\n            if ((!isStamp && !isNodeShape) || (isNodeShape && (resizerLocation === 2 || resizerLocation === 3 || (!(nodeWidth >= 40 && nodeHeight >= 40) && resizerLocation === 1)))) {\n                this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, true, constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-pv-diagram-resize-handle e-north', currentSelector);\n                this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, true, constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-pv-diagram-resize-handle e-south', currentSelector);\n                this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, true, constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-pv-diagram-resize-handle e-west', currentSelector);\n                this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, true, constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-pv-diagram-resize-handle e-east', currentSelector);\n            }\n        }\n        if ((shapeType === 'Textbox' || shapeType === 'Checkbox' || shapeType === 'RadioButton' || shapeType === 'SignatureField' || shapeType === 'InitialField' || shapeType === 'DropdownList' ||\n            shapeType === 'ListBox' || shapeType === 'PasswordField')) {\n            this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, true, constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-pv-diagram-resize-handle e-north', currentSelector);\n            this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, true, constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-pv-diagram-resize-handle e-south', currentSelector);\n            this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, true, constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-pv-diagram-resize-handle e-west', currentSelector);\n            this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, true, constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-pv-diagram-resize-handle e-east', currentSelector);\n        }\n    };\n    // eslint-disable-next-line\n    Drawing.prototype.getAllowedInteractions = function (allowedInteraction) {\n        if (allowedInteraction && allowedInteraction.length > 0) {\n            for (var i = 0; i < allowedInteraction.length; i++) {\n                if (allowedInteraction[0] !== 'None' && allowedInteraction[i] === 'Resize') {\n                    return false;\n                }\n            }\n        }\n        return true;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} type - Specified the annotation base model.\n     * @param {any} currentSelector - Specified the current selector value\n     * @returns {AnnotationResizerLocation} - Returns the annotation resizer location value.\n     */\n    // eslint-disable-next-line\n    Drawing.prototype.getResizerLocation = function (type, currentSelector) {\n        // eslint-disable-next-line\n        var resizerLocation;\n        {\n            if (currentSelector && typeof (currentSelector) !== 'object' && currentSelector !== '') {\n                // eslint-disable-next-line\n                var annotationSelector = JSON.parse(currentSelector);\n                // eslint-disable-next-line max-len\n                resizerLocation = isNullOrUndefined(annotationSelector.resizerLocation) || annotationSelector.resizerLocation === 3 ? 3 : annotationSelector.resizerLocation;\n            }\n            else {\n                // eslint-disable-next-line\n                var annotationSelector = this.pdfViewer.annotationSelectorSettings;\n                // eslint-disable-next-line max-len\n                resizerLocation = isNullOrUndefined(annotationSelector.resizerLocation) || annotationSelector.resizerLocation === 3 ? 3 : annotationSelector.resizerLocation;\n                if (type === 'Line' && this.pdfViewer.lineSettings.annotationSelectorSettings) {\n                    // eslint-disable-next-line max-len\n                    resizerLocation = isNullOrUndefined(this.pdfViewer.lineSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.lineSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.lineSettings.annotationSelectorSettings.resizerLocation;\n                }\n                else if (type === 'LineWidthArrowHead' && this.pdfViewer.arrowSettings.annotationSelectorSettings) {\n                    // eslint-disable-next-line max-len\n                    resizerLocation = isNullOrUndefined(this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.arrowSettings.annotationSelectorSettings.resizerLocation;\n                }\n                else if (type === 'Rectangle' && this.pdfViewer.rectangleSettings.annotationSelectorSettings) {\n                    // eslint-disable-next-line max-len\n                    resizerLocation = isNullOrUndefined(this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.rectangleSettings.annotationSelectorSettings.resizerLocation;\n                }\n                else if (type === 'Ellipse' && this.pdfViewer.circleSettings.annotationSelectorSettings) {\n                    // eslint-disable-next-line max-len\n                    resizerLocation = isNullOrUndefined(this.pdfViewer.circleSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.circleSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.circleSettings.annotationSelectorSettings.resizerLocation;\n                }\n                else if (type === 'Polygon' && this.pdfViewer.polygonSettings.annotationSelectorSettings) {\n                    // eslint-disable-next-line max-len\n                    resizerLocation = isNullOrUndefined(this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.polygonSettings.annotationSelectorSettings.resizerLocation;\n                }\n                else if (type === 'Distance') {\n                    // eslint-disable-next-line max-len\n                    resizerLocation = isNullOrUndefined(this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.distanceSettings.annotationSelectorSettings.resizerLocation;\n                }\n                else if (type === 'Radius' && this.pdfViewer.radiusSettings.annotationSelectorSettings) {\n                    // eslint-disable-next-line max-len\n                    resizerLocation = isNullOrUndefined(this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.radiusSettings.annotationSelectorSettings.resizerLocation;\n                }\n                else if (type === 'Stamp' && this.pdfViewer.stampSettings.annotationSelectorSettings) {\n                    // eslint-disable-next-line max-len\n                    resizerLocation = isNullOrUndefined(this.pdfViewer.stampSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.stampSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.stampSettings.annotationSelectorSettings.resizerLocation;\n                }\n                else if (type === 'FreeText' && this.pdfViewer.freeTextSettings.annotationSelectorSettings) {\n                    // eslint-disable-next-line max-len\n                    resizerLocation = isNullOrUndefined(this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.freeTextSettings.annotationSelectorSettings.resizerLocation;\n                }\n                else if ((type === 'HandWrittenSignature' || type === 'SignatureText' || type === 'SignatureImage') && this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings) {\n                    // eslint-disable-next-line max-len\n                    resizerLocation = isNullOrUndefined(this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.handWrittenSignatureSettings.annotationSelectorSettings.resizerLocation;\n                }\n                else if (type === 'Ink' && this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings) {\n                    // eslint-disable-next-line max-len\n                    resizerLocation = isNullOrUndefined(this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerLocation) || this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerLocation === 3 ? 3 : this.pdfViewer.inkAnnotationSettings.annotationSelectorSettings.resizerLocation;\n                }\n            }\n            return resizerLocation;\n        }\n    };\n    /**\n     * @private\n     * @param {DrawingElement} element - Specified the drawing element.\n     * @param {HTMLCanvasElement | SVGAElement} canvas - Specified the canvas element.\n     * @param {Transforms} transform - Specified the transform values.\n     * @param {SelectorConstraints} selectorConstraints - Specified the selector constraints value.\n     * @param {boolean} canMask - Specified is mask value or not.\n     * @returns {void}\n     */\n    Drawing.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = true;\n        if (canMask) {\n            visible = false;\n        }\n        var options = getBaseShapeAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} selector - Specified the annotation element.\n     * @param {HTMLCanvasElement | SVGAElement} canvas - Specified the canvas element.\n     * @param {SelectorConstraints} constraints - Specified the selector constraints value.\n     * @param {Transforms} transform - Specified the transform values.\n     * @param {boolean} connectedSource - Specified is connected source or not.\n     * @param {boolean} connectedTarget - Specified is connected target or not.\n     * @param {boolean} isSegmentEditing - Specified is segment editing or not.\n     * @param {AnnotationSelectorSettingsModel} currentSelector - Specified the current selector value.\n     * @returns {void}\n     */\n    Drawing.prototype.renderEndPointHandle = function (selector, canvas, constraints, transform, connectedSource, connectedTarget, isSegmentEditing, currentSelector) {\n        transform = transform || { tx: 0, ty: 0, scale: 1 };\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        for (i = 0; i < selector.vertexPoints.length; i++) {\n            var segment = selector.vertexPoints[i];\n            this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.x, segment.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i, null, currentSelector);\n        }\n        var leaderCount = 0;\n        if (selector.shapeAnnotationType === 'Distance') {\n            for (i = 0; i < selector.wrapper.children.length; i++) {\n                var segment = selector.wrapper.children[i];\n                var newPoint1 = void 0;\n                var angle = Point.findAngle(selector.sourcePoint, selector.targetPoint);\n                if (segment.id.indexOf('leader') > -1) {\n                    var center = selector.wrapper.children[0].bounds.center;\n                    if (leaderCount === 0) {\n                        newPoint1 = { x: selector.sourcePoint.x, y: selector.sourcePoint.y - selector.leaderHeight };\n                        center = sourcePoint;\n                    }\n                    else {\n                        newPoint1 = { x: selector.targetPoint.x, y: selector.targetPoint.y - selector.leaderHeight };\n                        center = targetPoint;\n                    }\n                    var matrix = identityMatrix();\n                    rotateMatrix(matrix, angle, center.x, center.y);\n                    var rotatedPoint = transformPointByMatrix(matrix, { x: newPoint1.x, y: newPoint1.y });\n                    this.renderCircularHandle(('leaderThumb_' + (i + 1)), wrapper, rotatedPoint.x, rotatedPoint.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i, null, currentSelector);\n                    leaderCount++;\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    Drawing.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.pdfViewer.selectedItems;\n        selectorModel.init(this);\n    };\n    /**\n     * @private\n     * @param {string[]} objArray - Specified the annotation object array.\n     * @param {any} currentSelector - Specified the current selector value.\n     * @param {boolean} multipleSelection - Specified the multiple selection or not.\n     * @param {boolean} preventUpdate - Specified the prevent update or not.\n     * @returns {void}\n     */\n    // eslint-disable-next-line\n    Drawing.prototype.select = function (objArray, currentSelector, multipleSelection, preventUpdate) {\n        var selectorModel = this.pdfViewer.selectedItems;\n        for (var i = 0; i < objArray.length; i++) {\n            // eslint-disable-next-line\n            var obj = this.pdfViewer.nameTable[objArray[i]];\n            if (obj.formFieldAnnotationType && this.pdfViewer.designerMode) {\n                selectorModel.formFields.push(obj);\n                this.initSelectorWrapper();\n                selectorModel.wrapper.children.push(obj.wrapper);\n                this.renderSelector(obj.pageIndex, currentSelector, obj, true);\n            }\n            else if (obj && !obj.formFieldAnnotationType) {\n                if (!(obj instanceof Selector) && obj.wrapper.visible && this.pdfViewer.annotationModule) {\n                    // eslint-disable-next-line\n                    var annotationSettings = void 0;\n                    if (obj.annotationSettings) {\n                        annotationSettings = obj.annotationSettings;\n                        annotationSettings.isLock = JSON.parse(annotationSettings.isLock);\n                    }\n                    else if (!obj.formFieldAnnotationType) {\n                        annotationSettings = this.pdfViewer.annotationModule.findAnnotationSettings(obj, true);\n                        obj.annotationSettings = annotationSettings;\n                    }\n                    var isLock = !obj.formFieldAnnotationType ? annotationSettings.isLock : false;\n                    if (annotationSettings && annotationSettings.isLock && this.pdfViewer.annotationModule.checkAllowedInteractions('Select', obj)) {\n                        isLock = false;\n                    }\n                    if (!isLock) {\n                        selectorModel.annotations.push(obj);\n                        this.initSelectorWrapper();\n                        selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                        selectorModel.wrapper.children.push(obj.wrapper);\n                        if (!preventUpdate) {\n                            this.renderSelector(obj.pageIndex, currentSelector, obj, true);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotaion object.\n     * @param {number} tx - Specified the tx value.\n     * @param {number} ty - Specified the ty value.\n     * @param {number} pageIndex - Specified the page index value.\n     * @param {any} currentSelector - Specified the current selector value.\n     * @param {PdfAnnotationBaseModel} helper - Specified the helper object.\n     * @returns {void}\n     */\n    // eslint-disable-next-line\n    Drawing.prototype.dragSelectedObjects = function (tx, ty, pageIndex, currentSelector, helper) {\n        var obj = this.pdfViewer.selectedItems;\n        this.drag(obj, tx, ty, currentSelector, helper);\n        return true;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotaion object.\n     * @param {number} tx - Specified the tx value.\n     * @param {number} ty - Specified the ty value.\n     * @param {any} currentSelector - Specified the current selector value.\n     * @param {PdfAnnotationBaseModel} helper - Specified the helper object.\n     * @returns {void}\n     */\n    // eslint-disable-next-line\n    Drawing.prototype.drag = function (obj, tx, ty, currentSelector, helper) {\n        if (obj instanceof Selector) {\n            if (obj.annotations.length) {\n                for (var _i = 0, _a = obj.annotations; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.drag(node, tx, ty, currentSelector, helper);\n                    this.renderSelector(node.pageIndex, currentSelector, helper);\n                }\n            }\n            else if (obj.formFields.length) {\n                for (var _b = 0, _c = obj.formFields; _b < _c.length; _b++) {\n                    var node = _c[_b];\n                    this.drag(node, tx, ty, currentSelector, helper);\n                    this.renderSelector(node.pageIndex, currentSelector, helper);\n                }\n            }\n        }\n        else {\n            this.dragAnnotation(obj, tx, ty);\n        }\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotaion object.\n     * @param {number} tx - Specified the tx value.\n     * @param {number} ty - Specified the ty value.\n     * @returns {void}\n     */\n    Drawing.prototype.dragAnnotation = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        // eslint-disable-next-line\n        var oldValues = { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n        obj.wrapper.offsetX += tx;\n        obj.wrapper.offsetY += ty;\n        if (isLineShapes(obj) || obj.shapeAnnotationType === 'Polygon') {\n            if (obj.wrapper.children.length) {\n                var nodes = obj.wrapper.children;\n                for (var i = 0; i < nodes.length; i++) {\n                    nodes[i].offsetX += tx;\n                    nodes[i].offsetY += ty;\n                }\n            }\n            this.dragControlPoint(obj, tx, ty, true);\n        }\n        this.nodePropertyChange(obj, { bounds: { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY } });\n        obj.wrapper.measureChildren = false;\n        // eslint-disable-next-line\n        var canvas = document.getElementById(this.pdfViewer.element.id + '_annotationCanvas_' + obj.pageIndex);\n        // eslint-disable-next-line\n        this.pdfViewer.renderDrawing(canvas, obj.pageIndex);\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotaion object.\n     * @param {number} tx - Specified the tx value.\n     * @param {number} ty - Specified the ty value.\n     * @param {boolean} preventUpdate - Specified the prevent update or not.\n     * @param {number} segmentNumber - Specified the segment value.\n     * @returns {boolean} - Returns true or false.\n     */\n    Drawing.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        // eslint-disable-next-line\n        var connector = this.pdfViewer.nameTable[obj.id];\n        for (var i = 0; i < connector.vertexPoints.length; i++) {\n            (connector.vertexPoints[i]).x += tx;\n            (connector.vertexPoints[i]).y += ty;\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        return true;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} connector - Specified the connector object.\n     * @returns {void}\n     */\n    Drawing.prototype.updateEndPoint = function (connector) {\n        this.nodePropertyChange(connector, { vertexPoints: connector.vertexPoints });\n        this.renderSelector(connector.pageIndex);\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} actualObject - Specified the actual annotaion object.\n     * @param {PdfAnnotationBaseModel} node - Specified the node annotation object.\n     * @returns {void}\n     */\n    Drawing.prototype.nodePropertyChange = function (actualObject, node) {\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.bounds) {\n            if (node.bounds.width !== undefined) {\n                actualObject.bounds.width = actualObject.wrapper.width = node.bounds.width;\n            }\n            if (node.bounds.height !== undefined) {\n                actualObject.bounds.height = actualObject.wrapper.height = node.bounds.height;\n            }\n            if (node.bounds.x !== undefined) {\n                actualObject.bounds.x = node.bounds.x - (actualObject.bounds.width * 0.5);\n                actualObject.wrapper.offsetX = node.bounds.x;\n                update = true;\n                updateConnector = true;\n            }\n            if (node.bounds.y !== undefined) {\n                actualObject.bounds.y = node.bounds.y - (actualObject.bounds.height * 0.5);\n                actualObject.wrapper.offsetY = node.bounds.y;\n                update = true;\n                updateConnector = true;\n            }\n            if (node.leaderHeight !== undefined) {\n                actualObject.leaderHeight = node.leaderHeight;\n                this.updateConnector(actualObject, actualObject.vertexPoints);\n            }\n            if (actualObject.wrapper.children.length) {\n                var children = actualObject.wrapper.children;\n                for (var i_1 = 0; i_1 < children.length; i_1++) {\n                    if (children[i_1].id) {\n                        var names = children[i_1].id.split('_');\n                        if (names.length && (names.indexOf('perimeter') > -1 || names.indexOf('radius') > -1)) {\n                            this.setNodePosition(children[i_1], actualObject);\n                        }\n                        else if (names.length && (names.indexOf('srcDec') > -1)) {\n                            children[i_1].offsetX = actualObject.vertexPoints[0].x;\n                            children[i_1].offsetY = actualObject.vertexPoints[0].y;\n                        }\n                        else if (names.length && names.indexOf('tarDec') > -1) {\n                            children[i_1].offsetX = actualObject.vertexPoints[actualObject.vertexPoints.length - 1].x;\n                            children[i_1].offsetY = actualObject.vertexPoints[actualObject.vertexPoints.length - 1].y;\n                        }\n                        else if (names.length && (names.indexOf('stamp') > -1)) {\n                            // eslint-disable-next-line\n                            var ratio = 0;\n                            var heightRatio = 2;\n                            if (actualObject.wrapper.width !== undefined && actualObject.wrapper.height !== undefined) {\n                                ratio = 20;\n                                heightRatio = 2.9;\n                            }\n                            if (actualObject.isDynamicStamp) {\n                                children[i_1].width = actualObject.bounds.width - ratio;\n                                children[i_1].height = (actualObject.bounds.height / 2) - ratio;\n                                // eslint-disable-next-line\n                                var element = children[1];\n                                // eslint-disable-next-line\n                                var annotationSettings = this.pdfViewer.stampSettings ? this.pdfViewer.stampSettings : this.pdfViewer.annotationSettings;\n                                // eslint-disable-next-line max-len\n                                if (annotationSettings && (annotationSettings.maxHeight || annotationSettings.maxWidth) && (actualObject.bounds.height > 60)) {\n                                    if (ratio != 0) {\n                                        element.style.fontSize = (actualObject.bounds.width / ratio);\n                                    }\n                                    else {\n                                        element.style.fontSize = (actualObject.wrapper.bounds.width / 20);\n                                    }\n                                }\n                                else {\n                                    if (ratio != 0) {\n                                        element.style.fontSize = this.fontSizeCalculation(actualObject, element, (actualObject.bounds.width - 20));\n                                    }\n                                    else {\n                                        element.style.fontSize = this.fontSizeCalculation(actualObject, element, (actualObject.wrapper.bounds.width - 20));\n                                    }\n                                }\n                                if (ratio !== 0) {\n                                    element.margin.bottom = -(children[i_1].height / 2);\n                                }\n                            }\n                            else {\n                                children[i_1].width = actualObject.bounds.width - ratio;\n                                children[i_1].height = actualObject.bounds.height - ratio;\n                            }\n                            children[i_1].offsetX = actualObject.wrapper.offsetX;\n                            children[i_1].offsetY = actualObject.wrapper.offsetX;\n                            children[i_1].isDirt = true;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.sourceDecoraterShapes !== undefined) {\n            actualObject.sourceDecoraterShapes = node.sourceDecoraterShapes;\n            this.updateConnector(actualObject, actualObject.vertexPoints);\n        }\n        if (node.isReadonly !== undefined && actualObject.shapeAnnotationType === 'FreeText') {\n            actualObject.isReadonly = node.isReadonly;\n        }\n        if (node.taregetDecoraterShapes !== undefined) {\n            actualObject.taregetDecoraterShapes = node.taregetDecoraterShapes;\n            update = true;\n            this.updateConnector(actualObject, actualObject.vertexPoints);\n        }\n        if (node.fillColor !== undefined) {\n            actualObject.fillColor = node.fillColor;\n            actualObject.wrapper.children[0].style.fill = node.fillColor;\n            if ((actualObject.enableShapeLabel || actualObject.measureType) && actualObject.wrapper && actualObject.wrapper.children) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                for (var i_2 = 0; i_2 < children.length; i_2++) {\n                    if (children[i_2].textNodes) {\n                        if (actualObject.enableShapeLabel) {\n                            actualObject.labelFillColor = node.fillColor;\n                            children[i_2].style.fill = node.fillColor;\n                        }\n                        if (actualObject.measureType) {\n                            children[i_2].style.fill = node.fillColor;\n                        }\n                    }\n                }\n            }\n            update = true;\n        }\n        if (actualObject.enableShapeLabel && node.labelFillColor !== undefined) {\n            if (actualObject.enableShapeLabel && actualObject.wrapper && actualObject.wrapper.children) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                for (var i_3 = 0; i_3 < children.length; i_3++) {\n                    if (children[i_3].textNodes) {\n                        actualObject.labelFillColor = node.labelFillColor;\n                        children[i_3].style.fill = node.labelFillColor;\n                    }\n                }\n            }\n        }\n        if (node.opacity !== undefined) {\n            if (actualObject.shapeAnnotationType === 'Stamp' || actualObject.shapeAnnotationType === 'FreeText') {\n                actualObject.wrapper.children[1].style.opacity = node.opacity;\n                if (actualObject.wrapper.children[2]) {\n                    actualObject.wrapper.children[2].style.opacity = node.opacity;\n                }\n            }\n            else {\n                if (actualObject.shapeAnnotationType === 'StickyNotes') {\n                    // eslint-disable-next-line\n                    this.pdfViewer.nameTable[actualObject.annotName].wrapper.children[0].style.opacity = node.opacity;\n                }\n                actualObject.opacity = node.opacity;\n            }\n            actualObject.wrapper.children[0].style.opacity = node.opacity;\n            if (actualObject.enableShapeLabel && actualObject.wrapper && actualObject.wrapper.children) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                for (var i_4 = 0; i_4 < children.length; i_4++) {\n                    if (children[i_4].textNodes) {\n                        children[i_4].style.opacity = node.labelOpacity;\n                    }\n                }\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (actualObject.enableShapeLabel && node.labelOpacity !== undefined) {\n            if (actualObject.enableShapeLabel && actualObject.wrapper && actualObject.wrapper.children) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                for (var i_5 = 0; i_5 < children.length; i_5++) {\n                    if (children[i_5].textNodes) {\n                        children[i_5].style.opacity = node.labelOpacity;\n                    }\n                }\n            }\n        }\n        if (node.rotateAngle !== undefined) {\n            actualObject.rotateAngle = node.rotateAngle;\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.strokeColor !== undefined) {\n            actualObject.strokeColor = node.strokeColor;\n            actualObject.wrapper.children[0].style.strokeColor = node.strokeColor;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.fontColor !== undefined) {\n            actualObject.fontColor = node.fontColor;\n            if (actualObject.shapeAnnotationType === 'FreeText' && actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                children[1].style.color = node.fontColor;\n                if (actualObject.textAlign === 'Justify') {\n                    children[1].horizontalAlignment = 'Center';\n                }\n                else {\n                    children[1].horizontalAlignment = 'Auto';\n                }\n            }\n            if (actualObject.enableShapeLabel && actualObject.wrapper && actualObject.wrapper.children) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                for (var i_6 = 0; i_6 < children.length; i_6++) {\n                    if (children[i_6].textNodes) {\n                        children[i_6].style.color = node.fontColor;\n                    }\n                }\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.fontFamily !== undefined) {\n            actualObject.fontFamily = node.fontFamily;\n            if (actualObject.shapeAnnotationType === 'FreeText' && actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                children[1].style.fontFamily = node.fontFamily;\n            }\n            if (actualObject.enableShapeLabel && actualObject.wrapper && actualObject.wrapper.children) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                for (var i_7 = 0; i_7 < children.length; i_7++) {\n                    if (children[i_7].textNodes) {\n                        children[i_7].style.fontFamily = node.fontFamily;\n                    }\n                }\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.fontSize !== undefined) {\n            actualObject.fontSize = node.fontSize;\n            if ((actualObject.shapeAnnotationType === 'FreeText' || actualObject.shapeAnnotationType === 'SignatureText') && actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                children[1].style.fontSize = node.fontSize;\n                if (actualObject.shapeAnnotationType === 'SignatureText') {\n                    actualObject.wrapper.children[1].bounds.width = actualObject.bounds.width;\n                    actualObject.wrapper.children[1].desiredSize.width = actualObject.bounds.width;\n                    actualObject.wrapper.children[1].actualSize.width = actualObject.bounds.width;\n                    children[1].horizontalAlignment = 'Center';\n                    children[1].verticalAlignment = 'Center';\n                    children[1].setOffsetWithRespectToBounds(0, 0, 'Absolute');\n                }\n            }\n            if (actualObject.enableShapeLabel && actualObject.wrapper && actualObject.wrapper.children) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                for (var i_8 = 0; i_8 < children.length; i_8++) {\n                    if (children[i_8].textNodes) {\n                        children[i_8].style.fontSize = node.fontSize;\n                    }\n                }\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.font !== undefined) {\n            if (actualObject.shapeAnnotationType === 'FreeText' && actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                if (node.font.isBold !== undefined) {\n                    children[1].style.bold = node.font.isBold;\n                    actualObject.font.isBold = node.font.isBold;\n                }\n                if (node.font.isItalic !== undefined) {\n                    children[1].style.italic = node.font.isItalic;\n                    actualObject.font.isItalic = node.font.isItalic;\n                }\n                if (node.font.isUnderline !== undefined) {\n                    if (node.font.isUnderline) {\n                        actualObject.font.isStrikeout = false;\n                    }\n                    if (node.font.isUnderline === true) {\n                        children[1].style.textDecoration = 'Underline';\n                    }\n                    else {\n                        if (!node.font.isStrikeout) {\n                            children[1].style.textDecoration = 'None';\n                        }\n                    }\n                    actualObject.font.isUnderline = node.font.isUnderline;\n                }\n                if (node.font.isStrikeout !== undefined) {\n                    if (node.font.isStrikeout) {\n                        actualObject.font.isUnderline = false;\n                    }\n                    if (node.font.isStrikeout === true) {\n                        children[1].style.textDecoration = 'LineThrough';\n                    }\n                    else {\n                        if (!node.font.isUnderline) {\n                            children[1].style.textDecoration = 'None';\n                        }\n                    }\n                    actualObject.font.isStrikeout = node.font.isStrikeout;\n                }\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.textAlign !== undefined) {\n            actualObject.textAlign = node.textAlign;\n            if (actualObject.shapeAnnotationType === 'FreeText' && actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                children[1].style.textAlign = node.textAlign;\n                if (children[1].childNodes.length === 1) {\n                    if (actualObject.textAlign === 'Justify') {\n                        children[1].horizontalAlignment = 'Left';\n                        children[1].setOffsetWithRespectToBounds(0, 0, null);\n                    }\n                    else if (actualObject.textAlign === 'Right') {\n                        children[1].horizontalAlignment = 'Right';\n                        children[1].setOffsetWithRespectToBounds(0.97, 0, null);\n                    }\n                    else if (actualObject.textAlign === 'Left') {\n                        children[1].horizontalAlignment = 'Left';\n                        children[1].setOffsetWithRespectToBounds(0, 0, null);\n                    }\n                    else if (actualObject.textAlign === 'Center') {\n                        children[1].horizontalAlignment = 'Center';\n                        children[1].setOffsetWithRespectToBounds(0.46, 0, null);\n                    }\n                }\n                else if (children[1].childNodes.length > 1 && actualObject.textAlign === 'Justify') {\n                    children[1].horizontalAlignment = 'Center';\n                }\n                else {\n                    children[1].horizontalAlignment = 'Auto';\n                }\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.thickness !== undefined) {\n            actualObject.thickness = node.thickness;\n            actualObject.wrapper.children[0].style.strokeWidth = node.thickness;\n            if (actualObject.shapeAnnotationType === 'LineWidthArrowHead') {\n                actualObject.wrapper.children[1].width = 12 * node.thickness;\n                actualObject.wrapper.children[1].height = 12 * node.thickness;\n                actualObject.wrapper.children[2].width = 12 * node.thickness;\n                actualObject.wrapper.children[2].height = 12 * node.thickness;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.borderDashArray !== undefined) {\n            actualObject.borderDashArray = node.borderDashArray;\n            actualObject.wrapper.children[0].style.strokeDashArray = node.borderDashArray;\n        }\n        if (node.borderStyle !== undefined) {\n            actualObject.borderStyle = node.borderStyle;\n        }\n        if (node.author !== undefined) {\n            actualObject.author = node.author;\n        }\n        if (node.modifiedDate !== undefined) {\n            actualObject.modifiedDate = node.modifiedDate;\n        }\n        if (node.subject !== undefined) {\n            actualObject.subject = node.subject;\n        }\n        if (node.vertexPoints !== undefined) {\n            actualObject.vertexPoints = node.vertexPoints;\n            // eslint-disable-next-line\n            this.pdfViewer.nameTable[actualObject.id].vertexPoints = node.vertexPoints;\n            this.updateConnector(actualObject, node.vertexPoints);\n        }\n        if (node.leaderHeight !== undefined && actualObject.shapeAnnotationType !== 'Polygon') {\n            actualObject.leaderHeight = node.leaderHeight;\n            this.updateConnector(actualObject, actualObject.vertexPoints);\n        }\n        if (node.notes !== undefined) {\n            actualObject.notes = node.notes;\n        }\n        if (node.annotName !== undefined) {\n            actualObject.annotName = node.annotName;\n        }\n        if (actualObject.shapeAnnotationType === 'Distance') {\n            for (i = 0; i < actualObject.wrapper.children.length; i++) {\n                // eslint-disable-next-line\n                var segment = actualObject.wrapper.children[i];\n                // eslint-disable-next-line\n                var points = getConnectorPoints(actualObject);\n                if (segment.id.indexOf('leader1') > -1) {\n                    this.setLineDistance(actualObject, points, segment, false);\n                }\n                if (segment.id.indexOf('leader2') > -1) {\n                    this.setLineDistance(actualObject, points, segment, true);\n                }\n            }\n            this.updateConnector(actualObject, actualObject.vertexPoints);\n        }\n        if (actualObject.shapeAnnotationType === 'Polygon' && node.vertexPoints) {\n            actualObject.data = getPolygonPath(actualObject.vertexPoints);\n            // eslint-disable-next-line\n            var path = actualObject.wrapper.children[0];\n            path.data = actualObject.data;\n            path.canMeasurePath = true;\n        }\n        if (isLineShapes(actualObject)) {\n            for (var i_9 = 0; i_9 < actualObject.wrapper.children.length; i_9++) {\n                // eslint-disable-next-line\n                var childElement = actualObject.wrapper.children[i_9];\n                if (!childElement.textNodes) {\n                    setElementStype(actualObject, actualObject.wrapper.children[i_9]);\n                }\n                if (actualObject.enableShapeLabel === true) {\n                    if (actualObject.wrapper.children[i_9] instanceof TextElement) {\n                        actualObject.wrapper.children[i_9].style.fill = actualObject.labelFillColor;\n                    }\n                    if ((actualObject.wrapper.children[i_9] instanceof PathElement && actualObject.measureType === 'Perimeter')) {\n                        actualObject.wrapper.children[i_9].style.fill = 'transparent';\n                    }\n                }\n                else {\n                    if ((actualObject.wrapper.children[i_9] instanceof PathElement && actualObject.measureType === 'Perimeter') || actualObject.wrapper.children[i_9] instanceof TextElement) {\n                        actualObject.wrapper.children[i_9].style.fill = 'transparent';\n                    }\n                }\n            }\n        }\n        if (actualObject && (actualObject.shapeAnnotationType === 'FreeText' || actualObject.enableShapeLabel === true)) {\n            if (actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                for (var i_10 = 0; i_10 < children.length; i_10++) {\n                    if (children[i_10].textNodes) {\n                        if (actualObject.shapeAnnotationType === 'FreeText') {\n                            if (node.dynamicText) {\n                                children[i_10].content = node.dynamicText;\n                                actualObject.dynamicText = node.dynamicText;\n                            }\n                            else {\n                                children[i_10].content = actualObject.dynamicText;\n                            }\n                            children[i_10].width = actualObject.bounds.width;\n                        }\n                        else if (actualObject.enableShapeLabel === true && actualObject.measureType) {\n                            if (node.labelContent) {\n                                children[i_10].content = node.labelContent;\n                                actualObject.labelContent = node.labelContent;\n                            }\n                            else {\n                                children[i_10].content = actualObject.labelContent;\n                            }\n                            actualObject.notes = children[i_10].content;\n                        }\n                        else if (actualObject.enableShapeLabel === true) {\n                            if (node.labelContent) {\n                                children[i_10].content = node.labelContent;\n                                actualObject.labelContent = node.labelContent;\n                            }\n                            else {\n                                children[i_10].content = actualObject.labelContent;\n                            }\n                            actualObject.notes = children[i_10].content;\n                        }\n                        children[i_10].isDirt = true;\n                    }\n                    /** set text node width less than the parent */\n                }\n            }\n        }\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (actualObject && actualObject.formFieldAnnotationType) {\n            if (actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children[0];\n                children.actualSize.width = actualObject.wrapper.desiredSize.width;\n                children.actualSize.height = actualObject.wrapper.desiredSize.height;\n            }\n        }\n        if (actualObject && actualObject.shapeAnnotationType === 'FreeText' && actualObject.subject === 'Text Box') {\n            if (actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                if (children[1].childNodes.length > 1 && actualObject.textAlign === 'Justify') {\n                    children[1].horizontalAlignment = 'Center';\n                }\n                else if (children[1].childNodes.length === 1) {\n                    if (actualObject.textAlign === 'Justify') {\n                        children[1].horizontalAlignment = 'Left';\n                        children[1].setOffsetWithRespectToBounds(0, 0, null);\n                    }\n                    else if (actualObject.textAlign === 'Right') {\n                        children[1].horizontalAlignment = 'Right';\n                        children[1].setOffsetWithRespectToBounds(0.97, 0, null);\n                    }\n                    else if (actualObject.textAlign === 'Left') {\n                        children[1].horizontalAlignment = 'Left';\n                        children[1].setOffsetWithRespectToBounds(0, 0, null);\n                    }\n                    else if (actualObject.textAlign === 'Center') {\n                        children[1].horizontalAlignment = 'Center';\n                        children[1].setOffsetWithRespectToBounds(0.46, 0, null);\n                    }\n                }\n                for (var i_11 = 0; i_11 < children.length; i_11++) {\n                    if (children[i_11].textNodes && children[i_11].textNodes.length > 0) {\n                        children[i_11].isDirt = true;\n                        var childNodeHeight = children[i_11].textNodes.length * children[i_11].textNodes[0].dy;\n                        var heightDiff = actualObject.bounds.height - childNodeHeight;\n                        if (heightDiff > 0 && heightDiff < children[i_11].textNodes[0].dy) {\n                            childNodeHeight = childNodeHeight + children[i_11].textNodes[0].dy;\n                        }\n                        if (childNodeHeight > actualObject.bounds.height) {\n                            var contString = '';\n                            for (var index = 0; index < children[i_11].textNodes.length; index++) {\n                                // eslint-disable-next-line\n                                var childHeight = children[i_11].textNodes[0].dy * (index + 1);\n                                // eslint-disable-next-line\n                                childHeight = childHeight;\n                                contString = contString + children[i_11].textNodes[index].text;\n                            }\n                            children[i_11].content = contString;\n                        }\n                    }\n                    /** set text node width less than the parent */\n                    children[i_11].width = actualObject.bounds.width;\n                }\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        }\n        this.pdfViewer.renderDrawing(undefined, actualObject.pageIndex);\n        if (actualObject && actualObject.shapeAnnotationType === 'FreeText') {\n            if (actualObject.wrapper && actualObject.wrapper.children && actualObject.wrapper.children.length) {\n                // eslint-disable-next-line\n                var children = actualObject.wrapper.children;\n                if (children[1].childNodes.length === 1 && actualObject.textAlign === 'Justify') {\n                    children[1].horizontalAlignment = 'Left';\n                    children[1].setOffsetWithRespectToBounds(0.5, 0, null);\n                }\n                else if (children[1].childNodes.length > 1 && actualObject.textAlign === 'Justify') {\n                    children[1].horizontalAlignment = 'Center';\n                    children[1].setOffsetWithRespectToBounds(0, 0, null);\n                }\n            }\n        }\n    };\n    Drawing.prototype.fontSizeCalculation = function (actualObject, element, boundsWidth) {\n        var canvas = document.getElementById(this.pdfViewer.element.id + '_annotationCanvas_' + actualObject.pageIndex);\n        var context = canvas.getContext(\"2d\");\n        var textwidth = 0;\n        var newsize = 0;\n        var fontStyle = '';\n        if (element.style.italic && element.style.bold) {\n            fontStyle = 'bold italic ';\n        }\n        else if (element.style.bold) {\n            fontStyle = 'bold ';\n        }\n        else if (element.style.italic) {\n            fontStyle = 'italic ';\n        }\n        while (boundsWidth > textwidth) {\n            context.font = fontStyle + newsize + 'px ' + element.style.fontFamily;\n            textwidth = context.measureText(actualObject.dynamicText).width;\n            newsize += 0.1;\n        }\n        newsize -= 0.1;\n        return newsize;\n    };\n    // eslint-disable-next-line\n    Drawing.prototype.setLineDistance = function (actualObject, points, segment, leader) {\n        var node1;\n        if (leader) {\n            node1 = initLeader(actualObject, points[1], points[0], leader);\n        }\n        else {\n            node1 = initLeader(actualObject, points[0], points[1], leader);\n        }\n        segment.data = node1.data;\n        segment.offsetX = node1.offsetX;\n        segment.offsetY = node1.offsetY;\n        segment.rotateAngle = node1.rotateAngle;\n        segment.width = node1.width;\n        segment.height = node1.height;\n        segment.pivot = node1.pivot;\n        segment.canMeasurePath = true;\n        segment.isDirt = true;\n    };\n    /**\n     * @private\n     * @param {number} sx - Specified the sx value.\n     * @param {number} sy - Specified the sy value.\n     * @param {PointModel} pivot - Specified the pivot value.\n     * @returns {boolean} - Returns true or false.\n     */\n    Drawing.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.pdfViewer.selectedItems;\n        return this.scale(obj, sx, sy, pivot);\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel | SelectorModel} obj - Specified the annotaion object.\n     * @param {number} sx - Specified the sx value.\n     * @param {number} sy - Specified the sy value.\n     * @param {PointModel} pivot - Specified the pivot value.\n     * @returns {boolean} - Returns true or false.\n     */\n    Drawing.prototype.scale = function (obj, sx, sy, pivot) {\n        var checkBoundaryConstraints = true;\n        if (obj instanceof Selector) {\n            if (obj.annotations && obj.annotations.length) {\n                for (var _i = 0, _a = obj.annotations; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.scaleAnnotation(node, sx, sy, pivot, obj);\n                }\n            }\n            else if (obj.formFields && obj.formFields.length) {\n                for (var _b = 0, _c = obj.formFields; _b < _c.length; _b++) {\n                    var node = _c[_b];\n                    checkBoundaryConstraints = this.scaleAnnotation(node, sx, sy, pivot, obj);\n                }\n            }\n        }\n        else {\n            checkBoundaryConstraints = this.scaleAnnotation(obj, sx, sy, pivot, undefined);\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * @private\n     * @param {number} sw - Specified the sw value.\n     * @param {number} sh - Specified the sh value.\n     * @param {PointModel} pivot - Specified the pivot value.\n     * @param {IElement} obj - Specified the annotation object.\n     * @param {DrawingElement} element - Specified the annotation element.\n     * @param {IElement} refObject - Specified the annotation reference object.\n     * @returns {void}\n     */\n    Drawing.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (!isLineShapes(obj)) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.wrapper.actualSize.width;\n                sh = height / node.wrapper.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            if (!refObject) {\n                refObject = obj;\n            }\n            var refWrapper = refObject.wrapper;\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (!isLineShapes(obj)) {\n                var node = obj;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                if (width > 0) {\n                    node.wrapper.width = width;\n                    node.wrapper.offsetX = newPosition.x;\n                }\n                if (height > 0) {\n                    node.wrapper.height = height;\n                    node.wrapper.offsetY = newPosition.y;\n                }\n                this.nodePropertyChange(obj, {\n                    bounds: { width: node.wrapper.width, height: node.wrapper.height, x: node.wrapper.offsetX, y: node.wrapper.offsetY }\n                });\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotaion object.\n     * @param {number} sw - Specified the sw value.\n     * @param {number} sh - Specified the sh value.\n     * @param {PointModel} pivot - Specified the pivot value.\n     * @param {IElement} refObject - Specified the reference object.\n     * @returns {boolean} - Returns true or false.\n     */\n    Drawing.prototype.scaleAnnotation = function (obj, sw, sh, pivot, refObject) {\n        // eslint-disable-next-line\n        var node = this.pdfViewer.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = this.getShapePoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined) {\n            this.scaleObject(sw, sh, refPoint, node, element, refObject);\n        }\n        // eslint-disable-next-line max-len\n        var constraints = this.checkBoundaryConstraints(undefined, undefined, obj.pageIndex, obj.wrapper.bounds);\n        if (!constraints) {\n            this.scaleObject(1 / sw, 1 / sh, refPoint, node, element, refObject);\n        }\n        return constraints;\n    };\n    /**\n     * @private\n     * @param {number} tx - Specified the tx value.\n     * @param {number} ty - Specified the ty value.\n     * @param {number} pageIndex - Specified the page index value.\n     * @param {Rect} nodeBounds - Specified the node bounds value.\n     * @param {boolean} isStamp - Specified the annotation is stamp or not.\n     * @param {boolean} isSkip - Specified the annotaion is skip or not.\n     * @returns {boolean} - Returns true or false.\n     */\n    // eslint-disable-next-line max-len\n    Drawing.prototype.checkBoundaryConstraints = function (tx, ty, pageIndex, nodeBounds, isStamp, isSkip) {\n        var selectorBounds = !nodeBounds ? this.pdfViewer.selectedItems.wrapper.bounds : undefined;\n        var bounds = nodeBounds;\n        // eslint-disable-next-line\n        var canvas = document.getElementById(this.pdfViewer.element.id + '_annotationCanvas_' + pageIndex);\n        var heightDifference = 1;\n        if (canvas) {\n            var width = canvas.clientWidth / this.pdfViewer.viewerBase.getZoomFactor();\n            var height = canvas.clientHeight / this.pdfViewer.viewerBase.getZoomFactor();\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_1 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (isStamp) {\n                heightDifference = 50;\n                if (this.pdfViewer.viewerBase.eventArgs && this.pdfViewer.viewerBase.eventArgs.source) {\n                    if (this.RestrictStamp(this.pdfViewer.viewerBase.eventArgs.source)) {\n                        return false;\n                    }\n                }\n            }\n            if ((right <= width - 3 && left >= 1 && bottom <= height - 3 && top_1 >= heightDifference) || isSkip) {\n                return true;\n            }\n        }\n        return false;\n    };\n    // eslint-disable-next-line\n    Drawing.prototype.RestrictStamp = function (source) {\n        // eslint-disable-next-line max-len\n        if (source && source.pageIndex !== undefined && this.pdfViewer.viewerBase.activeElements && source.pageIndex !== this.pdfViewer.viewerBase.activeElements.activePageID) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     * @param {DrawingElement} shapeElement - Specified the shape element.\n     * @returns {Rect} - Returns the rectangle object.\n     */\n    Drawing.prototype.getShapeBounds = function (shapeElement) {\n        var shapeBounds = new Rect();\n        var shapeCorners = cornersPointsBeforeRotation(shapeElement);\n        var shapeMiddleLeft = shapeCorners.middleLeft;\n        var shapeTopCenter = shapeCorners.topCenter;\n        var shapeBottomCenter = shapeCorners.bottomCenter;\n        var shapeMiddleRight = shapeCorners.middleRight;\n        var shapeTopLeft = shapeCorners.topLeft;\n        var shapeTopRight = shapeCorners.topRight;\n        var shapeBottomLeft = shapeCorners.bottomLeft;\n        var shapeBottomRight = shapeCorners.bottomRight;\n        shapeElement.corners = {\n            topLeft: shapeTopLeft, topCenter: shapeTopCenter, topRight: shapeTopRight, middleLeft: shapeMiddleLeft,\n            middleRight: shapeMiddleRight, bottomLeft: shapeBottomLeft, bottomCenter: shapeBottomCenter, bottomRight: shapeBottomRight\n        };\n        if (shapeElement.rotateAngle !== 0 || shapeElement.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, shapeElement.rotateAngle + shapeElement.parentTransform, shapeElement.offsetX, shapeElement.offsetY);\n            shapeElement.corners.topLeft = shapeTopLeft = transformPointByMatrix(matrix, shapeTopLeft);\n            shapeElement.corners.topCenter = shapeTopCenter = transformPointByMatrix(matrix, shapeTopCenter);\n            shapeElement.corners.topRight = shapeTopRight = transformPointByMatrix(matrix, shapeTopRight);\n            shapeElement.corners.middleLeft = shapeMiddleLeft = transformPointByMatrix(matrix, shapeMiddleLeft);\n            shapeElement.corners.middleRight = shapeMiddleRight = transformPointByMatrix(matrix, shapeMiddleRight);\n            shapeElement.corners.bottomLeft = shapeBottomLeft = transformPointByMatrix(matrix, shapeBottomLeft);\n            shapeElement.corners.bottomCenter = shapeBottomCenter = transformPointByMatrix(matrix, shapeBottomCenter);\n            shapeElement.corners.bottomRight = shapeBottomRight = transformPointByMatrix(matrix, shapeBottomRight);\n            //Set corners based on rotate angle\n        }\n        shapeBounds = Rect.toBounds([shapeTopLeft, shapeTopRight, shapeBottomLeft, shapeBottomRight]);\n        shapeElement.corners.left = shapeBounds.left;\n        shapeElement.corners.right = shapeBounds.right;\n        shapeElement.corners.top = shapeBounds.top;\n        shapeElement.corners.bottom = shapeBounds.bottom;\n        shapeElement.corners.center = shapeBounds.center;\n        shapeElement.corners.width = shapeBounds.width;\n        shapeElement.corners.height = shapeBounds.height;\n        return shapeBounds;\n    };\n    /**\n     * @private\n     * @param {number} x - Specified the x value.\n     * @param {number} y - Specified the y value.\n     * @param {number} w - Specified the w value.\n     * @param {number} h - Specified the h value.\n     * @param {number} angle - Specified the angle value.\n     * @param {number} offsetX - Specified the offset x value.\n     * @param {number} offsetY - Specified the offset y value.\n     * @param {PointModel} cornerPoint - Specified the corner point value.\n     * @returns {PointModel} - Returns the point model.\n     */\n    Drawing.prototype.getShapePoint = function (x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n        var pivotPoint = { x: 0, y: 0 };\n        var transformMatrix = identityMatrix();\n        rotateMatrix(transformMatrix, angle, offsetX, offsetY);\n        switch (cornerPoint.x) {\n            case 1:\n                switch (cornerPoint.y) {\n                    case 1:\n                        pivotPoint = transformPointByMatrix(transformMatrix, ({ x: x + w, y: y + h }));\n                        break;\n                    case 0:\n                        pivotPoint = transformPointByMatrix(transformMatrix, ({ x: x + w, y: y }));\n                        break;\n                    case 0.5:\n                        pivotPoint = transformPointByMatrix(transformMatrix, ({ x: x + w, y: y + h / 2 }));\n                        break;\n                }\n                break;\n            case 0:\n                switch (cornerPoint.y) {\n                    case 0.5:\n                        pivotPoint = transformPointByMatrix(transformMatrix, ({ x: x, y: y + h / 2 }));\n                        break;\n                    case 1:\n                        pivotPoint = transformPointByMatrix(transformMatrix, ({ x: x, y: y + h }));\n                        break;\n                    case 0:\n                        pivotPoint = transformPointByMatrix(transformMatrix, ({ x: x, y: y }));\n                        break;\n                }\n                break;\n            case 0.5:\n                switch (cornerPoint.y) {\n                    case 0:\n                        pivotPoint = transformPointByMatrix(transformMatrix, ({ x: x + w / 2, y: y }));\n                        break;\n                    case 0.5:\n                        pivotPoint = transformPointByMatrix(transformMatrix, ({ x: x + w / 2, y: y + h / 2 }));\n                        break;\n                    case 1:\n                        pivotPoint = transformPointByMatrix(transformMatrix, ({ x: x + w / 2, y: y + h }));\n                        break;\n                }\n                break;\n        }\n        return { x: pivotPoint.x, y: pivotPoint.y };\n    };\n    /**\n     * @private\n     * @param {string} endPoint - Specified the end point value.\n     * @param {IElement} obj - Specified the annotaion object.\n     * @param {PointModel} point - Specified the annotation points.\n     * @param {PointModel} segment - Specified the annotaion segment.\n     * @param {IElement} target - Specified the target element.\n     * @param {string} targetPortId - Specified the target port id.\n     * @param {any} currentSelector - Specified the current selector value.\n     * @returns {boolean} - Returns true or false.\n     */\n    // eslint-disable-next-line\n    Drawing.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId, currentSelector) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        // eslint-disable-next-line\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.annotations[0];\n        }\n        else {\n            connector = obj;\n        }\n        point = { x: point.x / this.pdfViewer.viewerBase.getZoomFactor(), y: point.y / this.pdfViewer.viewerBase.getZoomFactor() };\n        if (this.checkBoundaryConstraints(undefined, undefined, connector.pageIndex, connector.wrapper.bounds)) {\n            if (connector.shapeAnnotationType === 'Distance') {\n                var leader = isLeader(connector, endPoint);\n                if (endPoint === 'Leader0') {\n                    if (this.pdfViewer.viewerBase.tool instanceof LineTool) {\n                        connector.vertexPoints[0].x = point.x;\n                        connector.vertexPoints[0].y = point.y;\n                    }\n                    else {\n                        tx = point.x - leader.point.x;\n                        ty = point.y - leader.point.y;\n                        connector.vertexPoints[0].x += tx;\n                        connector.vertexPoints[0].y += ty;\n                    }\n                }\n                else if (endPoint === 'Leader1') {\n                    var length_2 = connector.vertexPoints.length - 1;\n                    if (this.pdfViewer.viewerBase.tool instanceof LineTool) {\n                        connector.vertexPoints[length_2].x = point.x;\n                        connector.vertexPoints[length_2].y = point.y;\n                    }\n                    else {\n                        tx = point.x - leader.point.x;\n                        ty = point.y - leader.point.y;\n                        connector.vertexPoints[length_2].x += tx;\n                        connector.vertexPoints[length_2].y += ty;\n                    }\n                }\n                else {\n                    // eslint-disable-next-line\n                    var angle = Point.findAngle(connector.sourcePoint, connector.targetPoint);\n                    // eslint-disable-next-line\n                    var center = obj.wrapper.children[0].bounds.center;\n                    // eslint-disable-next-line\n                    var matrix = identityMatrix();\n                    rotateMatrix(matrix, -angle, center.x, center.y);\n                    // eslint-disable-next-line\n                    var rotatedPoint = transformPointByMatrix(matrix, { x: point.x, y: point.y });\n                    if (endPoint.split('_')[0] === 'ConnectorSegmentPoint') {\n                        // eslint-disable-next-line\n                        var matrix = identityMatrix();\n                        rotateMatrix(matrix, -angle, center.x, center.y);\n                        // eslint-disable-next-line\n                        var rotatedPoint1 = transformPointByMatrix(matrix, connector.vertexPoints[0]);\n                        // eslint-disable-next-line\n                        var rotatedPoint2 = transformPointByMatrix(matrix, connector.vertexPoints[connector.vertexPoints.length - 1]);\n                        ty = rotatedPoint.y - rotatedPoint1.y;\n                        if (connector.leaderHeight === 0 && connector.leaderHeight != null) {\n                            connector.leaderHeight = this.pdfViewer.distanceSettings.leaderLength;\n                        }\n                        else {\n                            connector.leaderHeight += ty;\n                            rotatedPoint1.y += ty;\n                            rotatedPoint2.y += ty;\n                            // eslint-disable-next-line\n                            var matrix = identityMatrix();\n                            rotateMatrix(matrix, angle, center.x, center.y);\n                            connector.vertexPoints[0] = transformPointByMatrix(matrix, rotatedPoint1);\n                            connector.vertexPoints[connector.vertexPoints.length - 1] = transformPointByMatrix(matrix, rotatedPoint2);\n                        }\n                    }\n                }\n            }\n            else if (endPoint.split('_')[0] === 'ConnectorSegmentPoint') {\n                var i = Number(endPoint.split('_')[1]);\n                tx = point.x - connector.vertexPoints[i].x;\n                ty = point.y - connector.vertexPoints[i].y;\n                connector.vertexPoints[i].x += tx;\n                connector.vertexPoints[i].y += ty;\n                if (connector.vertexPoints.length > 2 && obj.measureType !== 'Perimeter') {\n                    if (parseFloat(endPoint.split('_')[1]) === 0) {\n                        connector.vertexPoints[connector.vertexPoints.length - 1].x += tx;\n                        connector.vertexPoints[connector.vertexPoints.length - 1].y += ty;\n                    }\n                    else if (parseFloat(endPoint.split('_')[1]) === connector.vertexPoints.length - 1) {\n                        connector.vertexPoints[0].x += tx;\n                        connector.vertexPoints[0].y += ty;\n                    }\n                }\n            }\n            this.nodePropertyChange(connector, { vertexPoints: connector.vertexPoints });\n            this.renderSelector(connector.pageIndex, currentSelector);\n        }\n        this.pdfViewer.renderDrawing();\n        return true;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n     * @param {number} tx - Specified the tx value.\n     * @param {number} ty - Specified the y value.\n     * @param {number} i - Specified the index value.\n     * @returns {boolean} - Returns true or false.\n     */\n    Drawing.prototype.dragSourceEnd = function (obj, tx, ty, i) {\n        // eslint-disable-next-line\n        var connector = this.pdfViewer.nameTable[obj.id];\n        connector.vertexPoints[i].x += tx;\n        connector.vertexPoints[i].y += ty;\n        this.pdfViewer.renderDrawing();\n        return true;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} connector - Specified the connector object.\n     * @param {PointModel[]} points - Specified the points value.\n     * @returns {void}\n     */\n    Drawing.prototype.updateConnector = function (connector, points) {\n        var srcDecorator;\n        var tarDecorator;\n        var targetPoint;\n        connector.vertexPoints = points;\n        updateSegmentElement(connector, points, connector.wrapper.children[0]);\n        var srcPoint = connector.sourcePoint;\n        var anglePoint = connector.vertexPoints;\n        //  points = this.clipDecorators(connector, points);\n        var element = connector.wrapper.children[0];\n        element.canMeasurePath = true;\n        for (var i = 0; i < connector.wrapper.children.length; i++) {\n            element = connector.wrapper.children[i];\n            if (connector.shapeAnnotationType !== 'Polygon') {\n                if (element.id.indexOf('srcDec') > -1) {\n                    updateDecoratorElement(connector, element, points[0], anglePoint[1], true);\n                }\n                targetPoint = connector.targetPoint;\n                if (element.id.indexOf('tarDec') > -1) {\n                    updateDecoratorElement(connector, element, points[points.length - 1], anglePoint[anglePoint.length - 2], false);\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     * @returns {Object} - Returns the object.\n     */\n    Drawing.prototype.copy = function () {\n        this.pdfViewer.clipboardData.pasteIndex = 1;\n        this.pdfViewer.clipboardData.clipObject = this.copyObjects();\n        return this.pdfViewer.clipboardData.clipObject;\n    };\n    /**\n     * @private\n     * @returns {Object[]} - Returns the object array.\n     */\n    Drawing.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.pdfViewer.clipboardData.childTable = {};\n        if (this.pdfViewer.selectedItems.annotations.length > 0) {\n            selectedItems = this.pdfViewer.selectedItems.annotations;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = cloneObject((selectedItems[j]));\n                obj.push(element);\n            }\n        }\n        if (this.pdfViewer.selectedItems.formFields.length > 0) {\n            selectedItems = this.pdfViewer.selectedItems.formFields;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = cloneObject((selectedItems[j]));\n                obj.push(element);\n            }\n        }\n        if (this.pdfViewer.clipboardData.pasteIndex === 0) {\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                // eslint-disable-next-line\n                if (this.pdfViewer.nameTable[item.id]) {\n                    if (!item.formFieldAnnotationType) {\n                        if (item.annotName)\n                            this.pdfViewer.annotationModule.deleteAnnotationById(item.annotName);\n                        else\n                            this.pdfViewer.annotationModule.deleteAnnotation();\n                    }\n                    else {\n                        this.pdfViewer.clearSelection(item.pageIndex);\n                        this.pdfViewer.formDesignerModule.deleteFormField(item.id);\n                    }\n                }\n            }\n            //this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    Drawing.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.pdfViewer.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel[]} obj - Specified the annotation object.\n     * @param {number} index - Specified the annotation index.\n     * @returns {void}\n     */\n    Drawing.prototype.paste = function (obj, index) {\n        var zoomfactor = this.pdfViewer.viewerBase.getZoomFactor();\n        var allowServerDataBind = this.pdfViewer.allowServerDataBinding;\n        this.pdfViewer.enableServerDataBinding(false);\n        if (obj || this.pdfViewer.clipboardData.clipObject) {\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.pdfViewer.clipboardData.clipObject;\n            if (copiedItems) {\n                var objectTable = {};\n                if (this.pdfViewer.clipboardData.pasteIndex !== 0) {\n                    this.pdfViewer.clearSelection(index);\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    copy.id += randomId();\n                    var fieldName = this.splitFormFieldName(copy);\n                    var maxNumber = 0; // this.pdfViewer.formFieldCollection.length;\n                    if (this.pdfViewer.formDesigner) {\n                        this.pdfViewer.formDesigner.setFormFieldIndex();\n                        maxNumber = this.pdfViewer.formDesigner.formFieldIndex;\n                        copy.name = fieldName + maxNumber;\n                    }\n                    // eslint-disable-next-line\n                    objectTable[copy.id] = copy;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    var pageDiv = this.pdfViewer.viewerBase.getElement('_pageDiv_' + copy.pageIndex);\n                    // eslint-disable-next-line\n                    var events = event;\n                    if (events && !events.clientX && !events.clientY) {\n                        events = { clientX: this.pdfViewer.viewerBase.mouseLeft, clientY: this.pdfViewer.viewerBase.mouseTop };\n                    }\n                    if (isBlazor()) {\n                        events = this.pdfViewer.viewerBase.mouseDownEvent;\n                    }\n                    if (isLineShapes(copy)) {\n                        this.calculateCopyPosition(copy, pageDiv, events);\n                    }\n                    else {\n                        if (pageDiv) {\n                            var pageCurrentRect = pageDiv.getBoundingClientRect();\n                            copy.bounds.x = (events.clientX - pageCurrentRect.left) / zoomfactor;\n                            copy.bounds.y = (events.clientY - pageCurrentRect.top) / zoomfactor;\n                        }\n                    }\n                    var newNode = cloneObject(copy);\n                    if (this.pdfViewer.viewerBase.contextMenuModule.previousAction !== 'Cut') {\n                        newNode.id += randomId();\n                        if (this.pdfViewer.annotationModule && newNode.shapeAnnotationType !== 'HandWrittenSignature') {\n                            newNode.annotName = newNode.id;\n                            // eslint-disable-next-line max-len\n                            this.pdfViewer.annotationModule.stickyNotesAnnotationModule.updateAnnotationCollection(newNode, copiedItems[0], false);\n                        }\n                        if (newNode.shapeAnnotationType === 'SignatureText' || newNode.shapeAnnotationType === 'HandWrittenSignature' || newNode.shapeAnnotationType === 'SignatureImage') {\n                            this.pdfViewer.viewerBase.signatureModule.storeSignatureData(newNode.pageIndex, newNode);\n                        }\n                        if (!newNode.formFieldAnnotationType) {\n                            this.pdfViewer.annotation.addAction(newNode.pageIndex, null, newNode, 'Addition', '', newNode, newNode);\n                        }\n                    }\n                    else {\n                        if (this.pdfViewer.annotationModule) {\n                            // eslint-disable-next-line max-len\n                            this.pdfViewer.annotationModule.stickyNotesAnnotationModule.updateAnnotationCollection(newNode, copiedItems[0], true);\n                        }\n                        if (newNode.shapeAnnotationType === 'SignatureText' || newNode.shapeAnnotationType === 'HandWrittenSignature' || newNode.shapeAnnotationType === 'SignatureImage') {\n                            this.pdfViewer.viewerBase.signatureModule.storeSignatureData(newNode.pageIndex, newNode);\n                        }\n                    }\n                    var addedAnnot = this.add(newNode);\n                    if (this.pdfViewer.formDesigner && addedAnnot.formFieldAnnotationType) {\n                        this.pdfViewer.annotation.addAction(newNode.pageIndex, null, addedAnnot, 'Addition', '', addedAnnot, addedAnnot);\n                    }\n                    if ((newNode.shapeAnnotationType === 'FreeText' || newNode.enableShapeLabel) && addedAnnot) {\n                        this.nodePropertyChange(addedAnnot, {});\n                    }\n                    if (addedAnnot.formFieldAnnotationType && addedAnnot.pageIndex === index) {\n                        this.pdfViewer.formFieldCollection.push(addedAnnot);\n                        // eslint-disable-next-line max-len\n                        var formField = { id: addedAnnot.id, name: addedAnnot.name, value: addedAnnot.value, type: addedAnnot.formFieldAnnotationType,\n                            isReadOnly: addedAnnot.isReadonly, fontFamily: addedAnnot.fontFamily,\n                            // eslint-disable-next-line max-len\n                            fontSize: addedAnnot.fontSize, fontStyle: addedAnnot.fontStyle, color: addedAnnot.color, backgroundColor: addedAnnot.backgroundColor,\n                            // eslint-disable-next-line max-len\n                            alignment: addedAnnot.alignment, visibility: addedAnnot.visibility, maxLength: addedAnnot.maxLength, isRequired: addedAnnot.isRequired,\n                            // eslint-disable-next-line max-len\n                            isPrint: addedAnnot.isPrint, isSelected: addedAnnot.isSelected, isChecked: addedAnnot.isChecked, tooltip: addedAnnot.tooltip, bounds: addedAnnot.bounds, thickness: addedAnnot.thickness, borderColor: addedAnnot.borderColor, signatureIndicatorSettings: addedAnnot.signatureIndicatorSettings\n                        };\n                        if (addedAnnot.options && addedAnnot.options.length > 0) {\n                            formField.options = addedAnnot.options;\n                        }\n                        this.pdfViewer.formFieldCollections.push(formField);\n                        // eslint-disable-next-line max-len\n                        this.pdfViewer.formDesigner.drawHTMLContent(addedAnnot.formFieldAnnotationType, addedAnnot.wrapper.children[0], addedAnnot, addedAnnot.pageIndex, this.pdfViewer);\n                    }\n                    this.pdfViewer.select([newNode.id], this.pdfViewer.annotationSelectorSettings);\n                    if (!addedAnnot.formFieldAnnotationType) {\n                        this.pdfViewer.annotationModule.triggerAnnotationAddEvent(newNode);\n                    }\n                    ;\n                }\n            }\n            this.pdfViewer.renderDrawing(undefined, index);\n            this.pdfViewer.clipboardData.pasteIndex++;\n        }\n        this.pdfViewer.enableServerDataBinding(allowServerDataBind, true);\n    };\n    Drawing.prototype.splitFormFieldName = function (obj) {\n        // eslint-disable-next-line\n        var field = null;\n        if (obj) {\n            switch (obj.formFieldAnnotationType) {\n                case 'Textbox':\n                    field = \"Textbox\";\n                    break;\n                case 'PasswordField':\n                    field = \"Password\";\n                    break;\n                case 'Checkbox':\n                    field = \"Check Box\";\n                    break;\n                case 'RadioButton':\n                    field = \"Radio Button\";\n                    break;\n                case 'DropdownList':\n                    field = \"Dropdown\";\n                    break;\n                case 'ListBox':\n                    field = \"List Box\";\n                    break;\n                case 'SignatureField':\n                    field = \"Signature\";\n                    break;\n                case 'InitialField':\n                    field = \"Initial\";\n                    break;\n            }\n        }\n        return field;\n    };\n    Drawing.prototype.calculateCopyPosition = function (copy, pageDiv, events) {\n        var zoomfactor = this.pdfViewer.viewerBase.getZoomFactor();\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        for (var i = 0; i < copy.vertexPoints.length; i++) {\n            if (pageDiv) {\n                if (i === 0) {\n                    var pageCurrentRect = pageDiv.getBoundingClientRect();\n                    x1 = copy.vertexPoints[i].x;\n                    y1 = copy.vertexPoints[i].y;\n                    copy.vertexPoints[i].x = (events.clientX - pageCurrentRect.left) / zoomfactor;\n                    copy.vertexPoints[i].y = (events.clientY - pageCurrentRect.top) / zoomfactor;\n                    x2 = copy.vertexPoints[i].x;\n                    y2 = copy.vertexPoints[i].y;\n                }\n                else {\n                    copy.vertexPoints[i].x += x2 - x1;\n                    copy.vertexPoints[i].y += y2 - y1;\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} index - Specified the annotaion index.\n     * @returns {void}\n     */\n    Drawing.prototype.cut = function (index) {\n        var allowServerDataBind = this.pdfViewer.allowServerDataBinding;\n        this.pdfViewer.enableServerDataBinding(false);\n        if (this.pdfViewer.annotationModule) {\n            this.pdfViewer.annotationModule.removedAnnotationCollection = [];\n        }\n        this.pdfViewer.clipboardData.pasteIndex = 0;\n        this.pdfViewer.clipboardData.clipObject = this.copyObjects();\n        this.pdfViewer.renderDrawing(undefined, index);\n        this.pdfViewer.enableServerDataBinding(allowServerDataBind, true);\n    };\n    /**\n     * @private\n     * @param {Object[]} nodeArray - Specified the node array.\n     * @param {string} sortID - Specified the sort id.\n     * @returns {Object[]} - Returns the node array.\n     */\n    Drawing.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            // eslint-disable-next-line\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    return Drawing;\n}());\nexport { Drawing };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}