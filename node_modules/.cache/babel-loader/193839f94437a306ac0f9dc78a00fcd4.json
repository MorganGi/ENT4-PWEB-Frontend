{"ast":null,"code":"/* eslint-disable */\nimport { FontStyle } from './../base/types';\nimport { isBlazor, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * @hidden\n */\n\nvar FreeTextAnnotation =\n/** @class */\nfunction () {\n  function FreeTextAnnotation(pdfviewer, pdfViewerBase) {\n    /**\n     * @private\n     */\n    this.inputBoxCount = 0;\n    /**\n     * @private\n     */\n\n    this.isFreeTextValueChange = false;\n    /**\n     * @private\n     */\n\n    this.isAddAnnotationProgramatically = false;\n    /**\n     * @private\n     */\n\n    this.isInuptBoxInFocus = false;\n    /**\n     * @private\n     */\n    // eslint-disable-next-line\n\n    this.freeTextPageNumbers = [];\n    /**\n     * @private\n     */\n\n    this.selectedText = '';\n    /**\n     * @private\n     */\n\n    this.isTextSelected = false;\n    this.selectionStart = 0;\n    this.selectionEnd = 0;\n    /**\n     * @private\n     */\n\n    this.isBold = false;\n    /**\n     * @private\n     */\n\n    this.isItalic = false;\n    /**\n     * @private\n     */\n\n    this.isUnderline = false;\n    /**\n     * @private\n     */\n\n    this.isStrikethrough = false;\n    this.isReadonly = false;\n    this.isMaximumWidthReached = false;\n    /**\n     * @private\n     */\n\n    this.previousText = 'Type Here';\n    /**\n     * @private\n     */\n\n    this.currentPosition = [];\n    this.pdfViewer = pdfviewer;\n    this.pdfViewerBase = pdfViewerBase;\n    this.updateTextProperties();\n    this.inputBoxElement = document.createElement('textarea');\n    this.inputBoxElement.style.position = 'absolute';\n    this.inputBoxElement.style.Width = this.defautWidth;\n    this.inputBoxElement.style.Height = this.defaultHeight;\n    this.inputBoxElement.style.zIndex = '5';\n    this.inputBoxElement.style.fontSize = this.fontSize + 'px';\n    this.inputBoxElement.className = 'free-text-input';\n    this.inputBoxElement.style.resize = 'none';\n    this.inputBoxElement.style.borderColor = this.borderColor;\n    this.inputBoxElement.style.background = this.fillColor;\n    this.inputBoxElement.style.borderStyle = this.borderStyle;\n    this.inputBoxElement.style.borderWidth = this.borderWidth + 'px';\n    this.inputBoxElement.style.padding = this.padding;\n    this.inputBoxElement.style.paddingLeft = '3px';\n    this.inputBoxElement.style.borderRadius = '2px';\n    this.inputBoxElement.style.verticalAlign = 'middle';\n    this.inputBoxElement.style.fontFamily = this.fontFamily;\n    this.inputBoxElement.style.color = this.pdfViewer.freeTextSettings.fontColor ? this.pdfViewer.freeTextSettings.fontColor : '#000';\n    this.inputBoxElement.style.overflow = 'hidden';\n    this.inputBoxElement.style.wordBreak = this.wordBreak;\n    this.inputBoxElement.readOnly = this.isReadonly;\n    this.inputBoxElement.addEventListener('focusout', this.onFocusOutInputBox.bind(this));\n    this.inputBoxElement.addEventListener('keydown', this.onKeyDownInputBox.bind(this));\n    this.inputBoxElement.addEventListener('mouseup', this.onMouseUpInputBox.bind(this));\n    this.freeTextPageNumbers = [];\n  }\n  /**\n   * @private\n   */\n\n\n  FreeTextAnnotation.prototype.updateTextProperties = function () {\n    this.defautWidth = this.pdfViewer.freeTextSettings.width ? this.pdfViewer.freeTextSettings.width : 151;\n    this.defaultHeight = this.pdfViewer.freeTextSettings.height ? this.pdfViewer.freeTextSettings.height : 24.6;\n    this.borderColor = this.pdfViewer.freeTextSettings.borderColor ? this.pdfViewer.freeTextSettings.borderColor : '#ffffff00';\n    this.fillColor = this.pdfViewer.freeTextSettings.fillColor ? this.pdfViewer.freeTextSettings.fillColor : '#fff';\n    this.borderStyle = this.pdfViewer.freeTextSettings.borderStyle ? this.pdfViewer.freeTextSettings.borderStyle : 'solid';\n    this.borderWidth = this.pdfViewer.freeTextSettings.borderWidth ? this.pdfViewer.freeTextSettings.borderWidth : 1;\n    this.fontSize = this.pdfViewer.freeTextSettings.fontSize ? this.pdfViewer.freeTextSettings.fontSize : 16;\n    this.opacity = this.pdfViewer.freeTextSettings.opacity ? this.pdfViewer.freeTextSettings.opacity : 1;\n    this.fontColor = this.pdfViewer.freeTextSettings.fontColor ? this.pdfViewer.freeTextSettings.fontColor : '#000'; // eslint-disable-next-line max-len\n\n    this.author = this.pdfViewer.freeTextSettings.author !== 'Guest' ? this.pdfViewer.freeTextSettings.author : this.pdfViewer.annotationSettings.author ? this.pdfViewer.annotationSettings.author : 'Guest';\n\n    if (this.pdfViewer.freeTextSettings.fontFamily) {\n      var fontName = this.pdfViewer.freeTextSettings.fontFamily;\n\n      if (fontName === 'Helvetica' || fontName === 'Times New Roman' || fontName === 'Courier' || fontName === 'Symbol' || fontName === 'ZapfDingbats') {\n        this.fontFamily = fontName;\n      } else {\n        this.fontFamily = 'Helvetica';\n      }\n    } else {\n      this.fontFamily = 'Helvetica';\n    }\n\n    this.textAlign = this.pdfViewer.freeTextSettings.textAlignment ? this.pdfViewer.freeTextSettings.textAlignment : 'Left';\n    this.defaultText = this.pdfViewer.freeTextSettings.defaultText ? this.pdfViewer.freeTextSettings.defaultText : 'Type here';\n    this.isReadonly = false;\n\n    if (this.pdfViewer.freeTextSettings.enableAutoFit) {\n      this.wordBreak = 'break-all';\n      this.padding = '2px';\n    } else {\n      this.padding = '0px';\n      this.wordBreak = 'break-word';\n    } // eslint-disable-next-line max-len\n\n\n    if (this.pdfViewer.freeTextSettings.isLock || this.pdfViewer.annotationSettings.isLock || this.pdfViewer.freeTextSettings.isReadonly) {\n      this.isReadonly = true;\n    }\n\n    if (this.pdfViewer.freeTextSettings.fontStyle === 1) {\n      this.isBold = true;\n    } else if (this.pdfViewer.freeTextSettings.fontStyle === 2) {\n      this.isItalic = true;\n    } else if (this.pdfViewer.freeTextSettings.fontStyle === 4) {\n      this.isUnderline = true;\n    } else if (this.pdfViewer.freeTextSettings.fontStyle === 8) {\n      this.isStrikethrough = true;\n    } else if (3 === this.pdfViewer.freeTextSettings.fontStyle) {\n      this.isBold = true;\n      this.isItalic = true;\n    } else if (5 === this.pdfViewer.freeTextSettings.fontStyle) {\n      this.isBold = true;\n      this.isUnderline = true;\n    } else if (9 === this.pdfViewer.freeTextSettings.fontStyle) {\n      this.isBold = true;\n      this.isStrikethrough = true;\n    } else if (7 === this.pdfViewer.freeTextSettings.fontStyle) {\n      this.isBold = true;\n      this.isItalic = true;\n      this.isUnderline = true;\n    } else if (11 === this.pdfViewer.freeTextSettings.fontStyle) {\n      this.isBold = true;\n      this.isItalic = true;\n      this.isStrikethrough = true;\n    } else if (14 === this.pdfViewer.freeTextSettings.fontStyle) {\n      this.isBold = true;\n      this.isUnderline = true;\n      this.isStrikethrough = true;\n    } else if (6 === this.pdfViewer.freeTextSettings.fontStyle) {\n      this.isUnderline = true;\n      this.isItalic = true;\n    }\n  };\n  /**\n   * @param shapeAnnotations\n   * @param pageNumber\n   * @param isImportAction\n   * @private\n   */\n  // eslint-disable-next-line\n\n\n  FreeTextAnnotation.prototype.renderFreeTextAnnotations = function (shapeAnnotations, pageNumber, isImportAction) {\n    var isFreeTextAdded = false;\n\n    if (!isImportAction) {\n      for (var p = 0; p < this.freeTextPageNumbers.length; p++) {\n        if (this.freeTextPageNumbers[p] === pageNumber) {\n          isFreeTextAdded = true;\n          break;\n        }\n      }\n    }\n\n    if (shapeAnnotations && !isFreeTextAdded) {\n      if (shapeAnnotations.length >= 1) {\n        this.freeTextPageNumbers.push(pageNumber);\n\n        for (var i = 0; i < shapeAnnotations.length; i++) {\n          // eslint-disable-next-line\n          var annotation = shapeAnnotations[i];\n          annotation.annotationAddMode = this.pdfViewer.annotationModule.findAnnotationMode(annotation, pageNumber, annotation.AnnotType);\n\n          if (annotation.AnnotType) {\n            var vertexPoints = null;\n\n            if (annotation.VertexPoints) {\n              vertexPoints = [];\n\n              for (var j = 0; j < annotation.VertexPoints.length; j++) {\n                var point = {\n                  x: annotation.VertexPoints[j].X,\n                  y: annotation.VertexPoints[j].Y\n                };\n                vertexPoints.push(point);\n              }\n            } // eslint-disable-next-line max-len\n\n\n            annotation.AnnotationSettings = annotation.AnnotationSettings ? annotation.AnnotationSettings : this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.freeTextSettings);\n            var annot = void 0;\n            var paddingValue = 0.5;\n            var annotationBoundsX = !isNullOrUndefined(annotation.Bounds.X) ? annotation.Bounds.X - paddingValue : annotation.Bounds.x;\n            var annotationBoundsY = !isNullOrUndefined(annotation.Bounds.Y) ? annotation.Bounds.Y - paddingValue : annotation.Bounds.y;\n            var width = annotation.Bounds.Width ? annotation.Bounds.Width : annotation.Bounds.width;\n            var height = annotation.Bounds.Height ? annotation.Bounds.Height : annotation.Bounds.height;\n            var isAddedProgramatically = annotation.isAddAnnotationProgramatically ? annotation.isAddAnnotationProgramatically : false;\n            var rotateValue = this.getRotationValue(pageNumber, isAddedProgramatically);\n            var originalRotation = annotation.Rotate;\n            var pageRotate = annotation.PageRotation;\n\n            if (Math.sign(annotation.Rotate) === 1) {\n              annotation.Rotate = -annotation.Rotate + rotateValue;\n            } else {\n              annotation.Rotate = annotation.Rotate + rotateValue;\n            } // eslint-disable-next-line\n\n\n            var rotateAngle = Math.abs(annotation.Rotate);\n\n            if (isImportAction && rotateValue !== pageRotate) {\n              if (this.pdfViewerBase.isJsonImported) {\n                var pageDetails = this.pdfViewerBase.pageSize[pageNumber];\n                var boundsX = annotation.Bounds.X;\n                var boundsY = annotation.Bounds.Y;\n                var annotationWidth = width;\n                var annotationHeight = height;\n\n                if (pageRotate > 0) {\n                  var rotatation = pageRotate / 90;\n\n                  if (rotatation === 1) {\n                    height = width;\n                    width = annotation.Bounds.Height;\n                    annotationBoundsX = annotation.Bounds.Y;\n\n                    if (rotateValue !== 270) {\n                      annotationBoundsY = pageDetails.height - annotation.Bounds.X - annotation.Bounds.Width;\n                    } else {\n                      annotationBoundsY = pageDetails.width - annotation.Bounds.X - annotation.Bounds.Width;\n                    }\n                  } else if (rotatation === 2) {\n                    if (rotateValue !== 270 && rotateValue !== 90) {\n                      annotationBoundsX = pageDetails.width - annotation.Bounds.X - annotation.Bounds.Width;\n                      annotationBoundsY = pageDetails.height - annotation.Bounds.Y - annotation.Bounds.Height;\n                    } else {\n                      annotationBoundsX = pageDetails.height - annotation.Bounds.X - annotation.Bounds.Width;\n                      annotationBoundsY = pageDetails.width - annotation.Bounds.Y - annotation.Bounds.Height;\n                    }\n                  } else if (rotatation === 3) {\n                    height = width;\n                    width = annotation.Bounds.Height;\n\n                    if (rotateValue !== 90) {\n                      annotationBoundsX = pageDetails.width - annotation.Bounds.Y - width;\n                    } else {\n                      annotationBoundsX = pageDetails.height - annotation.Bounds.Y - width;\n                    }\n\n                    annotationBoundsY = annotation.Bounds.X;\n                  }\n\n                  boundsX = annotationBoundsX;\n                  boundsY = annotationBoundsY;\n                  annotationWidth = width;\n                  annotationHeight = height;\n                }\n\n                rotateAngle = rotateValue / 90 % 4;\n\n                if (rotateAngle === 1) {\n                  height = width;\n                  width = annotationHeight;\n                  annotationBoundsX = pageDetails.width - boundsY - annotationHeight - paddingValue;\n                  annotationBoundsY = boundsX - paddingValue;\n                  rotateAngle = 90;\n                } else if (rotateAngle === 2) {\n                  annotationBoundsX = pageDetails.width - boundsX - annotationWidth - paddingValue;\n                  annotationBoundsY = pageDetails.height - boundsY - annotationHeight - paddingValue;\n                  rotateAngle = 180;\n                } else if (rotateAngle === 3) {\n                  height = width;\n                  width = annotationHeight;\n                  annotationBoundsX = boundsY - paddingValue;\n                  annotationBoundsY = pageDetails.height - boundsX - height - paddingValue;\n                  rotateAngle = 270;\n                } else if (rotateAngle === 0) {\n                  annotationBoundsX = boundsX - paddingValue;\n                  annotationBoundsY = boundsY - paddingValue;\n                }\n              }\n            }\n\n            if (rotateAngle === 90 || rotateAngle === 270) {\n              var rotationHeight = height;\n              var rotationWidth = width;\n              height = rotationWidth;\n              width = rotationHeight;\n              annotationBoundsX = annotationBoundsX - width / 2 + height / 2;\n              annotationBoundsY = annotationBoundsY + (width / 2 - height / 2);\n            }\n\n            var isPrint = true;\n\n            if (annotation.annotationAddMode === 'Imported Annotation') {\n              isPrint = annotation.IsPrint;\n            } else {\n              isPrint = annotation.AnnotationSettings.isPrint;\n            } // eslint-disable-next-line\n\n\n            annotation.allowedInteractions = annotation.AllowedInteractions ? annotation.AllowedInteractions : this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation); // eslint-disable-next-line\n\n            annot = {\n              author: annotation.Author,\n              modifiedDate: annotation.ModifiedDate,\n              subject: annotation.Subject,\n              id: 'freetext' + this.inputBoxCount,\n              rotateAngle: annotation.Rotate,\n              dynamicText: annotation.MarkupText,\n              strokeColor: annotation.StrokeColor,\n              thickness: annotation.Thickness,\n              fillColor: annotation.FillColor,\n              bounds: {\n                x: annotationBoundsX,\n                y: annotationBoundsY,\n                left: annotationBoundsX,\n                top: annotationBoundsY,\n                width: width,\n                height: height,\n                right: annotation.Bounds.Right,\n                bottom: annotation.Bounds.Bottom\n              },\n              annotName: annotation.AnnotName,\n              shapeAnnotationType: 'FreeText',\n              // eslint-disable-next-line\n              pageIndex: pageNumber,\n              opacity: annotation.Opacity,\n              fontColor: annotation.FontColor,\n              fontSize: annotation.FontSize,\n              pageRotation: rotateValue,\n              fontFamily: annotation.FontFamily,\n              notes: annotation.MarkupText,\n              textAlign: annotation.TextAlign,\n              // eslint-disable-next-line\n              comments: this.pdfViewer.annotationModule.getAnnotationComments(annotation.Comments, annotation, annotation.Author),\n              review: {\n                state: annotation.State,\n                stateModel: annotation.StateModel,\n                modifiedDate: annotation.ModifiedDate,\n                author: annotation.Author\n              },\n              // eslint-disable-next-line max-len\n              font: {\n                isBold: annotation.Font.Bold,\n                isItalic: annotation.Font.Italic,\n                isStrikeout: annotation.Font.Strikeout,\n                isUnderline: annotation.Font.Underline\n              },\n              annotationSelectorSettings: this.getSettings(annotation),\n              annotationSettings: annotation.AnnotationSettings,\n              // eslint-disable-next-line\n              customData: this.pdfViewer.annotation.getCustomData(annotation),\n              annotationAddMode: annotation.annotationAddMode,\n              allowedInteractions: annotation.allowedInteractions,\n              isPrint: isPrint,\n              isCommentLock: annotation.IsCommentLock,\n              isReadonly: annotation.IsReadonly,\n              isAddAnnotationProgrammatically: isAddedProgramatically\n            };\n\n            if (isImportAction) {\n              annot.id = annotation.AnnotName;\n              annot.previousFontSize = annotation.FontSize ? annotation.FontSize : this.fontSize;\n            }\n\n            var addedAnnot = this.pdfViewer.add(annot);\n            this.pdfViewer.annotationModule.storeAnnotations(pageNumber, annot, '_annotations_freetext');\n\n            if (this.isAddAnnotationProgramatically) {\n              // eslint-disable-next-line\n              var settings = {\n                opacity: annot.opacity,\n                borderColor: annot.strokeColor,\n                borderWidth: annot.thickness,\n                author: annotation.author,\n                subject: annotation.subject,\n                modifiedDate: annotation.modifiedDate,\n                // eslint-disable-next-line\n                fillColor: annot.fillColor,\n                fontSize: annot.fontSize,\n                width: annot.bounds.width,\n                height: annot.bounds.height,\n                fontColor: annot.fontColor,\n                fontFamily: annot.fontFamily,\n                defaultText: annot.dynamicText,\n                fontStyle: annot.font,\n                textAlignment: annot.textAlign\n              };\n              this.pdfViewer.fireAnnotationAdd(annot.pageIndex, annot.annotName, 'FreeText', annot.bounds, settings);\n            }\n\n            this.inputBoxCount += 1;\n            this.pdfViewer.annotation.freeTextAnnotationModule.isFreeTextValueChange = true;\n            this.pdfViewer.nodePropertyChange(addedAnnot, {});\n            this.pdfViewer.annotation.freeTextAnnotationModule.isFreeTextValueChange = false;\n          }\n        }\n      }\n    }\n  };\n  /**\n   * @param annotation\n   * @private\n   */\n  // eslint-disable-next-line\n\n\n  FreeTextAnnotation.prototype.getSettings = function (annotation) {\n    var selector = this.pdfViewer.annotationSelectorSettings;\n\n    if (annotation.AnnotationSelectorSettings) {\n      selector = annotation.AnnotationSelectorSettings;\n    } else if (this.pdfViewer.freeTextSettings.annotationSelectorSettings) {\n      selector = this.pdfViewer.freeTextSettings.annotationSelectorSettings;\n    }\n\n    return selector;\n  };\n  /**\n   * @param type\n   * @private\n   */\n\n\n  FreeTextAnnotation.prototype.setAnnotationType = function (type) {\n    this.pdfViewerBase.disableTextSelectionMode();\n\n    switch (type) {\n      case 'FreeText':\n        this.currentAnnotationMode = 'FreeText';\n        this.updateTextProperties(); // eslint-disable-next-line max-len\n\n        var modifiedDateRect = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n        this.pdfViewer.drawingObject = {\n          shapeAnnotationType: 'FreeText',\n          strokeColor: this.borderColor,\n          fillColor: this.fillColor,\n          opacity: this.opacity,\n          notes: '',\n          isCommentLock: false,\n          thickness: this.borderWidth,\n          borderDashArray: '0',\n          modifiedDate: modifiedDateRect,\n          // eslint-disable-next-line max-len\n          author: this.pdfViewer.freeTextSettings.author,\n          subject: 'Text Box',\n          font: {\n            isBold: this.isBold,\n            isItalic: this.isItalic,\n            isStrikeout: this.isStrikethrough,\n            isUnderline: this.isUnderline\n          },\n          textAlign: this.textAlign\n        };\n        this.pdfViewer.tool = 'Select';\n        break;\n    }\n  };\n  /**\n   * @param property\n   * @param pageNumber\n   * @param annotationBase\n   * @param isNewAdded\n   * @param property\n   * @param pageNumber\n   * @param annotationBase\n   * @param isNewAdded\n   * @param property\n   * @param pageNumber\n   * @param annotationBase\n   * @param isNewAdded\n   * @param property\n   * @param pageNumber\n   * @param annotationBase\n   * @param isNewAdded\n   * @private\n   */\n  // eslint-disable-next-line\n\n\n  FreeTextAnnotation.prototype.modifyInCollection = function (property, pageNumber, annotationBase, isNewAdded) {\n    if (!isNewAdded) {\n      this.pdfViewerBase.updateDocumentEditedProperty(true);\n    }\n\n    var currentAnnotObject = null;\n    var pageAnnotations = this.getAnnotations(pageNumber, null);\n\n    if (pageAnnotations != null && annotationBase) {\n      for (var i = 0; i < pageAnnotations.length; i++) {\n        if (annotationBase.id === pageAnnotations[i].id) {\n          if (property === 'bounds') {\n            // eslint-disable-next-line max-len\n            pageAnnotations[i].bounds = {\n              left: annotationBase.bounds.x,\n              top: annotationBase.bounds.y,\n              width: annotationBase.bounds.width,\n              height: annotationBase.bounds.height,\n              right: annotationBase.bounds.right,\n              bottom: annotationBase.bounds.bottom\n            };\n          } else if (property === 'fill') {\n            pageAnnotations[i].fillColor = annotationBase.wrapper.children[0].style.fill;\n          } else if (property === 'stroke') {\n            pageAnnotations[i].strokeColor = annotationBase.wrapper.children[0].style.strokeColor;\n          } else if (property === 'opacity') {\n            pageAnnotations[i].opacity = annotationBase.wrapper.children[0].style.opacity;\n          } else if (property === 'thickness') {\n            pageAnnotations[i].thickness = annotationBase.wrapper.children[0].style.strokeWidth;\n          } else if (property === 'notes') {\n            pageAnnotations[i].note = annotationBase.notes;\n          } else if (property === 'delete') {\n            currentAnnotObject = pageAnnotations.splice(i, 1)[0];\n            break;\n          } else if (property === 'dynamicText') {\n            pageAnnotations[i].dynamicText = annotationBase.dynamicText;\n          } else if (property === 'fontColor') {\n            pageAnnotations[i].fontColor = annotationBase.fontColor;\n          } else if (property === 'fontSize') {\n            pageAnnotations[i].fontSize = annotationBase.fontSize;\n          } else if (property === 'fontFamily') {\n            pageAnnotations[i].fontFamily = annotationBase.fontFamily;\n          } else if (property === 'textPropertiesChange') {\n            // eslint-disable-next-line max-len\n            pageAnnotations[i].font = {\n              isBold: annotationBase.font.isBold,\n              isItalic: annotationBase.font.isItalic,\n              isStrikeout: annotationBase.font.isStrikeout,\n              isUnderline: annotationBase.font.isUnderline\n            };\n          } else if (property === 'textAlign') {\n            pageAnnotations[i].textAlign = annotationBase.textAlign;\n          } // eslint-disable-next-line max-len\n\n\n          pageAnnotations[i].modifiedDate = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n          this.pdfViewer.annotationModule.storeAnnotationCollections(pageAnnotations[i], pageNumber);\n        }\n      }\n\n      this.manageAnnotations(pageAnnotations, pageNumber);\n    }\n\n    return currentAnnotObject;\n  };\n  /**\n   * @param pageNumber\n   * @param annotationBase\n   * @private\n   */\n\n\n  FreeTextAnnotation.prototype.addInCollection = function (pageNumber, annotationBase) {\n    if (annotationBase) {\n      var pageAnnotations = this.getAnnotations(pageNumber, null);\n\n      if (pageAnnotations) {\n        pageAnnotations.push(annotationBase);\n      }\n\n      this.manageAnnotations(pageAnnotations, pageNumber);\n    }\n  };\n  /**\n   * @private\n   */\n\n\n  FreeTextAnnotation.prototype.saveFreeTextAnnotations = function () {\n    // eslint-disable-next-line\n    var storeObject = window.sessionStorage.getItem(this.pdfViewerBase.documentId + '_annotations_freetext');\n\n    if (this.pdfViewerBase.isStorageExceed) {\n      storeObject = this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_freetext'];\n    } // eslint-disable-next-line\n\n\n    var annotations = new Array();\n\n    for (var j = 0; j < this.pdfViewerBase.pageCount; j++) {\n      annotations[j] = [];\n    }\n\n    if (storeObject && !this.pdfViewer.annotationSettings.skipDownload) {\n      var annotationCollection = JSON.parse(storeObject);\n\n      for (var i = 0; i < annotationCollection.length; i++) {\n        var newArray = [];\n        var pageAnnotationObject = annotationCollection[i];\n\n        if (pageAnnotationObject) {\n          for (var z = 0; pageAnnotationObject.annotations.length > z; z++) {\n            this.pdfViewer.annotationModule.updateModifiedDate(pageAnnotationObject.annotations[z]); // eslint-disable-next-line max-len\n\n            pageAnnotationObject.annotations[z].bounds = this.getBoundsBasedOnRotation(pageAnnotationObject.annotations[z].bounds, pageAnnotationObject.annotations[z].rotateAngle, pageAnnotationObject.pageIndex, pageAnnotationObject.annotations[z]); // eslint-disable-next-line max-len\n\n            pageAnnotationObject.annotations[z].bounds = JSON.stringify(this.pdfViewer.annotation.getBounds(pageAnnotationObject.annotations[z].bounds, pageAnnotationObject.pageIndex));\n            var strokeColorString = pageAnnotationObject.annotations[z].strokeColor;\n            pageAnnotationObject.annotations[z].strokeColor = JSON.stringify(this.getRgbCode(strokeColorString));\n            var fillColorString = pageAnnotationObject.annotations[z].fillColor;\n            pageAnnotationObject.annotations[z].fillColor = JSON.stringify(this.getRgbCode(fillColorString));\n            var fontColorString = pageAnnotationObject.annotations[z].fontColor;\n            pageAnnotationObject.annotations[z].fontColor = JSON.stringify(this.getRgbCode(fontColorString)); // eslint-disable-next-line max-len\n\n            pageAnnotationObject.annotations[z].vertexPoints = JSON.stringify(pageAnnotationObject.annotations[z].vertexPoints);\n\n            if (pageAnnotationObject.annotations[z].rectangleDifference !== null) {\n              // eslint-disable-next-line max-len\n              pageAnnotationObject.annotations[z].rectangleDifference = JSON.stringify(pageAnnotationObject.annotations[z].rectangleDifference);\n            }\n          }\n\n          newArray = pageAnnotationObject.annotations;\n        }\n\n        annotations[pageAnnotationObject.pageIndex] = newArray;\n      }\n    }\n\n    return JSON.stringify(annotations);\n  }; // eslint-disable-next-line\n\n\n  FreeTextAnnotation.prototype.getRotationValue = function (pageIndex, isAddedProgrammatically) {\n    // eslint-disable-next-line\n    var pageDetails = this.pdfViewerBase.pageSize[pageIndex];\n\n    if (!isNullOrUndefined(isAddedProgrammatically) && isAddedProgrammatically) {\n      return 0;\n    } else {\n      if (pageDetails.rotation === 0) {\n        return 0;\n      } else if (pageDetails.rotation === 1) {\n        return 90;\n      } else if (pageDetails.rotation === 2) {\n        return 180;\n      } else if (pageDetails.rotation === 3) {\n        return 270;\n      }\n\n      return 0;\n    }\n  };\n\n  FreeTextAnnotation.prototype.getBoundsBasedOnRotation = function (bounds, rotateAngle, pageIndex, annotation, isAddedProgrammatically) {\n    var rotateValue = this.getRotationValue(pageIndex, isAddedProgrammatically);\n    var paddingValue = 0.5;\n    annotation.rotateAngle = rotateAngle - rotateValue;\n    annotation.pageRotation = rotateValue;\n\n    if (rotateAngle === 90 || rotateAngle === -90 || rotateAngle === 270 || rotateAngle === -270) {\n      var x = bounds.left + bounds.width / 2 - bounds.height / 2;\n      var y = bounds.top - (bounds.width / 2 - bounds.height / 2);\n      return {\n        x: x + paddingValue,\n        y: y + paddingValue,\n        left: x + paddingValue,\n        top: y + paddingValue,\n        width: bounds.height,\n        height: bounds.width\n      };\n    } else {\n      return {\n        x: bounds.left + paddingValue,\n        y: bounds.top + paddingValue,\n        left: bounds.left + paddingValue,\n        top: bounds.top + paddingValue,\n        width: bounds.width,\n        height: bounds.height\n      };\n    }\n  };\n\n  FreeTextAnnotation.prototype.manageAnnotations = function (pageAnnotations, pageNumber) {\n    // eslint-disable-next-line\n    var storeObject = window.sessionStorage.getItem(this.pdfViewerBase.documentId + '_annotations_freetext');\n\n    if (this.pdfViewerBase.isStorageExceed) {\n      storeObject = this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_freetext'];\n    }\n\n    if (storeObject) {\n      var annotObject = JSON.parse(storeObject);\n\n      if (!this.pdfViewerBase.isStorageExceed) {\n        window.sessionStorage.removeItem(this.pdfViewerBase.documentId + '_annotations_freetext');\n      }\n\n      var index = this.pdfViewer.annotationModule.getPageCollection(annotObject, pageNumber);\n\n      if (annotObject[index]) {\n        annotObject[index].annotations = pageAnnotations;\n      }\n\n      var annotationStringified = JSON.stringify(annotObject);\n\n      if (this.pdfViewerBase.isStorageExceed) {\n        this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_freetext'] = annotationStringified;\n      } else {\n        window.sessionStorage.setItem(this.pdfViewerBase.documentId + '_annotations_freetext', annotationStringified);\n      }\n    }\n  }; // eslint-disable-next-line\n\n\n  FreeTextAnnotation.prototype.getAnnotations = function (pageIndex, shapeAnnotations) {\n    // eslint-disable-next-line\n    var annotationCollection; // eslint-disable-next-line\n\n    var storeObject = window.sessionStorage.getItem(this.pdfViewerBase.documentId + '_annotations_freetext');\n\n    if (this.pdfViewerBase.isStorageExceed) {\n      storeObject = this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_freetext'];\n    }\n\n    if (storeObject) {\n      var annotObject = JSON.parse(storeObject);\n      var index = this.pdfViewer.annotationModule.getPageCollection(annotObject, pageIndex);\n\n      if (annotObject[index]) {\n        annotationCollection = annotObject[index].annotations;\n      } else {\n        annotationCollection = shapeAnnotations;\n      }\n    } else {\n      annotationCollection = shapeAnnotations;\n    }\n\n    return annotationCollection;\n  }; // eslint-disable-next-line\n\n\n  FreeTextAnnotation.prototype.getRgbCode = function (colorString) {\n    if (!colorString.match(/#([a-z0-9]+)/gi) && !colorString.match(/^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/)) {\n      colorString = this.pdfViewer.annotationModule.nameToHash(colorString);\n    }\n\n    var stringArray = colorString.split(',');\n\n    if (isNullOrUndefined(stringArray[1])) {\n      colorString = this.pdfViewer.annotationModule.getValue(colorString, 'rgba');\n      stringArray = colorString.split(',');\n    } // eslint-disable-next-line radix\n\n\n    var r = parseInt(stringArray[0].split('(')[1]); // eslint-disable-next-line radix\n\n    var g = parseInt(stringArray[1]); // eslint-disable-next-line radix\n\n    var b = parseInt(stringArray[2]); // eslint-disable-next-line radix\n\n    var a = parseInt(stringArray[3]);\n    return {\n      r: r,\n      g: g,\n      b: b,\n      a: a\n    };\n  };\n  /**\n   * @private\n   */\n  // eslint-disable-next-line\n\n\n  FreeTextAnnotation.prototype.onFocusOutInputBox = function () {\n    var allowServerDataBind = this.pdfViewer.allowServerDataBinding;\n    this.pdfViewer.enableServerDataBinding(false);\n\n    if (!this.pdfViewerBase.isFreeTextContextMenu) {\n      this.pdfViewer.fireBeforeAddFreeTextAnnotation(this.inputBoxElement.value); // eslint-disable-next-line\n\n      var pageIndex = this.inputBoxElement.id && this.inputBoxElement.id.split(\"_freeText_\")[1] && this.inputBoxElement.id.split(\"_freeText_\")[1].split(\"_\")[0] ? parseFloat(this.inputBoxElement.id.split(\"_freeText_\")[1].split(\"_\")[0]) : this.pdfViewerBase.currentPageNumber - 1;\n      var pageDiv = this.pdfViewerBase.getElement('_pageDiv_' + pageIndex);\n      var width = parseFloat(this.inputBoxElement.style.width);\n      var padding = parseFloat(this.inputBoxElement.style.paddingLeft);\n\n      if (this.pdfViewer.freeTextSettings.enableAutoFit && !this.isMaximumWidthReached && !this.isNewFreeTextAnnot) {\n        var fontsize = parseFloat(this.inputBoxElement.style.fontSize);\n        this.inputBoxElement.style.width = width + padding - fontsize + 'px';\n      }\n\n      if (this.pdfViewer.freeTextSettings.enableAutoFit && !this.isMaximumWidthReached && this.isNewFreeTextAnnot) {\n        width = parseFloat(this.inputBoxElement.style.width);\n        var characterLength = 8;\n        this.inputBoxElement.style.width = width - characterLength + 'px';\n      }\n\n      var inputEleHeight = parseFloat(this.inputBoxElement.style.height);\n      var inputEleWidth = parseFloat(this.inputBoxElement.style.width);\n      var inputEleLeft = parseFloat(this.inputBoxElement.style.left);\n\n      if (this.pdfViewerBase.isMixedSizeDocument) {\n        var canvas = document.getElementById(this.pdfViewer.element.id + '_annotationCanvas_' + pageIndex);\n        inputEleLeft = inputEleLeft - canvas.offsetLeft;\n      }\n\n      var inputEleTop = parseFloat(this.inputBoxElement.style.top);\n      var zoomFactor = this.pdfViewerBase.getZoomFactor();\n\n      if (this.pdfViewer.isValidFreeText) {\n        this.inputBoxElement.value = 'Type Here';\n        this.pdfViewer.isValidFreeText = false;\n      }\n\n      var inputValue = this.inputBoxElement.value;\n      var isNewlyAdded = false;\n\n      if (this.isNewFreeTextAnnot === true) {\n        // eslint-disable-next-line max-len\n        var currentDateString = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n        var annotationName = this.pdfViewer.annotation.createGUID();\n        this.isNewFreeTextAnnot = false;\n        isNewlyAdded = true;\n        var annot = void 0;\n        var commentsDivid = this.pdfViewer.annotation.stickyNotesAnnotationModule.addComments('freeText', pageIndex + 1);\n\n        if (commentsDivid) {\n          document.getElementById(commentsDivid).id = annotationName;\n        } // eslint-disable-next-line\n\n\n        var annotationSelectorSettings = this.pdfViewer.freeTextSettings.annotationSelectorSettings ? this.pdfViewer.freeTextSettings.annotationSelectorSettings : this.pdfViewer.annotationSelectorSettings; // eslint-disable-next-line\n\n        var annotationSettings = this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.freeTextSettings); // eslint-disable-next-line\n\n        this.author = this.author ? this.author : this.pdfViewer.freeTextSettings.author ? this.pdfViewer.freeTextSettings.author : 'Guest'; // eslint-disable-next-line\n\n        var allowedInteractions = this.pdfViewer.freeTextSettings.allowedInteractions ? this.pdfViewer.freeTextSettings.allowedInteractions : this.pdfViewer.annotationSettings.allowedInteractions; // eslint-disable-next-line\n\n        annot = {\n          author: this.author,\n          modifiedDate: currentDateString,\n          subject: 'Text Box',\n          id: 'free_text' + this.inputBoxCount,\n          // eslint-disable-next-line max-len\n          rotateAngle: 0,\n          dynamicText: inputValue,\n          strokeColor: this.borderColor,\n          thickness: this.borderWidth,\n          fillColor: this.fillColor,\n          bounds: {\n            left: inputEleLeft / zoomFactor,\n            top: inputEleTop / zoomFactor,\n            x: inputEleLeft / zoomFactor,\n            y: inputEleTop / zoomFactor,\n            width: inputEleWidth / zoomFactor,\n            height: inputEleHeight / zoomFactor\n          },\n          annotName: annotationName,\n          shapeAnnotationType: 'FreeText',\n          pageIndex: pageIndex,\n          fontColor: this.fontColor,\n          fontSize: this.fontSize,\n          fontFamily: this.fontFamily,\n          opacity: this.opacity,\n          comments: [],\n          textAlign: this.textAlign,\n          // eslint-disable-next-line max-len\n          font: {\n            isBold: this.isBold,\n            isItalic: this.isItalic,\n            isStrikeout: this.isStrikethrough,\n            isUnderline: this.isUnderline\n          },\n          review: {\n            state: 'Unmarked',\n            stateModel: 'None',\n            modifiedDate: currentDateString,\n            author: this.author\n          },\n          // eslint-disable-next-line max-len\n          annotationSelectorSettings: annotationSelectorSettings,\n          annotationSettings: annotationSettings,\n          customData: this.pdfViewer.annotationModule.getData('FreeText'),\n          isPrint: this.pdfViewer.freeTextSettings.isPrint,\n          allowedInteractions: allowedInteractions,\n          isReadonly: this.isReadonly\n        };\n\n        if (this.pdfViewer.enableRtl) {\n          annot.textAlign = 'Right';\n        }\n\n        var annotation = this.pdfViewer.add(annot); // eslint-disable-next-line\n\n        var bounds = {\n          left: annot.bounds.x,\n          top: annot.bounds.y,\n          width: annot.bounds.width,\n          height: annot.bounds.height\n        }; // eslint-disable-next-line\n\n        var settings = {\n          opacity: annot.opacity,\n          borderColor: annot.strokeColor,\n          borderWidth: annot.thickness,\n          author: annotation.author,\n          subject: annotation.subject,\n          modifiedDate: annotation.modifiedDate,\n          // eslint-disable-next-line\n          fillColor: annot.fillColor,\n          fontSize: annot.fontSize,\n          width: annot.bounds.width,\n          height: annot.bounds.height,\n          fontColor: annot.fontColor,\n          fontFamily: annot.fontFamily,\n          defaultText: annot.dynamicText,\n          fontStyle: annot.font,\n          textAlignment: annot.textAlign\n        };\n        this.pdfViewer.annotation.storeAnnotations(pageIndex, annot, '_annotations_freetext');\n        this.pdfViewer.fireAnnotationAdd(annot.pageIndex, annot.annotName, 'FreeText', bounds, settings); // eslint-disable-next-line\n\n        this.pdfViewer.annotation.addAction(pageIndex, null, annot, 'Addition', '', annot, annot);\n        this.pdfViewer.renderSelector(annot.pageIndex);\n        this.pdfViewer.clearSelection(annot.pageIndex);\n        this.pdfViewerBase.updateDocumentEditedProperty(true);\n        this.selectedAnnotation = annotation;\n      }\n\n      this.isInuptBoxInFocus = false; // eslint-disable-next-line\n\n      if (this.selectedAnnotation && this.pdfViewer.selectedItems.annotations) {\n        inputEleWidth = inputEleWidth / zoomFactor;\n        inputEleHeight = inputEleHeight / zoomFactor;\n        var heightDiff = inputEleHeight - this.selectedAnnotation.bounds.height;\n        var y = undefined;\n\n        if (heightDiff > 0) {\n          y = this.selectedAnnotation.wrapper.offsetY + heightDiff / 2;\n          y = y > 0 ? y : undefined;\n        }\n\n        var widthDiff = inputEleWidth - this.selectedAnnotation.bounds.width;\n        var x = undefined;\n\n        if (widthDiff > 0) {\n          x = this.selectedAnnotation.wrapper.offsetX + widthDiff / 2;\n          x = x > 0 ? x : undefined;\n        } else {\n          widthDiff = Math.abs(widthDiff);\n          x = this.selectedAnnotation.wrapper.offsetX - widthDiff / 2;\n        }\n\n        this.selectedAnnotation.bounds.width = inputEleWidth;\n        this.selectedAnnotation.bounds.height = inputEleHeight;\n        this.pdfViewer.annotation.modifyDynamicTextValue(inputValue, this.selectedAnnotation.annotName);\n        this.selectedAnnotation.dynamicText = inputValue;\n        this.modifyInCollection('dynamicText', pageIndex, this.selectedAnnotation, isNewlyAdded);\n        this.modifyInCollection('bounds', pageIndex, this.selectedAnnotation, isNewlyAdded); // eslint-disable-next-line\n\n        this.pdfViewer.nodePropertyChange(this.selectedAnnotation, {\n          bounds: {\n            width: this.selectedAnnotation.bounds.width,\n            height: this.selectedAnnotation.bounds.height,\n            y: y,\n            x: x\n          }\n        }); // eslint-disable-next-line\n\n        var commentsDiv = document.getElementById(this.selectedAnnotation.annotName);\n\n        if (commentsDiv && commentsDiv.childNodes) {\n          if (commentsDiv.childNodes[0].ej2_instances) {\n            commentsDiv.childNodes[0].ej2_instances[0].value = inputValue;\n          } else if (commentsDiv.childNodes[0].childNodes && commentsDiv.childNodes[0].childNodes[1].ej2_instances) {\n            commentsDiv.childNodes[0].childNodes[1].ej2_instances[0].value = inputValue;\n          }\n        }\n\n        this.pdfViewer.renderSelector(this.selectedAnnotation.pageIndex, this.selectedAnnotation.annotationSelectorSettings);\n      }\n\n      if (this.inputBoxElement.parentElement) {\n        if (pageDiv && pageDiv.id === this.inputBoxElement.parentElement.id) {\n          pageDiv.removeChild(this.inputBoxElement);\n        } else {\n          this.inputBoxElement.parentElement.removeChild(this.inputBoxElement);\n        }\n      }\n\n      var canvass = document.getElementById(this.pdfViewer.element.id + '_annotationCanvas_' + pageIndex); // eslint-disable-next-line\n\n      this.pdfViewer.renderDrawing(canvass, pageIndex);\n      this.inputBoxCount += 1;\n\n      if (!isNewlyAdded && this.previousText !== inputValue) {\n        // eslint-disable-next-line max-len\n        this.pdfViewer.annotationModule.triggerAnnotationPropChange(this.selectedAnnotation, false, false, false, false, false, false, false, true, this.previousText, inputValue);\n      }\n    } else {\n      this.inputBoxElement.focus();\n\n      if (!this.isTextSelected) {\n        window.getSelection().removeAllRanges();\n      }\n    }\n\n    this.pdfViewer.enableServerDataBinding(allowServerDataBind, true);\n  };\n  /**\n   * @param event\n   * @private\n   */\n\n\n  FreeTextAnnotation.prototype.onKeyDownInputBox = function (event) {\n    var inuptEleObj = this;\n\n    if (event.which === 9 || isNullOrUndefined(this.pdfViewer.selectedItems.annotations[0]) && !this.isNewFreeTextAnnot) {\n      event.preventDefault();\n    }\n\n    this.selectedAnnotation = this.pdfViewer.selectedItems.annotations && this.isNewFreeTextAnnot ? this.pdfViewer.selectedItems.annotations[0] : this.selectedAnnotation;\n    setTimeout(function () {\n      if (inuptEleObj.defaultHeight < inuptEleObj.inputBoxElement.scrollHeight // eslint-disable-next-line radix\n      && parseInt(inuptEleObj.inputBoxElement.style.height) < inuptEleObj.inputBoxElement.scrollHeight) {\n        inuptEleObj.updateFreeTextAnnotationSize(true);\n      } else {\n        inuptEleObj.updateFreeTextAnnotationSize(false);\n      } // eslint-disable-next-line\n\n    }, 0);\n  };\n\n  FreeTextAnnotation.prototype.updateFreeTextAnnotationSize = function (isSize) {\n    var inuptEleObj = this;\n    var enableAutoFit = inuptEleObj.pdfViewer.freeTextSettings.enableAutoFit;\n\n    if (enableAutoFit) {\n      this.autoFitFreeText();\n    } else {\n      this.isMaximumWidthReached = true;\n    }\n\n    if (this.isMaximumWidthReached) {\n      // eslint-disable-next-line max-len\n      var previousHeight = inuptEleObj.inputBoxElement.getBoundingClientRect().height;\n\n      if (!isSize && !inuptEleObj.inputBoxElement.readOnly) {\n        inuptEleObj.inputBoxElement.style.height = 'auto';\n      }\n\n      var currentHeight = inuptEleObj.inputBoxElement.getBoundingClientRect().height;\n      var difference = currentHeight - previousHeight;\n      var fontSize = parseFloat(inuptEleObj.inputBoxElement.style.fontSize); // eslint-disable-next-line max-len\n\n      inuptEleObj.inputBoxElement.style.height = inuptEleObj.inputBoxElement.readOnly ? inuptEleObj.inputBoxElement.style.height : inuptEleObj.inputBoxElement.scrollHeight + fontSize / 2 + 'px';\n      inuptEleObj.inputBoxElement.style.height = difference < 0 && !inuptEleObj.inputBoxElement.readOnly ? previousHeight + 'px' : inuptEleObj.inputBoxElement.style.height;\n    }\n\n    var zoomFactor = inuptEleObj.pdfViewerBase.getZoomFactor();\n    var inputEleHeight = parseFloat(this.inputBoxElement.style.height);\n    var inputEleWidth = parseFloat(this.inputBoxElement.style.width);\n    inputEleHeight = inputEleHeight / zoomFactor;\n    inputEleWidth = inputEleWidth / zoomFactor;\n\n    if (this.selectedAnnotation) {\n      var heightDiff = inputEleHeight - inuptEleObj.selectedAnnotation.bounds.height;\n      var y = 0;\n\n      if (heightDiff > 0) {\n        y = inuptEleObj.selectedAnnotation.wrapper.offsetY + heightDiff / 2;\n      } else {\n        heightDiff = Math.abs(heightDiff);\n        y = inuptEleObj.selectedAnnotation.wrapper.offsetY - heightDiff / 2;\n      }\n\n      if (enableAutoFit) {\n        var widthDiff = inputEleWidth - inuptEleObj.selectedAnnotation.bounds.width;\n        var x = 0;\n\n        if (widthDiff > 0) {\n          x = inuptEleObj.selectedAnnotation.wrapper.offsetX + widthDiff / 2;\n        } else {\n          widthDiff = Math.abs(widthDiff);\n          x = inuptEleObj.selectedAnnotation.wrapper.offsetX - widthDiff / 2;\n        }\n      }\n\n      inuptEleObj.selectedAnnotation.bounds.width = inputEleWidth;\n      inuptEleObj.selectedAnnotation.bounds.height = inputEleHeight;\n\n      if (enableAutoFit) {\n        // eslint-disable-next-line\n        inuptEleObj.pdfViewer.nodePropertyChange(inuptEleObj.selectedAnnotation, {\n          bounds: {\n            width: inuptEleObj.selectedAnnotation.bounds.width,\n            height: inuptEleObj.selectedAnnotation.bounds.height,\n            y: y,\n            x: x\n          }\n        });\n      } else {\n        // eslint-disable-next-line\n        inuptEleObj.pdfViewer.nodePropertyChange(inuptEleObj.selectedAnnotation, {\n          bounds: {\n            width: inuptEleObj.selectedAnnotation.bounds.width,\n            height: inuptEleObj.selectedAnnotation.bounds.height,\n            y: y\n          }\n        });\n      }\n\n      inuptEleObj.pdfViewer.renderSelector(inuptEleObj.selectedAnnotation.pageIndex, this.selectedAnnotation.annotationSelectorSettings);\n    }\n  };\n  /**\n   * @param event\n   * @private\n   */\n\n\n  FreeTextAnnotation.prototype.autoFitFreeText = function (xPosition, yPosition) {\n    var pageIndex = this.pdfViewerBase.currentPageNumber - 1;\n    var pageDiv = this.pdfViewerBase.getElement('_pageDiv_' + pageIndex); // eslint-disable-next-line\n\n    var canvas = this.pdfViewerBase.getElement('_annotationCanvas_' + pageIndex); // eslint-disable-next-line\n\n    var context = canvas.getContext(\"2d\"); // eslint-disable-next-line\n\n    var fontSize = this.inputBoxElement.style.fontSize;\n\n    if (this.pdfViewer.freeTextSettings.fontStyle === FontStyle.Bold || this.inputBoxElement.style.fontWeight === 'bold') {\n      context.font = 'bold' + ' ' + fontSize + ' ' + this.inputBoxElement.style.fontFamily;\n    } else {\n      context.font = fontSize + ' ' + this.inputBoxElement.style.fontFamily;\n    }\n\n    var highestTextNode = \"\"; // eslint-disable-next-line\n\n    var textNodes = [];\n    var textboxValue = this.inputBoxElement.value;\n\n    if (textboxValue.indexOf('\\n') > -1) {\n      textNodes = textboxValue.split('\\n');\n\n      for (var j = 0; j < textNodes.length; j++) {\n        // eslint-disable-next-line\n        var textNodeData = context.measureText(textNodes[j]); // eslint-disable-next-line\n\n        var highestTextNodeData = context.measureText(highestTextNode);\n\n        if (textNodeData.width > highestTextNodeData.width) {\n          highestTextNode = textNodes[j];\n        }\n      }\n\n      this.isMaximumWidthReached = true;\n    } else {\n      highestTextNode = textboxValue;\n      this.isMaximumWidthReached = false;\n    } // eslint-disable-next-line\n\n\n    var textwidth = context.measureText(highestTextNode);\n    fontSize = parseFloat(this.inputBoxElement.style.fontSize);\n    var inputEleWidth;\n    var characterLength = 8;\n    var inputEleHeight = fontSize + fontSize / 2;\n\n    if (this.isNewFreeTextAnnot) {\n      inputEleWidth = Math.ceil(textwidth.width + (characterLength + 1) * 2);\n      this.inputBoxElement.style.height = inputEleHeight + 'px';\n      this.inputBoxElement.style.top = yPosition - inputEleHeight / 2 + 'px';\n    } else {\n      inputEleWidth = Math.ceil(textwidth.width) + fontSize + Math.ceil(characterLength / 2);\n    }\n\n    if (!xPosition) {\n      this.inputBoxElement.style.height = inputEleHeight + 'px';\n    }\n\n    this.inputBoxElement.style.width = inputEleWidth + 'px';\n    var maxWidth = this.pdfViewerBase.getPageWidth(pageIndex) - parseFloat(this.inputBoxElement.style.left);\n\n    if (parseFloat(this.inputBoxElement.style.width) > maxWidth) {\n      this.isMaximumWidthReached = true;\n\n      if (this.isNewAddedAnnot && xPosition) {\n        inputEleWidth = inputEleWidth - characterLength;\n        this.inputBoxElement.style.width = inputEleWidth + 'px';\n        var width = xPosition + inputEleWidth * this.pdfViewerBase.getZoomFactor();\n        var x = parseFloat(this.inputBoxElement.style.left);\n\n        if (width >= this.pdfViewerBase.getPageWidth(pageIndex)) {\n          x = this.pdfViewerBase.getPageWidth(pageIndex) - inputEleWidth;\n        }\n\n        this.inputBoxElement.style.left = x + 'px';\n      } else {\n        this.inputBoxElement.style.width = maxWidth + 'px';\n      }\n    }\n  };\n  /**\n   * @param event\n   * @private\n   */\n\n\n  FreeTextAnnotation.prototype.onMouseUpInputBox = function (event) {\n    // eslint-disable-next-line\n    var target = event.target;\n    this.selectionStart = 0;\n    this.selectionEnd = 0;\n\n    if (event.which === 3 && target) {\n      this.selectionStart = target.selectionStart;\n      this.selectionEnd = target.selectionEnd;\n    }\n\n    if (event.which === 3 && window.getSelection() != null && window.getSelection().toString() !== '') {\n      this.isTextSelected = true;\n    } else {\n      this.isTextSelected = false;\n    }\n  };\n  /**\n   * @param currentPosition\n   * @param annotation\n   * @param pageIndex\n   * @private\n   */\n\n\n  FreeTextAnnotation.prototype.addInuptElemet = function (currentPosition, annotation, pageIndex) {\n    if (annotation === void 0) {\n      annotation = null;\n    }\n\n    this.currentPosition = [];\n\n    if (isNullOrUndefined(pageIndex)) {\n      pageIndex = this.pdfViewerBase.currentPageNumber - 1;\n    }\n\n    if (annotation) {\n      pageIndex = annotation.pageIndex;\n    }\n\n    if (isBlazor() && annotation === null && this.pdfViewer.selectedItems.annotations.length === 0) {\n      this.updateTextProperties();\n    }\n\n    this.inputBoxElement.id = this.pdfViewer.element.id + '_freeText_' + pageIndex + '_' + this.inputBoxCount;\n    var pageDiv = this.pdfViewerBase.getElement('_pageDiv_' + pageIndex);\n    var canvass = document.getElementById(this.pdfViewer.element.id + '_annotationCanvas_' + pageIndex);\n    var zoomFactor = this.pdfViewerBase.getZoomFactor();\n    this.inputBoxElement.value = annotation && annotation.dynamicText ? annotation.dynamicText : this.defaultText;\n    this.inputBoxElement.style.boxSizing = 'border-box';\n    this.inputBoxElement.style.left = currentPosition.x + 'px';\n    this.inputBoxElement.style.top = currentPosition.y - this.defaultHeight * zoomFactor / 2 + 'px';\n\n    if (this.pdfViewer.freeTextSettings.enableAutoFit) {\n      this.inputBoxElement.style.wordBreak = 'break-all';\n    } else {\n      this.inputBoxElement.style.wordBreak = 'break-word';\n    }\n\n    if (annotation) {\n      this.applyFreetextStyles(zoomFactor, annotation.isReadonly);\n    } else {\n      this.applyFreetextStyles(zoomFactor);\n    }\n\n    if (this.isBold) {\n      this.inputBoxElement.style.fontWeight = 'bold';\n    } else {\n      this.inputBoxElement.style.fontWeight = 'normal';\n    }\n\n    if (this.isItalic) {\n      this.inputBoxElement.style.fontStyle = 'italic';\n    } else {\n      this.inputBoxElement.style.fontStyle = 'normal';\n    }\n\n    this.inputBoxElement.style.textDecoration = 'none';\n\n    if (this.isUnderline) {\n      this.inputBoxElement.style.textDecoration = 'underline';\n    }\n\n    if (this.isStrikethrough) {\n      this.inputBoxElement.style.textDecoration = 'line-through';\n    }\n\n    if (this.pdfViewer.enableRtl) {\n      this.inputBoxElement.style.textAlign = 'right';\n      this.inputBoxElement.style.direction = 'rtl';\n      this.inputBoxElement.style.left = currentPosition.x - this.defautWidth * zoomFactor / 2;\n    } else {\n      this.inputBoxElement.style.textAlign = this.textAlign.toLowerCase();\n    }\n\n    this.inputBoxElement.style.borderColor = this.borderColor;\n    this.inputBoxElement.style.color = this.fontColor;\n    this.inputBoxElement.style.background = this.fillColor;\n\n    if (annotation && annotation.wrapper && annotation.wrapper.children[0]) {\n      this.inputBoxElement.style.opacity = annotation.wrapper.children[0].style.opacity;\n    }\n\n    if (this.isNewFreeTextAnnot === true) {\n      this.pdfViewer.clearSelection(pageIndex);\n    }\n\n    if (annotation && annotation.wrapper && annotation.wrapper.bounds) {\n      var annotationBounds = annotation.wrapper.bounds;\n\n      if (annotationBounds.left) {\n        this.inputBoxElement.style.left = annotationBounds.left * zoomFactor + 'px';\n      }\n\n      if (annotationBounds.top) {\n        this.inputBoxElement.style.top = annotationBounds.top * zoomFactor + 'px';\n      } // eslint-disable-next-line max-len\n\n\n      this.inputBoxElement.style.height = annotationBounds.height ? annotationBounds.height * zoomFactor + 'px' : this.defaultHeight * zoomFactor + 'px'; // eslint-disable-next-line max-len\n\n      this.inputBoxElement.style.width = annotationBounds.width ? annotationBounds.width * zoomFactor + 'px' : this.defautWidth * zoomFactor + 'px';\n      this.selectedAnnotation = annotation;\n      this.previousText = this.selectedAnnotation.dynamicText;\n      this.selectedAnnotation.dynamicText = '';\n      this.inputBoxElement.style.borderColor = this.selectedAnnotation.strokeColor;\n      this.inputBoxElement.style.color = this.selectedAnnotation.fontColor;\n      this.inputBoxElement.style.background = this.selectedAnnotation.fillColor;\n\n      if (this.selectedAnnotation.font.isBold === true) {\n        this.inputBoxElement.style.fontWeight = 'bold';\n      }\n\n      if (this.selectedAnnotation.font.isItalic === true) {\n        this.inputBoxElement.style.fontStyle = 'italic';\n      }\n\n      if (this.selectedAnnotation.font.isUnderline === true) {\n        this.inputBoxElement.style.textDecoration = 'underline';\n      }\n\n      if (this.selectedAnnotation.font.isStrikeout === true) {\n        this.inputBoxElement.style.textDecoration = 'line-through';\n      }\n\n      if (this.pdfViewer.enableRtl) {\n        this.inputBoxElement.style.textAlign = 'right';\n        this.inputBoxElement.style.direction = 'rtl';\n      } else if (this.selectedAnnotation.textAlign) {\n        this.inputBoxElement.style.textAlign = this.selectedAnnotation.textAlign;\n      }\n\n      this.inputBoxElement.style.fontSize = this.selectedAnnotation.fontSize * zoomFactor + 'px';\n      this.inputBoxElement.style.fontFamily = this.selectedAnnotation.fontFamily;\n      this.pdfViewer.nodePropertyChange(this.selectedAnnotation, {});\n    }\n\n    if (this.pdfViewerBase.isMixedSizeDocument) {\n      this.inputBoxElement.style.left = parseFloat(this.inputBoxElement.style.left) + canvass.offsetLeft + 'px';\n    }\n\n    this.pdfViewer.annotation.freeTextAnnotationModule.isFreeTextValueChange = false;\n\n    if (this.pdfViewer.freeTextSettings.enableAutoFit) {\n      this.autoFitFreeText(currentPosition.x, currentPosition.y);\n    }\n\n    pageDiv.appendChild(this.inputBoxElement); // eslint-disable-next-line\n\n    if (!this.pdfViewer.freeTextSettings.enableAutoFit && this.defaultHeight * zoomFactor < this.inputBoxElement.scrollHeight && parseInt(this.inputBoxElement.style.height) < this.inputBoxElement.scrollHeight) {\n      this.inputBoxElement.style.height = this.inputBoxElement.scrollHeight + 'px';\n      this.inputBoxElement.style.top = currentPosition.y - parseFloat(this.inputBoxElement.style.height) / 2 + 'px';\n    }\n\n    this.isInuptBoxInFocus = true;\n    this.inputBoxElement.focus();\n\n    if (this.isNewFreeTextAnnot === true || this.inputBoxElement.value === this.defaultText) {\n      this.inputBoxElement.select();\n      this.pdfViewerBase.isFreeTextSelected = true;\n    }\n\n    this.currentPosition.push(parseInt(this.inputBoxElement.style.left) / zoomFactor, parseInt(this.inputBoxElement.style.top) / zoomFactor, parseInt(this.inputBoxElement.style.width) / zoomFactor, parseInt(this.inputBoxElement.style.height) / zoomFactor);\n  };\n\n  FreeTextAnnotation.prototype.applyFreetextStyles = function (zoomFactor, isReadonly) {\n    this.inputBoxElement.style.height = this.defaultHeight * zoomFactor + 'px';\n    this.inputBoxElement.style.width = this.defautWidth * zoomFactor + 'px';\n    this.inputBoxElement.style.borderWidth = this.borderWidth * zoomFactor + 'px';\n    this.inputBoxElement.style.fontSize = this.fontSize * zoomFactor + 'px';\n    this.inputBoxElement.style.fontFamily = this.fontFamily;\n    this.inputBoxElement.readOnly = isNullOrUndefined(isReadonly) ? this.isReadonly : isReadonly;\n  };\n  /**\n   * @private\n   */\n\n\n  FreeTextAnnotation.prototype.copySelectedText = function () {\n    if (window.getSelection() !== null) {\n      this.selectedText = window.getSelection().toString();\n      var textArea = document.createElement('textarea');\n      textArea.contentEditable = 'true';\n      textArea.textContent = this.selectedText;\n      textArea.style.position = 'fixed';\n      document.body.appendChild(textArea);\n      textArea.select();\n\n      try {\n        document.execCommand('copy');\n      } catch (ex) {\n        console.warn('Copy to clipboard failed.', ex);\n      } finally {\n        if (textArea) {\n          document.body.removeChild(textArea);\n        }\n      }\n    }\n  };\n  /**\n   * @param target\n   * @private\n   */\n  // eslint-disable-next-line\n\n\n  FreeTextAnnotation.prototype.pasteSelectedText = function (target) {\n    if (this.selectedText !== '' && target) {\n      // eslint-disable-next-line\n      var text = target.value;\n      target.value = text.slice(0, this.selectionStart) + this.selectedText + text.slice(this.selectionEnd, text.length);\n    } // eslint-disable-next-line\n\n\n    var events = event;\n    this.onKeyDownInputBox(events);\n  };\n  /**\n   * @param target\n   * @private\n   */\n  // eslint-disable-next-line\n\n\n  FreeTextAnnotation.prototype.cutSelectedText = function (target) {\n    if (window.getSelection() !== null) {\n      // eslint-disable-next-line\n      var text = target.value;\n      this.selectedText = window.getSelection().toString();\n      target.value = text.slice(0, target.selectionStart) + text.slice(target.selectionEnd);\n      var textArea = document.createElement('textarea');\n      textArea.contentEditable = 'true';\n      textArea.textContent = this.selectedText;\n      textArea.style.position = 'fixed';\n      document.body.appendChild(textArea);\n      textArea.select();\n\n      try {\n        document.execCommand('cut');\n      } catch (ex) {\n        console.warn('Copy to clipboard failed.', ex);\n      } finally {\n        if (textArea) {\n          document.body.removeChild(textArea);\n        }\n      }\n    }\n  };\n  /**\n   * @param shapeAnnotations\n   * @param pageNumber\n   * @private\n   */\n  // eslint-disable-next-line\n\n\n  FreeTextAnnotation.prototype.saveImportedFreeTextAnnotations = function (shapeAnnotations, pageNumber) {\n    // eslint-disable-next-line\n    var annotation = shapeAnnotations;\n\n    if (annotation.AnnotType) {\n      var vertexPoints = null;\n\n      if (annotation.VertexPoints) {\n        vertexPoints = [];\n\n        for (var j = 0; j < annotation.VertexPoints.length; j++) {\n          var point = {\n            x: annotation.VertexPoints[j].X,\n            y: annotation.VertexPoints[j].Y\n          };\n          vertexPoints.push(point);\n        }\n      } // eslint-disable-next-line max-len\n\n\n      annotation.AnnotationSettings = annotation.AnnotationSettings ? annotation.AnnotationSettings : this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.freeTextSettings);\n      var annot = void 0; // eslint-disable-next-line max-len\n\n      annotation.allowedInteractions = this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation);\n      var annotationBoundsX = !isNullOrUndefined(annotation.Bounds.X) ? annotation.Bounds.X : annotation.Bounds.x;\n      var annotationBoundsY = !isNullOrUndefined(annotation.Bounds.Y) ? annotation.Bounds.Y : annotation.Bounds.y;\n      var annotationBoundsWidth = annotation.Bounds.Width ? annotation.Bounds.Width : annotation.Bounds.width;\n      var annotationBoundsHeight = annotation.Bounds.Height ? annotation.Bounds.Height : annotation.Bounds.height; // eslint-disable-next-line\n\n      annot = {\n        author: annotation.Author,\n        allowedInteractions: annotation.allowedInteractions,\n        modifiedDate: annotation.ModifiedDate,\n        subject: annotation.Subject,\n        id: 'freetext',\n        rotateAngle: annotation.Rotate,\n        dynamicText: annotation.MarkupText,\n        strokeColor: annotation.StrokeColor,\n        thickness: annotation.Thickness,\n        fillColor: annotation.FillColor,\n        bounds: {\n          x: annotationBoundsX,\n          y: annotationBoundsY,\n          left: annotationBoundsX,\n          top: annotationBoundsY,\n          width: annotationBoundsWidth,\n          height: annotationBoundsHeight,\n          right: annotation.Bounds.Right,\n          bottom: annotation.Bounds.Bottom\n        },\n        annotName: annotation.AnnotName,\n        shapeAnnotationType: 'FreeText',\n        // eslint-disable-next-line\n        pageIndex: pageNumber,\n        opacity: annotation.Opacity,\n        fontColor: annotation.FontColor,\n        fontSize: annotation.FontSize,\n        fontFamily: annotation.FontFamily,\n        notes: annotation.MarkupText,\n        textAlign: annotation.TextAlign,\n        // eslint-disable-next-line\n        comments: this.pdfViewer.annotationModule.getAnnotationComments(annotation.Comments, annotation, annotation.Author),\n        review: {\n          state: annotation.State,\n          stateModel: annotation.StateModel,\n          modifiedDate: annotation.ModifiedDate,\n          author: annotation.Author\n        },\n        font: {\n          isBold: annotation.Font.Bold,\n          isItalic: annotation.Font.Italic,\n          isStrikeout: annotation.Font.Strikeout,\n          isUnderline: annotation.Font.Underline\n        },\n        annotationSelectorSettings: this.getSettings(annotation),\n        annotationSettings: annotation.AnnotationSettings,\n        // eslint-disable-next-line max-len\n        customData: this.pdfViewer.annotation.getCustomData(annotation),\n        isPrint: annotation.IsPrint,\n        isCommentLock: annotation.IsCommentLock,\n        isReadonly: annotation.IsReadonly\n      };\n      this.pdfViewer.annotationModule.storeAnnotations(pageNumber, annot, '_annotations_freetext');\n    }\n  };\n  /**\n   * @param shapeAnnotations\n   * @param pageNumber\n   * @private\n   */\n  // eslint-disable-next-line\n\n\n  FreeTextAnnotation.prototype.updateFreeTextAnnotationCollections = function (shapeAnnotations, pageNumber) {\n    // eslint-disable-next-line\n    var annotation = shapeAnnotations;\n\n    if (annotation.AnnotType) {\n      var vertexPoints = null;\n\n      if (annotation.VertexPoints) {\n        vertexPoints = [];\n\n        for (var j = 0; j < annotation.VertexPoints.length; j++) {\n          var point = {\n            x: annotation.VertexPoints[j].X,\n            y: annotation.VertexPoints[j].Y\n          };\n          vertexPoints.push(point);\n        }\n      } // eslint-disable-next-line max-len\n\n\n      annotation.AnnotationSettings = annotation.AnnotationSettings ? annotation.AnnotationSettings : this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.freeTextSettings);\n\n      if (annotation.IsLocked) {\n        annotation.AnnotationSettings.isLock = annotation.IsLocked;\n      } // eslint-disable-next-line max-len\n\n\n      annotation.allowedInteractions = this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation);\n      var annotationBoundsX = annotation.Bounds.X ? annotation.Bounds.X : annotation.Bounds.x;\n      var annotationBoundsY = annotation.Bounds.Y ? annotation.Bounds.Y : annotation.Bounds.y;\n      var width = annotation.Bounds.Width ? annotation.Bounds.Width : annotation.Bounds.width;\n      var height = annotation.Bounds.Height ? annotation.Bounds.Height : annotation.Bounds.height; // eslint-disable-next-line\n\n      var annot = void 0; // eslint-disable-next-line\n\n      annot = {\n        author: annotation.Author,\n        allowedInteractions: annotation.allowedInteractions,\n        modifiedDate: annotation.ModifiedDate,\n        subject: annotation.Subject,\n        id: 'freetext',\n        rotateAngle: annotation.Rotate,\n        dynamicText: annotation.MarkupText,\n        strokeColor: annotation.StrokeColor,\n        thickness: annotation.Thickness,\n        fillColor: annotation.FillColor,\n        bounds: {\n          x: annotationBoundsX,\n          y: annotationBoundsY,\n          left: annotationBoundsX,\n          top: annotationBoundsY,\n          width: width,\n          height: height,\n          right: annotation.Bounds.Right,\n          bottom: annotation.Bounds.Bottom\n        },\n        annotationId: annotation.AnnotName,\n        shapeAnnotationType: 'FreeText',\n        // eslint-disable-next-line\n        pageIndex: pageNumber,\n        opacity: annotation.Opacity,\n        fontColor: annotation.FontColor,\n        fontSize: annotation.FontSize,\n        fontFamily: annotation.FontFamily,\n        notes: annotation.MarkupText,\n        // eslint-disable-next-line\n        comments: this.pdfViewer.annotationModule.getAnnotationComments(annotation.Comments, annotation, annotation.Author),\n        review: {\n          state: annotation.State,\n          stateModel: annotation.StateModel,\n          modifiedDate: annotation.ModifiedDate,\n          author: annotation.Author\n        },\n        font: {\n          isBold: annotation.Font.Bold,\n          isItalic: annotation.Font.Italic,\n          isStrikeout: annotation.Font.Strikeout,\n          isUnderline: annotation.Font.Underline\n        },\n        pageNumber: pageNumber,\n        annotationSettings: annotation.AnnotationSettings,\n        isCommentLock: annotation.IsCommentLock\n      };\n      return annot;\n    }\n  };\n  /**\n   * This method used to add annotations with using program.\n   *\n   * @param annotationType - It describes type of annotation\n   * @param offset - It describes about the annotation bounds\n   * @returns Object\n   * @private\n   */\n\n\n  FreeTextAnnotation.prototype.updateAddAnnotationDetails = function (annotationObject, offset) {\n    //Creating new object if annotationObject is null\n    if (!annotationObject) {\n      annotationObject = {\n        offset: {\n          x: 1,\n          y: 1\n        },\n        pageNumber: 0,\n        width: undefined,\n        height: undefined\n      };\n      offset = annotationObject.offset;\n    } else if (!annotationObject.offset) offset = {\n      x: 1,\n      y: 1\n    };else offset = annotationObject.offset; //Creating the CurrentDate and Annotation name\n\n\n    var currentDateString = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n    var annotationName = this.pdfViewer.annotation.createGUID();\n    var fontStyle = annotationObject.fontStyle ? annotationObject.fontStyle : FontStyle.None; //Creating annotation settings\n\n    var annotationSelectorSettings = this.pdfViewer.freeTextSettings.annotationSelectorSettings ? this.pdfViewer.freeTextSettings.annotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n    var annotationSettings = this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.freeTextSettings);\n    var allowedInteractions = this.pdfViewer.freeTextSettings.allowedInteractions ? this.pdfViewer.freeTextSettings.allowedInteractions : this.pdfViewer.annotationSettings.allowedInteractions;\n    annotationSettings.isLock = annotationObject.isLock ? annotationObject.isLock : false;\n    annotationSettings.minHeight = annotationObject.minHeight ? annotationObject.minHeight : 0;\n    annotationSettings.minWidth = annotationObject.minWidth ? annotationObject.minWidth : 0;\n    annotationSettings.maxWidth = annotationObject.maxWidth ? annotationObject.maxWidth : 0;\n    annotationSettings.maxHeight = annotationObject.maxHeight ? annotationObject.maxHeight : 0;\n    annotationObject.width = annotationObject.width ? annotationObject.width : 150;\n    annotationObject.height = annotationObject.height ? annotationObject.height : 24.6; //Creating Annotation objects with it's proper properties\n\n    var freeTextAnnotation = [];\n    var freeText = {\n      AllowedInteractions: annotationObject.allowedInteractions ? annotationObject.allowedInteractions : allowedInteractions,\n      AnnotName: annotationName,\n      AnnotType: 'freeText',\n      AnnotationFlags: 'Default',\n      AnnotationIntent: null,\n      AnnotationSelectorSettings: annotationObject.annotationSelectorSettings ? annotationObject.annotationSelectorSettings : annotationSelectorSettings,\n      AnnotationSettings: annotationSettings,\n      Author: annotationObject.author ? annotationObject.author : 'Guest',\n      Border: {\n        HorizontalRadius: 0,\n        VerticalRadius: 0,\n        Width: annotationObject.borderWidth ? annotationObject.borderWidth : 1\n      },\n      BorderColor: {\n        IsEmpty: true,\n        B: 255,\n        Blue: 1,\n        C: 0,\n        G: 255\n      },\n      Bounds: {\n        X: offset.x,\n        Y: offset.y,\n        Width: annotationObject.width,\n        Height: annotationObject.height,\n        Left: offset.x,\n        Top: offset.y,\n        Right: offset.x + annotationObject.width,\n        Bottom: offset.y + annotationObject.height\n      },\n      CalloutLines: null,\n      Color: {\n        IsEmpty: false,\n        B: 51,\n        Blue: 0.2,\n        C: 0,\n        G: 255\n      },\n      Comments: null,\n      CreatedDate: currentDateString,\n      CustomData: annotationObject.customData ? annotationObject.customData : null,\n      ExistingCustomData: null,\n      FillColor: annotationObject.fillColor ? annotationObject.fillColor : '#ffffff00',\n      Flatten: false,\n      FlattenPopups: false,\n      Font: {\n        Bold: fontStyle == FontStyle.Bold ? true : false,\n        Italic: fontStyle == FontStyle.Italic ? true : false,\n        Strikeout: fontStyle == FontStyle.Strikethrough ? true : false,\n        Underline: fontStyle == FontStyle.Underline ? true : false\n      },\n      FontColor: annotationObject.fontColor ? annotationObject.fontColor : '#000',\n      FontFamily: annotationObject.fontFamily ? annotationObject.fontFamily : 'Helvetica',\n      FontSize: annotationObject.fontSize ? annotationObject.fontSize : 16,\n      FreeTextAnnotationType: 'Text Box',\n      InnerColor: null,\n      IsCommentLock: false,\n      IsLock: annotationObject.isLock ? annotationObject.isLock : false,\n      IsPrint: annotationObject.isPrint !== null && annotationObject.isPrint !== undefined ? annotationObject.isPrint : true,\n      Layer: null,\n      LineEndingStyle: 'OpenArrow',\n      Location: null,\n      MarkupText: annotationObject.defaultText ? annotationObject.defaultText : 'Type Here',\n      ModifiedDate: currentDateString,\n      Name: annotationName,\n      Opacity: annotationObject.opacity ? annotationObject.opacity : 1,\n      Page: null,\n      PageTags: null,\n      ReviewHistory: null,\n      Rotate: 0,\n      IsReadonly: annotationObject.isReadonly ? annotationObject.isReadonly : false,\n      State: 'Unmarked',\n      StateModel: 'None',\n      StrokeColor: annotationObject.borderColor ? annotationObject.borderColor : '#ffffff00',\n      Subject: 'Text Box',\n      Text: annotationObject.defaultText ? annotationObject.defaultText : 'Type Here',\n      TextAlign: annotationObject.textAlignment ? annotationObject.textAlignment : 'Left',\n      TextMarkupColor: null,\n      Thickness: annotationObject.borderWidth ? annotationObject.borderWidth : 1,\n      isAddAnnotationProgramatically: true\n    }; //Adding the annotation object to an array and return it\n\n    freeTextAnnotation[0] = freeText;\n    return {\n      freeTextAnnotation: freeTextAnnotation\n    };\n  };\n  /**\n   * This method used to get the padding.\n  */\n\n\n  FreeTextAnnotation.prototype.getPaddingValues = function (fontSize) {\n    var leftPadding = 4; // Left padding used in the drawing.js\n\n    var topPadding = 5; // Top padding used in the drawing.js\n\n    var inputBoxpadding = 2; // we have set the input box padding for the free text.\n\n    topPadding = (topPadding - inputBoxpadding) * (fontSize / 16);\n    return [leftPadding, topPadding];\n  };\n  /**\n   * @private\n   * This method used tp get the current position of x and y.\n  */\n\n\n  FreeTextAnnotation.prototype.addInputInZoom = function (currentPosition) {\n    var zoomFactor = this.pdfViewerBase.getZoomFactor();\n    this.inputBoxElement.style.left = currentPosition.x * zoomFactor + 'px';\n    this.inputBoxElement.style.top = currentPosition.y * zoomFactor + 'px';\n    this.inputBoxElement.style.height = currentPosition.height * zoomFactor + 'px';\n    this.inputBoxElement.style.width = currentPosition.width * zoomFactor + 'px';\n    this.inputBoxElement.style.borderWidth = this.borderWidth * zoomFactor + 'px';\n    this.inputBoxElement.style.fontSize = this.fontSize * zoomFactor + 'px';\n  };\n\n  return FreeTextAnnotation;\n}();\n\nexport { FreeTextAnnotation };","map":{"version":3,"names":["FontStyle","isBlazor","isNullOrUndefined","FreeTextAnnotation","pdfviewer","pdfViewerBase","inputBoxCount","isFreeTextValueChange","isAddAnnotationProgramatically","isInuptBoxInFocus","freeTextPageNumbers","selectedText","isTextSelected","selectionStart","selectionEnd","isBold","isItalic","isUnderline","isStrikethrough","isReadonly","isMaximumWidthReached","previousText","currentPosition","pdfViewer","updateTextProperties","inputBoxElement","document","createElement","style","position","Width","defautWidth","Height","defaultHeight","zIndex","fontSize","className","resize","borderColor","background","fillColor","borderStyle","borderWidth","padding","paddingLeft","borderRadius","verticalAlign","fontFamily","color","freeTextSettings","fontColor","overflow","wordBreak","readOnly","addEventListener","onFocusOutInputBox","bind","onKeyDownInputBox","onMouseUpInputBox","prototype","width","height","opacity","author","annotationSettings","fontName","textAlign","textAlignment","defaultText","enableAutoFit","isLock","fontStyle","renderFreeTextAnnotations","shapeAnnotations","pageNumber","isImportAction","isFreeTextAdded","p","length","push","i","annotation","annotationAddMode","annotationModule","findAnnotationMode","AnnotType","vertexPoints","VertexPoints","j","point","x","X","y","Y","AnnotationSettings","updateSettings","annot","paddingValue","annotationBoundsX","Bounds","annotationBoundsY","isAddedProgramatically","rotateValue","getRotationValue","originalRotation","Rotate","pageRotate","PageRotation","Math","sign","rotateAngle","abs","isJsonImported","pageDetails","pageSize","boundsX","boundsY","annotationWidth","annotationHeight","rotatation","rotationHeight","rotationWidth","isPrint","IsPrint","allowedInteractions","AllowedInteractions","updateAnnotationAllowedInteractions","Author","modifiedDate","ModifiedDate","subject","Subject","id","dynamicText","MarkupText","strokeColor","StrokeColor","thickness","Thickness","FillColor","bounds","left","top","right","Right","bottom","Bottom","annotName","AnnotName","shapeAnnotationType","pageIndex","Opacity","FontColor","FontSize","pageRotation","FontFamily","notes","TextAlign","comments","getAnnotationComments","Comments","review","state","State","stateModel","StateModel","font","Font","Bold","Italic","isStrikeout","Strikeout","Underline","annotationSelectorSettings","getSettings","customData","getCustomData","isCommentLock","IsCommentLock","IsReadonly","isAddAnnotationProgrammatically","previousFontSize","addedAnnot","add","storeAnnotations","settings","fireAnnotationAdd","freeTextAnnotationModule","nodePropertyChange","selector","AnnotationSelectorSettings","setAnnotationType","type","disableTextSelectionMode","currentAnnotationMode","modifiedDateRect","stickyNotesAnnotationModule","getDateAndTime","drawingObject","borderDashArray","tool","modifyInCollection","property","annotationBase","isNewAdded","updateDocumentEditedProperty","currentAnnotObject","pageAnnotations","getAnnotations","wrapper","children","fill","strokeWidth","note","splice","storeAnnotationCollections","manageAnnotations","addInCollection","saveFreeTextAnnotations","storeObject","window","sessionStorage","getItem","documentId","isStorageExceed","annotationStorage","annotations","Array","pageCount","skipDownload","annotationCollection","JSON","parse","newArray","pageAnnotationObject","z","updateModifiedDate","getBoundsBasedOnRotation","stringify","getBounds","strokeColorString","getRgbCode","fillColorString","fontColorString","rectangleDifference","isAddedProgrammatically","rotation","annotObject","removeItem","index","getPageCollection","annotationStringified","setItem","colorString","match","nameToHash","stringArray","split","getValue","r","parseInt","g","b","a","allowServerDataBind","allowServerDataBinding","enableServerDataBinding","isFreeTextContextMenu","fireBeforeAddFreeTextAnnotation","value","parseFloat","currentPageNumber","pageDiv","getElement","isNewFreeTextAnnot","fontsize","characterLength","inputEleHeight","inputEleWidth","inputEleLeft","isMixedSizeDocument","canvas","getElementById","element","offsetLeft","inputEleTop","zoomFactor","getZoomFactor","isValidFreeText","inputValue","isNewlyAdded","currentDateString","annotationName","createGUID","commentsDivid","addComments","getData","enableRtl","addAction","renderSelector","clearSelection","selectedAnnotation","selectedItems","heightDiff","undefined","offsetY","widthDiff","offsetX","modifyDynamicTextValue","commentsDiv","childNodes","ej2_instances","parentElement","removeChild","canvass","renderDrawing","triggerAnnotationPropChange","focus","getSelection","removeAllRanges","event","inuptEleObj","which","preventDefault","setTimeout","scrollHeight","updateFreeTextAnnotationSize","isSize","autoFitFreeText","previousHeight","getBoundingClientRect","currentHeight","difference","xPosition","yPosition","context","getContext","fontWeight","highestTextNode","textNodes","textboxValue","indexOf","textNodeData","measureText","highestTextNodeData","textwidth","ceil","maxWidth","getPageWidth","isNewAddedAnnot","target","toString","addInuptElemet","boxSizing","applyFreetextStyles","textDecoration","direction","toLowerCase","annotationBounds","appendChild","select","isFreeTextSelected","copySelectedText","textArea","contentEditable","textContent","body","execCommand","ex","console","warn","pasteSelectedText","text","slice","events","cutSelectedText","saveImportedFreeTextAnnotations","annotationBoundsWidth","annotationBoundsHeight","updateFreeTextAnnotationCollections","IsLocked","annotationId","updateAddAnnotationDetails","annotationObject","offset","None","minHeight","minWidth","maxHeight","freeTextAnnotation","freeText","AnnotationFlags","AnnotationIntent","Border","HorizontalRadius","VerticalRadius","BorderColor","IsEmpty","B","Blue","C","G","Left","Top","CalloutLines","Color","CreatedDate","CustomData","ExistingCustomData","Flatten","FlattenPopups","Strikethrough","FreeTextAnnotationType","InnerColor","IsLock","Layer","LineEndingStyle","Location","Name","Page","PageTags","ReviewHistory","Text","TextMarkupColor","getPaddingValues","leftPadding","topPadding","inputBoxpadding","addInputInZoom"],"sources":["/home/morgan/Desktop/Projets/ENT4/Jwt-Auth-pdf/react-jwt-auth/react-jwt-auth/node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/annotation/free-text-annotation.js"],"sourcesContent":["/* eslint-disable */\nimport { FontStyle } from './../base/types';\nimport { isBlazor, isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * @hidden\n */\nvar FreeTextAnnotation = /** @class */ (function () {\n    function FreeTextAnnotation(pdfviewer, pdfViewerBase) {\n        /**\n         * @private\n         */\n        this.inputBoxCount = 0;\n        /**\n         * @private\n         */\n        this.isFreeTextValueChange = false;\n        /**\n         * @private\n         */\n        this.isAddAnnotationProgramatically = false;\n        /**\n         * @private\n         */\n        this.isInuptBoxInFocus = false;\n        /**\n         * @private\n         */\n        // eslint-disable-next-line\n        this.freeTextPageNumbers = [];\n        /**\n         * @private\n         */\n        this.selectedText = '';\n        /**\n         * @private\n         */\n        this.isTextSelected = false;\n        this.selectionStart = 0;\n        this.selectionEnd = 0;\n        /**\n         * @private\n         */\n        this.isBold = false;\n        /**\n         * @private\n         */\n        this.isItalic = false;\n        /**\n         * @private\n         */\n        this.isUnderline = false;\n        /**\n         * @private\n         */\n        this.isStrikethrough = false;\n        this.isReadonly = false;\n        this.isMaximumWidthReached = false;\n        /**\n         * @private\n         */\n        this.previousText = 'Type Here';\n        /**\n         * @private\n         */\n        this.currentPosition = [];\n        this.pdfViewer = pdfviewer;\n        this.pdfViewerBase = pdfViewerBase;\n        this.updateTextProperties();\n        this.inputBoxElement = document.createElement('textarea');\n        this.inputBoxElement.style.position = 'absolute';\n        this.inputBoxElement.style.Width = this.defautWidth;\n        this.inputBoxElement.style.Height = this.defaultHeight;\n        this.inputBoxElement.style.zIndex = '5';\n        this.inputBoxElement.style.fontSize = this.fontSize + 'px';\n        this.inputBoxElement.className = 'free-text-input';\n        this.inputBoxElement.style.resize = 'none';\n        this.inputBoxElement.style.borderColor = this.borderColor;\n        this.inputBoxElement.style.background = this.fillColor;\n        this.inputBoxElement.style.borderStyle = this.borderStyle;\n        this.inputBoxElement.style.borderWidth = this.borderWidth + 'px';\n        this.inputBoxElement.style.padding = this.padding;\n        this.inputBoxElement.style.paddingLeft = '3px';\n        this.inputBoxElement.style.borderRadius = '2px';\n        this.inputBoxElement.style.verticalAlign = 'middle';\n        this.inputBoxElement.style.fontFamily = this.fontFamily;\n        this.inputBoxElement.style.color = this.pdfViewer.freeTextSettings.fontColor ?\n            this.pdfViewer.freeTextSettings.fontColor : '#000';\n        this.inputBoxElement.style.overflow = 'hidden';\n        this.inputBoxElement.style.wordBreak = this.wordBreak;\n        this.inputBoxElement.readOnly = this.isReadonly;\n        this.inputBoxElement.addEventListener('focusout', this.onFocusOutInputBox.bind(this));\n        this.inputBoxElement.addEventListener('keydown', this.onKeyDownInputBox.bind(this));\n        this.inputBoxElement.addEventListener('mouseup', this.onMouseUpInputBox.bind(this));\n        this.freeTextPageNumbers = [];\n    }\n    /**\n     * @private\n     */\n    FreeTextAnnotation.prototype.updateTextProperties = function () {\n        this.defautWidth = this.pdfViewer.freeTextSettings.width ? this.pdfViewer.freeTextSettings.width : 151;\n        this.defaultHeight = this.pdfViewer.freeTextSettings.height ? this.pdfViewer.freeTextSettings.height : 24.6;\n        this.borderColor = this.pdfViewer.freeTextSettings.borderColor ? this.pdfViewer.freeTextSettings.borderColor : '#ffffff00';\n        this.fillColor = this.pdfViewer.freeTextSettings.fillColor ? this.pdfViewer.freeTextSettings.fillColor : '#fff';\n        this.borderStyle = this.pdfViewer.freeTextSettings.borderStyle ? this.pdfViewer.freeTextSettings.borderStyle : 'solid';\n        this.borderWidth = this.pdfViewer.freeTextSettings.borderWidth ? this.pdfViewer.freeTextSettings.borderWidth : 1;\n        this.fontSize = this.pdfViewer.freeTextSettings.fontSize ? this.pdfViewer.freeTextSettings.fontSize : 16;\n        this.opacity = this.pdfViewer.freeTextSettings.opacity ? this.pdfViewer.freeTextSettings.opacity : 1;\n        this.fontColor = this.pdfViewer.freeTextSettings.fontColor ? this.pdfViewer.freeTextSettings.fontColor : '#000';\n        // eslint-disable-next-line max-len\n        this.author = (this.pdfViewer.freeTextSettings.author !== 'Guest') ? this.pdfViewer.freeTextSettings.author : this.pdfViewer.annotationSettings.author ? this.pdfViewer.annotationSettings.author : 'Guest';\n        if (this.pdfViewer.freeTextSettings.fontFamily) {\n            var fontName = this.pdfViewer.freeTextSettings.fontFamily;\n            if (fontName === 'Helvetica' || fontName === 'Times New Roman' || fontName === 'Courier' || fontName === 'Symbol' || fontName === 'ZapfDingbats') {\n                this.fontFamily = fontName;\n            }\n            else {\n                this.fontFamily = 'Helvetica';\n            }\n        }\n        else {\n            this.fontFamily = 'Helvetica';\n        }\n        this.textAlign = this.pdfViewer.freeTextSettings.textAlignment ? this.pdfViewer.freeTextSettings.textAlignment : 'Left';\n        this.defaultText = this.pdfViewer.freeTextSettings.defaultText ? this.pdfViewer.freeTextSettings.defaultText : 'Type here';\n        this.isReadonly = false;\n        if (this.pdfViewer.freeTextSettings.enableAutoFit) {\n            this.wordBreak = 'break-all';\n            this.padding = '2px';\n        }\n        else {\n            this.padding = '0px';\n            this.wordBreak = 'break-word';\n        }\n        // eslint-disable-next-line max-len\n        if (this.pdfViewer.freeTextSettings.isLock || this.pdfViewer.annotationSettings.isLock || this.pdfViewer.freeTextSettings.isReadonly) {\n            this.isReadonly = true;\n        }\n        if (this.pdfViewer.freeTextSettings.fontStyle === 1) {\n            this.isBold = true;\n        }\n        else if (this.pdfViewer.freeTextSettings.fontStyle === 2) {\n            this.isItalic = true;\n        }\n        else if (this.pdfViewer.freeTextSettings.fontStyle === 4) {\n            this.isUnderline = true;\n        }\n        else if (this.pdfViewer.freeTextSettings.fontStyle === 8) {\n            this.isStrikethrough = true;\n        }\n        else if (3 === this.pdfViewer.freeTextSettings.fontStyle) {\n            this.isBold = true;\n            this.isItalic = true;\n        }\n        else if (5 === this.pdfViewer.freeTextSettings.fontStyle) {\n            this.isBold = true;\n            this.isUnderline = true;\n        }\n        else if (9 === this.pdfViewer.freeTextSettings.fontStyle) {\n            this.isBold = true;\n            this.isStrikethrough = true;\n        }\n        else if (7 === this.pdfViewer.freeTextSettings.fontStyle) {\n            this.isBold = true;\n            this.isItalic = true;\n            this.isUnderline = true;\n        }\n        else if (11 === this.pdfViewer.freeTextSettings.fontStyle) {\n            this.isBold = true;\n            this.isItalic = true;\n            this.isStrikethrough = true;\n        }\n        else if (14 === this.pdfViewer.freeTextSettings.fontStyle) {\n            this.isBold = true;\n            this.isUnderline = true;\n            this.isStrikethrough = true;\n        }\n        else if (6 === this.pdfViewer.freeTextSettings.fontStyle) {\n            this.isUnderline = true;\n            this.isItalic = true;\n        }\n    };\n    /**\n     * @param shapeAnnotations\n     * @param pageNumber\n     * @param isImportAction\n     * @private\n     */\n    // eslint-disable-next-line\n    FreeTextAnnotation.prototype.renderFreeTextAnnotations = function (shapeAnnotations, pageNumber, isImportAction) {\n        var isFreeTextAdded = false;\n        if (!isImportAction) {\n            for (var p = 0; p < this.freeTextPageNumbers.length; p++) {\n                if (this.freeTextPageNumbers[p] === pageNumber) {\n                    isFreeTextAdded = true;\n                    break;\n                }\n            }\n        }\n        if (shapeAnnotations && !isFreeTextAdded) {\n            if (shapeAnnotations.length >= 1) {\n                this.freeTextPageNumbers.push(pageNumber);\n                for (var i = 0; i < shapeAnnotations.length; i++) {\n                    // eslint-disable-next-line\n                    var annotation = shapeAnnotations[i];\n                    annotation.annotationAddMode = this.pdfViewer.annotationModule.findAnnotationMode(annotation, pageNumber, annotation.AnnotType);\n                    if (annotation.AnnotType) {\n                        var vertexPoints = null;\n                        if (annotation.VertexPoints) {\n                            vertexPoints = [];\n                            for (var j = 0; j < annotation.VertexPoints.length; j++) {\n                                var point = { x: annotation.VertexPoints[j].X, y: annotation.VertexPoints[j].Y };\n                                vertexPoints.push(point);\n                            }\n                        }\n                        // eslint-disable-next-line max-len\n                        annotation.AnnotationSettings = annotation.AnnotationSettings ? annotation.AnnotationSettings : this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.freeTextSettings);\n                        var annot = void 0;\n                        var paddingValue = 0.5;\n                        var annotationBoundsX = !isNullOrUndefined(annotation.Bounds.X) ? annotation.Bounds.X - paddingValue : annotation.Bounds.x;\n                        var annotationBoundsY = !isNullOrUndefined(annotation.Bounds.Y) ? annotation.Bounds.Y - paddingValue : annotation.Bounds.y;\n                        var width = annotation.Bounds.Width ? annotation.Bounds.Width : annotation.Bounds.width;\n                        var height = annotation.Bounds.Height ? annotation.Bounds.Height : annotation.Bounds.height;\n                        var isAddedProgramatically = annotation.isAddAnnotationProgramatically ? annotation.isAddAnnotationProgramatically : false;\n                        var rotateValue = this.getRotationValue(pageNumber, isAddedProgramatically);\n                        var originalRotation = annotation.Rotate;\n                        var pageRotate = annotation.PageRotation;\n                        if (Math.sign(annotation.Rotate) === 1) {\n                            annotation.Rotate = -annotation.Rotate + rotateValue;\n                        }\n                        else {\n                            annotation.Rotate = annotation.Rotate + rotateValue;\n                        }\n                        // eslint-disable-next-line\n                        var rotateAngle = Math.abs(annotation.Rotate);\n                        if (isImportAction && rotateValue !== pageRotate) {\n                            if (this.pdfViewerBase.isJsonImported) {\n                                var pageDetails = this.pdfViewerBase.pageSize[pageNumber];\n                                var boundsX = annotation.Bounds.X;\n                                var boundsY = annotation.Bounds.Y;\n                                var annotationWidth = width;\n                                var annotationHeight = height;\n                                if (pageRotate > 0) {\n                                    var rotatation = pageRotate / 90;\n                                    if (rotatation === 1) {\n                                        height = width;\n                                        width = annotation.Bounds.Height;\n                                        annotationBoundsX = annotation.Bounds.Y;\n                                        if (rotateValue !== 270) {\n                                            annotationBoundsY = pageDetails.height - annotation.Bounds.X - annotation.Bounds.Width;\n                                        }\n                                        else {\n                                            annotationBoundsY = pageDetails.width - annotation.Bounds.X - annotation.Bounds.Width;\n                                        }\n                                    }\n                                    else if (rotatation === 2) {\n                                        if (rotateValue !== 270 && rotateValue !== 90) {\n                                            annotationBoundsX = pageDetails.width - annotation.Bounds.X - annotation.Bounds.Width;\n                                            annotationBoundsY = pageDetails.height - annotation.Bounds.Y - annotation.Bounds.Height;\n                                        }\n                                        else {\n                                            annotationBoundsX = pageDetails.height - annotation.Bounds.X - annotation.Bounds.Width;\n                                            annotationBoundsY = pageDetails.width - annotation.Bounds.Y - annotation.Bounds.Height;\n                                        }\n                                    }\n                                    else if (rotatation === 3) {\n                                        height = width;\n                                        width = annotation.Bounds.Height;\n                                        if (rotateValue !== 90) {\n                                            annotationBoundsX = pageDetails.width - annotation.Bounds.Y - width;\n                                        }\n                                        else {\n                                            annotationBoundsX = pageDetails.height - annotation.Bounds.Y - width;\n                                        }\n                                        annotationBoundsY = annotation.Bounds.X;\n                                    }\n                                    boundsX = annotationBoundsX;\n                                    boundsY = annotationBoundsY;\n                                    annotationWidth = width;\n                                    annotationHeight = height;\n                                }\n                                rotateAngle = (rotateValue / 90) % 4;\n                                if (rotateAngle === 1) {\n                                    height = width;\n                                    width = annotationHeight;\n                                    annotationBoundsX = pageDetails.width - boundsY - annotationHeight - paddingValue;\n                                    annotationBoundsY = boundsX - paddingValue;\n                                    rotateAngle = 90;\n                                }\n                                else if (rotateAngle === 2) {\n                                    annotationBoundsX = pageDetails.width - boundsX - annotationWidth - paddingValue;\n                                    annotationBoundsY = pageDetails.height - boundsY - annotationHeight - paddingValue;\n                                    rotateAngle = 180;\n                                }\n                                else if (rotateAngle === 3) {\n                                    height = width;\n                                    width = annotationHeight;\n                                    annotationBoundsX = boundsY - paddingValue;\n                                    annotationBoundsY = pageDetails.height - boundsX - height - paddingValue;\n                                    rotateAngle = 270;\n                                }\n                                else if (rotateAngle === 0) {\n                                    annotationBoundsX = boundsX - paddingValue;\n                                    annotationBoundsY = boundsY - paddingValue;\n                                }\n                            }\n                        }\n                        if (rotateAngle === 90 || rotateAngle === 270) {\n                            var rotationHeight = height;\n                            var rotationWidth = width;\n                            height = rotationWidth;\n                            width = rotationHeight;\n                            annotationBoundsX = (annotationBoundsX - (width / 2)) + (height / 2);\n                            annotationBoundsY = (annotationBoundsY) + (width / 2 - height / 2);\n                        }\n                        var isPrint = true;\n                        if (annotation.annotationAddMode === 'Imported Annotation') {\n                            isPrint = annotation.IsPrint;\n                        }\n                        else {\n                            isPrint = annotation.AnnotationSettings.isPrint;\n                        }\n                        // eslint-disable-next-line\n                        annotation.allowedInteractions = annotation.AllowedInteractions ? annotation.AllowedInteractions : this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation);\n                        // eslint-disable-next-line\n                        annot = {\n                            author: annotation.Author, modifiedDate: annotation.ModifiedDate, subject: annotation.Subject, id: 'freetext' + this.inputBoxCount,\n                            rotateAngle: annotation.Rotate, dynamicText: annotation.MarkupText, strokeColor: annotation.StrokeColor,\n                            thickness: annotation.Thickness, fillColor: annotation.FillColor,\n                            bounds: {\n                                x: annotationBoundsX, y: annotationBoundsY, left: annotationBoundsX, top: annotationBoundsY,\n                                width: width, height: height, right: annotation.Bounds.Right,\n                                bottom: annotation.Bounds.Bottom\n                            }, annotName: annotation.AnnotName, shapeAnnotationType: 'FreeText',\n                            // eslint-disable-next-line\n                            pageIndex: pageNumber, opacity: annotation.Opacity, fontColor: annotation.FontColor, fontSize: annotation.FontSize, pageRotation: rotateValue,\n                            fontFamily: annotation.FontFamily, notes: annotation.MarkupText, textAlign: annotation.TextAlign,\n                            // eslint-disable-next-line\n                            comments: this.pdfViewer.annotationModule.getAnnotationComments(annotation.Comments, annotation, annotation.Author),\n                            review: { state: annotation.State, stateModel: annotation.StateModel, modifiedDate: annotation.ModifiedDate, author: annotation.Author },\n                            // eslint-disable-next-line max-len\n                            font: { isBold: annotation.Font.Bold, isItalic: annotation.Font.Italic, isStrikeout: annotation.Font.Strikeout, isUnderline: annotation.Font.Underline },\n                            annotationSelectorSettings: this.getSettings(annotation), annotationSettings: annotation.AnnotationSettings,\n                            // eslint-disable-next-line\n                            customData: this.pdfViewer.annotation.getCustomData(annotation), annotationAddMode: annotation.annotationAddMode, allowedInteractions: annotation.allowedInteractions,\n                            isPrint: isPrint, isCommentLock: annotation.IsCommentLock, isReadonly: annotation.IsReadonly,\n                            isAddAnnotationProgrammatically: isAddedProgramatically\n                        };\n                        if (isImportAction) {\n                            annot.id = annotation.AnnotName;\n                            annot.previousFontSize = annotation.FontSize ? annotation.FontSize : this.fontSize;\n                        }\n                        var addedAnnot = this.pdfViewer.add(annot);\n                        this.pdfViewer.annotationModule.storeAnnotations(pageNumber, annot, '_annotations_freetext');\n                        if (this.isAddAnnotationProgramatically) {\n                            // eslint-disable-next-line\n                            var settings = {\n                                opacity: annot.opacity, borderColor: annot.strokeColor, borderWidth: annot.thickness, author: annotation.author, subject: annotation.subject, modifiedDate: annotation.modifiedDate,\n                                // eslint-disable-next-line\n                                fillColor: annot.fillColor, fontSize: annot.fontSize, width: annot.bounds.width, height: annot.bounds.height, fontColor: annot.fontColor, fontFamily: annot.fontFamily, defaultText: annot.dynamicText, fontStyle: annot.font, textAlignment: annot.textAlign\n                            };\n                            this.pdfViewer.fireAnnotationAdd(annot.pageIndex, annot.annotName, 'FreeText', annot.bounds, settings);\n                        }\n                        this.inputBoxCount += 1;\n                        this.pdfViewer.annotation.freeTextAnnotationModule.isFreeTextValueChange = true;\n                        this.pdfViewer.nodePropertyChange(addedAnnot, {});\n                        this.pdfViewer.annotation.freeTextAnnotationModule.isFreeTextValueChange = false;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @param annotation\n     * @private\n     */\n    // eslint-disable-next-line\n    FreeTextAnnotation.prototype.getSettings = function (annotation) {\n        var selector = this.pdfViewer.annotationSelectorSettings;\n        if (annotation.AnnotationSelectorSettings) {\n            selector = annotation.AnnotationSelectorSettings;\n        }\n        else if (this.pdfViewer.freeTextSettings.annotationSelectorSettings) {\n            selector = this.pdfViewer.freeTextSettings.annotationSelectorSettings;\n        }\n        return selector;\n    };\n    /**\n     * @param type\n     * @private\n     */\n    FreeTextAnnotation.prototype.setAnnotationType = function (type) {\n        this.pdfViewerBase.disableTextSelectionMode();\n        switch (type) {\n            case 'FreeText':\n                this.currentAnnotationMode = 'FreeText';\n                this.updateTextProperties();\n                // eslint-disable-next-line max-len\n                var modifiedDateRect = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n                this.pdfViewer.drawingObject = {\n                    shapeAnnotationType: 'FreeText', strokeColor: this.borderColor,\n                    fillColor: this.fillColor, opacity: this.opacity, notes: '', isCommentLock: false,\n                    thickness: this.borderWidth, borderDashArray: '0', modifiedDate: modifiedDateRect,\n                    // eslint-disable-next-line max-len\n                    author: this.pdfViewer.freeTextSettings.author, subject: 'Text Box', font: { isBold: this.isBold, isItalic: this.isItalic, isStrikeout: this.isStrikethrough, isUnderline: this.isUnderline }, textAlign: this.textAlign\n                };\n                this.pdfViewer.tool = 'Select';\n                break;\n        }\n    };\n    /**\n     * @param property\n     * @param pageNumber\n     * @param annotationBase\n     * @param isNewAdded\n     * @param property\n     * @param pageNumber\n     * @param annotationBase\n     * @param isNewAdded\n     * @param property\n     * @param pageNumber\n     * @param annotationBase\n     * @param isNewAdded\n     * @param property\n     * @param pageNumber\n     * @param annotationBase\n     * @param isNewAdded\n     * @private\n     */\n    // eslint-disable-next-line\n    FreeTextAnnotation.prototype.modifyInCollection = function (property, pageNumber, annotationBase, isNewAdded) {\n        if (!isNewAdded) {\n            this.pdfViewerBase.updateDocumentEditedProperty(true);\n        }\n        var currentAnnotObject = null;\n        var pageAnnotations = this.getAnnotations(pageNumber, null);\n        if (pageAnnotations != null && annotationBase) {\n            for (var i = 0; i < pageAnnotations.length; i++) {\n                if (annotationBase.id === pageAnnotations[i].id) {\n                    if (property === 'bounds') {\n                        // eslint-disable-next-line max-len\n                        pageAnnotations[i].bounds = { left: annotationBase.bounds.x, top: annotationBase.bounds.y, width: annotationBase.bounds.width, height: annotationBase.bounds.height, right: annotationBase.bounds.right, bottom: annotationBase.bounds.bottom };\n                    }\n                    else if (property === 'fill') {\n                        pageAnnotations[i].fillColor = annotationBase.wrapper.children[0].style.fill;\n                    }\n                    else if (property === 'stroke') {\n                        pageAnnotations[i].strokeColor = annotationBase.wrapper.children[0].style.strokeColor;\n                    }\n                    else if (property === 'opacity') {\n                        pageAnnotations[i].opacity = annotationBase.wrapper.children[0].style.opacity;\n                    }\n                    else if (property === 'thickness') {\n                        pageAnnotations[i].thickness = annotationBase.wrapper.children[0].style.strokeWidth;\n                    }\n                    else if (property === 'notes') {\n                        pageAnnotations[i].note = annotationBase.notes;\n                    }\n                    else if (property === 'delete') {\n                        currentAnnotObject = pageAnnotations.splice(i, 1)[0];\n                        break;\n                    }\n                    else if (property === 'dynamicText') {\n                        pageAnnotations[i].dynamicText = annotationBase.dynamicText;\n                    }\n                    else if (property === 'fontColor') {\n                        pageAnnotations[i].fontColor = annotationBase.fontColor;\n                    }\n                    else if (property === 'fontSize') {\n                        pageAnnotations[i].fontSize = annotationBase.fontSize;\n                    }\n                    else if (property === 'fontFamily') {\n                        pageAnnotations[i].fontFamily = annotationBase.fontFamily;\n                    }\n                    else if (property === 'textPropertiesChange') {\n                        // eslint-disable-next-line max-len\n                        pageAnnotations[i].font = { isBold: annotationBase.font.isBold, isItalic: annotationBase.font.isItalic, isStrikeout: annotationBase.font.isStrikeout, isUnderline: annotationBase.font.isUnderline };\n                    }\n                    else if (property === 'textAlign') {\n                        pageAnnotations[i].textAlign = annotationBase.textAlign;\n                    }\n                    // eslint-disable-next-line max-len\n                    pageAnnotations[i].modifiedDate = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n                    this.pdfViewer.annotationModule.storeAnnotationCollections(pageAnnotations[i], pageNumber);\n                }\n            }\n            this.manageAnnotations(pageAnnotations, pageNumber);\n        }\n        return currentAnnotObject;\n    };\n    /**\n     * @param pageNumber\n     * @param annotationBase\n     * @private\n     */\n    FreeTextAnnotation.prototype.addInCollection = function (pageNumber, annotationBase) {\n        if (annotationBase) {\n            var pageAnnotations = this.getAnnotations(pageNumber, null);\n            if (pageAnnotations) {\n                pageAnnotations.push(annotationBase);\n            }\n            this.manageAnnotations(pageAnnotations, pageNumber);\n        }\n    };\n    /**\n     * @private\n     */\n    FreeTextAnnotation.prototype.saveFreeTextAnnotations = function () {\n        // eslint-disable-next-line\n        var storeObject = window.sessionStorage.getItem(this.pdfViewerBase.documentId + '_annotations_freetext');\n        if (this.pdfViewerBase.isStorageExceed) {\n            storeObject = this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_freetext'];\n        }\n        // eslint-disable-next-line\n        var annotations = new Array();\n        for (var j = 0; j < this.pdfViewerBase.pageCount; j++) {\n            annotations[j] = [];\n        }\n        if (storeObject && !this.pdfViewer.annotationSettings.skipDownload) {\n            var annotationCollection = JSON.parse(storeObject);\n            for (var i = 0; i < annotationCollection.length; i++) {\n                var newArray = [];\n                var pageAnnotationObject = annotationCollection[i];\n                if (pageAnnotationObject) {\n                    for (var z = 0; pageAnnotationObject.annotations.length > z; z++) {\n                        this.pdfViewer.annotationModule.updateModifiedDate(pageAnnotationObject.annotations[z]);\n                        // eslint-disable-next-line max-len\n                        pageAnnotationObject.annotations[z].bounds = this.getBoundsBasedOnRotation(pageAnnotationObject.annotations[z].bounds, pageAnnotationObject.annotations[z].rotateAngle, pageAnnotationObject.pageIndex, pageAnnotationObject.annotations[z]);\n                        // eslint-disable-next-line max-len\n                        pageAnnotationObject.annotations[z].bounds = JSON.stringify(this.pdfViewer.annotation.getBounds(pageAnnotationObject.annotations[z].bounds, pageAnnotationObject.pageIndex));\n                        var strokeColorString = pageAnnotationObject.annotations[z].strokeColor;\n                        pageAnnotationObject.annotations[z].strokeColor = JSON.stringify(this.getRgbCode(strokeColorString));\n                        var fillColorString = pageAnnotationObject.annotations[z].fillColor;\n                        pageAnnotationObject.annotations[z].fillColor = JSON.stringify(this.getRgbCode(fillColorString));\n                        var fontColorString = pageAnnotationObject.annotations[z].fontColor;\n                        pageAnnotationObject.annotations[z].fontColor = JSON.stringify(this.getRgbCode(fontColorString));\n                        // eslint-disable-next-line max-len\n                        pageAnnotationObject.annotations[z].vertexPoints = JSON.stringify(pageAnnotationObject.annotations[z].vertexPoints);\n                        if (pageAnnotationObject.annotations[z].rectangleDifference !== null) {\n                            // eslint-disable-next-line max-len\n                            pageAnnotationObject.annotations[z].rectangleDifference = JSON.stringify(pageAnnotationObject.annotations[z].rectangleDifference);\n                        }\n                    }\n                    newArray = pageAnnotationObject.annotations;\n                }\n                annotations[pageAnnotationObject.pageIndex] = newArray;\n            }\n        }\n        return JSON.stringify(annotations);\n    };\n    // eslint-disable-next-line\n    FreeTextAnnotation.prototype.getRotationValue = function (pageIndex, isAddedProgrammatically) {\n        // eslint-disable-next-line\n        var pageDetails = this.pdfViewerBase.pageSize[pageIndex];\n        if (!isNullOrUndefined(isAddedProgrammatically) && isAddedProgrammatically) {\n            return 0;\n        }\n        else {\n            if (pageDetails.rotation === 0) {\n                return 0;\n            }\n            else if (pageDetails.rotation === 1) {\n                return 90;\n            }\n            else if (pageDetails.rotation === 2) {\n                return 180;\n            }\n            else if (pageDetails.rotation === 3) {\n                return 270;\n            }\n            return 0;\n        }\n    };\n    FreeTextAnnotation.prototype.getBoundsBasedOnRotation = function (bounds, rotateAngle, pageIndex, annotation, isAddedProgrammatically) {\n        var rotateValue = this.getRotationValue(pageIndex, isAddedProgrammatically);\n        var paddingValue = 0.5;\n        annotation.rotateAngle = rotateAngle - rotateValue;\n        annotation.pageRotation = rotateValue;\n        if (rotateAngle === 90 || rotateAngle === -90 || rotateAngle === 270 || rotateAngle === -270) {\n            var x = bounds.left + (bounds.width / 2) - (bounds.height / 2);\n            var y = bounds.top - (bounds.width / 2 - bounds.height / 2);\n            return { x: x + paddingValue, y: y + paddingValue, left: x + paddingValue, top: y + paddingValue, width: bounds.height, height: bounds.width };\n        }\n        else {\n            return { x: bounds.left + paddingValue, y: bounds.top + paddingValue, left: bounds.left + paddingValue, top: bounds.top + paddingValue, width: bounds.width, height: bounds.height };\n        }\n    };\n    FreeTextAnnotation.prototype.manageAnnotations = function (pageAnnotations, pageNumber) {\n        // eslint-disable-next-line\n        var storeObject = window.sessionStorage.getItem(this.pdfViewerBase.documentId + '_annotations_freetext');\n        if (this.pdfViewerBase.isStorageExceed) {\n            storeObject = this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_freetext'];\n        }\n        if (storeObject) {\n            var annotObject = JSON.parse(storeObject);\n            if (!this.pdfViewerBase.isStorageExceed) {\n                window.sessionStorage.removeItem(this.pdfViewerBase.documentId + '_annotations_freetext');\n            }\n            var index = this.pdfViewer.annotationModule.getPageCollection(annotObject, pageNumber);\n            if (annotObject[index]) {\n                annotObject[index].annotations = pageAnnotations;\n            }\n            var annotationStringified = JSON.stringify(annotObject);\n            if (this.pdfViewerBase.isStorageExceed) {\n                this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_freetext'] = annotationStringified;\n            }\n            else {\n                window.sessionStorage.setItem(this.pdfViewerBase.documentId + '_annotations_freetext', annotationStringified);\n            }\n        }\n    };\n    // eslint-disable-next-line\n    FreeTextAnnotation.prototype.getAnnotations = function (pageIndex, shapeAnnotations) {\n        // eslint-disable-next-line\n        var annotationCollection;\n        // eslint-disable-next-line\n        var storeObject = window.sessionStorage.getItem(this.pdfViewerBase.documentId + '_annotations_freetext');\n        if (this.pdfViewerBase.isStorageExceed) {\n            storeObject = this.pdfViewerBase.annotationStorage[this.pdfViewerBase.documentId + '_annotations_freetext'];\n        }\n        if (storeObject) {\n            var annotObject = JSON.parse(storeObject);\n            var index = this.pdfViewer.annotationModule.getPageCollection(annotObject, pageIndex);\n            if (annotObject[index]) {\n                annotationCollection = annotObject[index].annotations;\n            }\n            else {\n                annotationCollection = shapeAnnotations;\n            }\n        }\n        else {\n            annotationCollection = shapeAnnotations;\n        }\n        return annotationCollection;\n    };\n    // eslint-disable-next-line\n    FreeTextAnnotation.prototype.getRgbCode = function (colorString) {\n        if (!colorString.match(/#([a-z0-9]+)/gi) && !colorString.match(/^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/)) {\n            colorString = this.pdfViewer.annotationModule.nameToHash(colorString);\n        }\n        var stringArray = colorString.split(',');\n        if (isNullOrUndefined(stringArray[1])) {\n            colorString = this.pdfViewer.annotationModule.getValue(colorString, 'rgba');\n            stringArray = colorString.split(',');\n        }\n        // eslint-disable-next-line radix\n        var r = parseInt(stringArray[0].split('(')[1]);\n        // eslint-disable-next-line radix\n        var g = parseInt(stringArray[1]);\n        // eslint-disable-next-line radix\n        var b = parseInt(stringArray[2]);\n        // eslint-disable-next-line radix\n        var a = parseInt(stringArray[3]);\n        return { r: r, g: g, b: b, a: a };\n    };\n    /**\n     * @private\n     */\n    // eslint-disable-next-line\n    FreeTextAnnotation.prototype.onFocusOutInputBox = function () {\n        var allowServerDataBind = this.pdfViewer.allowServerDataBinding;\n        this.pdfViewer.enableServerDataBinding(false);\n        if (!this.pdfViewerBase.isFreeTextContextMenu) {\n            this.pdfViewer.fireBeforeAddFreeTextAnnotation(this.inputBoxElement.value);\n            // eslint-disable-next-line\n            var pageIndex = this.inputBoxElement.id && this.inputBoxElement.id.split(\"_freeText_\")[1] && this.inputBoxElement.id.split(\"_freeText_\")[1].split(\"_\")[0] ? parseFloat(this.inputBoxElement.id.split(\"_freeText_\")[1].split(\"_\")[0]) : this.pdfViewerBase.currentPageNumber - 1;\n            var pageDiv = this.pdfViewerBase.getElement('_pageDiv_' + (pageIndex));\n            var width = parseFloat(this.inputBoxElement.style.width);\n            var padding = parseFloat(this.inputBoxElement.style.paddingLeft);\n            if (this.pdfViewer.freeTextSettings.enableAutoFit && !this.isMaximumWidthReached && !this.isNewFreeTextAnnot) {\n                var fontsize = parseFloat(this.inputBoxElement.style.fontSize);\n                this.inputBoxElement.style.width = ((width + padding) - fontsize) + 'px';\n            }\n            if (this.pdfViewer.freeTextSettings.enableAutoFit && !this.isMaximumWidthReached && this.isNewFreeTextAnnot) {\n                width = parseFloat(this.inputBoxElement.style.width);\n                var characterLength = 8;\n                this.inputBoxElement.style.width = (width - characterLength) + 'px';\n            }\n            var inputEleHeight = parseFloat(this.inputBoxElement.style.height);\n            var inputEleWidth = parseFloat(this.inputBoxElement.style.width);\n            var inputEleLeft = parseFloat(this.inputBoxElement.style.left);\n            if (this.pdfViewerBase.isMixedSizeDocument) {\n                var canvas = document.getElementById(this.pdfViewer.element.id + '_annotationCanvas_' + pageIndex);\n                inputEleLeft = inputEleLeft - canvas.offsetLeft;\n            }\n            var inputEleTop = parseFloat(this.inputBoxElement.style.top);\n            var zoomFactor = this.pdfViewerBase.getZoomFactor();\n            if (this.pdfViewer.isValidFreeText) {\n                this.inputBoxElement.value = 'Type Here';\n                this.pdfViewer.isValidFreeText = false;\n            }\n            var inputValue = this.inputBoxElement.value;\n            var isNewlyAdded = false;\n            if (this.isNewFreeTextAnnot === true) {\n                // eslint-disable-next-line max-len\n                var currentDateString = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n                var annotationName = this.pdfViewer.annotation.createGUID();\n                this.isNewFreeTextAnnot = false;\n                isNewlyAdded = true;\n                var annot = void 0;\n                var commentsDivid = this.pdfViewer.annotation.stickyNotesAnnotationModule.addComments('freeText', pageIndex + 1);\n                if (commentsDivid) {\n                    document.getElementById(commentsDivid).id = annotationName;\n                }\n                // eslint-disable-next-line\n                var annotationSelectorSettings = this.pdfViewer.freeTextSettings.annotationSelectorSettings ? this.pdfViewer.freeTextSettings.annotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n                // eslint-disable-next-line\n                var annotationSettings = this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.freeTextSettings);\n                // eslint-disable-next-line\n                this.author = this.author ? this.author : this.pdfViewer.freeTextSettings.author ? this.pdfViewer.freeTextSettings.author : 'Guest';\n                // eslint-disable-next-line\n                var allowedInteractions = this.pdfViewer.freeTextSettings.allowedInteractions ? this.pdfViewer.freeTextSettings.allowedInteractions : this.pdfViewer.annotationSettings.allowedInteractions;\n                // eslint-disable-next-line\n                annot = {\n                    author: this.author, modifiedDate: currentDateString, subject: 'Text Box', id: 'free_text' + this.inputBoxCount,\n                    // eslint-disable-next-line max-len\n                    rotateAngle: 0, dynamicText: inputValue, strokeColor: this.borderColor, thickness: this.borderWidth, fillColor: this.fillColor,\n                    bounds: {\n                        left: inputEleLeft / zoomFactor, top: inputEleTop / zoomFactor, x: inputEleLeft / zoomFactor,\n                        y: inputEleTop / zoomFactor, width: inputEleWidth / zoomFactor, height: inputEleHeight / zoomFactor\n                    }, annotName: annotationName,\n                    shapeAnnotationType: 'FreeText', pageIndex: pageIndex, fontColor: this.fontColor, fontSize: this.fontSize,\n                    fontFamily: this.fontFamily, opacity: this.opacity, comments: [], textAlign: this.textAlign,\n                    // eslint-disable-next-line max-len\n                    font: { isBold: this.isBold, isItalic: this.isItalic, isStrikeout: this.isStrikethrough, isUnderline: this.isUnderline },\n                    review: { state: 'Unmarked', stateModel: 'None', modifiedDate: currentDateString, author: this.author },\n                    // eslint-disable-next-line max-len\n                    annotationSelectorSettings: annotationSelectorSettings, annotationSettings: annotationSettings,\n                    customData: this.pdfViewer.annotationModule.getData('FreeText'), isPrint: this.pdfViewer.freeTextSettings.isPrint,\n                    allowedInteractions: allowedInteractions, isReadonly: this.isReadonly\n                };\n                if (this.pdfViewer.enableRtl) {\n                    annot.textAlign = 'Right';\n                }\n                var annotation = this.pdfViewer.add(annot);\n                // eslint-disable-next-line\n                var bounds = { left: annot.bounds.x, top: annot.bounds.y, width: annot.bounds.width, height: annot.bounds.height };\n                // eslint-disable-next-line\n                var settings = {\n                    opacity: annot.opacity, borderColor: annot.strokeColor, borderWidth: annot.thickness, author: annotation.author, subject: annotation.subject, modifiedDate: annotation.modifiedDate,\n                    // eslint-disable-next-line\n                    fillColor: annot.fillColor, fontSize: annot.fontSize, width: annot.bounds.width, height: annot.bounds.height, fontColor: annot.fontColor, fontFamily: annot.fontFamily, defaultText: annot.dynamicText, fontStyle: annot.font, textAlignment: annot.textAlign\n                };\n                this.pdfViewer.annotation.storeAnnotations(pageIndex, annot, '_annotations_freetext');\n                this.pdfViewer.fireAnnotationAdd(annot.pageIndex, annot.annotName, 'FreeText', bounds, settings);\n                // eslint-disable-next-line\n                this.pdfViewer.annotation.addAction(pageIndex, null, annot, 'Addition', '', annot, annot);\n                this.pdfViewer.renderSelector(annot.pageIndex);\n                this.pdfViewer.clearSelection(annot.pageIndex);\n                this.pdfViewerBase.updateDocumentEditedProperty(true);\n                this.selectedAnnotation = annotation;\n            }\n            this.isInuptBoxInFocus = false;\n            // eslint-disable-next-line\n            if (this.selectedAnnotation && this.pdfViewer.selectedItems.annotations) {\n                inputEleWidth = (inputEleWidth / zoomFactor);\n                inputEleHeight = (inputEleHeight / zoomFactor);\n                var heightDiff = (inputEleHeight - this.selectedAnnotation.bounds.height);\n                var y = undefined;\n                if (heightDiff > 0) {\n                    y = this.selectedAnnotation.wrapper.offsetY + (heightDiff / 2);\n                    y = y > 0 ? y : undefined;\n                }\n                var widthDiff = (inputEleWidth - this.selectedAnnotation.bounds.width);\n                var x = undefined;\n                if (widthDiff > 0) {\n                    x = this.selectedAnnotation.wrapper.offsetX + (widthDiff / 2);\n                    x = x > 0 ? x : undefined;\n                }\n                else {\n                    widthDiff = Math.abs(widthDiff);\n                    x = this.selectedAnnotation.wrapper.offsetX - (widthDiff / 2);\n                }\n                this.selectedAnnotation.bounds.width = inputEleWidth;\n                this.selectedAnnotation.bounds.height = inputEleHeight;\n                this.pdfViewer.annotation.modifyDynamicTextValue(inputValue, this.selectedAnnotation.annotName);\n                this.selectedAnnotation.dynamicText = inputValue;\n                this.modifyInCollection('dynamicText', pageIndex, this.selectedAnnotation, isNewlyAdded);\n                this.modifyInCollection('bounds', pageIndex, this.selectedAnnotation, isNewlyAdded);\n                // eslint-disable-next-line\n                this.pdfViewer.nodePropertyChange(this.selectedAnnotation, { bounds: { width: this.selectedAnnotation.bounds.width, height: this.selectedAnnotation.bounds.height, y: y, x: x } });\n                // eslint-disable-next-line\n                var commentsDiv = document.getElementById(this.selectedAnnotation.annotName);\n                if (commentsDiv && commentsDiv.childNodes) {\n                    if (commentsDiv.childNodes[0].ej2_instances) {\n                        commentsDiv.childNodes[0].ej2_instances[0].value = inputValue;\n                    }\n                    else if (commentsDiv.childNodes[0].childNodes && commentsDiv.childNodes[0].childNodes[1].ej2_instances) {\n                        commentsDiv.childNodes[0].childNodes[1].ej2_instances[0].value = inputValue;\n                    }\n                }\n                this.pdfViewer.renderSelector(this.selectedAnnotation.pageIndex, this.selectedAnnotation.annotationSelectorSettings);\n            }\n            if (this.inputBoxElement.parentElement) {\n                if (pageDiv && (pageDiv.id === this.inputBoxElement.parentElement.id)) {\n                    pageDiv.removeChild(this.inputBoxElement);\n                }\n                else {\n                    this.inputBoxElement.parentElement.removeChild(this.inputBoxElement);\n                }\n            }\n            var canvass = document.getElementById(this.pdfViewer.element.id + '_annotationCanvas_' + pageIndex);\n            // eslint-disable-next-line\n            this.pdfViewer.renderDrawing(canvass, pageIndex);\n            this.inputBoxCount += 1;\n            if (!isNewlyAdded && this.previousText !== inputValue) {\n                // eslint-disable-next-line max-len\n                this.pdfViewer.annotationModule.triggerAnnotationPropChange(this.selectedAnnotation, false, false, false, false, false, false, false, true, this.previousText, inputValue);\n            }\n        }\n        else {\n            this.inputBoxElement.focus();\n            if (!this.isTextSelected) {\n                window.getSelection().removeAllRanges();\n            }\n        }\n        this.pdfViewer.enableServerDataBinding(allowServerDataBind, true);\n    };\n    /**\n     * @param event\n     * @private\n     */\n    FreeTextAnnotation.prototype.onKeyDownInputBox = function (event) {\n        var inuptEleObj = this;\n        if (event.which === 9 || (isNullOrUndefined(this.pdfViewer.selectedItems.annotations[0]) && !this.isNewFreeTextAnnot)) {\n            event.preventDefault();\n        }\n        this.selectedAnnotation = this.pdfViewer.selectedItems.annotations && this.isNewFreeTextAnnot ? this.pdfViewer.selectedItems.annotations[0]\n            : this.selectedAnnotation;\n        setTimeout(function () {\n            if (inuptEleObj.defaultHeight < inuptEleObj.inputBoxElement.scrollHeight\n                // eslint-disable-next-line radix\n                && parseInt(inuptEleObj.inputBoxElement.style.height) < inuptEleObj.inputBoxElement.scrollHeight) {\n                inuptEleObj.updateFreeTextAnnotationSize(true);\n            }\n            else {\n                inuptEleObj.updateFreeTextAnnotationSize(false);\n            }\n            // eslint-disable-next-line\n        }, 0);\n    };\n    FreeTextAnnotation.prototype.updateFreeTextAnnotationSize = function (isSize) {\n        var inuptEleObj = this;\n        var enableAutoFit = inuptEleObj.pdfViewer.freeTextSettings.enableAutoFit;\n        if (enableAutoFit) {\n            this.autoFitFreeText();\n        }\n        else {\n            this.isMaximumWidthReached = true;\n        }\n        if (this.isMaximumWidthReached) {\n            // eslint-disable-next-line max-len\n            var previousHeight = inuptEleObj.inputBoxElement.getBoundingClientRect().height;\n            if (!isSize && !inuptEleObj.inputBoxElement.readOnly) {\n                inuptEleObj.inputBoxElement.style.height = 'auto';\n            }\n            var currentHeight = inuptEleObj.inputBoxElement.getBoundingClientRect().height;\n            var difference = currentHeight - previousHeight;\n            var fontSize = parseFloat(inuptEleObj.inputBoxElement.style.fontSize);\n            // eslint-disable-next-line max-len\n            inuptEleObj.inputBoxElement.style.height = inuptEleObj.inputBoxElement.readOnly ? inuptEleObj.inputBoxElement.style.height : inuptEleObj.inputBoxElement.scrollHeight + (fontSize / 2) + 'px';\n            inuptEleObj.inputBoxElement.style.height = (difference < 0 && !inuptEleObj.inputBoxElement.readOnly) ? (previousHeight + 'px') : inuptEleObj.inputBoxElement.style.height;\n        }\n        var zoomFactor = inuptEleObj.pdfViewerBase.getZoomFactor();\n        var inputEleHeight = parseFloat(this.inputBoxElement.style.height);\n        var inputEleWidth = parseFloat(this.inputBoxElement.style.width);\n        inputEleHeight = ((inputEleHeight) / zoomFactor);\n        inputEleWidth = ((inputEleWidth) / zoomFactor);\n        if (this.selectedAnnotation) {\n            var heightDiff = (inputEleHeight - inuptEleObj.selectedAnnotation.bounds.height);\n            var y = 0;\n            if (heightDiff > 0) {\n                y = inuptEleObj.selectedAnnotation.wrapper.offsetY + (heightDiff / 2);\n            }\n            else {\n                heightDiff = Math.abs(heightDiff);\n                y = inuptEleObj.selectedAnnotation.wrapper.offsetY - (heightDiff / 2);\n            }\n            if (enableAutoFit) {\n                var widthDiff = (inputEleWidth - inuptEleObj.selectedAnnotation.bounds.width);\n                var x = 0;\n                if (widthDiff > 0) {\n                    x = inuptEleObj.selectedAnnotation.wrapper.offsetX + (widthDiff / 2);\n                }\n                else {\n                    widthDiff = Math.abs(widthDiff);\n                    x = inuptEleObj.selectedAnnotation.wrapper.offsetX - (widthDiff / 2);\n                }\n            }\n            inuptEleObj.selectedAnnotation.bounds.width = inputEleWidth;\n            inuptEleObj.selectedAnnotation.bounds.height = inputEleHeight;\n            if (enableAutoFit) {\n                // eslint-disable-next-line\n                inuptEleObj.pdfViewer.nodePropertyChange(inuptEleObj.selectedAnnotation, { bounds: { width: inuptEleObj.selectedAnnotation.bounds.width, height: inuptEleObj.selectedAnnotation.bounds.height, y: y, x: x } });\n            }\n            else {\n                // eslint-disable-next-line\n                inuptEleObj.pdfViewer.nodePropertyChange(inuptEleObj.selectedAnnotation, { bounds: { width: inuptEleObj.selectedAnnotation.bounds.width, height: inuptEleObj.selectedAnnotation.bounds.height, y: y } });\n            }\n            inuptEleObj.pdfViewer.renderSelector(inuptEleObj.selectedAnnotation.pageIndex, this.selectedAnnotation.annotationSelectorSettings);\n        }\n    };\n    /**\n     * @param event\n     * @private\n     */\n    FreeTextAnnotation.prototype.autoFitFreeText = function (xPosition, yPosition) {\n        var pageIndex = this.pdfViewerBase.currentPageNumber - 1;\n        var pageDiv = this.pdfViewerBase.getElement('_pageDiv_' + (pageIndex));\n        // eslint-disable-next-line\n        var canvas = this.pdfViewerBase.getElement('_annotationCanvas_' + pageIndex);\n        // eslint-disable-next-line\n        var context = canvas.getContext(\"2d\");\n        // eslint-disable-next-line\n        var fontSize = this.inputBoxElement.style.fontSize;\n        if (this.pdfViewer.freeTextSettings.fontStyle === FontStyle.Bold || this.inputBoxElement.style.fontWeight === 'bold') {\n            context.font = 'bold' + ' ' + fontSize + ' ' + this.inputBoxElement.style.fontFamily;\n        }\n        else {\n            context.font = fontSize + ' ' + this.inputBoxElement.style.fontFamily;\n        }\n        var highestTextNode = \"\";\n        // eslint-disable-next-line\n        var textNodes = [];\n        var textboxValue = this.inputBoxElement.value;\n        if (textboxValue.indexOf('\\n') > -1) {\n            textNodes = textboxValue.split('\\n');\n            for (var j = 0; j < textNodes.length; j++) {\n                // eslint-disable-next-line\n                var textNodeData = context.measureText(textNodes[j]);\n                // eslint-disable-next-line\n                var highestTextNodeData = context.measureText(highestTextNode);\n                if (textNodeData.width > highestTextNodeData.width) {\n                    highestTextNode = textNodes[j];\n                }\n            }\n            this.isMaximumWidthReached = true;\n        }\n        else {\n            highestTextNode = textboxValue;\n            this.isMaximumWidthReached = false;\n        }\n        // eslint-disable-next-line\n        var textwidth = context.measureText(highestTextNode);\n        fontSize = parseFloat(this.inputBoxElement.style.fontSize);\n        var inputEleWidth;\n        var characterLength = 8;\n        var inputEleHeight = (fontSize + (fontSize / 2));\n        if (this.isNewFreeTextAnnot) {\n            inputEleWidth = Math.ceil(textwidth.width + ((characterLength + 1) * 2));\n            this.inputBoxElement.style.height = inputEleHeight + 'px';\n            this.inputBoxElement.style.top = (yPosition) - (inputEleHeight / 2) + 'px';\n        }\n        else {\n            inputEleWidth = Math.ceil(textwidth.width) + fontSize + Math.ceil(characterLength / 2);\n        }\n        if (!xPosition) {\n            this.inputBoxElement.style.height = inputEleHeight + 'px';\n        }\n        this.inputBoxElement.style.width = inputEleWidth + 'px';\n        var maxWidth = this.pdfViewerBase.getPageWidth(pageIndex) - parseFloat(this.inputBoxElement.style.left);\n        if (parseFloat(this.inputBoxElement.style.width) > maxWidth) {\n            this.isMaximumWidthReached = true;\n            if (this.isNewAddedAnnot && xPosition) {\n                inputEleWidth = inputEleWidth - characterLength;\n                this.inputBoxElement.style.width = inputEleWidth + 'px';\n                var width = xPosition + (inputEleWidth * this.pdfViewerBase.getZoomFactor());\n                var x = parseFloat(this.inputBoxElement.style.left);\n                if (width >= this.pdfViewerBase.getPageWidth(pageIndex)) {\n                    x = this.pdfViewerBase.getPageWidth(pageIndex) - inputEleWidth;\n                }\n                this.inputBoxElement.style.left = x + 'px';\n            }\n            else {\n                this.inputBoxElement.style.width = maxWidth + 'px';\n            }\n        }\n    };\n    /**\n     * @param event\n     * @private\n     */\n    FreeTextAnnotation.prototype.onMouseUpInputBox = function (event) {\n        // eslint-disable-next-line\n        var target = event.target;\n        this.selectionStart = 0;\n        this.selectionEnd = 0;\n        if (event.which === 3 && target) {\n            this.selectionStart = target.selectionStart;\n            this.selectionEnd = target.selectionEnd;\n        }\n        if (event.which === 3 && window.getSelection() != null && window.getSelection().toString() !== '') {\n            this.isTextSelected = true;\n        }\n        else {\n            this.isTextSelected = false;\n        }\n    };\n    /**\n     * @param currentPosition\n     * @param annotation\n     * @param pageIndex\n     * @private\n     */\n    FreeTextAnnotation.prototype.addInuptElemet = function (currentPosition, annotation, pageIndex) {\n        if (annotation === void 0) { annotation = null; }\n        this.currentPosition = [];\n        if (isNullOrUndefined(pageIndex)) {\n            pageIndex = this.pdfViewerBase.currentPageNumber - 1;\n        }\n        if (annotation) {\n            pageIndex = annotation.pageIndex;\n        }\n        if (isBlazor() && annotation === null && this.pdfViewer.selectedItems.annotations.length === 0) {\n            this.updateTextProperties();\n        }\n        this.inputBoxElement.id = this.pdfViewer.element.id + '_freeText_' + pageIndex + '_' + this.inputBoxCount;\n        var pageDiv = this.pdfViewerBase.getElement('_pageDiv_' + (pageIndex));\n        var canvass = document.getElementById(this.pdfViewer.element.id + '_annotationCanvas_' + pageIndex);\n        var zoomFactor = this.pdfViewerBase.getZoomFactor();\n        this.inputBoxElement.value = (annotation && annotation.dynamicText) ? annotation.dynamicText : this.defaultText;\n        this.inputBoxElement.style.boxSizing = 'border-box';\n        this.inputBoxElement.style.left = ((currentPosition.x)) + 'px';\n        this.inputBoxElement.style.top = ((currentPosition.y)) - ((this.defaultHeight * zoomFactor) / 2) + 'px';\n        if (this.pdfViewer.freeTextSettings.enableAutoFit) {\n            this.inputBoxElement.style.wordBreak = 'break-all';\n        }\n        else {\n            this.inputBoxElement.style.wordBreak = 'break-word';\n        }\n        if (annotation) {\n            this.applyFreetextStyles(zoomFactor, annotation.isReadonly);\n        }\n        else {\n            this.applyFreetextStyles(zoomFactor);\n        }\n        if (this.isBold) {\n            this.inputBoxElement.style.fontWeight = 'bold';\n        }\n        else {\n            this.inputBoxElement.style.fontWeight = 'normal';\n        }\n        if (this.isItalic) {\n            this.inputBoxElement.style.fontStyle = 'italic';\n        }\n        else {\n            this.inputBoxElement.style.fontStyle = 'normal';\n        }\n        this.inputBoxElement.style.textDecoration = 'none';\n        if (this.isUnderline) {\n            this.inputBoxElement.style.textDecoration = 'underline';\n        }\n        if (this.isStrikethrough) {\n            this.inputBoxElement.style.textDecoration = 'line-through';\n        }\n        if (this.pdfViewer.enableRtl) {\n            this.inputBoxElement.style.textAlign = 'right';\n            this.inputBoxElement.style.direction = 'rtl';\n            this.inputBoxElement.style.left = ((currentPosition.x)) - ((this.defautWidth * zoomFactor / 2));\n        }\n        else {\n            this.inputBoxElement.style.textAlign = this.textAlign.toLowerCase();\n        }\n        this.inputBoxElement.style.borderColor = this.borderColor;\n        this.inputBoxElement.style.color = this.fontColor;\n        this.inputBoxElement.style.background = this.fillColor;\n        if (annotation && annotation.wrapper && annotation.wrapper.children[0]) {\n            this.inputBoxElement.style.opacity = annotation.wrapper.children[0].style.opacity;\n        }\n        if (this.isNewFreeTextAnnot === true) {\n            this.pdfViewer.clearSelection(pageIndex);\n        }\n        if (annotation && annotation.wrapper && annotation.wrapper.bounds) {\n            var annotationBounds = annotation.wrapper.bounds;\n            if (annotationBounds.left) {\n                this.inputBoxElement.style.left = ((annotationBounds.left) * zoomFactor) + 'px';\n            }\n            if (annotationBounds.top) {\n                this.inputBoxElement.style.top = ((annotationBounds.top) * zoomFactor) + 'px';\n            }\n            // eslint-disable-next-line max-len\n            this.inputBoxElement.style.height = annotationBounds.height ? (annotationBounds.height * zoomFactor) + 'px' : (this.defaultHeight * zoomFactor) + 'px';\n            // eslint-disable-next-line max-len\n            this.inputBoxElement.style.width = annotationBounds.width ? (annotationBounds.width * zoomFactor) + 'px' : (this.defautWidth * zoomFactor) + 'px';\n            this.selectedAnnotation = annotation;\n            this.previousText = this.selectedAnnotation.dynamicText;\n            this.selectedAnnotation.dynamicText = '';\n            this.inputBoxElement.style.borderColor = this.selectedAnnotation.strokeColor;\n            this.inputBoxElement.style.color = this.selectedAnnotation.fontColor;\n            this.inputBoxElement.style.background = this.selectedAnnotation.fillColor;\n            if (this.selectedAnnotation.font.isBold === true) {\n                this.inputBoxElement.style.fontWeight = 'bold';\n            }\n            if (this.selectedAnnotation.font.isItalic === true) {\n                this.inputBoxElement.style.fontStyle = 'italic';\n            }\n            if (this.selectedAnnotation.font.isUnderline === true) {\n                this.inputBoxElement.style.textDecoration = 'underline';\n            }\n            if (this.selectedAnnotation.font.isStrikeout === true) {\n                this.inputBoxElement.style.textDecoration = 'line-through';\n            }\n            if (this.pdfViewer.enableRtl) {\n                this.inputBoxElement.style.textAlign = 'right';\n                this.inputBoxElement.style.direction = 'rtl';\n            }\n            else if (this.selectedAnnotation.textAlign) {\n                this.inputBoxElement.style.textAlign = this.selectedAnnotation.textAlign;\n            }\n            this.inputBoxElement.style.fontSize = (this.selectedAnnotation.fontSize * zoomFactor) + 'px';\n            this.inputBoxElement.style.fontFamily = this.selectedAnnotation.fontFamily;\n            this.pdfViewer.nodePropertyChange(this.selectedAnnotation, {});\n        }\n        if (this.pdfViewerBase.isMixedSizeDocument) {\n            this.inputBoxElement.style.left = (parseFloat(this.inputBoxElement.style.left)) + canvass.offsetLeft + 'px';\n        }\n        this.pdfViewer.annotation.freeTextAnnotationModule.isFreeTextValueChange = false;\n        if (this.pdfViewer.freeTextSettings.enableAutoFit) {\n            this.autoFitFreeText(currentPosition.x, currentPosition.y);\n        }\n        pageDiv.appendChild(this.inputBoxElement);\n        // eslint-disable-next-line\n        if (!this.pdfViewer.freeTextSettings.enableAutoFit && (this.defaultHeight * zoomFactor) < this.inputBoxElement.scrollHeight && parseInt(this.inputBoxElement.style.height) < this.inputBoxElement.scrollHeight) {\n            this.inputBoxElement.style.height = this.inputBoxElement.scrollHeight + 'px';\n            this.inputBoxElement.style.top = ((currentPosition.y)) - (parseFloat(this.inputBoxElement.style.height) / 2) + 'px';\n        }\n        this.isInuptBoxInFocus = true;\n        this.inputBoxElement.focus();\n        if (this.isNewFreeTextAnnot === true || this.inputBoxElement.value === this.defaultText) {\n            this.inputBoxElement.select();\n            this.pdfViewerBase.isFreeTextSelected = true;\n        }\n        this.currentPosition.push(parseInt(this.inputBoxElement.style.left) / zoomFactor, parseInt(this.inputBoxElement.style.top) / zoomFactor, parseInt(this.inputBoxElement.style.width) / zoomFactor, parseInt(this.inputBoxElement.style.height) / zoomFactor);\n    };\n    FreeTextAnnotation.prototype.applyFreetextStyles = function (zoomFactor, isReadonly) {\n        this.inputBoxElement.style.height = (this.defaultHeight * zoomFactor) + 'px';\n        this.inputBoxElement.style.width = (this.defautWidth * zoomFactor) + 'px';\n        this.inputBoxElement.style.borderWidth = (this.borderWidth * zoomFactor) + 'px';\n        this.inputBoxElement.style.fontSize = (this.fontSize * zoomFactor) + 'px';\n        this.inputBoxElement.style.fontFamily = this.fontFamily;\n        this.inputBoxElement.readOnly = isNullOrUndefined(isReadonly) ? this.isReadonly : isReadonly;\n    };\n    /**\n     * @private\n     */\n    FreeTextAnnotation.prototype.copySelectedText = function () {\n        if (window.getSelection() !== null) {\n            this.selectedText = window.getSelection().toString();\n            var textArea = document.createElement('textarea');\n            textArea.contentEditable = 'true';\n            textArea.textContent = this.selectedText;\n            textArea.style.position = 'fixed';\n            document.body.appendChild(textArea);\n            textArea.select();\n            try {\n                document.execCommand('copy');\n            }\n            catch (ex) {\n                console.warn('Copy to clipboard failed.', ex);\n            }\n            finally {\n                if (textArea) {\n                    document.body.removeChild(textArea);\n                }\n            }\n        }\n    };\n    /**\n     * @param target\n     * @private\n     */\n    // eslint-disable-next-line\n    FreeTextAnnotation.prototype.pasteSelectedText = function (target) {\n        if (this.selectedText !== '' && target) {\n            // eslint-disable-next-line\n            var text = target.value;\n            target.value = text.slice(0, this.selectionStart) + this.selectedText + text.slice(this.selectionEnd, text.length);\n        }\n        // eslint-disable-next-line\n        var events = event;\n        this.onKeyDownInputBox(events);\n    };\n    /**\n     * @param target\n     * @private\n     */\n    // eslint-disable-next-line\n    FreeTextAnnotation.prototype.cutSelectedText = function (target) {\n        if (window.getSelection() !== null) {\n            // eslint-disable-next-line\n            var text = target.value;\n            this.selectedText = window.getSelection().toString();\n            target.value = text.slice(0, target.selectionStart) + text.slice(target.selectionEnd);\n            var textArea = document.createElement('textarea');\n            textArea.contentEditable = 'true';\n            textArea.textContent = this.selectedText;\n            textArea.style.position = 'fixed';\n            document.body.appendChild(textArea);\n            textArea.select();\n            try {\n                document.execCommand('cut');\n            }\n            catch (ex) {\n                console.warn('Copy to clipboard failed.', ex);\n            }\n            finally {\n                if (textArea) {\n                    document.body.removeChild(textArea);\n                }\n            }\n        }\n    };\n    /**\n     * @param shapeAnnotations\n     * @param pageNumber\n     * @private\n     */\n    // eslint-disable-next-line\n    FreeTextAnnotation.prototype.saveImportedFreeTextAnnotations = function (shapeAnnotations, pageNumber) {\n        // eslint-disable-next-line\n        var annotation = shapeAnnotations;\n        if (annotation.AnnotType) {\n            var vertexPoints = null;\n            if (annotation.VertexPoints) {\n                vertexPoints = [];\n                for (var j = 0; j < annotation.VertexPoints.length; j++) {\n                    var point = { x: annotation.VertexPoints[j].X, y: annotation.VertexPoints[j].Y };\n                    vertexPoints.push(point);\n                }\n            }\n            // eslint-disable-next-line max-len\n            annotation.AnnotationSettings = annotation.AnnotationSettings ? annotation.AnnotationSettings : this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.freeTextSettings);\n            var annot = void 0;\n            // eslint-disable-next-line max-len\n            annotation.allowedInteractions = this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation);\n            var annotationBoundsX = !isNullOrUndefined(annotation.Bounds.X) ? annotation.Bounds.X : annotation.Bounds.x;\n            var annotationBoundsY = !isNullOrUndefined(annotation.Bounds.Y) ? annotation.Bounds.Y : annotation.Bounds.y;\n            var annotationBoundsWidth = annotation.Bounds.Width ? annotation.Bounds.Width : annotation.Bounds.width;\n            var annotationBoundsHeight = annotation.Bounds.Height ? annotation.Bounds.Height : annotation.Bounds.height;\n            // eslint-disable-next-line\n            annot = {\n                author: annotation.Author, allowedInteractions: annotation.allowedInteractions, modifiedDate: annotation.ModifiedDate, subject: annotation.Subject, id: 'freetext',\n                rotateAngle: annotation.Rotate, dynamicText: annotation.MarkupText, strokeColor: annotation.StrokeColor,\n                thickness: annotation.Thickness, fillColor: annotation.FillColor,\n                bounds: {\n                    x: annotationBoundsX, y: annotationBoundsY, left: annotationBoundsX, top: annotationBoundsY,\n                    width: annotationBoundsWidth, height: annotationBoundsHeight, right: annotation.Bounds.Right,\n                    bottom: annotation.Bounds.Bottom\n                }, annotName: annotation.AnnotName, shapeAnnotationType: 'FreeText',\n                // eslint-disable-next-line\n                pageIndex: pageNumber, opacity: annotation.Opacity, fontColor: annotation.FontColor, fontSize: annotation.FontSize,\n                fontFamily: annotation.FontFamily, notes: annotation.MarkupText, textAlign: annotation.TextAlign,\n                // eslint-disable-next-line\n                comments: this.pdfViewer.annotationModule.getAnnotationComments(annotation.Comments, annotation, annotation.Author), review: { state: annotation.State, stateModel: annotation.StateModel, modifiedDate: annotation.ModifiedDate, author: annotation.Author },\n                font: { isBold: annotation.Font.Bold, isItalic: annotation.Font.Italic, isStrikeout: annotation.Font.Strikeout, isUnderline: annotation.Font.Underline },\n                annotationSelectorSettings: this.getSettings(annotation), annotationSettings: annotation.AnnotationSettings,\n                // eslint-disable-next-line max-len\n                customData: this.pdfViewer.annotation.getCustomData(annotation), isPrint: annotation.IsPrint, isCommentLock: annotation.IsCommentLock, isReadonly: annotation.IsReadonly\n            };\n            this.pdfViewer.annotationModule.storeAnnotations(pageNumber, annot, '_annotations_freetext');\n        }\n    };\n    /**\n     * @param shapeAnnotations\n     * @param pageNumber\n     * @private\n     */\n    // eslint-disable-next-line\n    FreeTextAnnotation.prototype.updateFreeTextAnnotationCollections = function (shapeAnnotations, pageNumber) {\n        // eslint-disable-next-line\n        var annotation = shapeAnnotations;\n        if (annotation.AnnotType) {\n            var vertexPoints = null;\n            if (annotation.VertexPoints) {\n                vertexPoints = [];\n                for (var j = 0; j < annotation.VertexPoints.length; j++) {\n                    var point = { x: annotation.VertexPoints[j].X, y: annotation.VertexPoints[j].Y };\n                    vertexPoints.push(point);\n                }\n            }\n            // eslint-disable-next-line max-len\n            annotation.AnnotationSettings = annotation.AnnotationSettings ? annotation.AnnotationSettings : this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.freeTextSettings);\n            if (annotation.IsLocked) {\n                annotation.AnnotationSettings.isLock = annotation.IsLocked;\n            }\n            // eslint-disable-next-line max-len\n            annotation.allowedInteractions = this.pdfViewer.annotationModule.updateAnnotationAllowedInteractions(annotation);\n            var annotationBoundsX = annotation.Bounds.X ? annotation.Bounds.X : annotation.Bounds.x;\n            var annotationBoundsY = annotation.Bounds.Y ? annotation.Bounds.Y : annotation.Bounds.y;\n            var width = annotation.Bounds.Width ? annotation.Bounds.Width : annotation.Bounds.width;\n            var height = annotation.Bounds.Height ? annotation.Bounds.Height : annotation.Bounds.height;\n            // eslint-disable-next-line\n            var annot = void 0;\n            // eslint-disable-next-line\n            annot = {\n                author: annotation.Author, allowedInteractions: annotation.allowedInteractions, modifiedDate: annotation.ModifiedDate, subject: annotation.Subject, id: 'freetext',\n                rotateAngle: annotation.Rotate, dynamicText: annotation.MarkupText, strokeColor: annotation.StrokeColor,\n                thickness: annotation.Thickness, fillColor: annotation.FillColor,\n                bounds: {\n                    x: annotationBoundsX, y: annotationBoundsY, left: annotationBoundsX, top: annotationBoundsY,\n                    width: width, height: height, right: annotation.Bounds.Right,\n                    bottom: annotation.Bounds.Bottom\n                }, annotationId: annotation.AnnotName, shapeAnnotationType: 'FreeText',\n                // eslint-disable-next-line\n                pageIndex: pageNumber, opacity: annotation.Opacity, fontColor: annotation.FontColor, fontSize: annotation.FontSize,\n                fontFamily: annotation.FontFamily, notes: annotation.MarkupText,\n                // eslint-disable-next-line\n                comments: this.pdfViewer.annotationModule.getAnnotationComments(annotation.Comments, annotation, annotation.Author), review: { state: annotation.State, stateModel: annotation.StateModel, modifiedDate: annotation.ModifiedDate, author: annotation.Author },\n                font: { isBold: annotation.Font.Bold, isItalic: annotation.Font.Italic, isStrikeout: annotation.Font.Strikeout, isUnderline: annotation.Font.Underline }, pageNumber: pageNumber, annotationSettings: annotation.AnnotationSettings, isCommentLock: annotation.IsCommentLock\n            };\n            return annot;\n        }\n    };\n    /**\n     * This method used to add annotations with using program.\n     *\n     * @param annotationType - It describes type of annotation\n     * @param offset - It describes about the annotation bounds\n     * @returns Object\n     * @private\n     */\n    FreeTextAnnotation.prototype.updateAddAnnotationDetails = function (annotationObject, offset) {\n        //Creating new object if annotationObject is null\n        if (!annotationObject) {\n            annotationObject = { offset: { x: 1, y: 1 }, pageNumber: 0, width: undefined, height: undefined };\n            offset = annotationObject.offset;\n        }\n        else if (!annotationObject.offset)\n            offset = { x: 1, y: 1 };\n        else\n            offset = annotationObject.offset;\n        //Creating the CurrentDate and Annotation name\n        var currentDateString = this.pdfViewer.annotation.stickyNotesAnnotationModule.getDateAndTime();\n        var annotationName = this.pdfViewer.annotation.createGUID();\n        var fontStyle = annotationObject.fontStyle ? annotationObject.fontStyle : FontStyle.None;\n        //Creating annotation settings\n        var annotationSelectorSettings = this.pdfViewer.freeTextSettings.annotationSelectorSettings ? this.pdfViewer.freeTextSettings.annotationSelectorSettings : this.pdfViewer.annotationSelectorSettings;\n        var annotationSettings = this.pdfViewer.annotationModule.updateSettings(this.pdfViewer.freeTextSettings);\n        var allowedInteractions = this.pdfViewer.freeTextSettings.allowedInteractions ? this.pdfViewer.freeTextSettings.allowedInteractions : this.pdfViewer.annotationSettings.allowedInteractions;\n        annotationSettings.isLock = annotationObject.isLock ? annotationObject.isLock : false;\n        annotationSettings.minHeight = annotationObject.minHeight ? annotationObject.minHeight : 0;\n        annotationSettings.minWidth = annotationObject.minWidth ? annotationObject.minWidth : 0;\n        annotationSettings.maxWidth = annotationObject.maxWidth ? annotationObject.maxWidth : 0;\n        annotationSettings.maxHeight = annotationObject.maxHeight ? annotationObject.maxHeight : 0;\n        annotationObject.width = annotationObject.width ? annotationObject.width : 150;\n        annotationObject.height = annotationObject.height ? annotationObject.height : 24.6;\n        //Creating Annotation objects with it's proper properties\n        var freeTextAnnotation = [];\n        var freeText = {\n            AllowedInteractions: annotationObject.allowedInteractions ? annotationObject.allowedInteractions : allowedInteractions,\n            AnnotName: annotationName,\n            AnnotType: 'freeText',\n            AnnotationFlags: 'Default',\n            AnnotationIntent: null,\n            AnnotationSelectorSettings: annotationObject.annotationSelectorSettings ? annotationObject.annotationSelectorSettings : annotationSelectorSettings,\n            AnnotationSettings: annotationSettings,\n            Author: annotationObject.author ? annotationObject.author : 'Guest',\n            Border: { HorizontalRadius: 0, VerticalRadius: 0, Width: annotationObject.borderWidth ? annotationObject.borderWidth : 1 },\n            BorderColor: { IsEmpty: true, B: 255, Blue: 1, C: 0, G: 255 },\n            Bounds: { X: offset.x, Y: offset.y, Width: annotationObject.width, Height: annotationObject.height, Left: offset.x, Top: offset.y, Right: offset.x + annotationObject.width, Bottom: offset.y + annotationObject.height },\n            CalloutLines: null,\n            Color: { IsEmpty: false, B: 51, Blue: 0.2, C: 0, G: 255 },\n            Comments: null,\n            CreatedDate: currentDateString,\n            CustomData: annotationObject.customData ? annotationObject.customData : null,\n            ExistingCustomData: null,\n            FillColor: annotationObject.fillColor ? annotationObject.fillColor : '#ffffff00',\n            Flatten: false,\n            FlattenPopups: false,\n            Font: { Bold: fontStyle == FontStyle.Bold ? true : false, Italic: fontStyle == FontStyle.Italic ? true : false, Strikeout: fontStyle == FontStyle.Strikethrough ? true : false, Underline: fontStyle == FontStyle.Underline ? true : false },\n            FontColor: annotationObject.fontColor ? annotationObject.fontColor : '#000',\n            FontFamily: annotationObject.fontFamily ? annotationObject.fontFamily : 'Helvetica',\n            FontSize: annotationObject.fontSize ? annotationObject.fontSize : 16,\n            FreeTextAnnotationType: 'Text Box',\n            InnerColor: null,\n            IsCommentLock: false,\n            IsLock: annotationObject.isLock ? annotationObject.isLock : false,\n            IsPrint: (annotationObject.isPrint !== null && annotationObject.isPrint !== undefined) ? annotationObject.isPrint : true,\n            Layer: null,\n            LineEndingStyle: 'OpenArrow',\n            Location: null,\n            MarkupText: annotationObject.defaultText ? annotationObject.defaultText : 'Type Here',\n            ModifiedDate: currentDateString,\n            Name: annotationName,\n            Opacity: annotationObject.opacity ? annotationObject.opacity : 1,\n            Page: null,\n            PageTags: null,\n            ReviewHistory: null,\n            Rotate: 0,\n            IsReadonly: annotationObject.isReadonly ? annotationObject.isReadonly : false,\n            State: 'Unmarked',\n            StateModel: 'None',\n            StrokeColor: annotationObject.borderColor ? annotationObject.borderColor : '#ffffff00',\n            Subject: 'Text Box',\n            Text: annotationObject.defaultText ? annotationObject.defaultText : 'Type Here',\n            TextAlign: annotationObject.textAlignment ? annotationObject.textAlignment : 'Left',\n            TextMarkupColor: null,\n            Thickness: annotationObject.borderWidth ? annotationObject.borderWidth : 1,\n            isAddAnnotationProgramatically: true\n        };\n        //Adding the annotation object to an array and return it\n        freeTextAnnotation[0] = freeText;\n        return { freeTextAnnotation: freeTextAnnotation };\n    };\n    /**\n     * This method used to get the padding.\n    */\n    FreeTextAnnotation.prototype.getPaddingValues = function (fontSize) {\n        var leftPadding = 4; // Left padding used in the drawing.js\n        var topPadding = 5; // Top padding used in the drawing.js\n        var inputBoxpadding = 2; // we have set the input box padding for the free text.\n        topPadding = (topPadding - inputBoxpadding) * (fontSize / 16);\n        return [leftPadding, topPadding];\n    };\n    /**\n     * @private\n     * This method used tp get the current position of x and y.\n    */\n    FreeTextAnnotation.prototype.addInputInZoom = function (currentPosition) {\n        var zoomFactor = this.pdfViewerBase.getZoomFactor();\n        this.inputBoxElement.style.left = (currentPosition.x * zoomFactor) + 'px';\n        this.inputBoxElement.style.top = (currentPosition.y * zoomFactor) + 'px';\n        this.inputBoxElement.style.height = (currentPosition.height * zoomFactor) + 'px';\n        this.inputBoxElement.style.width = (currentPosition.width * zoomFactor) + 'px';\n        this.inputBoxElement.style.borderWidth = (this.borderWidth * zoomFactor) + 'px';\n        this.inputBoxElement.style.fontSize = (this.fontSize * zoomFactor) + 'px';\n    };\n    return FreeTextAnnotation;\n}());\nexport { FreeTextAnnotation };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}