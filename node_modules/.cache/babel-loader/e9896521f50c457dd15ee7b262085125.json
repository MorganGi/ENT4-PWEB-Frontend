{"ast":null,"code":"import { NodeSelection } from './../../selection/index';\nimport { NodeCutter } from './nodecutter';\nimport * as CONSTANT from './../base/constant';\nimport { detach, Browser, isNullOrUndefined as isNOU, createElement, closest } from '@syncfusion/ej2-base';\nimport { InsertMethods } from './insert-methods';\nimport { updateTextNode } from './../../common/util';\n/**\n * Insert a HTML Node or Text\n *\n * @hidden\n\n */\n\nvar InsertHtml =\n/** @class */\nfunction () {\n  function InsertHtml() {}\n\n  InsertHtml.Insert = function (docElement, insertNode, editNode, isExternal) {\n    var node;\n\n    if (typeof insertNode === 'string') {\n      var divNode = document.createElement('div');\n      divNode.innerHTML = insertNode;\n      node = isExternal ? divNode : divNode.firstChild;\n    } else {\n      if (isExternal && !(!isNOU(insertNode) && !isNOU(insertNode.classList) && insertNode.classList.contains('pasteContent'))) {\n        var divNode = document.createElement('div');\n        divNode.appendChild(insertNode);\n        node = divNode;\n      } else {\n        node = insertNode;\n      }\n    }\n\n    var nodeSelection = new NodeSelection();\n    var nodeCutter = new NodeCutter();\n    var range = nodeSelection.getRange(docElement);\n\n    if (range.startContainer === editNode && range.startContainer === range.endContainer && range.startOffset === 0 && range.startOffset === range.endOffset && editNode.textContent.length === 0 && editNode.children[0].tagName === 'P') {\n      nodeSelection.setSelectionText(docElement, range.startContainer.children[0], range.startContainer.children[0], 0, 0);\n      range = nodeSelection.getRange(docElement);\n    }\n\n    if (range.startContainer.nodeName === 'BR' && range.startOffset === 0 && range.startOffset === range.endOffset && range.startContainer === range.endContainer) {\n      var currentIndex = Array.prototype.slice.call(range.startContainer.parentElement.children).indexOf(range.startContainer);\n      nodeSelection.setSelectionText(docElement, range.startContainer.parentElement, range.startContainer.parentElement, currentIndex + 1, currentIndex + 1);\n      range = nodeSelection.getRange(docElement);\n    }\n\n    var isCursor = range.startOffset === range.endOffset && range.startOffset === 0 && range.startContainer === range.endContainer;\n    var isCollapsed = range.collapsed;\n    var nodes = this.getNodeCollection(range, nodeSelection, node);\n    var closestParentNode = node.nodeName.toLowerCase() === 'table' ? this.closestEle(nodes[0].parentNode, editNode) : nodes[0];\n\n    if (isExternal || !isNOU(node) && !isNOU(node.classList) && node.classList.contains('pasteContent')) {\n      this.pasteInsertHTML(nodes, node, range, nodeSelection, nodeCutter, docElement, isCollapsed, closestParentNode, editNode);\n      return;\n    }\n\n    if (editNode !== range.startContainer && (!isCollapsed && !(closestParentNode.nodeType === Node.ELEMENT_NODE && CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) !== -1) || node.nodeName.toLowerCase() === 'table' && closestParentNode && CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) === -1)) {\n      var preNode = nodeCutter.GetSpliceNode(range, closestParentNode);\n      var sibNode = preNode.previousSibling;\n      var parentNode = preNode.parentNode;\n\n      if (nodes.length === 1 || node.nodeName.toLowerCase() === 'table' && preNode.childElementCount === 0) {\n        nodeSelection.setSelectionContents(docElement, preNode);\n        range = nodeSelection.getRange(docElement);\n      } else {\n        var lasNode = nodeCutter.GetSpliceNode(range, nodes[nodes.length - 1].parentElement);\n        lasNode = isNOU(lasNode) ? preNode : lasNode;\n        nodeSelection.setSelectionText(docElement, preNode, lasNode, 0, lasNode.nodeType === 3 ? lasNode.textContent.length : lasNode.childNodes.length);\n        range = nodeSelection.getRange(docElement);\n      }\n\n      range.extractContents();\n\n      if (insertNode.tagName === 'TABLE') {\n        this.removeEmptyElements(editNode);\n      }\n\n      for (var index = 0; index < nodes.length; index++) {\n        if (nodes[index].nodeType !== 3 && nodes[index].parentNode != null) {\n          if (nodes[index].nodeName === 'IMG') {\n            continue;\n          }\n\n          nodes[index].parentNode.removeChild(nodes[index]);\n        }\n      }\n\n      if (sibNode) {\n        InsertMethods.AppendBefore(node, sibNode, true);\n      } else {\n        var previousNode = null;\n\n        while (parentNode !== editNode && parentNode.firstChild && parentNode.textContent.trim() === '') {\n          var parentNode1 = parentNode.parentNode;\n          previousNode = parentNode;\n          parentNode = parentNode1;\n        }\n\n        if (previousNode !== null) {\n          parentNode = previousNode;\n        }\n\n        if (parentNode.firstChild && (parentNode !== editNode || node.nodeName === 'TABLE' && isCursor && parentNode === range.startContainer && parentNode === range.endContainer)) {\n          if (parentNode.textContent.trim() === '' && parentNode !== editNode) {\n            InsertMethods.AppendBefore(node, parentNode, false);\n            detach(parentNode);\n          } else {\n            InsertMethods.AppendBefore(node, parentNode.firstChild, false);\n          }\n        } else {\n          parentNode.appendChild(node);\n        }\n      }\n\n      if (node.nodeName === 'IMG') {\n        this.imageFocus(node, nodeSelection, docElement);\n      } else if (node.nodeType !== 3) {\n        nodeSelection.setSelectionText(docElement, node, node, 0, node.childNodes.length);\n      } else {\n        nodeSelection.setSelectionText(docElement, node, node, 0, node.textContent.length);\n      }\n    } else {\n      range.deleteContents();\n\n      if (isCursor && range.startContainer.textContent === '' && range.startContainer.nodeName !== 'BR') {\n        range.startContainer.innerHTML = '';\n      }\n\n      if (Browser.isIE) {\n        var frag = docElement.createDocumentFragment();\n        frag.appendChild(node);\n        range.insertNode(frag);\n      } else if (range.startContainer.nodeType === 1 && range.startContainer.nodeName.toLowerCase() === 'hr' && range.endContainer.nodeName.toLowerCase() === 'hr') {\n        var paraElem = range.startContainer.nextElementSibling;\n\n        if (paraElem) {\n          if (paraElem.querySelector('br')) {\n            detach(paraElem.querySelector('br'));\n          }\n\n          paraElem.appendChild(node);\n        }\n      } else {\n        if (range.startContainer.nodeName === 'BR') {\n          range.startContainer.parentElement.insertBefore(node, range.startContainer);\n        } else {\n          range.insertNode(node);\n        }\n      }\n\n      if (node.nodeType !== 3 && node.childNodes.length > 0) {\n        nodeSelection.setSelectionText(docElement, node, node, 1, 1);\n      } else if (node.nodeName === 'IMG') {\n        this.imageFocus(node, nodeSelection, docElement);\n      } else if (node.nodeType !== 3) {\n        nodeSelection.setSelectionContents(docElement, node);\n      } else {\n        nodeSelection.setSelectionText(docElement, node, node, node.textContent.length, node.textContent.length);\n      }\n    }\n  };\n\n  InsertHtml.pasteInsertHTML = function (nodes, node, range, nodeSelection, nodeCutter, docElement, isCollapsed, closestParentNode, editNode) {\n    var isCursor = range.startOffset === range.endOffset && range.startContainer === range.endContainer;\n\n    if (isCursor && range.startContainer === editNode && editNode.textContent === '') {\n      var currentBlockNode = this.getImmediateBlockNode(nodes[nodes.length - 1], editNode);\n      nodeSelection.setSelectionText(docElement, currentBlockNode, currentBlockNode, 0, 0);\n      range = nodeSelection.getRange(docElement);\n    }\n\n    var lasNode;\n    var sibNode;\n    var isSingleNode;\n    var preNode;\n\n    if (editNode !== range.startContainer && (!isCollapsed && !(closestParentNode.nodeType === Node.ELEMENT_NODE && CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) !== -1) || node.nodeName.toLowerCase() === 'table' && closestParentNode && CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) === -1)) {\n      preNode = nodeCutter.GetSpliceNode(range, closestParentNode);\n      sibNode = isNOU(preNode.previousSibling) ? preNode.parentNode.previousSibling : preNode.previousSibling;\n\n      if (nodes.length === 1) {\n        nodeSelection.setSelectionContents(docElement, preNode);\n        range = nodeSelection.getRange(docElement);\n        isSingleNode = true;\n      } else {\n        lasNode = nodeCutter.GetSpliceNode(range, nodes[nodes.length - 1].parentElement);\n        lasNode = isNOU(lasNode) ? preNode : lasNode;\n        nodeSelection.setSelectionText(docElement, preNode, lasNode, 0, lasNode.nodeType === 3 ? lasNode.textContent.length : lasNode.childNodes.length);\n        range = nodeSelection.getRange(docElement);\n        isSingleNode = false;\n      }\n    }\n\n    var containsBlockNode = false;\n    this.removingComments(node);\n    var allChildNodes = node.childNodes;\n\n    for (var i = 0; i < allChildNodes.length; i++) {\n      if (CONSTANT.BLOCK_TAGS.indexOf(allChildNodes[i].nodeName.toLocaleLowerCase()) >= 0) {\n        containsBlockNode = true;\n        break;\n      }\n    }\n\n    var lastSelectionNode;\n    var fragment = document.createDocumentFragment();\n\n    if (!containsBlockNode) {\n      if (!isCursor) {\n        while (node.firstChild) {\n          lastSelectionNode = node.firstChild;\n          fragment.appendChild(node.firstChild);\n        }\n\n        if (isSingleNode) {\n          preNode.parentNode.replaceChild(fragment, preNode);\n        } else {\n          range.deleteContents();\n          detach(lasNode); // eslint-disable-next-line\n\n          !isNOU(sibNode) ? sibNode.parentNode.appendChild(fragment) : editNode.appendChild(fragment);\n        }\n      } else {\n        var tempSpan = createElement('span', {\n          className: 'tempSpan'\n        });\n        var nearestAnchor = closest(range.startContainer.parentElement, 'a');\n\n        if (range.startContainer.nodeType === 3 && nearestAnchor && closest(nearestAnchor, 'span')) {\n          var immediateBlockNode = this.getImmediateBlockNode(range.startContainer, editNode);\n\n          if (immediateBlockNode.querySelectorAll('br').length > 0) {\n            detach(immediateBlockNode.querySelector('br'));\n          }\n\n          var rangeElement = closest(nearestAnchor, 'span');\n          rangeElement.appendChild(tempSpan);\n        } else {\n          range.insertNode(tempSpan);\n        }\n\n        while (node.firstChild) {\n          lastSelectionNode = node.firstChild;\n          fragment.appendChild(node.firstChild);\n        }\n\n        tempSpan.parentNode.replaceChild(fragment, tempSpan);\n      }\n    } else {\n      this.insertTempNode(range, node, nodes, nodeCutter, editNode);\n      var isFirstTextNode = true;\n      var isPreviousInlineElem = void 0;\n      var paraElm = void 0;\n      var previousParent = void 0;\n\n      if (!this.contentsDeleted) {\n        range.deleteContents();\n      }\n\n      while (node.firstChild) {\n        if (node.firstChild.nodeName === '#text' && node.firstChild.textContent.trim() === '') {\n          detach(node.firstChild);\n          continue;\n        }\n\n        if (node.firstChild.nodeName === '#text' && isFirstTextNode || this.inlineNode.indexOf(node.firstChild.nodeName.toLocaleLowerCase()) >= 0 && isFirstTextNode) {\n          lastSelectionNode = node.firstChild;\n\n          if (isNOU(node.previousElementSibling)) {\n            var firstParaElm = createElement('p');\n            node.parentElement.insertBefore(firstParaElm, node);\n          }\n\n          node.previousElementSibling.appendChild(node.firstChild);\n        } else {\n          lastSelectionNode = node.firstChild;\n\n          if (node.firstChild.nodeName === '#text' || this.inlineNode.indexOf(node.firstChild.nodeName.toLocaleLowerCase()) >= 0) {\n            if (!isPreviousInlineElem) {\n              paraElm = createElement('p');\n              paraElm.appendChild(node.firstChild);\n              fragment.appendChild(paraElm);\n            } else {\n              previousParent.appendChild(node.firstChild);\n              fragment.appendChild(previousParent);\n            }\n\n            previousParent = paraElm;\n            isPreviousInlineElem = true;\n          } else {\n            fragment.appendChild(node.firstChild);\n            isPreviousInlineElem = false;\n          }\n\n          isFirstTextNode = false;\n        }\n      }\n\n      node.parentNode.replaceChild(fragment, node);\n    }\n\n    if (lastSelectionNode.nodeName === '#text') {\n      this.placeCursorEnd(lastSelectionNode, node, nodeSelection, docElement, editNode);\n    } else {\n      this.cursorPos(lastSelectionNode, node, nodeSelection, docElement, editNode);\n    }\n  };\n\n  InsertHtml.placeCursorEnd = function (lastSelectionNode, node, nodeSelection, docElement, editNode) {\n    lastSelectionNode = lastSelectionNode.nodeName === 'BR' ? isNOU(lastSelectionNode.previousSibling) ? lastSelectionNode.parentNode : lastSelectionNode.previousSibling : lastSelectionNode;\n\n    while (!isNOU(lastSelectionNode) && lastSelectionNode.nodeName !== '#text' && lastSelectionNode.nodeName !== 'IMG' && lastSelectionNode.nodeName !== 'BR' && lastSelectionNode.nodeName !== 'HR') {\n      lastSelectionNode = lastSelectionNode.lastChild;\n    }\n\n    lastSelectionNode = isNOU(lastSelectionNode) ? node : lastSelectionNode;\n\n    if (lastSelectionNode.nodeName === 'IMG') {\n      this.imageFocus(lastSelectionNode, nodeSelection, docElement);\n    } else {\n      nodeSelection.setSelectionText(docElement, lastSelectionNode, lastSelectionNode, lastSelectionNode.textContent.length, lastSelectionNode.textContent.length);\n    }\n\n    this.removeEmptyElements(editNode);\n  };\n\n  InsertHtml.getNodeCollection = function (range, nodeSelection, node) {\n    var nodes = [];\n\n    if (range.startOffset === range.endOffset && range.startContainer === range.endContainer && range.startContainer.nodeName != 'BR' && (range.startContainer.nodeName === 'TD' || range.startContainer.nodeType !== 3 && node.classList && node.classList.contains('pasteContent'))) {\n      nodes.push(range.startContainer.childNodes[range.endOffset]);\n    } else {\n      nodes = nodeSelection.getInsertNodeCollection(range);\n    }\n\n    return nodes;\n  };\n\n  InsertHtml.insertTempNode = function (range, node, nodes, nodeCutter, editNode) {\n    if (range.startContainer === editNode && !isNOU(range.startContainer.childNodes[range.endOffset - 1]) && range.startContainer.childNodes[range.endOffset - 1].nodeName === 'TABLE') {\n      if (isNOU(range.startContainer.childNodes[range.endOffset - 1].nextSibling)) {\n        range.startContainer.appendChild(node);\n      } else {\n        range.startContainer.insertBefore(node, range.startContainer.childNodes[range.endOffset - 1].nextSibling);\n      }\n    } else if (range.startContainer === editNode && !isNOU(range.startContainer.childNodes[range.endOffset]) && range.startContainer.childNodes[range.endOffset].nodeName === 'TABLE') {\n      range.startContainer.insertBefore(node, range.startContainer.childNodes[range.endOffset]);\n    } else if (range.startContainer === range.endContainer && range.startContainer.nodeType !== 3 && node.firstChild.nodeName === 'HR') {\n      if (range.startContainer.classList.contains('e-content') || range.startContainer.nodeName === 'BODY') {\n        range.startContainer.appendChild(node);\n      } else {\n        range.startContainer.parentNode.insertBefore(node, range.startContainer);\n      }\n    } else {\n      var blockNode = this.getImmediateBlockNode(nodes[nodes.length - 1], editNode);\n\n      if ((isNOU(blockNode) || isNOU(blockNode.parentElement)) && range.endContainer.nodeType !== 3) {\n        blockNode = range.endContainer;\n        range.setEnd(blockNode, range.endContainer.textContent.length);\n      }\n\n      if (blockNode.nodeName === 'BODY' && range.startContainer === range.endContainer && range.startContainer.nodeType === 1) {\n        blockNode = range.startContainer;\n      }\n\n      if (blockNode.closest('LI') && node && node.firstElementChild && (node.firstElementChild.tagName === 'OL' || node.firstElementChild.tagName === 'UL')) {\n        var liNode = void 0;\n\n        while (node.firstElementChild.lastElementChild && node.firstElementChild.lastElementChild.tagName === 'LI') {\n          liNode = node.firstElementChild.lastElementChild;\n          liNode.style.removeProperty('margin-left');\n          liNode.style.removeProperty('margin-top');\n          liNode.style.removeProperty('margin-bottom');\n          node.firstElementChild.insertAdjacentElement('afterend', liNode);\n        }\n      }\n\n      if (blockNode.nodeName === 'TD' || blockNode.nodeName === 'TH') {\n        var tempSpan = createElement('span', {\n          className: 'tempSpan'\n        });\n        range.insertNode(tempSpan);\n        tempSpan.parentNode.replaceChild(node, tempSpan);\n      } else {\n        var nodeSelection = new NodeSelection();\n        var currentNode = this.getNodeCollection(range, nodeSelection, node)[this.getNodeCollection(range, nodeSelection, node).length - 1];\n        var splitedElm = void 0;\n\n        if ((currentNode.nodeName === 'BR' || currentNode.nodeName === 'HR' || currentNode.nodeName === '#text' && !isNOU(currentNode.parentElement) && currentNode.parentElement.nodeName === 'LI') && !isNOU(currentNode.parentElement) && currentNode.parentElement.textContent.trim().length === 0) {\n          splitedElm = currentNode;\n\n          if (currentNode.parentElement.nodeName === 'LI' && !isNOU(currentNode.nextSibling) && currentNode.nextSibling.nodeName === 'BR') {\n            detach(currentNode.nextSibling);\n          }\n        } else if (currentNode.nodeName === '#text' && !isNOU(currentNode.parentElement) && currentNode.parentElement.nodeName === 'LI' && currentNode.parentElement.textContent.trim().length > 0) {\n          splitedElm = currentNode;\n\n          if (currentNode.parentElement.nodeName === 'LI' && !isNOU(currentNode.nextSibling) && currentNode.nextSibling.nodeName === 'BR') {\n            detach(currentNode.nextSibling);\n          }\n\n          if (!range.collapsed) {\n            range.deleteContents();\n          }\n\n          range.insertNode(node);\n          this.contentsDeleted = true;\n          return;\n        } else {\n          splitedElm = nodeCutter.GetSpliceNode(range, blockNode);\n        }\n\n        splitedElm.parentNode.replaceChild(node, splitedElm);\n      }\n    }\n  };\n\n  InsertHtml.cursorPos = function (lastSelectionNode, node, nodeSelection, docElement, editNode) {\n    lastSelectionNode.classList.add('lastNode');\n    editNode.innerHTML = updateTextNode(editNode.innerHTML);\n    lastSelectionNode = editNode.querySelector('.lastNode');\n\n    if (!isNOU(lastSelectionNode)) {\n      this.placeCursorEnd(lastSelectionNode, node, nodeSelection, docElement, editNode);\n      lastSelectionNode.classList.remove('lastNode');\n\n      if (lastSelectionNode.classList.length === 0) {\n        lastSelectionNode.removeAttribute('class');\n      }\n    }\n  };\n\n  InsertHtml.imageFocus = function (node, nodeSelection, docElement) {\n    var focusNode = document.createTextNode(' ');\n    node.parentNode.insertBefore(focusNode, node.nextSibling);\n    nodeSelection.setSelectionText(docElement, node.nextSibling, node.nextSibling, 0, 0);\n  }; // eslint-disable-next-line\n\n\n  InsertHtml.getImmediateBlockNode = function (node, editNode) {\n    do {\n      node = node.parentNode;\n    } while (node && CONSTANT.BLOCK_TAGS.indexOf(node.nodeName.toLocaleLowerCase()) < 0);\n\n    return node;\n  };\n\n  InsertHtml.removingComments = function (elm) {\n    var innerElement = elm.innerHTML;\n    innerElement = innerElement.replace(/<!--[\\s\\S]*?-->/g, '');\n    elm.innerHTML = innerElement;\n  };\n\n  InsertHtml.findDetachEmptyElem = function (element) {\n    var removableElement;\n\n    if (!isNOU(element.parentElement)) {\n      if (element.parentElement.textContent.trim() === '' && element.parentElement.contentEditable !== 'true') {\n        removableElement = this.findDetachEmptyElem(element.parentElement);\n      } else {\n        removableElement = element;\n      }\n    } else {\n      removableElement = null;\n    }\n\n    return removableElement;\n  };\n\n  InsertHtml.removeEmptyElements = function (element) {\n    var emptyElements = element.querySelectorAll(':empty');\n\n    for (var i = 0; i < emptyElements.length; i++) {\n      if (CONSTANT.SELF_CLOSING_TAGS.indexOf(emptyElements[i].tagName.toLowerCase()) < 0) {\n        var detachableElement = this.findDetachEmptyElem(emptyElements[i]);\n\n        if (!isNOU(detachableElement)) {\n          detach(detachableElement);\n        }\n      }\n    }\n  };\n\n  InsertHtml.closestEle = function (element, editNode) {\n    var el = element;\n\n    while (el && el.nodeType === 1) {\n      if (el.parentNode === editNode || !isNOU(el.parentNode.tagName) && CONSTANT.IGNORE_BLOCK_TAGS.indexOf(el.parentNode.tagName.toLocaleLowerCase()) !== -1) {\n        return el;\n      }\n\n      el = el.parentNode;\n    }\n\n    return null;\n  };\n  /**\n   * Insert method\n   *\n   * @hidden\n    */\n\n\n  InsertHtml.inlineNode = ['a', 'abbr', 'acronym', 'audio', 'b', 'bdi', 'bdo', 'big', 'br', 'button', 'canvas', 'cite', 'code', 'data', 'datalist', 'del', 'dfn', 'em', 'embed', 'font', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'label', 'map', 'mark', 'meter', 'noscript', 'object', 'output', 'picture', 'progress', 'q', 'ruby', 's', 'samp', 'script', 'select', 'slot', 'small', 'span', 'strong', 'sub', 'sup', 'svg', 'template', 'textarea', 'time', 'u', 'tt', 'var', 'video', 'wbr'];\n  InsertHtml.contentsDeleted = false;\n  return InsertHtml;\n}();\n\nexport { InsertHtml };","map":{"version":3,"names":["NodeSelection","NodeCutter","CONSTANT","detach","Browser","isNullOrUndefined","isNOU","createElement","closest","InsertMethods","updateTextNode","InsertHtml","Insert","docElement","insertNode","editNode","isExternal","node","divNode","document","innerHTML","firstChild","classList","contains","appendChild","nodeSelection","nodeCutter","range","getRange","startContainer","endContainer","startOffset","endOffset","textContent","length","children","tagName","setSelectionText","nodeName","currentIndex","Array","prototype","slice","call","parentElement","indexOf","isCursor","isCollapsed","collapsed","nodes","getNodeCollection","closestParentNode","toLowerCase","closestEle","parentNode","pasteInsertHTML","nodeType","Node","ELEMENT_NODE","TABLE_BLOCK_TAGS","toLocaleLowerCase","preNode","GetSpliceNode","sibNode","previousSibling","childElementCount","setSelectionContents","lasNode","childNodes","extractContents","removeEmptyElements","index","removeChild","AppendBefore","previousNode","trim","parentNode1","imageFocus","deleteContents","isIE","frag","createDocumentFragment","paraElem","nextElementSibling","querySelector","insertBefore","currentBlockNode","getImmediateBlockNode","isSingleNode","containsBlockNode","removingComments","allChildNodes","i","BLOCK_TAGS","lastSelectionNode","fragment","replaceChild","tempSpan","className","nearestAnchor","immediateBlockNode","querySelectorAll","rangeElement","insertTempNode","isFirstTextNode","isPreviousInlineElem","paraElm","previousParent","contentsDeleted","inlineNode","previousElementSibling","firstParaElm","placeCursorEnd","cursorPos","lastChild","push","getInsertNodeCollection","nextSibling","blockNode","setEnd","firstElementChild","liNode","lastElementChild","style","removeProperty","insertAdjacentElement","currentNode","splitedElm","add","remove","removeAttribute","focusNode","createTextNode","elm","innerElement","replace","findDetachEmptyElem","element","removableElement","contentEditable","emptyElements","SELF_CLOSING_TAGS","detachableElement","el","IGNORE_BLOCK_TAGS"],"sources":["/home/morgan/Desktop/Projets/ENT4/Jwt-Auth-pdf/react-jwt-auth/react-jwt-auth/node_modules/@syncfusion/ej2-richtexteditor/src/editor-manager/plugin/inserthtml.js"],"sourcesContent":["import { NodeSelection } from './../../selection/index';\nimport { NodeCutter } from './nodecutter';\nimport * as CONSTANT from './../base/constant';\nimport { detach, Browser, isNullOrUndefined as isNOU, createElement, closest } from '@syncfusion/ej2-base';\nimport { InsertMethods } from './insert-methods';\nimport { updateTextNode } from './../../common/util';\n/**\n * Insert a HTML Node or Text\n *\n * @hidden\n\n */\nvar InsertHtml = /** @class */ (function () {\n    function InsertHtml() {\n    }\n    InsertHtml.Insert = function (docElement, insertNode, editNode, isExternal) {\n        var node;\n        if (typeof insertNode === 'string') {\n            var divNode = document.createElement('div');\n            divNode.innerHTML = insertNode;\n            node = isExternal ? divNode : divNode.firstChild;\n        }\n        else {\n            if (isExternal && !(!isNOU(insertNode) && !isNOU(insertNode.classList) &&\n                insertNode.classList.contains('pasteContent'))) {\n                var divNode = document.createElement('div');\n                divNode.appendChild(insertNode);\n                node = divNode;\n            }\n            else {\n                node = insertNode;\n            }\n        }\n        var nodeSelection = new NodeSelection();\n        var nodeCutter = new NodeCutter();\n        var range = nodeSelection.getRange(docElement);\n        if (range.startContainer === editNode && range.startContainer === range.endContainer && range.startOffset === 0 &&\n            range.startOffset === range.endOffset && editNode.textContent.length === 0 && editNode.children[0].tagName === 'P') {\n            nodeSelection.setSelectionText(docElement, range.startContainer.children[0], range.startContainer.children[0], 0, 0);\n            range = nodeSelection.getRange(docElement);\n        }\n        if (range.startContainer.nodeName === 'BR' && range.startOffset === 0 && range.startOffset === range.endOffset &&\n            range.startContainer === range.endContainer) {\n            var currentIndex = Array.prototype.slice.call(range.startContainer.parentElement.children).indexOf(range.startContainer);\n            nodeSelection.setSelectionText(docElement, range.startContainer.parentElement, range.startContainer.parentElement, currentIndex + 1, currentIndex + 1);\n            range = nodeSelection.getRange(docElement);\n        }\n        var isCursor = range.startOffset === range.endOffset && range.startOffset === 0 &&\n            range.startContainer === range.endContainer;\n        var isCollapsed = range.collapsed;\n        var nodes = this.getNodeCollection(range, nodeSelection, node);\n        var closestParentNode = (node.nodeName.toLowerCase() === 'table') ? this.closestEle(nodes[0].parentNode, editNode) : nodes[0];\n        if (isExternal || (!isNOU(node) && !isNOU(node.classList) &&\n            node.classList.contains('pasteContent'))) {\n            this.pasteInsertHTML(nodes, node, range, nodeSelection, nodeCutter, docElement, isCollapsed, closestParentNode, editNode);\n            return;\n        }\n        if (editNode !== range.startContainer && ((!isCollapsed && !(closestParentNode.nodeType === Node.ELEMENT_NODE &&\n            CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) !== -1))\n            || (node.nodeName.toLowerCase() === 'table' && closestParentNode &&\n                CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) === -1))) {\n            var preNode = nodeCutter.GetSpliceNode(range, closestParentNode);\n            var sibNode = preNode.previousSibling;\n            var parentNode = preNode.parentNode;\n            if (nodes.length === 1 || (node.nodeName.toLowerCase() === 'table' && preNode.childElementCount === 0)) {\n                nodeSelection.setSelectionContents(docElement, preNode);\n                range = nodeSelection.getRange(docElement);\n            }\n            else {\n                var lasNode = nodeCutter.GetSpliceNode(range, nodes[nodes.length - 1].parentElement);\n                lasNode = isNOU(lasNode) ? preNode : lasNode;\n                nodeSelection.setSelectionText(docElement, preNode, lasNode, 0, (lasNode.nodeType === 3) ?\n                    lasNode.textContent.length : lasNode.childNodes.length);\n                range = nodeSelection.getRange(docElement);\n            }\n            range.extractContents();\n            if (insertNode.tagName === 'TABLE') {\n                this.removeEmptyElements(editNode);\n            }\n            for (var index = 0; index < nodes.length; index++) {\n                if (nodes[index].nodeType !== 3 && nodes[index].parentNode != null) {\n                    if (nodes[index].nodeName === 'IMG') {\n                        continue;\n                    }\n                    nodes[index].parentNode.removeChild(nodes[index]);\n                }\n            }\n            if (sibNode) {\n                InsertMethods.AppendBefore(node, sibNode, true);\n            }\n            else {\n                var previousNode = null;\n                while (parentNode !== editNode && parentNode.firstChild &&\n                    (parentNode.textContent.trim() === '')) {\n                    var parentNode1 = parentNode.parentNode;\n                    previousNode = parentNode;\n                    parentNode = parentNode1;\n                }\n                if (previousNode !== null) {\n                    parentNode = previousNode;\n                }\n                if (parentNode.firstChild && (parentNode !== editNode ||\n                    (node.nodeName === 'TABLE' && isCursor && parentNode === range.startContainer &&\n                        parentNode === range.endContainer))) {\n                    if (parentNode.textContent.trim() === '' && parentNode !== editNode) {\n                        InsertMethods.AppendBefore(node, parentNode, false);\n                        detach(parentNode);\n                    }\n                    else {\n                        InsertMethods.AppendBefore(node, parentNode.firstChild, false);\n                    }\n                }\n                else {\n                    parentNode.appendChild(node);\n                }\n            }\n            if (node.nodeName === 'IMG') {\n                this.imageFocus(node, nodeSelection, docElement);\n            }\n            else if (node.nodeType !== 3) {\n                nodeSelection.setSelectionText(docElement, node, node, 0, node.childNodes.length);\n            }\n            else {\n                nodeSelection.setSelectionText(docElement, node, node, 0, node.textContent.length);\n            }\n        }\n        else {\n            range.deleteContents();\n            if (isCursor && range.startContainer.textContent === '' && range.startContainer.nodeName !== 'BR') {\n                range.startContainer.innerHTML = '';\n            }\n            if (Browser.isIE) {\n                var frag = docElement.createDocumentFragment();\n                frag.appendChild(node);\n                range.insertNode(frag);\n            }\n            else if (range.startContainer.nodeType === 1 && range.startContainer.nodeName.toLowerCase() === 'hr'\n                && range.endContainer.nodeName.toLowerCase() === 'hr') {\n                var paraElem = range.startContainer.nextElementSibling;\n                if (paraElem) {\n                    if (paraElem.querySelector('br')) {\n                        detach(paraElem.querySelector('br'));\n                    }\n                    paraElem.appendChild(node);\n                }\n            }\n            else {\n                if (range.startContainer.nodeName === 'BR') {\n                    range.startContainer.parentElement.insertBefore(node, range.startContainer);\n                }\n                else {\n                    range.insertNode(node);\n                }\n            }\n            if (node.nodeType !== 3 && node.childNodes.length > 0) {\n                nodeSelection.setSelectionText(docElement, node, node, 1, 1);\n            }\n            else if (node.nodeName === 'IMG') {\n                this.imageFocus(node, nodeSelection, docElement);\n            }\n            else if (node.nodeType !== 3) {\n                nodeSelection.setSelectionContents(docElement, node);\n            }\n            else {\n                nodeSelection.setSelectionText(docElement, node, node, node.textContent.length, node.textContent.length);\n            }\n        }\n    };\n    InsertHtml.pasteInsertHTML = function (nodes, node, range, nodeSelection, nodeCutter, docElement, isCollapsed, closestParentNode, editNode) {\n        var isCursor = range.startOffset === range.endOffset &&\n            range.startContainer === range.endContainer;\n        if (isCursor && range.startContainer === editNode && editNode.textContent === '') {\n            var currentBlockNode = this.getImmediateBlockNode(nodes[nodes.length - 1], editNode);\n            nodeSelection.setSelectionText(docElement, currentBlockNode, currentBlockNode, 0, 0);\n            range = nodeSelection.getRange(docElement);\n        }\n        var lasNode;\n        var sibNode;\n        var isSingleNode;\n        var preNode;\n        if (editNode !== range.startContainer && ((!isCollapsed && !(closestParentNode.nodeType === Node.ELEMENT_NODE &&\n            CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) !== -1))\n            || (node.nodeName.toLowerCase() === 'table' && closestParentNode &&\n                CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) === -1))) {\n            preNode = nodeCutter.GetSpliceNode(range, closestParentNode);\n            sibNode = isNOU(preNode.previousSibling) ? preNode.parentNode.previousSibling : preNode.previousSibling;\n            if (nodes.length === 1) {\n                nodeSelection.setSelectionContents(docElement, preNode);\n                range = nodeSelection.getRange(docElement);\n                isSingleNode = true;\n            }\n            else {\n                lasNode = nodeCutter.GetSpliceNode(range, nodes[nodes.length - 1].parentElement);\n                lasNode = isNOU(lasNode) ? preNode : lasNode;\n                nodeSelection.setSelectionText(docElement, preNode, lasNode, 0, (lasNode.nodeType === 3) ?\n                    lasNode.textContent.length : lasNode.childNodes.length);\n                range = nodeSelection.getRange(docElement);\n                isSingleNode = false;\n            }\n        }\n        var containsBlockNode = false;\n        this.removingComments(node);\n        var allChildNodes = node.childNodes;\n        for (var i = 0; i < allChildNodes.length; i++) {\n            if (CONSTANT.BLOCK_TAGS.indexOf(allChildNodes[i].nodeName.toLocaleLowerCase()) >= 0) {\n                containsBlockNode = true;\n                break;\n            }\n        }\n        var lastSelectionNode;\n        var fragment = document.createDocumentFragment();\n        if (!containsBlockNode) {\n            if (!isCursor) {\n                while (node.firstChild) {\n                    lastSelectionNode = node.firstChild;\n                    fragment.appendChild(node.firstChild);\n                }\n                if (isSingleNode) {\n                    preNode.parentNode.replaceChild(fragment, preNode);\n                }\n                else {\n                    range.deleteContents();\n                    detach(lasNode);\n                    // eslint-disable-next-line\n                    !isNOU(sibNode) ? sibNode.parentNode.appendChild(fragment) : editNode.appendChild(fragment);\n                }\n            }\n            else {\n                var tempSpan = createElement('span', { className: 'tempSpan' });\n                var nearestAnchor = closest(range.startContainer.parentElement, 'a');\n                if (range.startContainer.nodeType === 3 && nearestAnchor && closest(nearestAnchor, 'span')) {\n                    var immediateBlockNode = this.getImmediateBlockNode(range.startContainer, editNode);\n                    if (immediateBlockNode.querySelectorAll('br').length > 0) {\n                        detach(immediateBlockNode.querySelector('br'));\n                    }\n                    var rangeElement = closest(nearestAnchor, 'span');\n                    rangeElement.appendChild(tempSpan);\n                }\n                else {\n                    range.insertNode(tempSpan);\n                }\n                while (node.firstChild) {\n                    lastSelectionNode = node.firstChild;\n                    fragment.appendChild(node.firstChild);\n                }\n                tempSpan.parentNode.replaceChild(fragment, tempSpan);\n            }\n        }\n        else {\n            this.insertTempNode(range, node, nodes, nodeCutter, editNode);\n            var isFirstTextNode = true;\n            var isPreviousInlineElem = void 0;\n            var paraElm = void 0;\n            var previousParent = void 0;\n            if (!this.contentsDeleted) {\n                range.deleteContents();\n            }\n            while (node.firstChild) {\n                if (node.firstChild.nodeName === '#text' && node.firstChild.textContent.trim() === '') {\n                    detach(node.firstChild);\n                    continue;\n                }\n                if (node.firstChild.nodeName === '#text' && isFirstTextNode ||\n                    (this.inlineNode.indexOf(node.firstChild.nodeName.toLocaleLowerCase()) >= 0 && isFirstTextNode)) {\n                    lastSelectionNode = node.firstChild;\n                    if (isNOU(node.previousElementSibling)) {\n                        var firstParaElm = createElement('p');\n                        node.parentElement.insertBefore(firstParaElm, node);\n                    }\n                    node.previousElementSibling.appendChild(node.firstChild);\n                }\n                else {\n                    lastSelectionNode = node.firstChild;\n                    if (node.firstChild.nodeName === '#text' ||\n                        (this.inlineNode.indexOf(node.firstChild.nodeName.toLocaleLowerCase()) >= 0)) {\n                        if (!isPreviousInlineElem) {\n                            paraElm = createElement('p');\n                            paraElm.appendChild(node.firstChild);\n                            fragment.appendChild(paraElm);\n                        }\n                        else {\n                            previousParent.appendChild(node.firstChild);\n                            fragment.appendChild(previousParent);\n                        }\n                        previousParent = paraElm;\n                        isPreviousInlineElem = true;\n                    }\n                    else {\n                        fragment.appendChild(node.firstChild);\n                        isPreviousInlineElem = false;\n                    }\n                    isFirstTextNode = false;\n                }\n            }\n            node.parentNode.replaceChild(fragment, node);\n        }\n        if (lastSelectionNode.nodeName === '#text') {\n            this.placeCursorEnd(lastSelectionNode, node, nodeSelection, docElement, editNode);\n        }\n        else {\n            this.cursorPos(lastSelectionNode, node, nodeSelection, docElement, editNode);\n        }\n    };\n    InsertHtml.placeCursorEnd = function (lastSelectionNode, node, nodeSelection, docElement, editNode) {\n        lastSelectionNode = lastSelectionNode.nodeName === 'BR' ? (isNOU(lastSelectionNode.previousSibling) ? lastSelectionNode.parentNode\n            : lastSelectionNode.previousSibling) : lastSelectionNode;\n        while (!isNOU(lastSelectionNode) && lastSelectionNode.nodeName !== '#text' && lastSelectionNode.nodeName !== 'IMG' &&\n            lastSelectionNode.nodeName !== 'BR' && lastSelectionNode.nodeName !== 'HR') {\n            lastSelectionNode = lastSelectionNode.lastChild;\n        }\n        lastSelectionNode = isNOU(lastSelectionNode) ? node : lastSelectionNode;\n        if (lastSelectionNode.nodeName === 'IMG') {\n            this.imageFocus(lastSelectionNode, nodeSelection, docElement);\n        }\n        else {\n            nodeSelection.setSelectionText(docElement, lastSelectionNode, lastSelectionNode, lastSelectionNode.textContent.length, lastSelectionNode.textContent.length);\n        }\n        this.removeEmptyElements(editNode);\n    };\n    InsertHtml.getNodeCollection = function (range, nodeSelection, node) {\n        var nodes = [];\n        if (range.startOffset === range.endOffset && range.startContainer === range.endContainer &&\n            range.startContainer.nodeName != 'BR' &&\n            (range.startContainer.nodeName === 'TD' || (range.startContainer.nodeType !== 3 &&\n                node.classList && node.classList.contains('pasteContent')))) {\n            nodes.push(range.startContainer.childNodes[range.endOffset]);\n        }\n        else {\n            nodes = nodeSelection.getInsertNodeCollection(range);\n        }\n        return nodes;\n    };\n    InsertHtml.insertTempNode = function (range, node, nodes, nodeCutter, editNode) {\n        if (range.startContainer === editNode && !isNOU(range.startContainer.childNodes[range.endOffset - 1]) &&\n            range.startContainer.childNodes[range.endOffset - 1].nodeName === 'TABLE') {\n            if (isNOU(range.startContainer.childNodes[range.endOffset - 1].nextSibling)) {\n                range.startContainer.appendChild(node);\n            }\n            else {\n                range.startContainer.insertBefore(node, range.startContainer.childNodes[range.endOffset - 1].nextSibling);\n            }\n        }\n        else if (range.startContainer === editNode && !isNOU(range.startContainer.childNodes[range.endOffset]) &&\n            range.startContainer.childNodes[range.endOffset].nodeName === 'TABLE') {\n            range.startContainer.insertBefore(node, range.startContainer.childNodes[range.endOffset]);\n        }\n        else if (range.startContainer === range.endContainer && range.startContainer.nodeType !== 3\n            && node.firstChild.nodeName === 'HR') {\n            if (range.startContainer.classList.contains('e-content') || range.startContainer.nodeName === 'BODY') {\n                range.startContainer.appendChild(node);\n            }\n            else {\n                range.startContainer.parentNode.insertBefore(node, range.startContainer);\n            }\n        }\n        else {\n            var blockNode = this.getImmediateBlockNode(nodes[nodes.length - 1], editNode);\n            if ((isNOU(blockNode) || isNOU(blockNode.parentElement)) && range.endContainer.nodeType !== 3) {\n                blockNode = range.endContainer;\n                range.setEnd(blockNode, range.endContainer.textContent.length);\n            }\n            if (blockNode.nodeName === 'BODY' && range.startContainer === range.endContainer && range.startContainer.nodeType === 1) {\n                blockNode = range.startContainer;\n            }\n            if (blockNode.closest('LI') && node && node.firstElementChild &&\n                ((node).firstElementChild.tagName === 'OL' || node.firstElementChild.tagName === 'UL')) {\n                var liNode = void 0;\n                while (node.firstElementChild.lastElementChild && node.firstElementChild.lastElementChild.tagName === 'LI') {\n                    liNode = node.firstElementChild.lastElementChild;\n                    liNode.style.removeProperty('margin-left');\n                    liNode.style.removeProperty('margin-top');\n                    liNode.style.removeProperty('margin-bottom');\n                    node.firstElementChild.insertAdjacentElement('afterend', liNode);\n                }\n            }\n            if (blockNode.nodeName === 'TD' || blockNode.nodeName === 'TH') {\n                var tempSpan = createElement('span', { className: 'tempSpan' });\n                range.insertNode(tempSpan);\n                tempSpan.parentNode.replaceChild(node, tempSpan);\n            }\n            else {\n                var nodeSelection = new NodeSelection();\n                var currentNode = this.getNodeCollection(range, nodeSelection, node)[this.getNodeCollection(range, nodeSelection, node).length - 1];\n                var splitedElm = void 0;\n                if ((currentNode.nodeName === 'BR' || currentNode.nodeName === 'HR' ||\n                    (currentNode.nodeName === '#text' && !isNOU(currentNode.parentElement) && currentNode.parentElement.nodeName === 'LI')) &&\n                    (!isNOU(currentNode.parentElement) && currentNode.parentElement.textContent.trim().length === 0)) {\n                    splitedElm = currentNode;\n                    if (currentNode.parentElement.nodeName === 'LI' && !isNOU(currentNode.nextSibling) &&\n                        currentNode.nextSibling.nodeName === 'BR') {\n                        detach(currentNode.nextSibling);\n                    }\n                }\n                else if (currentNode.nodeName === '#text' && !isNOU(currentNode.parentElement) &&\n                    currentNode.parentElement.nodeName === 'LI' && currentNode.parentElement.textContent.trim().length > 0) {\n                    splitedElm = currentNode;\n                    if (currentNode.parentElement.nodeName === 'LI' && !isNOU(currentNode.nextSibling) &&\n                        currentNode.nextSibling.nodeName === 'BR') {\n                        detach(currentNode.nextSibling);\n                    }\n                    if (!range.collapsed) {\n                        range.deleteContents();\n                    }\n                    range.insertNode(node);\n                    this.contentsDeleted = true;\n                    return;\n                }\n                else {\n                    splitedElm = nodeCutter.GetSpliceNode(range, blockNode);\n                }\n                splitedElm.parentNode.replaceChild(node, splitedElm);\n            }\n        }\n    };\n    InsertHtml.cursorPos = function (lastSelectionNode, node, nodeSelection, docElement, editNode) {\n        lastSelectionNode.classList.add('lastNode');\n        editNode.innerHTML = updateTextNode(editNode.innerHTML);\n        lastSelectionNode = editNode.querySelector('.lastNode');\n        if (!isNOU(lastSelectionNode)) {\n            this.placeCursorEnd(lastSelectionNode, node, nodeSelection, docElement, editNode);\n            lastSelectionNode.classList.remove('lastNode');\n            if (lastSelectionNode.classList.length === 0) {\n                lastSelectionNode.removeAttribute('class');\n            }\n        }\n    };\n    InsertHtml.imageFocus = function (node, nodeSelection, docElement) {\n        var focusNode = document.createTextNode(' ');\n        node.parentNode.insertBefore(focusNode, node.nextSibling);\n        nodeSelection.setSelectionText(docElement, node.nextSibling, node.nextSibling, 0, 0);\n    };\n    // eslint-disable-next-line\n    InsertHtml.getImmediateBlockNode = function (node, editNode) {\n        do {\n            node = node.parentNode;\n        } while (node && CONSTANT.BLOCK_TAGS.indexOf(node.nodeName.toLocaleLowerCase()) < 0);\n        return node;\n    };\n    InsertHtml.removingComments = function (elm) {\n        var innerElement = elm.innerHTML;\n        innerElement = innerElement.replace(/<!--[\\s\\S]*?-->/g, '');\n        elm.innerHTML = innerElement;\n    };\n    InsertHtml.findDetachEmptyElem = function (element) {\n        var removableElement;\n        if (!isNOU(element.parentElement)) {\n            if (element.parentElement.textContent.trim() === '' && element.parentElement.contentEditable !== 'true') {\n                removableElement = this.findDetachEmptyElem(element.parentElement);\n            }\n            else {\n                removableElement = element;\n            }\n        }\n        else {\n            removableElement = null;\n        }\n        return removableElement;\n    };\n    InsertHtml.removeEmptyElements = function (element) {\n        var emptyElements = element.querySelectorAll(':empty');\n        for (var i = 0; i < emptyElements.length; i++) {\n            if (CONSTANT.SELF_CLOSING_TAGS.indexOf(emptyElements[i].tagName.toLowerCase()) < 0) {\n                var detachableElement = this.findDetachEmptyElem(emptyElements[i]);\n                if (!isNOU(detachableElement)) {\n                    detach(detachableElement);\n                }\n            }\n        }\n    };\n    InsertHtml.closestEle = function (element, editNode) {\n        var el = element;\n        while (el && el.nodeType === 1) {\n            if (el.parentNode === editNode ||\n                (!isNOU(el.parentNode.tagName) &&\n                    CONSTANT.IGNORE_BLOCK_TAGS.indexOf(el.parentNode.tagName.toLocaleLowerCase()) !== -1)) {\n                return el;\n            }\n            el = el.parentNode;\n        }\n        return null;\n    };\n    /**\n     * Insert method\n     *\n     * @hidden\n\n     */\n    InsertHtml.inlineNode = ['a', 'abbr', 'acronym', 'audio', 'b', 'bdi', 'bdo', 'big', 'br', 'button',\n        'canvas', 'cite', 'code', 'data', 'datalist', 'del', 'dfn', 'em', 'embed', 'font', 'i', 'iframe', 'img', 'input',\n        'ins', 'kbd', 'label', 'map', 'mark', 'meter', 'noscript', 'object', 'output', 'picture', 'progress',\n        'q', 'ruby', 's', 'samp', 'script', 'select', 'slot', 'small', 'span', 'strong', 'sub', 'sup', 'svg',\n        'template', 'textarea', 'time', 'u', 'tt', 'var', 'video', 'wbr'];\n    InsertHtml.contentsDeleted = false;\n    return InsertHtml;\n}());\nexport { InsertHtml };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}