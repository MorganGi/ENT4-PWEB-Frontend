{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { Browser, EventHandler, createElement } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, isUndefined, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { remove, closest, select } from '@syncfusion/ej2-base';\nimport { Query } from '@syncfusion/ej2-data';\nimport { setCssInGridPopUp, getPosition, isGroupAdaptive, addRemoveActiveClasses, removeAddCboxClasses } from '../base/util';\nimport { getCellsByTableName, getCellByColAndRowIndex, parentsUntil, gridActionHandler } from '../base/util';\nimport * as events from '../base/constant';\nimport { RenderType } from '../base/enum';\nimport { iterateExtend, setChecked } from '../base/util';\nimport { addRemoveEventListener } from '../base/util';\nimport * as literals from '../base/string-literals';\n/**\n * The `Selection` module is used to handle cell and row selection.\n */\n\nvar Selection =\n/** @class */\nfunction () {\n  /**\n   * Constructor for the Grid selection module\n   *\n   * @param {IGrid} parent - specifies the IGrid\n   * @param {SelectionSettings} selectionSettings - specifies the selectionsettings\n   * @param {ServiceLocator} locator - specifies the ServiceLocator\n   * @hidden\n   */\n  function Selection(parent, selectionSettings, locator) {\n    //Internal letiables\n\n    /**\n     * @hidden\n     */\n    this.selectedRowIndexes = [];\n    /**\n     * @hidden\n     */\n\n    this.selectedRowCellIndexes = [];\n    /**\n     * @hidden\n     */\n\n    this.selectedRecords = [];\n    /**\n     * @hidden\n     */\n\n    this.preventFocus = false;\n    /**\n     *  @hidden\n     */\n\n    this.selectedColumnsIndexes = [];\n    this.checkBoxState = false;\n    this.isMultiShiftRequest = false;\n    this.isMultiCtrlRequest = false;\n    this.enableSelectMultiTouch = false;\n    this.clearRowCheck = false;\n    this.selectRowCheck = false;\n    this.selectedRowState = {};\n    this.totalRecordsCount = 0;\n    this.chkAllCollec = [];\n    this.isCheckedOnAdd = false;\n    this.persistSelectedData = [];\n    this.deSelectedData = [];\n    this.isHdrSelectAllClicked = false;\n    this.needColumnSelection = false;\n    this.isCancelDeSelect = false;\n    this.isPreventCellSelect = false;\n    this.disableUI = false;\n    this.isPersisted = false;\n    this.cmdKeyPressed = false;\n    this.cellselected = false;\n    this.isMultiSelection = false;\n    this.isAddRowsToSelection = false;\n    this.initialRowSelection = false;\n    this.isPrevRowSelection = false;\n    this.isKeyAction = false;\n    this.isRowDragSelected = false;\n    this.isPartialSelection = false;\n    /**\n     * @hidden\n     */\n\n    this.autoFillRLselection = true;\n    this.bottom = '0 0 2px 0';\n    this.top = '2px 0 0 0';\n    /* eslint-disable */\n\n    this.right_bottom = '0 2px 2px 0';\n    this.bottom_left = '0 0 2px 2px';\n    this.top_right = '2px 2px 0 0';\n    this.top_left = '2px 0 0 2px';\n    this.top_bottom = '2px 0 2px 0';\n    this.top_right_bottom = '2px 2px 2px 0';\n    this.top_bottom_left = '2px 0 2px 2px';\n    this.top_right_left = '2px 2px 0 2px';\n    this.right_bottom_left = '0 2px 2px 2px';\n    this.all_border = '2px';\n    this.parent = parent;\n    this.selectionSettings = selectionSettings;\n    this.factory = locator.getService('rendererFactory');\n    this.focus = locator.getService('focus');\n    this.addEventListener();\n    this.wireEvents();\n  }\n\n  Selection.prototype.initializeSelection = function () {\n    this.parent.log('selection_key_missing');\n    this.render();\n  };\n  /**\n   * The function used to trigger onActionBegin\n   *\n   * @param {Object} args - specifies the args\n   * @param {string} type - specifies the type\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.onActionBegin = function (args, type) {\n    this.parent.trigger(type, this.fDataUpdate(args));\n  };\n\n  Selection.prototype.fDataUpdate = function (args) {\n    if (!this.isMultiSelection && (!isNullOrUndefined(args.cellIndex) || !isNullOrUndefined(args.rowIndex))) {\n      var rowObj = this.getRowObj(isNullOrUndefined(args.rowIndex) ? isNullOrUndefined(args.cellIndex) ? this.currentIndex : args.cellIndex.rowIndex : args.rowIndex);\n      args.foreignKeyData = rowObj.foreignKeyData;\n    }\n\n    return args;\n  };\n  /**\n   * The function used to trigger onActionComplete\n   *\n   * @param {Object} args - specifies the args\n   * @param {string} type - specifies the type\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.onActionComplete = function (args, type) {\n    this.parent.trigger(type, this.fDataUpdate(args));\n    this.isMultiSelection = false;\n  };\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @returns {string} returns the module name\n   * @private\n   */\n\n\n  Selection.prototype.getModuleName = function () {\n    return 'selection';\n  };\n  /**\n   * To destroy the selection\n   *\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.destroy = function () {\n    var gridElement = this.parent.element;\n\n    if (!gridElement || !gridElement.querySelector('.' + literals.gridHeader) && !gridElement.querySelector('.' + literals.gridContent)) {\n      return;\n    }\n\n    this.hidePopUp();\n    this.clearSelection();\n    this.removeEventListener();\n    this.unWireEvents();\n    EventHandler.remove(this.parent.getContent(), 'mousedown', this.mouseDownHandler);\n    EventHandler.remove(this.parent.getHeaderContent(), 'mousedown', this.mouseDownHandler);\n  };\n\n  Selection.prototype.isEditing = function () {\n    return (this.parent.editSettings.mode === 'Normal' || this.parent.editSettings.mode === 'Batch' && this.parent.editModule && this.parent.editModule.formObj && !this.parent.editModule.formObj.validate()) && this.parent.isEdit && !this.parent.isPersistSelection;\n  };\n\n  Selection.prototype.getSelectedMovableRow = function (index) {\n    var gObj = this.parent;\n\n    if (gObj.isFrozenGrid() && this.parent.getContent().querySelector('.' + literals.movableContent)) {\n      return gObj.getMovableRowByIndex(index);\n    }\n\n    return null;\n  };\n\n  Selection.prototype.getSelectedFrozenRightRow = function (index) {\n    var gObj = this.parent;\n\n    if (gObj.isFrozenGrid() && gObj.getFrozenMode() === literals.leftRight && gObj.getFrozenRightContent()) {\n      return gObj.getFrozenRightRowByIndex(index);\n    }\n\n    return null;\n  };\n\n  Selection.prototype.getCurrentBatchRecordChanges = function () {\n    var gObj = this.parent;\n\n    if (gObj.editSettings.mode === 'Batch' && gObj.editModule) {\n      var currentRecords = iterateExtend(this.parent.getCurrentViewRecords());\n      currentRecords = gObj.editSettings.newRowPosition === 'Bottom' ? currentRecords.concat(this.parent.editModule.getBatchChanges()[literals.addedRecords]) : this.parent.editModule.getBatchChanges()[literals.addedRecords].concat(currentRecords);\n      var deletedRecords = this.parent.editModule.getBatchChanges()[literals.deletedRecords];\n      var primaryKey = this.parent.getPrimaryKeyFieldNames()[0];\n\n      for (var i = 0; i < deletedRecords.length; i++) {\n        for (var j = 0; j < currentRecords.length; j++) {\n          if (deletedRecords[i][primaryKey] === currentRecords[j][primaryKey]) {\n            currentRecords.splice(j, 1);\n            break;\n          }\n        }\n      }\n\n      return currentRecords;\n    } else {\n      return gObj.getCurrentViewRecords();\n    }\n  };\n  /**\n   * Selects a row by the given index.\n   *\n   * @param  {number} index - Defines the row index.\n   * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n   * @returns {void}\n   */\n\n\n  Selection.prototype.selectRow = function (index, isToggle) {\n    if (this.selectedRowIndexes.length && this.selectionSettings.enableSimpleMultiRowSelection) {\n      this.addRowsToSelection([index]);\n      return;\n    }\n\n    var gObj = this.parent;\n    var selectedRow = gObj.getRowByIndex(index);\n    var rowObj = selectedRow && gObj.getRowObjectFromUID(selectedRow.getAttribute('data-uid'));\n\n    if (this.isPartialSelection && rowObj && rowObj.isDataRow && !rowObj.isSelectable) {\n      return;\n    }\n\n    var selectedMovableRow = this.getSelectedMovableRow(index);\n    var selectedFrozenRightRow = this.getSelectedFrozenRightRow(index);\n    var selectData;\n    var isRemoved = false;\n\n    if (gObj.enableVirtualization && index > -1) {\n      var e = {\n        selectedIndex: index,\n        isAvailable: true\n      };\n      this.parent.notify(events.selectVirtualRow, e);\n      var frozenData = gObj.isFrozenGrid() ? gObj.contentModule.getRowObjectByIndex(index) : null;\n\n      if (selectedRow && (gObj.getRowObjectFromUID(selectedRow.getAttribute('data-uid')) || frozenData)) {\n        selectData = frozenData ? frozenData : gObj.getRowObjectFromUID(selectedRow.getAttribute('data-uid')).data;\n      } else {\n        if (e.isAvailable && !gObj.selectionSettings.persistSelection) {\n          var prevSelectedData = this.parent.getSelectedRecords();\n\n          if (prevSelectedData.length > 0) {\n            this.clearRowSelection();\n          }\n        }\n\n        return;\n      }\n    } else {\n      selectData = this.getRowObj(index).data;\n    }\n\n    if (!this.isRowType() || !selectedRow || this.isEditing()) {\n      // if (this.isEditing()) {\n      //     gObj.selectedRowIndex = index;\n      // }\n      return;\n    }\n\n    var isRowSelected = selectedRow.hasAttribute('aria-selected');\n    this.activeTarget();\n    isToggle = !isToggle ? isToggle : !this.selectedRowIndexes.length ? false : this.selectedRowIndexes.length === 1 ? this.isKeyAction && this.parent.isCheckBoxSelection ? false : index === this.selectedRowIndexes[0] : false;\n    this.isKeyAction = false;\n    var args;\n    var can = 'cancel';\n\n    if (!isToggle) {\n      args = {\n        data: selectData,\n        rowIndex: index,\n        isCtrlPressed: this.isMultiCtrlRequest,\n        isShiftPressed: this.isMultiShiftRequest,\n        row: selectedRow,\n        previousRow: gObj.getRowByIndex(this.prevRowIndex),\n        previousRowIndex: this.prevRowIndex,\n        target: this.actualTarget,\n        cancel: false,\n        isInteracted: this.isInteracted,\n        isHeaderCheckboxClicked: this.isHeaderCheckboxClicked\n      };\n      args = this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n      this.parent.trigger(events.rowSelecting, this.fDataUpdate(args), this.rowSelectingCallBack(args, isToggle, index, selectData, isRemoved, isRowSelected, can));\n    } else {\n      this.rowSelectingCallBack(args, isToggle, index, selectData, isRemoved, isRowSelected, can)(args);\n    }\n  };\n\n  Selection.prototype.rowSelectingCallBack = function (args, isToggle, index, selectData, isRemoved, isRowSelected, can) {\n    var _this = this;\n\n    return function (args) {\n      if (!isNullOrUndefined(args) && args[can] === true) {\n        _this.disableInteracted();\n\n        return;\n      }\n\n      _this.index = index;\n      _this.toggle = isToggle;\n      _this.data = selectData;\n      _this.removed = isRemoved;\n\n      if (isRowSelected && _this.selectionSettings.persistSelection && !(_this.selectionSettings.checkboxMode === 'ResetOnRowClick')) {\n        _this.clearSelectedRow(index);\n\n        _this.selectRowCallBack();\n      } else if (!isRowSelected && _this.selectionSettings.persistSelection && _this.selectionSettings.checkboxMode !== 'ResetOnRowClick') {\n        _this.selectRowCallBack();\n      }\n\n      if (_this.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n        _this.clearSelection();\n      }\n\n      if (!_this.selectionSettings.persistSelection || _this.selectionSettings.checkboxMode === 'ResetOnRowClick' || !_this.parent.isCheckBoxSelection && _this.selectionSettings.persistSelection) {\n        _this.selectRowCheck = true;\n\n        _this.clearRow();\n      }\n    };\n  };\n\n  Selection.prototype.selectRowCallBack = function () {\n    var gObj = this.parent;\n    var args;\n    var index = this.index;\n    var isToggle = this.toggle;\n    var selectData = this.data;\n    var isRemoved = this.removed;\n    var selectedRow = gObj.getRowByIndex(index);\n    var selectedMovableRow = this.getSelectedMovableRow(index);\n    var selectedFrozenRightRow = this.getSelectedFrozenRightRow(index);\n\n    if (!isToggle && !isRemoved) {\n      if (this.selectedRowIndexes.indexOf(index) <= -1) {\n        this.updateRowSelection(selectedRow, index);\n        this.selectMovableRow(selectedMovableRow, selectedFrozenRightRow, index);\n      }\n\n      this.selectRowIndex(index);\n    }\n\n    if (!isToggle) {\n      args = {\n        data: selectData,\n        rowIndex: index,\n        row: selectedRow,\n        previousRow: gObj.getRowByIndex(this.prevRowIndex),\n        previousRowIndex: this.prevRowIndex,\n        target: this.actualTarget,\n        isInteracted: this.isInteracted,\n        isHeaderCheckBoxClicked: this.isHeaderCheckboxClicked\n      };\n      args = this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n      this.onActionComplete(args, events.rowSelected);\n    }\n\n    this.isInteracted = false;\n    this.updateRowProps(index);\n  };\n\n  Selection.prototype.selectMovableRow = function (selectedMovableRow, selectedFrozenRightRow, index) {\n    if (this.parent.isFrozenGrid()) {\n      this.updateRowSelection(selectedMovableRow, index);\n\n      if (this.parent.getFrozenMode() === literals.leftRight && selectedFrozenRightRow) {\n        this.updateRowSelection(selectedFrozenRightRow, index);\n      }\n    }\n  };\n\n  Selection.prototype.addMovableArgs = function (targetObj, mRow, frRow) {\n    if (this.parent.isFrozenGrid()) {\n      var mObj = {\n        mRow: mRow,\n        previousMovRow: this.parent.getMovableRows()[this.prevRowIndex]\n      };\n      var frozenRightRow = 'frozenRightRow';\n      var previousFrozenRightRow = 'previousFrozenRightRow';\n\n      if (this.parent.getFrozenMode() === literals.leftRight && frRow) {\n        mObj[frozenRightRow] = frRow;\n        mObj[previousFrozenRightRow] = this.parent.getFrozenRightDataRows()[this.prevRowIndex];\n      }\n\n      targetObj = __assign({}, targetObj, mObj);\n    }\n\n    return targetObj;\n  };\n  /**\n   * Selects a range of rows from start and end row indexes.\n   *\n   * @param  {number} startIndex - Specifies the start row index.\n   * @param  {number} endIndex - Specifies the end row index.\n   * @returns {void}\n   */\n\n\n  Selection.prototype.selectRowsByRange = function (startIndex, endIndex) {\n    this.selectRows(this.getCollectionFromIndexes(startIndex, endIndex));\n    this.selectRowIndex(endIndex);\n  };\n\n  Selection.prototype.selectedDataUpdate = function (selectedData, foreignKeyData, selectedRows, rowIndexes, selectableRowIndex) {\n    for (var i = 0, len = rowIndexes.length; i < len; i++) {\n      var currentRow = this.parent.getDataRows()[rowIndexes[i]];\n\n      if (this.parent.enableVirtualization) {\n        currentRow = this.parent.getRowByIndex(rowIndexes[i]);\n      }\n\n      var rowObj = this.getRowObj(currentRow);\n\n      if (rowObj && rowObj.isDataRow && rowObj.isSelectable) {\n        selectedData.push(rowObj.data);\n        selectedRows.push(currentRow);\n        foreignKeyData.push(rowObj.foreignKeyData);\n      } else {\n        if (this.isPartialSelection && selectableRowIndex) {\n          selectableRowIndex.splice(selectableRowIndex.indexOf(rowIndexes[i]), 1);\n        }\n      }\n    }\n  };\n  /**\n   * Selects a collection of rows by index.\n   *\n   * @param  {number[]} rowIndexes - Specifies an array of row indexes.\n   * @returns {void}\n   */\n\n\n  Selection.prototype.selectRows = function (rowIndexes) {\n    var _this = this;\n\n    var gObj = this.parent;\n    var selectableRowIndex = rowIndexes.slice();\n    var rowIndex = !this.isSingleSel() ? rowIndexes[0] : rowIndexes[rowIndexes.length - 1];\n    this.isMultiSelection = true;\n    var selectedRows = [];\n    var foreignKeyData = [];\n    var selectedMovableRow = this.getSelectedMovableRow(rowIndex);\n    var selectedFrozenRightRow = this.getSelectedFrozenRightRow(rowIndex);\n    var can = 'cancel';\n    var selectedData = [];\n\n    if (!this.isRowType() || this.isEditing()) {\n      return;\n    }\n\n    this.selectedDataUpdate(selectedData, foreignKeyData, selectedRows, rowIndexes, selectableRowIndex);\n    this.activeTarget();\n    var args = {\n      cancel: false,\n      rowIndexes: selectableRowIndex,\n      row: selectedRows,\n      rowIndex: rowIndex,\n      target: this.actualTarget,\n      prevRow: gObj.getRows()[this.prevRowIndex],\n      previousRowIndex: this.prevRowIndex,\n      isInteracted: this.isInteracted,\n      isCtrlPressed: this.isMultiCtrlRequest,\n      isShiftPressed: this.isMultiShiftRequest,\n      data: selectedData,\n      isHeaderCheckboxClicked: this.isHeaderCheckboxClicked,\n      foreignKeyData: foreignKeyData\n    };\n    args = this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n    this.parent.trigger(events.rowSelecting, this.fDataUpdate(args), function (args) {\n      if (!isNullOrUndefined(args) && args[can] === true) {\n        _this.disableInteracted();\n\n        return;\n      }\n\n      _this.clearRow();\n\n      _this.selectRowIndex(selectableRowIndex.slice(-1)[0]);\n\n      var selectRowFn = function (index) {\n        _this.updateRowSelection(gObj.getRowByIndex(index), index);\n\n        if (gObj.isFrozenGrid()) {\n          var rightEle = _this.parent.getFrozenMode() === literals.leftRight ? gObj.getFrozenRightRowByIndex(index) : undefined;\n\n          _this.selectMovableRow(gObj.getMovableRowByIndex(index), rightEle, index);\n        }\n\n        _this.updateRowProps(rowIndex);\n      };\n\n      if (!_this.isSingleSel()) {\n        for (var _i = 0, selectableRowIndex_1 = selectableRowIndex; _i < selectableRowIndex_1.length; _i++) {\n          var rowIdx = selectableRowIndex_1[_i];\n          selectRowFn(rowIdx);\n        }\n      } else {\n        selectRowFn(rowIndex);\n      }\n\n      args = {\n        rowIndexes: selectableRowIndex,\n        row: selectedRows,\n        rowIndex: rowIndex,\n        target: _this.actualTarget,\n        prevRow: gObj.getRows()[_this.prevRowIndex],\n        previousRowIndex: _this.prevRowIndex,\n        data: _this.getSelectedRecords(),\n        isInteracted: _this.isInteracted,\n        isHeaderCheckboxClicked: _this.isHeaderCheckboxClicked,\n        foreignKeyData: foreignKeyData\n      };\n      args = _this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n\n      if (_this.isRowSelected) {\n        _this.onActionComplete(args, events.rowSelected);\n      }\n\n      _this.isInteracted = false;\n    });\n  };\n  /**\n   * Select rows with existing row selection by passing row indexes.\n   *\n   * @param {number} rowIndexes - Specifies the row indexes.\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.addRowsToSelection = function (rowIndexes) {\n    var gObj = this.parent;\n    var can = 'cancel';\n    var target = this.target;\n    this.isMultiSelection = true;\n    var selectedRows = [];\n    var foreignKeyData = [];\n    var selectedData = [];\n    var indexes = gObj.getSelectedRowIndexes().concat(rowIndexes);\n    var selectedRow = !this.isSingleSel() ? gObj.getRowByIndex(rowIndexes[0]) : gObj.getRowByIndex(rowIndexes[rowIndexes.length - 1]);\n    var selectedMovableRow = !this.isSingleSel() ? this.getSelectedMovableRow(rowIndexes[0]) : this.getSelectedMovableRow(rowIndexes[rowIndexes.length - 1]);\n    var selectedFrozenRightRow = !this.isSingleSel() ? this.getSelectedFrozenRightRow(rowIndexes[0]) : this.getSelectedFrozenRightRow(rowIndexes[rowIndexes.length - 1]);\n\n    if ((!this.isRowType() || this.isEditing()) && !this.selectionSettings.checkboxOnly) {\n      return;\n    }\n\n    var args;\n    var checkboxColumn = this.parent.getColumns().filter(function (col) {\n      return col.type === 'checkbox';\n    });\n\n    if (this.isMultiCtrlRequest && !checkboxColumn.length) {\n      this.selectedDataUpdate(selectedData, foreignKeyData, selectedRows, indexes);\n    }\n\n    for (var _i = 0, rowIndexes_1 = rowIndexes; _i < rowIndexes_1.length; _i++) {\n      var rowIndex = rowIndexes_1[_i];\n      var rowObj = this.getRowObj(rowIndex);\n      var isUnSelected = this.selectedRowIndexes.indexOf(rowIndex) > -1;\n\n      if (this.isPartialSelection && rowObj && rowObj.isDataRow && !rowObj.isSelectable) {\n        continue;\n      }\n\n      this.selectRowIndex(rowIndex);\n\n      if (isUnSelected && ((checkboxColumn.length ? true : this.selectionSettings.enableToggle) || this.isMultiCtrlRequest)) {\n        this.isAddRowsToSelection = true;\n        this.rowDeselect(events.rowDeselecting, [rowIndex], [rowObj.data], [selectedRow], [rowObj.foreignKeyData], target);\n\n        if (this.isCancelDeSelect) {\n          return;\n        }\n\n        this.selectedRowIndexes.splice(this.selectedRowIndexes.indexOf(rowIndex), 1);\n        this.selectedRecords.splice(this.selectedRecords.indexOf(selectedRow), 1);\n        this.selectRowIndex(this.selectedRowIndexes.length ? this.selectedRowIndexes[this.selectedRowIndexes.length - 1] : -1);\n        selectedRow.removeAttribute('aria-selected');\n        this.addRemoveClassesForRow(selectedRow, false, null, 'e-selectionbackground', 'e-active');\n\n        if (selectedMovableRow) {\n          this.selectedRecords.splice(this.selectedRecords.indexOf(selectedMovableRow), 1);\n          selectedMovableRow.removeAttribute('aria-selected');\n          this.addRemoveClassesForRow(selectedMovableRow, false, null, 'e-selectionbackground', 'e-active');\n        }\n\n        if (selectedFrozenRightRow) {\n          this.selectedRecords.splice(this.selectedRecords.indexOf(selectedFrozenRightRow), 1);\n          selectedFrozenRightRow.removeAttribute('aria-selected');\n          this.addRemoveClassesForRow(selectedFrozenRightRow, false, null, 'e-selectionbackground', 'e-active');\n        }\n\n        this.rowDeselect(events.rowDeselected, [rowIndex], [rowObj.data], [selectedRow], [rowObj.foreignKeyData], target, [selectedMovableRow], undefined, [selectedFrozenRightRow]);\n        this.isInteracted = false;\n        this.isMultiSelection = false;\n        this.isAddRowsToSelection = false;\n        this.isHdrSelectAllClicked = false;\n      } else {\n        this.activeTarget();\n        args = {\n          cancel: false,\n          data: selectedData.length ? selectedData : rowObj.data,\n          rowIndex: rowIndex,\n          row: selectedRows.length ? selectedRows : selectedRow,\n          target: this.actualTarget,\n          prevRow: gObj.getRows()[this.prevRowIndex],\n          previousRowIndex: this.prevRowIndex,\n          isCtrlPressed: this.isMultiCtrlRequest,\n          isShiftPressed: this.isMultiShiftRequest,\n          foreignKeyData: foreignKeyData.length ? foreignKeyData : rowObj.foreignKeyData,\n          isInteracted: this.isInteracted,\n          isHeaderCheckboxClicked: this.isHeaderCheckboxClicked,\n          rowIndexes: indexes\n        };\n        args = this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n        this.parent.trigger(events.rowSelecting, this.fDataUpdate(args));\n\n        if (!isNullOrUndefined(args) && args[can] === true) {\n          this.disableInteracted();\n          return;\n        }\n\n        if (this.isSingleSel()) {\n          this.clearRow();\n        }\n\n        this.updateRowSelection(selectedRow, rowIndex);\n        this.selectMovableRow(selectedMovableRow, selectedFrozenRightRow, rowIndex);\n      }\n\n      if (!isUnSelected) {\n        args = {\n          data: selectedData.length ? selectedData : rowObj.data,\n          rowIndex: rowIndex,\n          row: selectedRows.length ? selectedRows : selectedRow,\n          target: this.actualTarget,\n          prevRow: gObj.getRows()[this.prevRowIndex],\n          previousRowIndex: this.prevRowIndex,\n          foreignKeyData: foreignKeyData.length ? foreignKeyData : rowObj.foreignKeyData,\n          isInteracted: this.isInteracted,\n          isHeaderCheckboxClicked: this.isHeaderCheckboxClicked,\n          rowIndexes: indexes\n        };\n        args = this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n        this.onActionComplete(args, events.rowSelected);\n      }\n\n      this.isInteracted = false;\n      this.updateRowProps(rowIndex);\n\n      if (this.isSingleSel()) {\n        break;\n      }\n    }\n  };\n\n  Selection.prototype.getCollectionFromIndexes = function (startIndex, endIndex) {\n    var indexes = []; // eslint-disable-next-line prefer-const\n\n    var _a = startIndex <= endIndex ? {\n      i: startIndex,\n      max: endIndex\n    } : {\n      i: endIndex,\n      max: startIndex\n    },\n        i = _a.i,\n        max = _a.max;\n\n    for (; i <= max; i++) {\n      indexes.push(i);\n    }\n\n    if (startIndex > endIndex) {\n      indexes.reverse();\n    }\n\n    return indexes;\n  };\n\n  Selection.prototype.clearRow = function () {\n    this.clearRowCheck = true;\n    this.clearRowSelection();\n  };\n\n  Selection.prototype.clearRowCallBack = function () {\n    if (this.isCancelDeSelect && this.parent.checkAllRows !== 'Check') {\n      return;\n    }\n\n    this.selectedRowIndexes = [];\n    this.selectedRecords = [];\n    this.selectRowIndex(-1);\n\n    if (this.isSingleSel() && this.parent.isPersistSelection) {\n      this.selectedRowState = {};\n    }\n  };\n\n  Selection.prototype.clearSelectedRow = function (index) {\n    if (this.toggle) {\n      var selectedEle = this.parent.getRowByIndex(index);\n\n      if (!this.disableUI) {\n        selectedEle.removeAttribute('aria-selected');\n        this.addRemoveClassesForRow(selectedEle, false, true, 'e-selectionbackground', 'e-active');\n      }\n\n      this.removed = true;\n      this.updatePersistCollection(selectedEle, false);\n      this.updateCheckBoxes(selectedEle);\n      this.selectedRowIndexes.splice(this.selectedRowIndexes.indexOf(index), 1);\n      this.selectedRecords.splice(this.selectedRecords.indexOf(this.parent.getRowByIndex(index)), 1);\n    }\n  };\n\n  Selection.prototype.updateRowProps = function (startIndex) {\n    this.prevRowIndex = startIndex;\n    this.isRowSelected = this.selectedRowIndexes.length && true;\n  };\n\n  Selection.prototype.updatePersistCollection = function (selectedRow, chkState) {\n    var _this = this;\n\n    if ((this.parent.isPersistSelection || this.parent.selectionSettings.persistSelection && this.parent.getPrimaryKeyFieldNames().length > 0) && !isNullOrUndefined(selectedRow)) {\n      if (!this.parent.isPersistSelection) {\n        this.ensureCheckboxFieldSelection();\n      }\n\n      var rowObj = this.getRowObj(selectedRow);\n      var pKey_1 = rowObj.data ? rowObj.data[this.primaryKey] : null;\n\n      if (pKey_1 === null) {\n        return;\n      }\n\n      rowObj.isSelected = chkState;\n\n      if (chkState && !this.isPartialSelection || this.isPartialSelection && rowObj.isSelectable && rowObj.isSelected) {\n        this.selectedRowState[pKey_1] = chkState;\n\n        if (!this.persistSelectedData.some(function (data) {\n          return data[_this.primaryKey] === pKey_1;\n        })) {\n          this.persistSelectedData.push(rowObj.data);\n        }\n      } else {\n        this.updatePersistDelete(pKey_1);\n      }\n    }\n  };\n\n  Selection.prototype.updatePersistDelete = function (pKey, isPartialSelection) {\n    var _this = this;\n\n    delete this.selectedRowState[pKey];\n    var index;\n    var isPresent = this.persistSelectedData.some(function (data, i) {\n      index = i;\n      return data[_this.primaryKey] === pKey;\n    });\n\n    if (isPresent) {\n      this.persistSelectedData.splice(index, 1);\n\n      if (isPartialSelection) {\n        this.parent.partialSelectedRecords.splice(index, 1);\n      }\n    }\n  };\n\n  Selection.prototype.updateCheckBoxes = function (row, chkState, rowIndex) {\n    if (!isNullOrUndefined(row)) {\n      var chkBox = row.querySelector('.e-checkselect');\n\n      if (!isNullOrUndefined(chkBox)) {\n        removeAddCboxClasses(chkBox.nextElementSibling, chkState);\n        setChecked(chkBox, chkState);\n\n        if (isNullOrUndefined(this.checkedTarget) || !isNullOrUndefined(this.checkedTarget) && !this.checkedTarget.classList.contains('e-checkselectall')) {\n          this.setCheckAllState(rowIndex);\n        }\n      }\n    }\n  };\n\n  Selection.prototype.updateRowSelection = function (selectedRow, startIndex) {\n    if (!selectedRow) {\n      return;\n    }\n\n    this.selectedRowIndexes.push(startIndex);\n    var len = this.selectedRowIndexes.length;\n\n    if (this.parent.isFrozenGrid() && len > 1) {\n      if (this.selectedRowIndexes[len - 2] === this.selectedRowIndexes[len - 1]) {\n        this.selectedRowIndexes.pop();\n      }\n    }\n\n    this.selectedRecords.push(selectedRow);\n    selectedRow.setAttribute('aria-selected', 'true');\n    this.updatePersistCollection(selectedRow, true);\n    this.updateCheckBoxes(selectedRow, true);\n    this.addRemoveClassesForRow(selectedRow, true, null, 'e-selectionbackground', 'e-active');\n\n    if (!this.preventFocus) {\n      var target = this.focus.getPrevIndexes().cellIndex ? selectedRow.cells[this.focus.getPrevIndexes().cellIndex] : selectedRow.querySelector('.e-selectionbackground:not(.e-hide):not(.e-detailrowcollapse):not(.e-detailrowexpand)');\n\n      if (this.parent.contextMenuModule && this.mouseButton === 2) {\n        target = this.parent.contextMenuModule.cell;\n      }\n\n      if (!target) {\n        return;\n      }\n\n      this.focus.onClick({\n        target: target\n      }, true);\n    }\n  };\n  /**\n   * Deselects the currently selected rows and cells.\n   *\n   * @returns {void}\n   */\n\n\n  Selection.prototype.clearSelection = function () {\n    this.checkSelectAllClicked = true;\n\n    if (this.selectionSettings.persistSelection && this.persistSelectedData.length) {\n      this.deSelectedData = iterateExtend(this.persistSelectedData);\n    }\n\n    if (!this.parent.isPersistSelection || this.parent.isPersistSelection && !this.parent.isEdit || !isNullOrUndefined(this.checkedTarget) && this.checkedTarget.classList.contains('e-checkselectall')) {\n      var span = this.parent.element.querySelector('.e-gridpopup').querySelector('span');\n\n      if (span.classList.contains('e-rowselect')) {\n        span.classList.remove('e-spanclicked');\n      }\n\n      if (this.parent.isPersistSelection) {\n        this.persistSelectedData = [];\n        this.selectedRowState = {};\n      }\n\n      this.clearRowSelection();\n      this.clearCellSelection();\n      this.clearColumnSelection();\n      this.prevRowIndex = undefined;\n      this.prevCIdxs = undefined;\n      this.prevECIdxs = undefined;\n      this.enableSelectMultiTouch = false;\n      this.isInteracted = false;\n      this.checkSelectAllClicked = false;\n      this.isHdrSelectAllClicked = false;\n    }\n  };\n  /**\n   * Deselects the currently selected rows.\n   *\n   * @returns {void}\n   */\n\n\n  Selection.prototype.clearRowSelection = function () {\n    var _this = this;\n\n    if (this.isRowSelected) {\n      var gObj = this.parent;\n      var rows_1 = this.parent.getDataRows();\n      var data_1 = [];\n      var row_1 = [];\n      var mRow_1 = [];\n      var fRightRow_1 = [];\n      var rowIndex_1 = [];\n      var foreignKeyData_1 = [];\n      var target_1 = this.target;\n\n      for (var i = 0, len = this.selectedRowIndexes.length; i < len; i++) {\n        var currentRow = this.parent.editSettings.mode === 'Batch' ? this.parent.getRows()[this.selectedRowIndexes[i]] : this.parent.getDataRows()[this.selectedRowIndexes[i]];\n        var rowObj = this.getRowObj(currentRow);\n\n        if (rowObj) {\n          data_1.push(rowObj.data);\n          row_1.push(currentRow);\n          rowIndex_1.push(this.selectedRowIndexes[i]);\n          foreignKeyData_1.push(rowObj.foreignKeyData);\n        }\n\n        if (gObj.isFrozenGrid()) {\n          var mRows = gObj.getMovableRows();\n\n          if (mRows && mRows.length) {\n            mRow_1.push(mRows[this.selectedRowIndexes[i]]);\n          }\n\n          if (gObj.getFrozenMode() === literals.leftRight) {\n            var frRows = gObj.getFrozenRightRows();\n\n            if (frRows && frRows.length) {\n              fRightRow_1.push(frRows[this.selectedRowIndexes[i]]);\n            }\n          }\n        }\n      }\n\n      if (this.selectionSettings.persistSelection && this.selectionSettings.checkboxMode !== 'ResetOnRowClick') {\n        this.isRowClicked = this.checkSelectAllClicked ? true : false;\n      }\n\n      this.rowDeselect(events.rowDeselecting, rowIndex_1, data_1, row_1, foreignKeyData_1, target_1, mRow_1, function () {\n        if (_this.isCancelDeSelect && (_this.isRowClicked || _this.checkSelectAllClicked || _this.isInteracted && !_this.parent.isPersistSelection)) {\n          if (_this.parent.isPersistSelection) {\n            if (_this.getCheckAllStatus(_this.parent.element.querySelector('.e-checkselectall')) === 'Intermediate') {\n              for (var i = 0; i < _this.selectedRecords.length; i++) {\n                _this.updatePersistCollection(_this.selectedRecords[i], true);\n              }\n            } else {\n              _this.parent.checkAllRows = 'Check';\n\n              _this.updatePersistSelectedData(true);\n            }\n          }\n\n          if (_this.clearRowCheck) {\n            _this.clearRowCallBack();\n\n            _this.clearRowCheck = false;\n\n            if (_this.selectRowCheck) {\n              _this.selectRowCallBack();\n\n              _this.selectRowCheck = false;\n            }\n          }\n\n          return;\n        }\n\n        var element = [].slice.call(rows_1.filter(function (record) {\n          return record.hasAttribute('aria-selected');\n        }));\n\n        for (var j = 0; j < element.length; j++) {\n          if (!_this.disableUI) {\n            element[j].removeAttribute('aria-selected');\n\n            _this.addRemoveClassesForRow(element[j], false, true, 'e-selectionbackground', 'e-active');\n          } // tslint:disable-next-line:align\n\n\n          if (!_this.isPrevRowSelection) {\n            _this.updatePersistCollection(element[j], false);\n          }\n\n          _this.updateCheckBoxes(element[j]);\n        }\n\n        for (var i = 0, len = _this.selectedRowIndexes.length; i < len; i++) {\n          var movableRow = _this.getSelectedMovableRow(_this.selectedRowIndexes[i]);\n\n          if (movableRow) {\n            if (!_this.disableUI) {\n              movableRow.removeAttribute('aria-selected');\n\n              _this.addRemoveClassesForRow(movableRow, false, true, 'e-selectionbackground', 'e-active');\n            }\n\n            _this.updateCheckBoxes(movableRow);\n\n            if (!_this.isPrevRowSelection) {\n              _this.updatePersistCollection(movableRow, false);\n            }\n          }\n\n          var frRow = _this.getSelectedFrozenRightRow(_this.selectedRowIndexes[i]);\n\n          if (frRow) {\n            if (!_this.disableUI) {\n              frRow.removeAttribute('aria-selected');\n\n              _this.addRemoveClassesForRow(frRow, false, true, 'e-selectionbackground', 'e-active');\n            }\n\n            _this.updateCheckBoxes(frRow);\n\n            if (!_this.isPrevRowSelection) {\n              _this.updatePersistCollection(frRow, false);\n            }\n          }\n        }\n\n        _this.selectedRowIndexes = [];\n        _this.selectedRecords = [];\n        _this.isRowSelected = false;\n\n        _this.selectRowIndex(-1);\n\n        _this.isPrevRowSelection = false;\n\n        _this.rowDeselect(events.rowDeselected, rowIndex_1, data_1, row_1, foreignKeyData_1, target_1, mRow_1, undefined, fRightRow_1);\n\n        if (_this.clearRowCheck) {\n          _this.clearRowCallBack();\n\n          _this.clearRowCheck = false;\n\n          if (_this.selectRowCheck) {\n            _this.selectRowCallBack();\n\n            _this.selectRowCheck = false;\n          }\n        }\n      }, fRightRow_1);\n    } else {\n      if (this.clearRowCheck) {\n        this.clearRowCallBack();\n        this.clearRowCheck = false;\n\n        if (this.selectRowCheck) {\n          this.selectRowCallBack();\n          this.selectRowCheck = false;\n        }\n      }\n    }\n  };\n\n  Selection.prototype.rowDeselect = function (type, rowIndex, data, row, foreignKeyData, target, mRow, rowDeselectCallBack, frozenRightRow) {\n    var _this = this;\n\n    if (this.selectionSettings.persistSelection && (this.isRowClicked || this.checkSelectAllClicked || this.focus['activeKey'] && this.focus.currentInfo.element.classList.contains('e-gridchkbox') && this.focus['activeKey'] === 'space') || !this.selectionSettings.persistSelection) {\n      var cancl_1 = 'cancel';\n      var isSingleDeSel = rowIndex.length === 1 && this.deSelectedData.length === 1;\n      var rowDeselectObj = {\n        rowIndex: rowIndex[0],\n        data: this.selectionSettings.persistSelection && this.parent.checkAllRows === 'Uncheck' && !isSingleDeSel && this.selectionSettings.checkboxMode !== 'ResetOnRowClick' ? this.deSelectedData : data,\n        foreignKeyData: foreignKeyData,\n        cancel: false,\n        isInteracted: this.isInteracted,\n        isHeaderCheckboxClicked: this.isHeaderCheckboxClicked\n      };\n\n      if (type === 'rowDeselected') {\n        delete rowDeselectObj.cancel;\n      }\n\n      var rowInString = 'row';\n      var target_2 = 'target';\n      var rowidx = 'rowIndex';\n      var rowidxex = 'rowIndexes';\n      var dataTxt = 'data';\n      var foreignKey = 'foreignKeyData';\n      rowDeselectObj[rowInString] = row;\n      rowDeselectObj[target_2] = this.actualTarget;\n      var isHeaderCheckBxClick = this.actualTarget && !isNullOrUndefined(closest(this.actualTarget, 'thead'));\n\n      if (isHeaderCheckBxClick || rowIndex.length > 1) {\n        rowDeselectObj[rowidx] = rowIndex[0];\n        rowDeselectObj[rowidxex] = rowIndex;\n      } else if (rowIndex.length === 1) {\n        rowDeselectObj[dataTxt] = rowDeselectObj[dataTxt][0];\n        rowDeselectObj[rowInString] = rowDeselectObj[rowInString][0];\n        rowDeselectObj[foreignKey] = rowDeselectObj[foreignKey][0];\n\n        if (this.isAddRowsToSelection) {\n          rowDeselectObj[rowidxex] = rowIndex;\n        }\n      }\n\n      this.parent.trigger(type, this.parent.isFrozenGrid() ? __assign({}, rowDeselectObj, {\n        mRow: mRow,\n        frozenRightRow: frozenRightRow\n      }) : rowDeselectObj, function (args) {\n        _this.isCancelDeSelect = args[cancl_1];\n\n        if (!_this.isCancelDeSelect || !_this.isRowClicked && !_this.isInteracted && !_this.checkSelectAllClicked) {\n          _this.updatePersistCollection(row[0], false);\n\n          _this.updateCheckBoxes(row[0], undefined, rowIndex[0]);\n\n          if (mRow) {\n            _this.updateCheckBoxes(mRow[0], undefined, rowIndex[0]);\n          }\n\n          if (frozenRightRow) {\n            _this.updateCheckBoxes(frozenRightRow[0], undefined, rowIndex[0]);\n          }\n        }\n\n        if (rowDeselectCallBack !== undefined) {\n          rowDeselectCallBack();\n        }\n      });\n    } else if (this.selectionSettings.persistSelection && !this.isInteracted) {\n      if (rowDeselectCallBack !== undefined) {\n        rowDeselectCallBack();\n      }\n    }\n  };\n\n  Selection.prototype.getRowObj = function (row) {\n    if (row === void 0) {\n      row = this.currentIndex;\n    }\n\n    if (isNullOrUndefined(row)) {\n      return {};\n    }\n\n    if (typeof row === 'number') {\n      row = this.parent.getRowByIndex(row);\n    }\n\n    if (row) {\n      return this.parent.getRowObjectFromUID(row.getAttribute('data-uid')) || {};\n    }\n\n    return {};\n  };\n\n  Selection.prototype.getSelectedMovableCell = function (cellIndex) {\n    var gObj = this.parent;\n    var col = gObj.getColumnByIndex(cellIndex.cellIndex);\n    var frzCols = gObj.isFrozenGrid();\n\n    if (frzCols) {\n      if (col.getFreezeTableName() === 'movable') {\n        return gObj.getMovableCellFromIndex(cellIndex.rowIndex, this.getColIndex(cellIndex.rowIndex, cellIndex.cellIndex));\n      }\n\n      return null;\n    }\n\n    return null;\n  };\n  /**\n   * Selects a cell by the given index.\n   *\n   * @param  {IIndex} cellIndex - Defines the row and column indexes.\n   * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n   * @returns {void}\n   */\n\n\n  Selection.prototype.selectCell = function (cellIndex, isToggle) {\n    if (!this.isCellType()) {\n      return;\n    }\n\n    var gObj = this.parent;\n    var selectedCell = this.getSelectedMovableCell(cellIndex);\n    var args;\n\n    if (!selectedCell) {\n      selectedCell = gObj.getCellFromIndex(cellIndex.rowIndex, this.getColIndex(cellIndex.rowIndex, cellIndex.cellIndex));\n    }\n\n    this.currentIndex = cellIndex.rowIndex;\n    var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n\n    if (!this.isCellType() || !selectedCell || this.isEditing()) {\n      return;\n    }\n\n    var isCellSelected = selectedCell.classList.contains('e-cellselectionbackground');\n    isToggle = !isToggle ? isToggle : !isUndefined(this.prevCIdxs) && cellIndex.rowIndex === this.prevCIdxs.rowIndex && cellIndex.cellIndex === this.prevCIdxs.cellIndex && isCellSelected;\n\n    if (!isToggle) {\n      args = {\n        data: selectedData,\n        cellIndex: cellIndex,\n        isCtrlPressed: this.isMultiCtrlRequest,\n        isShiftPressed: this.isMultiShiftRequest,\n        previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined,\n        cancel: false\n      };\n      var currentCell = 'currentCell';\n      args[currentCell] = selectedCell;\n      var previousRowCellIndex = 'previousRowCellIndex';\n      args[previousRowCellIndex] = this.prevECIdxs;\n      this.parent.trigger(events.cellSelecting, this.fDataUpdate(args), this.successCallBack(args, isToggle, cellIndex, selectedCell, selectedData));\n      this.cellselected = true;\n    } else {\n      this.successCallBack(args, isToggle, cellIndex, selectedCell, selectedData)(args);\n    }\n  };\n\n  Selection.prototype.successCallBack = function (cellSelectingArgs, isToggle, cellIndex, selectedCell, selectedData) {\n    var _this = this;\n\n    return function (cellSelectingArgs) {\n      var cncl = 'cancel';\n      var currentCell = 'currentCell';\n\n      if (!isNullOrUndefined(cellSelectingArgs) && cellSelectingArgs[cncl] === true) {\n        return;\n      }\n\n      if (!isToggle) {\n        cellSelectingArgs[currentCell] = cellSelectingArgs[currentCell] ? cellSelectingArgs[currentCell] : selectedCell;\n      }\n\n      _this.clearCell();\n\n      if (!isToggle) {\n        _this.updateCellSelection(selectedCell, cellIndex.rowIndex, cellIndex.cellIndex);\n      }\n\n      if (!isToggle) {\n        var args = {\n          data: selectedData,\n          cellIndex: cellIndex,\n          currentCell: selectedCell,\n          selectedRowCellIndex: _this.selectedRowCellIndexes,\n          previousRowCell: _this.prevECIdxs ? _this.getCellIndex(_this.prevECIdxs.rowIndex, _this.prevECIdxs.cellIndex) : undefined\n        };\n        var previousRowCellIndex = 'previousRowCellIndex';\n        args[previousRowCellIndex] = _this.prevECIdxs;\n\n        _this.updateCellProps(cellIndex, cellIndex);\n\n        _this.onActionComplete(args, events.cellSelected);\n      }\n    };\n  };\n\n  Selection.prototype.getCellIndex = function (rIdx, cIdx) {\n    return this.parent.getFrozenColumns() ? cIdx >= this.parent.getFrozenColumns() ? this.parent.getMovableCellFromIndex(rIdx, cIdx) : this.parent.getCellFromIndex(rIdx, cIdx) : this.parent.getCellFromIndex(rIdx, cIdx);\n  };\n  /**\n   * Selects a range of cells from start and end indexes.\n   *\n   * @param  {IIndex} startIndex - Specifies the row and column's start index.\n   * @param  {IIndex} endIndex - Specifies the row and column's end index.\n   * @returns {void}\n   */\n\n\n  Selection.prototype.selectCellsByRange = function (startIndex, endIndex) {\n    var _this = this;\n\n    if (!this.isCellType()) {\n      return;\n    }\n\n    var gObj = this.parent;\n    var selectedCell = this.getSelectedMovableCell(startIndex);\n    var frzCols = gObj.getFrozenColumns();\n\n    if (!selectedCell) {\n      selectedCell = gObj.getCellFromIndex(startIndex.rowIndex, startIndex.cellIndex);\n    }\n\n    var min;\n    var max;\n    var stIndex = startIndex;\n    var edIndex = endIndex = endIndex ? endIndex : startIndex;\n    var cellIndexes;\n    this.currentIndex = startIndex.rowIndex;\n    var cncl = 'cancel';\n    var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n\n    if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n      return;\n    }\n\n    var args = {\n      data: selectedData,\n      cellIndex: startIndex,\n      currentCell: selectedCell,\n      isCtrlPressed: this.isMultiCtrlRequest,\n      isShiftPressed: this.isMultiShiftRequest,\n      previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n    };\n    var previousRowCellIndex = 'previousRowCellIndex';\n    args[previousRowCellIndex] = this.prevECIdxs;\n    this.parent.trigger(events.cellSelecting, this.fDataUpdate(args), function (cellSelectingArgs) {\n      if (!isNullOrUndefined(cellSelectingArgs) && cellSelectingArgs[cncl] === true) {\n        return;\n      }\n\n      _this.clearCell();\n\n      if (startIndex.rowIndex > endIndex.rowIndex) {\n        var temp = startIndex;\n        startIndex = endIndex;\n        endIndex = temp;\n      }\n\n      for (var i = startIndex.rowIndex; i <= endIndex.rowIndex; i++) {\n        if (_this.selectionSettings.cellSelectionMode.indexOf('Box') < 0) {\n          min = i === startIndex.rowIndex ? startIndex.cellIndex : 0;\n          max = i === endIndex.rowIndex ? endIndex.cellIndex : _this.getLastColIndex(i);\n        } else {\n          min = startIndex.cellIndex;\n          max = endIndex.cellIndex;\n        }\n\n        cellIndexes = [];\n\n        for (var j = min < max ? min : max, len = min > max ? min : max; j <= len; j++) {\n          if (frzCols) {\n            if (j < frzCols) {\n              selectedCell = gObj.getCellFromIndex(i, j);\n            } else {\n              selectedCell = gObj.getMovableCellFromIndex(i, j);\n            }\n          } else {\n            selectedCell = gObj.getCellFromIndex(i, j);\n          }\n\n          if (!selectedCell) {\n            continue;\n          }\n\n          cellIndexes.push(j);\n\n          _this.updateCellSelection(selectedCell);\n\n          _this.addAttribute(selectedCell);\n        }\n\n        _this.selectedRowCellIndexes.push({\n          rowIndex: i,\n          cellIndexes: cellIndexes\n        });\n      }\n\n      var cellSelectedArgs = {\n        data: selectedData,\n        cellIndex: edIndex,\n        currentCell: gObj.getCellFromIndex(edIndex.rowIndex, edIndex.cellIndex),\n        selectedRowCellIndex: _this.selectedRowCellIndexes,\n        previousRowCell: _this.prevECIdxs ? _this.getCellIndex(_this.prevECIdxs.rowIndex, _this.prevECIdxs.cellIndex) : undefined\n      };\n      var previousRowCellIndex = 'previousRowCellIndex';\n      cellSelectedArgs[previousRowCellIndex] = _this.prevECIdxs;\n\n      if (!_this.isDragged) {\n        _this.onActionComplete(cellSelectedArgs, events.cellSelected);\n\n        _this.cellselected = true;\n      }\n\n      _this.updateCellProps(stIndex, edIndex);\n    });\n  };\n  /**\n   * Selects a collection of cells by row and column indexes.\n   *\n   * @param  {ISelectedCell[]} rowCellIndexes - Specifies the row and column indexes.\n   * @returns {void}\n   */\n\n\n  Selection.prototype.selectCells = function (rowCellIndexes) {\n    if (!this.isCellType()) {\n      return;\n    }\n\n    var gObj = this.parent;\n    var selectedCell = this.getSelectedMovableCell(rowCellIndexes[0]);\n    var frzCols = gObj.getFrozenColumns();\n\n    if (!selectedCell) {\n      selectedCell = gObj.getCellFromIndex(rowCellIndexes[0].rowIndex, rowCellIndexes[0].cellIndexes[0]);\n    }\n\n    this.currentIndex = rowCellIndexes[0].rowIndex;\n    var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n\n    if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n      return;\n    }\n\n    var cellSelectArgs = {\n      data: selectedData,\n      cellIndex: rowCellIndexes[0].cellIndexes[0],\n      currentCell: selectedCell,\n      isCtrlPressed: this.isMultiCtrlRequest,\n      isShiftPressed: this.isMultiShiftRequest,\n      previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n    };\n    var previousRowCellIndex = 'previousRowCellIndex';\n    cellSelectArgs[previousRowCellIndex] = this.prevECIdxs;\n    this.onActionBegin(cellSelectArgs, events.cellSelecting);\n\n    for (var i = 0, len = rowCellIndexes.length; i < len; i++) {\n      for (var j = 0, cellLen = rowCellIndexes[i].cellIndexes.length; j < cellLen; j++) {\n        if (frzCols) {\n          if (rowCellIndexes[i].cellIndexes[j] < frzCols) {\n            selectedCell = gObj.getCellFromIndex(rowCellIndexes[i].rowIndex, rowCellIndexes[i].cellIndexes[j]);\n          } else {\n            selectedCell = gObj.getMovableCellFromIndex(rowCellIndexes[i].rowIndex, rowCellIndexes[i].cellIndexes[j]);\n          }\n        } else {\n          selectedCell = gObj.getCellFromIndex(rowCellIndexes[i].rowIndex, rowCellIndexes[i].cellIndexes[j]);\n        }\n\n        if (!selectedCell) {\n          continue;\n        }\n\n        this.updateCellSelection(selectedCell);\n        this.addAttribute(selectedCell);\n        this.addRowCellIndex({\n          rowIndex: rowCellIndexes[i].rowIndex,\n          cellIndex: rowCellIndexes[i].cellIndexes[j]\n        });\n      }\n    }\n\n    this.updateCellProps({\n      rowIndex: rowCellIndexes[0].rowIndex,\n      cellIndex: rowCellIndexes[0].cellIndexes[0]\n    }, {\n      rowIndex: rowCellIndexes[0].rowIndex,\n      cellIndex: rowCellIndexes[0].cellIndexes[0]\n    });\n    var cellSelectedArgs = {\n      data: selectedData,\n      cellIndex: rowCellIndexes[0].cellIndexes[0],\n      currentCell: selectedCell,\n      selectedRowCellIndex: this.selectedRowCellIndexes,\n      previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n    };\n    var prvRowCellIndex = 'previousRowCellIndex';\n    cellSelectedArgs[prvRowCellIndex] = this.prevECIdxs;\n    this.onActionComplete(cellSelectedArgs, events.cellSelected);\n  };\n  /**\n   * Select cells with existing cell selection by passing row and column index.\n   *\n   * @param {IIndex} cellIndexes - Defines the collection of row and column index.\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.addCellsToSelection = function (cellIndexes) {\n    if (!this.isCellType()) {\n      return;\n    }\n\n    var gObj = this.parent;\n    var selectedCell;\n    var index;\n    this.currentIndex = cellIndexes[0].rowIndex;\n    var cncl = 'cancel';\n    var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n    var left = gObj.getFrozenLeftCount();\n    var movable = gObj.getMovableColumnsCount();\n\n    if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n      return;\n    }\n\n    this.hideAutoFill();\n    var col = gObj.getColumnByIndex(cellIndexes[0].cellIndex);\n    var rowObj;\n    gridActionHandler(this.parent, function (tableName, rows) {\n      rowObj = rows[cellIndexes[0].rowIndex];\n    }, [!col.getFreezeTableName() || col.getFreezeTableName() === literals.frozenLeft ? gObj.getRowsObject() : [], col.getFreezeTableName() === 'movable' ? gObj.getMovableRowsObject() : [], col.getFreezeTableName() === literals.frozenRight ? gObj.getFrozenRightRowsObject() : []]);\n\n    if (gObj.groupSettings.columns.length > 0) {\n      rowObj = gObj.getRowObjectFromUID(this.target.parentElement.getAttribute('data-uid'));\n    }\n\n    var foreignKeyData = [];\n\n    for (var _i = 0, cellIndexes_1 = cellIndexes; _i < cellIndexes_1.length; _i++) {\n      var cellIndex = cellIndexes_1[_i];\n\n      for (var i = 0, len = this.selectedRowCellIndexes.length; i < len; i++) {\n        if (this.selectedRowCellIndexes[i].rowIndex === cellIndex.rowIndex) {\n          index = i;\n          break;\n        }\n      }\n\n      selectedCell = this.getSelectedMovableCell(cellIndex);\n\n      if (!selectedCell) {\n        selectedCell = gObj.getCellFromIndex(cellIndex.rowIndex, this.getColIndex(cellIndex.rowIndex, cellIndex.cellIndex));\n      }\n\n      var idx = col.getFreezeTableName() === 'movable' ? cellIndex.cellIndex - left : col.getFreezeTableName() === literals.frozenRight ? cellIndex.cellIndex - (left + movable) : cellIndex.cellIndex;\n\n      if (gObj.groupSettings.columns.length > 0) {\n        foreignKeyData.push(rowObj.cells[idx + gObj.groupSettings.columns.length].foreignKeyData);\n      } else {\n        foreignKeyData.push(rowObj.cells[idx].foreignKeyData);\n      }\n\n      var args = {\n        cancel: false,\n        data: selectedData,\n        cellIndex: cellIndexes[0],\n        isShiftPressed: this.isMultiShiftRequest,\n        currentCell: selectedCell,\n        isCtrlPressed: this.isMultiCtrlRequest,\n        previousRowCell: this.prevECIdxs ? gObj.getCellFromIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n      };\n      var prvRowCellIndex = 'previousRowCellIndex';\n      args[prvRowCellIndex] = this.prevECIdxs;\n      var isUnSelected = index > -1;\n\n      if (isUnSelected) {\n        var selectedCellIdx = this.selectedRowCellIndexes[index].cellIndexes;\n\n        if (selectedCellIdx.indexOf(cellIndex.cellIndex) > -1) {\n          this.cellDeselect(events.cellDeselecting, [{\n            rowIndex: cellIndex.rowIndex,\n            cellIndexes: [cellIndex.cellIndex]\n          }], selectedData, [selectedCell], foreignKeyData);\n          selectedCellIdx.splice(selectedCellIdx.indexOf(cellIndex.cellIndex), 1);\n\n          if (selectedCellIdx.length === 0) {\n            this.selectedRowCellIndexes.splice(index, 1);\n          }\n\n          selectedCell.classList.remove('e-cellselectionbackground');\n          selectedCell.removeAttribute('aria-selected');\n          this.cellDeselect(events.cellDeselected, [{\n            rowIndex: cellIndex.rowIndex,\n            cellIndexes: [cellIndex.cellIndex]\n          }], selectedData, [selectedCell], foreignKeyData);\n        } else {\n          isUnSelected = false;\n          this.onActionBegin(args, events.cellSelecting);\n          this.addRowCellIndex({\n            rowIndex: cellIndex.rowIndex,\n            cellIndex: cellIndex.cellIndex\n          });\n          this.updateCellSelection(selectedCell);\n          this.addAttribute(selectedCell);\n        }\n      } else {\n        this.onActionBegin(args, events.cellSelecting);\n\n        if (!isNullOrUndefined(args) && args[cncl] === true) {\n          return;\n        }\n\n        this.updateCellSelection(selectedCell, cellIndex.rowIndex, cellIndex.cellIndex);\n      }\n\n      if (!isUnSelected) {\n        var cellSelectedArgs = {\n          data: selectedData,\n          cellIndex: cellIndexes[0],\n          currentCell: selectedCell,\n          previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined,\n          selectedRowCellIndex: this.selectedRowCellIndexes\n        };\n        cellSelectedArgs[prvRowCellIndex] = this.prevECIdxs;\n        this.onActionComplete(cellSelectedArgs, events.cellSelected);\n        this.cellselected = true;\n      }\n\n      this.updateCellProps(cellIndex, cellIndex);\n    }\n  };\n\n  Selection.prototype.getColIndex = function (rowIndex, index) {\n    var frzCols = this.parent.isFrozenGrid();\n    var col = this.parent.getColumnByIndex(index);\n    var cells = getCellsByTableName(this.parent, col, rowIndex);\n\n    if (cells) {\n      for (var m = 0; m < cells.length; m++) {\n        var colIndex = parseInt(cells[m].getAttribute(literals.ariaColIndex), 10);\n\n        if (colIndex === index) {\n          if (frzCols) {\n            if (col.getFreezeTableName() === 'movable') {\n              m += this.parent.getFrozenLeftCount();\n            } else if (col.getFreezeTableName() === literals.frozenRight) {\n              m += this.parent.getFrozenLeftColumnsCount() + this.parent.getMovableColumnsCount();\n            }\n          }\n\n          return m;\n        }\n      }\n    }\n\n    return -1;\n  };\n\n  Selection.prototype.getLastColIndex = function (rowIndex) {\n    var cells = this.parent.getFrozenColumns() ? this.parent.getMovableDataRows()[rowIndex].querySelectorAll('td.e-rowcell') : this.parent.getDataRows()[rowIndex].querySelectorAll('td.e-rowcell');\n    return parseInt(cells[cells.length - 1].getAttribute(literals.ariaColIndex), 10);\n  };\n\n  Selection.prototype.clearCell = function () {\n    this.clearCellSelection();\n  };\n\n  Selection.prototype.cellDeselect = function (type, cellIndexes, data, cells, foreignKeyData) {\n    var cancl = 'cancel';\n\n    if (cells[0] && cells[0].classList.contains(literals.gridChkBox)) {\n      this.updateCheckBoxes(closest(cells[0], 'tr'));\n    }\n\n    var args = {\n      cells: cells,\n      data: data,\n      cellIndexes: cellIndexes,\n      foreignKeyData: foreignKeyData,\n      cancel: false\n    };\n    this.parent.trigger(type, args);\n    this.isPreventCellSelect = args[cancl];\n  };\n\n  Selection.prototype.updateCellSelection = function (selectedCell, rowIndex, cellIndex) {\n    if (!isNullOrUndefined(rowIndex)) {\n      this.addRowCellIndex({\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      });\n    }\n\n    selectedCell.classList.add('e-cellselectionbackground');\n\n    if (selectedCell.classList.contains(literals.gridChkBox)) {\n      this.updateCheckBoxes(closest(selectedCell, 'tr'), true);\n    }\n\n    this.addAttribute(selectedCell);\n  };\n\n  Selection.prototype.addAttribute = function (cell) {\n    this.target = cell;\n\n    if (!isNullOrUndefined(cell)) {\n      cell.setAttribute('aria-selected', 'true');\n\n      if (!this.preventFocus) {\n        this.focus.onClick({\n          target: cell\n        }, true);\n      }\n    }\n  };\n\n  Selection.prototype.updateCellProps = function (startIndex, endIndex) {\n    this.prevCIdxs = startIndex;\n    this.prevECIdxs = endIndex;\n    this.isCellSelected = this.selectedRowCellIndexes.length && true;\n  };\n\n  Selection.prototype.addRowCellIndex = function (rowCellIndex) {\n    var isRowAvail;\n    var index;\n\n    for (var i = 0, len = this.selectedRowCellIndexes.length; i < len; i++) {\n      if (this.selectedRowCellIndexes[i].rowIndex === rowCellIndex.rowIndex) {\n        isRowAvail = true;\n        index = i;\n        break;\n      }\n    }\n\n    if (isRowAvail) {\n      if (this.selectedRowCellIndexes[index].cellIndexes.indexOf(rowCellIndex.cellIndex) < 0) {\n        this.selectedRowCellIndexes[index].cellIndexes.push(rowCellIndex.cellIndex);\n      }\n    } else {\n      this.selectedRowCellIndexes.push({\n        rowIndex: rowCellIndex.rowIndex,\n        cellIndexes: [rowCellIndex.cellIndex]\n      });\n    }\n  };\n  /**\n   * Deselects the currently selected cells.\n   *\n   * @returns {void}\n   */\n\n\n  Selection.prototype.clearCellSelection = function () {\n    if (this.isCellSelected) {\n      var gObj = this.parent;\n      var selectedCells = this.getSelectedCellsElement();\n      var rowCell = this.selectedRowCellIndexes;\n      var data = [];\n      var cells = [];\n      var foreignKeyData = [];\n      var currentViewData = this.getCurrentBatchRecordChanges();\n      var frzCols = gObj.isFrozenGrid();\n      this.hideAutoFill();\n\n      for (var i = 0, len = rowCell.length; i < len; i++) {\n        data.push(currentViewData[rowCell[i].rowIndex]);\n        var rowObj = this.getRowObj(rowCell[i].rowIndex);\n\n        for (var j = 0, cLen = rowCell[i].cellIndexes.length; j < cLen; j++) {\n          if (frzCols) {\n            var col = gObj.getColumnByIndex(rowCell[i].cellIndexes[j]);\n            cells.push(getCellByColAndRowIndex(this.parent, col, rowCell[i].rowIndex, rowCell[i].cellIndexes[j]));\n          } else {\n            if (rowObj.cells) {\n              foreignKeyData.push(rowObj.cells[rowCell[i].cellIndexes[j]].foreignKeyData);\n            }\n\n            cells.push(gObj.getCellFromIndex(rowCell[i].rowIndex, rowCell[i].cellIndexes[j]));\n          }\n        }\n      }\n\n      this.cellDeselect(events.cellDeselecting, rowCell, data, cells, foreignKeyData);\n\n      if (this.isPreventCellSelect === true) {\n        return;\n      }\n\n      for (var i = 0, len = selectedCells.length; i < len; i++) {\n        selectedCells[i].classList.remove('e-cellselectionbackground');\n        selectedCells[i].removeAttribute('aria-selected');\n      }\n\n      if (this.bdrElement) {\n        this.showHideBorders('none');\n      }\n\n      this.selectedRowCellIndexes = [];\n      this.isCellSelected = false;\n\n      if (!this.isDragged && this.cellselected) {\n        this.cellDeselect(events.cellDeselected, rowCell, data, cells, foreignKeyData);\n      }\n    }\n  };\n\n  Selection.prototype.getSelectedCellsElement = function () {\n    var gObj = this.parent;\n    var rows = gObj.getDataRows();\n    var mRows;\n\n    if (gObj.isFrozenGrid()) {\n      mRows = gObj.getMovableDataRows();\n      rows = gObj.addMovableRows(rows, mRows);\n\n      if (gObj.getFrozenMode() === literals.leftRight) {\n        rows = gObj.addMovableRows(rows, gObj.getFrozenRightDataRows());\n      }\n    }\n\n    var cells = [];\n\n    for (var i = 0, len = rows.length; i < len; i++) {\n      cells = cells.concat([].slice.call(rows[i].getElementsByClassName('e-cellselectionbackground')));\n    }\n\n    return cells;\n  };\n\n  Selection.prototype.mouseMoveHandler = function (e) {\n    e.preventDefault();\n    var gBRect = this.parent.element.getBoundingClientRect();\n    var x1 = this.x;\n    var y1 = this.y;\n    var position = getPosition(e);\n    var x2 = position.x - gBRect.left;\n    var y2 = position.y - gBRect.top;\n    var tmp;\n    var target = closest(e.target, 'tr');\n    this.isDragged = true;\n\n    if (!this.isCellDrag) {\n      if (!target) {\n        target = closest(document.elementFromPoint(this.parent.element.offsetLeft + 2, e.clientY), 'tr');\n      }\n\n      if (x1 > x2) {\n        tmp = x2;\n        x2 = x1;\n        x1 = tmp;\n      }\n\n      if (y1 > y2) {\n        tmp = y2;\n        y2 = y1;\n        y1 = tmp;\n      }\n\n      this.element.style.left = x1 + 'px';\n      this.element.style.top = y1 + 'px';\n      this.element.style.width = x2 - x1 + 'px';\n      this.element.style.height = y2 - y1 + 'px';\n    }\n\n    if (target && !e.ctrlKey && !e.shiftKey) {\n      var rowIndex = parseInt(target.getAttribute(literals.ariaRowIndex), 10);\n\n      if (!this.isCellDrag) {\n        this.hideAutoFill();\n        this.selectRowsByRange(this.startDIndex, rowIndex);\n        this.isRowDragSelected = true;\n      } else {\n        var td = parentsUntil(e.target, literals.rowCell);\n\n        if (td) {\n          this.startAFCell = this.startCell;\n          this.endAFCell = parentsUntil(e.target, literals.rowCell);\n          this.selectLikeExcel(e, rowIndex, parseInt(td.getAttribute(literals.ariaColIndex), 10));\n        }\n      }\n    }\n  };\n\n  Selection.prototype.selectLikeExcel = function (e, rowIndex, cellIndex) {\n    if (!this.isAutoFillSel) {\n      this.clearCellSelection();\n      this.selectCellsByRange({\n        rowIndex: this.startDIndex,\n        cellIndex: this.startDCellIndex\n      }, {\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      });\n      this.drawBorders();\n    } else {\n      //Autofill\n      this.showAFBorders();\n      this.selectLikeAutoFill(e);\n    }\n  };\n\n  Selection.prototype.drawBorders = function () {\n    if (this.selectionSettings.cellSelectionMode === 'BoxWithBorder' && this.selectedRowCellIndexes.length && !this.parent.isEdit) {\n      this.parent.element.classList.add('e-enabledboxbdr');\n\n      if (!this.bdrElement) {\n        this.createBorders();\n      }\n\n      this.positionBorders();\n    } else {\n      this.showHideBorders('none');\n    }\n  };\n\n  Selection.prototype.isLastCell = function (cell) {\n    var cells = [].slice.call(cell.parentElement.querySelectorAll('.e-rowcell:not(.e-hide)'));\n    return cells[cells.length - 1] === cell;\n  };\n\n  Selection.prototype.isLastRow = function (cell) {\n    var rows = [].slice.call(closest(cell, literals.tbody).querySelectorAll('.e-row:not(.e-hiddenrow)'));\n    return cell.parentElement === rows[rows.length - 1];\n  };\n\n  Selection.prototype.isFirstRow = function (cell) {\n    var rows = [].slice.call(closest(cell, literals.tbody).querySelectorAll('.e-row:not(.e-hiddenrow)'));\n    return cell.parentElement === rows[0];\n  };\n\n  Selection.prototype.isFirstCell = function (cell) {\n    var cells = [].slice.call(cell.parentElement.querySelectorAll('.e-rowcell:not(.e-hide)'));\n    return cells[0] === cell;\n  };\n\n  Selection.prototype.setBorders = function (parentEle, border, bdrStr) {\n    var cells = [].slice.call(parentEle.getElementsByClassName('e-cellselectionbackground')).filter(function (ele) {\n      return ele.style.display === '';\n    });\n\n    if (cells.length) {\n      var isFrozen = this.parent.isFrozenGrid();\n      var start = cells[0];\n      var end = cells[cells.length - 1];\n      var stOff = start.getBoundingClientRect();\n      var endOff = end.getBoundingClientRect();\n      var parentOff = start.offsetParent.getBoundingClientRect();\n      var rowHeight = this.isLastRow(end) && (bdrStr === '1' || bdrStr === '2' || bdrStr === '5') ? 2 : 0;\n      var topOffSet = this.parent.frozenRows && (bdrStr === '1' || bdrStr === '2') && this.isFirstRow(start) ? 1.5 : 0;\n      var leftOffset = isFrozen && (bdrStr === '2' || bdrStr === '4') && this.isFirstCell(start) ? 1 : 0;\n      var rightOffset = (this.parent.getFrozenMode() === 'Right' && (bdrStr === '1' || bdrStr === '3') || this.parent.getFrozenMode() === literals.leftRight && (bdrStr === '5' || bdrStr === '6')) && this.isFirstCell(start) ? 1 : 0;\n\n      if (this.parent.enableRtl) {\n        border.style.right = parentOff.right - stOff.right - leftOffset + 'px';\n        border.style.width = stOff.right - endOff.left + leftOffset + 1 + 'px';\n      } else {\n        border.style.left = stOff.left - parentOff.left - leftOffset - rightOffset + 'px';\n        border.style.width = endOff.right - stOff.left + leftOffset - rightOffset + 1 + 'px';\n      }\n\n      border.style.top = stOff.top - parentOff.top - topOffSet + 'px';\n      border.style.height = endOff.top - stOff.top > 0 ? endOff.top - parentOff.top + endOff.height + 1 - (stOff.top - parentOff.top) - rowHeight + topOffSet + 'px' : endOff.height + topOffSet - rowHeight + 1 + 'px';\n      this.selectDirection += bdrStr;\n    } else {\n      border.style.display = 'none';\n    }\n  };\n\n  Selection.prototype.positionBorders = function () {\n    this.updateStartEndCells();\n\n    if (!this.startCell || !this.bdrElement || !this.selectedRowCellIndexes.length) {\n      return;\n    }\n\n    this.selectDirection = '';\n    this.showHideBorders('');\n    this.setBorders(this.parent.getContentTable(), this.bdrElement, '1');\n\n    if (this.parent.isFrozenGrid()) {\n      this.setBorders(this.parent.contentModule.getMovableContent(), this.mcBdrElement, '2');\n\n      if (this.parent.getFrozenMode() === literals.leftRight) {\n        this.setBorders(this.parent.contentModule.getFrozenRightContent(), this.frcBdrElement, '5');\n      }\n    }\n\n    if (this.parent.frozenRows) {\n      this.setBorders(this.parent.getHeaderTable(), this.fhBdrElement, '3');\n\n      if (this.parent.isFrozenGrid()) {\n        this.setBorders(this.parent.headerModule.getMovableHeader(), this.mhBdrElement, '4');\n\n        if (this.parent.getFrozenMode() === literals.leftRight) {\n          this.setBorders(this.parent.headerModule.getFrozenRightHeader(), this.frhBdrElement, '6');\n        }\n      }\n    }\n\n    this.applyBorders(this.selectDirection);\n  };\n  /* eslint-enable */\n\n\n  Selection.prototype.applyBothFrozenBorders = function (str) {\n    var rtl = this.parent.enableRtl;\n\n    switch (str.length) {\n      case 6:\n        {\n          this.bdrElement.style.borderWidth = rtl ? this.right_bottom : this.bottom_left;\n          this.mcBdrElement.style.borderWidth = this.bottom;\n          this.fhBdrElement.style.borderWidth = rtl ? this.top_right : this.top_left;\n          this.mhBdrElement.style.borderWidth = this.top;\n          this.frcBdrElement.style.borderWidth = rtl ? this.bottom_left : this.right_bottom;\n          this.frhBdrElement.style.borderWidth = rtl ? this.top_left : this.top_right;\n        }\n        break;\n\n      case 4:\n        {\n          if (str.includes('1') && str.includes('2') && str.includes('3') && str.includes('4')) {\n            this.fhBdrElement.style.borderWidth = rtl ? this.top_right : this.top_left;\n            this.mhBdrElement.style.borderWidth = rtl ? this.top_left : this.top_right;\n            this.bdrElement.style.borderWidth = rtl ? this.right_bottom : this.bottom_left;\n            this.mcBdrElement.style.borderWidth = rtl ? this.bottom_left : this.right_bottom;\n          }\n\n          if (str.includes('2') && str.includes('4') && str.includes('5') && str.includes('6')) {\n            this.mcBdrElement.style.borderWidth = rtl ? this.right_bottom : this.bottom_left;\n            this.mhBdrElement.style.borderWidth = rtl ? this.top_right : this.top_left;\n            this.frcBdrElement.style.borderWidth = rtl ? this.bottom_left : this.right_bottom;\n            this.frhBdrElement.style.borderWidth = rtl ? this.top_left : this.top_right;\n          }\n        }\n        break;\n\n      case 3:\n        {\n          this.bdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n          this.mcBdrElement.style.borderWidth = this.top_bottom;\n          this.frcBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n\n          if (this.parent.frozenRows) {\n            this.fhBdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n            this.mhBdrElement.style.borderWidth = this.top_bottom;\n            this.frcBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n          }\n        }\n        break;\n\n      case 2:\n        {\n          if (str.includes('1')) {\n            this.mcBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n\n            if (this.parent.frozenRows) {\n              this.fhBdrElement.style.borderWidth = this.top_right_left;\n            }\n          }\n\n          if (str.includes('2')) {\n            this.bdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n            this.frcBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n\n            if (this.parent.frozenRows) {\n              this.mhBdrElement.style.borderWidth = this.top_right_left;\n            }\n          }\n\n          if (str.includes('3')) {\n            this.mhBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n            this.bdrElement.style.borderWidth = this.right_bottom_left;\n          }\n\n          if (str.includes('4')) {\n            this.fhBdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n            this.frhBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n            this.mcBdrElement.style.borderWidth = this.right_bottom_left;\n          }\n\n          if (str.includes('5')) {\n            this.mcBdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n\n            if (this.parent.frozenRows) {\n              this.frhBdrElement.style.borderWidth = this.top_right_left;\n            }\n          }\n\n          if (str.includes('6')) {\n            this.mhBdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n            this.frcBdrElement.style.borderWidth = this.right_bottom_left;\n          }\n        }\n        break;\n\n      default:\n        this.bdrElement.style.borderWidth = this.all_border;\n        this.mcBdrElement.style.borderWidth = this.all_border;\n        this.frcBdrElement.style.borderWidth = this.all_border;\n\n        if (this.parent.frozenRows) {\n          this.fhBdrElement.style.borderWidth = this.all_border;\n          this.mhBdrElement.style.borderWidth = this.all_border;\n          this.frhBdrElement.style.borderWidth = this.all_border;\n        }\n\n        break;\n    }\n  };\n\n  Selection.prototype.applyBorders = function (str) {\n    var rtl = this.parent.enableRtl;\n\n    if (this.parent.getFrozenMode() === literals.leftRight) {\n      this.applyBothFrozenBorders(str);\n    } else {\n      switch (str.length) {\n        case 4:\n          {\n            if (this.parent.getFrozenMode() === 'Right') {\n              this.bdrElement.style.borderWidth = rtl ? this.bottom_left : this.right_bottom;\n              this.mcBdrElement.style.borderWidth = rtl ? this.right_bottom : this.bottom_left;\n              this.fhBdrElement.style.borderWidth = rtl ? this.top_left : this.top_right;\n              this.mhBdrElement.style.borderWidth = rtl ? this.top_right : this.top_left;\n            } else {\n              this.bdrElement.style.borderWidth = rtl ? this.right_bottom : this.bottom_left;\n              this.mcBdrElement.style.borderWidth = rtl ? this.bottom_left : this.right_bottom;\n              this.fhBdrElement.style.borderWidth = rtl ? this.top_right : this.top_left;\n              this.mhBdrElement.style.borderWidth = rtl ? this.top_left : this.top_right;\n            }\n          }\n          break;\n\n        case 2:\n          {\n            if (this.parent.getFrozenMode() === 'Right') {\n              this.bdrElement.style.borderWidth = str.includes('2') ? rtl ? this.top_bottom_left : this.top_right_bottom : this.right_bottom_left;\n              this.mcBdrElement.style.borderWidth = str.includes('1') ? rtl ? this.top_right_bottom : this.top_bottom_left : this.right_bottom_left;\n\n              if (this.parent.frozenRows) {\n                this.fhBdrElement.style.borderWidth = str.includes('1') ? this.top_right_left : rtl ? this.top_bottom_left : this.top_right_bottom;\n                this.mhBdrElement.style.borderWidth = str.includes('2') ? this.top_right_left : rtl ? this.top_right_bottom : this.top_bottom_left;\n              }\n            } else {\n              this.bdrElement.style.borderWidth = str.includes('2') ? rtl ? this.top_right_bottom : this.top_bottom_left : this.right_bottom_left;\n\n              if (this.parent.isFrozenGrid()) {\n                this.mcBdrElement.style.borderWidth = str.includes('1') ? rtl ? this.top_bottom_left : this.top_right_bottom : this.right_bottom_left;\n              }\n\n              if (this.parent.frozenRows) {\n                this.fhBdrElement.style.borderWidth = str.includes('1') ? this.top_right_left : rtl ? this.top_right_bottom : this.top_bottom_left;\n\n                if (this.parent.isFrozenGrid()) {\n                  this.mhBdrElement.style.borderWidth = str.includes('2') ? this.top_right_left : rtl ? this.top_bottom_left : this.top_right_bottom;\n                }\n              }\n            }\n          }\n          break;\n\n        default:\n          this.bdrElement.style.borderWidth = this.all_border;\n\n          if (this.parent.isFrozenGrid()) {\n            this.mcBdrElement.style.borderWidth = this.all_border;\n          }\n\n          if (this.parent.frozenRows) {\n            this.fhBdrElement.style.borderWidth = this.all_border;\n\n            if (this.parent.isFrozenGrid()) {\n              this.mhBdrElement.style.borderWidth = this.all_border;\n            }\n          }\n\n          break;\n      }\n    }\n  };\n\n  Selection.prototype.createBorders = function () {\n    if (!this.bdrElement) {\n      this.bdrElement = this.parent.getContentTable().parentElement.appendChild(createElement('div', {\n        className: 'e-xlsel',\n        id: this.parent.element.id + '_bdr',\n        styles: 'width: 2px; border-width: 0;'\n      }));\n\n      if (this.parent.isFrozenGrid()) {\n        this.mcBdrElement = this.parent.contentModule.getMovableContent().appendChild(createElement('div', {\n          className: 'e-xlsel',\n          id: this.parent.element.id + '_mcbdr',\n          styles: 'height: 2px; border-width: 0;'\n        }));\n\n        if (this.parent.getFrozenMode() === literals.leftRight) {\n          this.frcBdrElement = this.parent.contentModule.getFrozenRightContent().appendChild(createElement('div', {\n            className: 'e-xlsel',\n            id: this.parent.element.id + '_frcbdr',\n            styles: 'height: 2px; border-width: 0;'\n          }));\n        }\n      }\n\n      if (this.parent.frozenRows) {\n        this.fhBdrElement = this.parent.getHeaderTable().parentElement.appendChild(createElement('div', {\n          className: 'e-xlsel',\n          id: this.parent.element.id + '_fhbdr',\n          styles: 'height: 2px;'\n        }));\n      }\n\n      if (this.parent.frozenRows && this.parent.isFrozenGrid()) {\n        this.mhBdrElement = this.parent.headerModule.getMovableHeader().appendChild(createElement('div', {\n          className: 'e-xlsel',\n          id: this.parent.element.id + '_mhbdr',\n          styles: 'height: 2px;'\n        }));\n\n        if (this.parent.getFrozenMode() === literals.leftRight) {\n          this.frhBdrElement = this.parent.headerModule.getFrozenRightHeader().appendChild(createElement('div', {\n            className: 'e-xlsel',\n            id: this.parent.element.id + '_frhbdr',\n            styles: 'height: 2px;'\n          }));\n        }\n      }\n    }\n  };\n\n  Selection.prototype.showHideBorders = function (display) {\n    if (this.bdrElement) {\n      this.bdrElement.style.display = display;\n\n      if (this.parent.isFrozenGrid()) {\n        this.mcBdrElement.style.display = display;\n\n        if (this.parent.getFrozenMode() === literals.leftRight) {\n          this.frcBdrElement.style.display = display;\n        }\n      }\n\n      if (this.parent.frozenRows) {\n        this.fhBdrElement.style.display = display;\n      }\n\n      if (this.parent.frozenRows && this.parent.isFrozenGrid()) {\n        this.mhBdrElement.style.display = display;\n\n        if (this.parent.getFrozenMode() === literals.leftRight) {\n          this.frhBdrElement.style.display = display;\n        }\n      }\n    }\n  };\n\n  Selection.prototype.drawAFBorders = function () {\n    if (!this.bdrAFBottom) {\n      this.createAFBorders();\n    }\n\n    this.positionAFBorders();\n  };\n\n  Selection.prototype.positionAFBorders = function () {\n    if (!this.startCell || !this.bdrAFLeft) {\n      return;\n    }\n\n    var stOff = this.startAFCell.getBoundingClientRect();\n    var endOff = this.endAFCell.getBoundingClientRect();\n    var top = endOff.top - stOff.top > 0 ? 1 : 0;\n    var firstCellTop = endOff.top - stOff.top >= 0 && (parentsUntil(this.startAFCell, literals.movableContent) || parentsUntil(this.startAFCell, 'e-frozencontent')) && this.isFirstRow(this.startAFCell) ? 1.5 : 0;\n    var firstCellLeft = (parentsUntil(this.startAFCell, literals.movableContent) || parentsUntil(this.startAFCell, literals.movableHeader)) && this.isFirstCell(this.startAFCell) ? 1 : 0;\n    var rowHeight = this.isLastRow(this.endAFCell) && (parentsUntil(this.endAFCell, literals.movableContent) || parentsUntil(this.endAFCell, 'e-frozencontent')) ? 2 : 0;\n    var parentOff = this.startAFCell.offsetParent.getBoundingClientRect();\n    var parentRect = this.parent.element.getBoundingClientRect();\n    var sTop = this.startAFCell.offsetParent.parentElement.scrollTop;\n    var sLeft = this.startAFCell.offsetParent.parentElement.scrollLeft;\n    var scrollTop = sTop - this.startAFCell.offsetTop;\n    var scrollLeft = sLeft - this.startAFCell.offsetLeft;\n    var totalHeight = this.parent.element.clientHeight;\n    var totalWidth = this.parent.element.clientWidth;\n    scrollTop = scrollTop > 0 ? Math.floor(scrollTop) - 1 : 0;\n    scrollLeft = scrollLeft > 0 ? scrollLeft : 0;\n    var left = stOff.left - parentRect.left;\n\n    if (!this.parent.enableRtl) {\n      this.bdrAFLeft.style.left = left - firstCellLeft + scrollLeft - 1 + 'px';\n      this.bdrAFRight.style.left = endOff.left - parentRect.left - 2 + endOff.width + 'px';\n      this.bdrAFRight.style.width = totalWidth <= parseInt(this.bdrAFRight.style.left, 10) ? '0px' : '2px';\n      this.bdrAFTop.style.left = left + scrollLeft - 0.5 + 'px';\n      this.bdrAFTop.style.width = parseInt(this.bdrAFRight.style.left, 10) - parseInt(this.bdrAFLeft.style.left, 10) - firstCellLeft + 1 + 'px';\n\n      if (totalWidth <= parseInt(this.bdrAFTop.style.width, 10) + parseInt(this.bdrAFTop.style.left, 10)) {\n        var leftRemove = parseInt(this.bdrAFTop.style.width, 10) + parseInt(this.bdrAFTop.style.left, 10) - totalWidth;\n        this.bdrAFTop.style.width = parseInt(this.bdrAFTop.style.width, 10) - leftRemove + 'px';\n      }\n    } else {\n      var scrolloffSet = parentsUntil(this.startAFCell, literals.movableContent) || parentsUntil(this.startAFCell, literals.movableHeader) ? stOff.right - this.startAFCell.offsetParent.parentElement.getBoundingClientRect().width - parentRect.left : 0;\n      this.bdrAFLeft.style.right = parentRect.right - endOff.right - 2 + endOff.width + 'px';\n      this.bdrAFLeft.style.width = totalWidth <= parseInt(this.bdrAFLeft.style.right, 10) ? '0px' : '2px';\n      this.bdrAFRight.style.right = parentRect.right - stOff.right - firstCellLeft + scrolloffSet - 1 + 'px';\n      this.bdrAFTop.style.left = endOff.left - parentRect.left - 0.5 + 'px';\n      this.bdrAFTop.style.width = parseInt(this.bdrAFLeft.style.right, 10) - parseInt(this.bdrAFRight.style.right, 10) - firstCellLeft + 1 + 'px';\n\n      if (parseInt(this.bdrAFTop.style.left, 10) < 0) {\n        this.bdrAFTop.style.width = parseInt(this.bdrAFTop.style.width, 10) + parseInt(this.bdrAFTop.style.left, 10) + 'px';\n        this.bdrAFTop.style.left = '0px';\n      }\n    }\n\n    this.bdrAFLeft.style.top = stOff.top - parentRect.top - firstCellTop + scrollTop + 'px';\n    this.bdrAFLeft.style.height = endOff.top - stOff.top > 0 ? endOff.top - parentOff.top + endOff.height + 1 - (stOff.top - parentOff.top) + firstCellTop - rowHeight - scrollTop + 'px' : endOff.height + firstCellTop - rowHeight - scrollTop + 'px';\n    this.bdrAFRight.style.top = this.bdrAFLeft.style.top;\n    this.bdrAFRight.style.height = parseInt(this.bdrAFLeft.style.height, 10) + 'px';\n    this.bdrAFTop.style.top = this.bdrAFRight.style.top;\n    this.bdrAFBottom.style.left = this.bdrAFTop.style.left;\n    this.bdrAFBottom.style.top = parseFloat(this.bdrAFLeft.style.top) + parseFloat(this.bdrAFLeft.style.height) - top - 1 + 'px';\n    this.bdrAFBottom.style.width = totalHeight <= parseFloat(this.bdrAFBottom.style.top) ? '0px' : this.bdrAFTop.style.width;\n\n    if (totalHeight <= parseInt(this.bdrAFLeft.style.height, 10) + parseInt(this.bdrAFLeft.style.top, 10)) {\n      var topRemove = parseInt(this.bdrAFLeft.style.height, 10) + parseInt(this.bdrAFLeft.style.top, 10) - totalHeight;\n      this.bdrAFLeft.style.height = parseInt(this.bdrAFLeft.style.height, 10) - topRemove + 'px';\n      this.bdrAFRight.style.height = parseInt(this.bdrAFLeft.style.height, 10) + 'px';\n    }\n  };\n\n  Selection.prototype.createAFBorders = function () {\n    if (!this.bdrAFLeft) {\n      this.bdrAFLeft = this.parent.element.appendChild(createElement('div', {\n        className: 'e-xlselaf',\n        id: this.parent.element.id + '_bdrafleft',\n        styles: 'width: 2px;'\n      }));\n      this.bdrAFRight = this.parent.element.appendChild(createElement('div', {\n        className: 'e-xlselaf',\n        id: this.parent.element.id + '_bdrafright',\n        styles: 'width: 2px;'\n      }));\n      this.bdrAFBottom = this.parent.element.appendChild(createElement('div', {\n        className: 'e-xlselaf',\n        id: this.parent.element.id + '_bdrafbottom',\n        styles: 'height: 2px;'\n      }));\n      this.bdrAFTop = this.parent.element.appendChild(createElement('div', {\n        className: 'e-xlselaf',\n        id: this.parent.element.id + '_bdraftop',\n        styles: 'height: 2px;'\n      }));\n    }\n  };\n\n  Selection.prototype.showAFBorders = function () {\n    if (this.bdrAFLeft) {\n      this.bdrAFLeft.style.display = '';\n      this.bdrAFRight.style.display = '';\n      this.bdrAFBottom.style.display = '';\n      this.bdrAFTop.style.display = '';\n    }\n  };\n\n  Selection.prototype.hideAFBorders = function () {\n    if (this.bdrAFLeft) {\n      this.bdrAFLeft.style.display = 'none';\n      this.bdrAFRight.style.display = 'none';\n      this.bdrAFBottom.style.display = 'none';\n      this.bdrAFTop.style.display = 'none';\n    }\n  };\n\n  Selection.prototype.updateValue = function (rIdx, cIdx, cell) {\n    var args = this.createBeforeAutoFill(rIdx, cIdx, cell);\n\n    if (!args.cancel) {\n      var col = this.parent.getColumnByIndex(cIdx);\n\n      if (this.parent.editModule && cell) {\n        if (col.type === 'number') {\n          this.parent.editModule.updateCell(rIdx, col.field, parseFloat(args.value));\n        } else {\n          this.parent.editModule.updateCell(rIdx, col.field, args.value);\n        }\n      }\n    }\n  };\n\n  Selection.prototype.createBeforeAutoFill = function (rowIndex, colIndex, cell) {\n    var col = this.parent.getColumnByIndex(colIndex);\n    var args = {\n      column: col,\n      value: cell.innerText\n    };\n    this.parent.trigger(events.beforeAutoFill, args);\n    return args;\n  }; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  Selection.prototype.getAutoFillCells = function (rowIndex, startCellIdx) {\n    var cls = '.e-cellselectionbackground';\n    var cells = [].slice.call(this.parent.getDataRows()[rowIndex].querySelectorAll(cls));\n\n    if (this.parent.isFrozenGrid()) {\n      cells = cells.concat([].slice.call(this.parent.getMovableDataRows()[rowIndex].querySelectorAll(cls)));\n\n      if (this.parent.getFrozenMode() === literals.leftRight) {\n        cells = cells.concat([].slice.call(this.parent.getFrozenRightDataRows()[rowIndex].querySelectorAll(cls)));\n      }\n    }\n\n    return cells;\n  };\n\n  Selection.prototype.selectLikeAutoFill = function (e, isApply) {\n    var startrowIdx = parseInt(parentsUntil(this.startAFCell, literals.row).getAttribute(literals.ariaRowIndex), 10);\n    var startCellIdx = parseInt(this.startAFCell.getAttribute(literals.ariaColIndex), 10);\n    var endrowIdx = parseInt(parentsUntil(this.endAFCell, literals.row).getAttribute(literals.ariaRowIndex), 10);\n    var endCellIdx = parseInt(this.endAFCell.getAttribute(literals.ariaColIndex), 10);\n    var rowLen = this.selectedRowCellIndexes.length - 1;\n    var colLen = this.selectedRowCellIndexes[0].cellIndexes.length - 1;\n\n    switch (true) {\n      //direction\n      case !isApply && this.endAFCell.classList.contains('e-cellselectionbackground') && !!parentsUntil(e.target, literals.rowCell):\n        this.startAFCell = this.parent.getCellFromIndex(startrowIdx, startCellIdx);\n        this.endAFCell = this.parent.getCellFromIndex(startrowIdx + rowLen, startCellIdx + colLen);\n        this.drawAFBorders();\n        break;\n\n      case this.autoFillRLselection && startCellIdx + colLen < endCellIdx && //right\n      endCellIdx - startCellIdx - colLen + 1 > endrowIdx - startrowIdx - rowLen // right bottom\n      && endCellIdx - startCellIdx - colLen + 1 > startrowIdx - endrowIdx:\n        //right top\n        this.endAFCell = this.parent.getCellFromIndex(startrowIdx + rowLen, endCellIdx);\n        endrowIdx = parseInt(parentsUntil(this.endAFCell, literals.row).getAttribute(literals.ariaRowIndex), 10);\n        endCellIdx = parseInt(this.endAFCell.getAttribute(literals.ariaColIndex), 10);\n\n        if (!isApply) {\n          this.drawAFBorders();\n        } else {\n          var cellIdx = parseInt(this.endCell.getAttribute(literals.ariaColIndex), 10);\n\n          for (var i = startrowIdx; i <= endrowIdx; i++) {\n            var cells = this.getAutoFillCells(i, startCellIdx);\n            var c = 0;\n\n            for (var j = cellIdx + 1; j <= endCellIdx; j++) {\n              if (c > colLen) {\n                c = 0;\n              }\n\n              this.updateValue(i, j, cells[c]);\n              c++;\n            }\n          }\n\n          this.selectCellsByRange({\n            rowIndex: startrowIdx,\n            cellIndex: this.startCellIndex\n          }, {\n            rowIndex: endrowIdx,\n            cellIndex: endCellIdx\n          });\n        }\n\n        break;\n\n      case this.autoFillRLselection && startCellIdx > endCellIdx && // left\n      startCellIdx - endCellIdx + 1 > endrowIdx - startrowIdx - rowLen && //left top\n      startCellIdx - endCellIdx + 1 > startrowIdx - endrowIdx:\n        // left bottom\n        this.startAFCell = this.parent.getCellFromIndex(startrowIdx, endCellIdx);\n        this.endAFCell = this.endCell;\n\n        if (!isApply) {\n          this.drawAFBorders();\n        } else {\n          for (var i = startrowIdx; i <= startrowIdx + rowLen; i++) {\n            var cells = this.getAutoFillCells(i, startCellIdx);\n            cells.reverse();\n            var c = 0;\n\n            for (var j = this.startCellIndex - 1; j >= endCellIdx; j--) {\n              if (c > colLen) {\n                c = 0;\n              }\n\n              this.updateValue(i, j, cells[c]);\n              c++;\n            }\n          }\n\n          this.selectCellsByRange({\n            rowIndex: startrowIdx,\n            cellIndex: endCellIdx\n          }, {\n            rowIndex: startrowIdx + rowLen,\n            cellIndex: this.startCellIndex + colLen\n          });\n        }\n\n        break;\n\n      case startrowIdx > endrowIdx:\n        //up\n        this.startAFCell = this.parent.getCellFromIndex(endrowIdx, startCellIdx);\n        this.endAFCell = this.endCell;\n\n        if (!isApply) {\n          this.drawAFBorders();\n        } else {\n          var trIdx = parseInt(this.endCell.parentElement.getAttribute(literals.ariaRowIndex), 10);\n          var r = trIdx;\n\n          for (var i = startrowIdx - 1; i >= endrowIdx; i--) {\n            if (r === this.startIndex - 1) {\n              r = trIdx;\n            }\n\n            var cells = this.getAutoFillCells(r, startCellIdx);\n            var c = 0;\n            r--;\n\n            for (var j = this.startCellIndex; j <= this.startCellIndex + colLen; j++) {\n              this.updateValue(i, j, cells[c]);\n              c++;\n            }\n          }\n\n          this.selectCellsByRange({\n            rowIndex: endrowIdx,\n            cellIndex: startCellIdx + colLen\n          }, {\n            rowIndex: startrowIdx + rowLen,\n            cellIndex: startCellIdx\n          });\n        }\n\n        break;\n\n      default:\n        //down\n        this.endAFCell = this.parent.getCellFromIndex(endrowIdx, startCellIdx + colLen);\n\n        if (!isApply) {\n          this.drawAFBorders();\n        } else {\n          var trIdx = parseInt(this.endCell.parentElement.getAttribute(literals.ariaRowIndex), 10);\n          var r = this.startIndex;\n\n          for (var i = trIdx + 1; i <= endrowIdx; i++) {\n            if (r === trIdx + 1) {\n              r = this.startIndex;\n            }\n\n            var cells = this.getAutoFillCells(r, startCellIdx);\n            r++;\n            var c = 0;\n\n            for (var m = this.startCellIndex; m <= this.startCellIndex + colLen; m++) {\n              this.updateValue(i, m, cells[c]);\n              c++;\n            }\n          }\n\n          this.selectCellsByRange({\n            rowIndex: trIdx - rowLen,\n            cellIndex: startCellIdx\n          }, {\n            rowIndex: endrowIdx,\n            cellIndex: startCellIdx + colLen\n          });\n        }\n\n        break;\n    }\n  };\n\n  Selection.prototype.mouseUpHandler = function (e) {\n    document.body.classList.remove('e-disableuserselect');\n\n    if (this.element) {\n      remove(this.element);\n    }\n\n    if (this.isDragged && this.selectedRowCellIndexes.length === 1 && this.selectedRowCellIndexes[0].cellIndexes.length === 1) {\n      this.mUPTarget = parentsUntil(e.target, literals.rowCell);\n    } else {\n      this.mUPTarget = null;\n    }\n\n    if (this.isDragged && !this.isAutoFillSel && this.selectionSettings.mode === 'Cell' && e.target.classList.contains(literals.rowCell)) {\n      var target = e.target;\n      var rowIndex = parseInt(target.parentElement.getAttribute(literals.ariaRowIndex), 10);\n      var cellIndex = parseInt(target.getAttribute(literals.ariaColIndex), 10);\n      this.isDragged = false;\n      this.clearCellSelection();\n      this.selectCellsByRange({\n        rowIndex: this.startDIndex,\n        cellIndex: this.startDCellIndex\n      }, {\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      });\n    }\n\n    this.isDragged = false;\n    this.updateAutoFillPosition();\n\n    if (this.isAutoFillSel) {\n      var lastCell = parentsUntil(e.target, literals.rowCell);\n      this.endAFCell = lastCell ? lastCell : this.endCell === this.endAFCell ? this.startAFCell : this.endAFCell;\n      this.startAFCell = this.startCell;\n      this.updateStartCellsIndex();\n      this.selectLikeAutoFill(e, true);\n      this.updateAutoFillPosition();\n      this.hideAFBorders();\n      this.positionBorders();\n      this.isAutoFillSel = false;\n    }\n\n    EventHandler.remove(this.parent.getContent(), 'mousemove', this.mouseMoveHandler);\n\n    if (this.parent.frozenRows) {\n      EventHandler.remove(this.parent.getHeaderContent(), 'mousemove', this.mouseMoveHandler);\n    }\n\n    EventHandler.remove(document, 'mouseup', this.mouseUpHandler);\n  };\n\n  Selection.prototype.hideAutoFill = function () {\n    if (this.autofill) {\n      this.autofill.style.display = 'none';\n    }\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.updateAutoFillPosition = function () {\n    if (this.parent.enableAutoFill && !this.parent.isEdit && this.selectionSettings.cellSelectionMode.indexOf('Box') > -1 && !this.isRowType() && !this.isSingleSel() && this.selectedRowCellIndexes.length) {\n      var index = parseInt(this.target.getAttribute(literals.ariaColIndex), 10);\n      var rindex = parseInt(this.target.getAttribute('index'), 10);\n      var rowIndex = this.selectedRowCellIndexes[this.selectedRowCellIndexes.length - 1].rowIndex;\n      var cells = this.getAutoFillCells(rowIndex, index).filter(function (ele) {\n        return ele.style.display === '';\n      });\n      var col = this.parent.getColumnByIndex(index);\n      var isFrozenCol = col.getFreezeTableName() === 'movable';\n      var isFrozenRow = rindex < this.parent.frozenRows;\n      var isFrozenRight = this.parent.getFrozenMode() === literals.leftRight && col.getFreezeTableName() === literals.frozenRight;\n\n      if (!select('#' + this.parent.element.id + '_autofill', parentsUntil(this.target, literals.table))) {\n        if (select('#' + this.parent.element.id + '_autofill', this.parent.element)) {\n          select('#' + this.parent.element.id + '_autofill', this.parent.element).remove();\n        }\n\n        this.autofill = createElement('div', {\n          className: 'e-autofill',\n          id: this.parent.element.id + '_autofill'\n        });\n        this.autofill.style.display = 'none';\n\n        if (!isFrozenRow) {\n          if (!isFrozenCol) {\n            this.parent.getContentTable().parentElement.appendChild(this.autofill);\n          } else {\n            this.parent.contentModule.getMovableContent().appendChild(this.autofill);\n          }\n        } else {\n          if (!isFrozenCol) {\n            this.parent.getHeaderTable().parentElement.appendChild(this.autofill);\n          } else {\n            this.parent.headerModule.getMovableHeader().appendChild(this.autofill);\n          }\n        }\n\n        if (isFrozenRight) {\n          if (isFrozenRow) {\n            this.parent.getFrozenRightHeader().appendChild(this.autofill);\n          } else {\n            this.parent.getFrozenRightContent().appendChild(this.autofill);\n          }\n        }\n      }\n\n      var cell = cells[cells.length - 1];\n\n      if (cell && cell.offsetParent) {\n        var clientRect = cell.getBoundingClientRect();\n        var parentOff = cell.offsetParent.getBoundingClientRect();\n        var colWidth = this.isLastCell(cell) ? 4 : 0;\n        var rowHeight = this.isLastRow(cell) ? 3 : 0;\n\n        if (!this.parent.enableRtl) {\n          this.autofill.style.left = clientRect.left - parentOff.left + clientRect.width - 4 - colWidth + 'px';\n        } else {\n          this.autofill.style.right = parentOff.right - clientRect.right + clientRect.width - 4 - colWidth + 'px';\n        }\n\n        this.autofill.style.top = clientRect.top - parentOff.top + clientRect.height - 5 - rowHeight + 'px';\n      }\n\n      this.autofill.style.display = '';\n    } else {\n      this.hideAutoFill();\n    }\n  };\n\n  Selection.prototype.mouseDownHandler = function (e) {\n    this.mouseButton = e.button;\n    var target = e.target;\n    var gObj = this.parent;\n    var isDrag;\n    var gridElement = parentsUntil(target, 'e-grid');\n\n    if (gridElement && gridElement.id !== gObj.element.id || parentsUntil(target, literals.headerContent) && !this.parent.frozenRows || parentsUntil(target, 'e-editedbatchcell') || parentsUntil(target, literals.editedRow)) {\n      return;\n    }\n\n    if (e.shiftKey || e.ctrlKey) {\n      e.preventDefault();\n    }\n\n    if (parentsUntil(target, literals.rowCell) && !e.shiftKey && !e.ctrlKey) {\n      if (gObj.selectionSettings.cellSelectionMode.indexOf('Box') > -1 && !this.isRowType() && !this.isSingleSel()) {\n        this.isCellDrag = true;\n        isDrag = true;\n      } else if (gObj.allowRowDragAndDrop && !gObj.isEdit && !this.parent.selectionSettings.checkboxOnly) {\n        this.isRowDragSelected = false;\n\n        if (!this.isRowType() || this.isSingleSel() || closest(target, 'td').classList.contains('e-selectionbackground')) {\n          this.isDragged = false;\n          return;\n        }\n\n        isDrag = true;\n        this.element = this.parent.createElement('div', {\n          className: 'e-griddragarea'\n        });\n        gObj.getContent().appendChild(this.element);\n      }\n\n      if (isDrag) {\n        this.enableDrag(e, true);\n      }\n    }\n\n    this.updateStartEndCells();\n\n    if (target.classList.contains('e-autofill') || target.classList.contains('e-xlsel')) {\n      this.isCellDrag = true;\n      this.isAutoFillSel = true;\n      this.enableDrag(e);\n    }\n  };\n\n  Selection.prototype.updateStartEndCells = function () {\n    var cells = [].slice.call(this.parent.element.getElementsByClassName('e-cellselectionbackground'));\n    this.startCell = cells[0];\n    this.endCell = cells[cells.length - 1];\n\n    if (this.startCell) {\n      this.startIndex = parseInt(this.startCell.parentElement.getAttribute(literals.ariaRowIndex), 10);\n      this.startCellIndex = parseInt(parentsUntil(this.startCell, literals.rowCell).getAttribute(literals.ariaColIndex), 10);\n    }\n  };\n\n  Selection.prototype.updateStartCellsIndex = function () {\n    if (this.startCell) {\n      this.startIndex = parseInt(this.startCell.parentElement.getAttribute(literals.ariaRowIndex), 10);\n      this.startCellIndex = parseInt(parentsUntil(this.startCell, literals.rowCell).getAttribute(literals.ariaColIndex), 10);\n    }\n  };\n\n  Selection.prototype.enableDrag = function (e, isUpdate) {\n    var gObj = this.parent;\n\n    if (isUpdate) {\n      var tr = closest(e.target, 'tr');\n      this.startDIndex = parseInt(tr.getAttribute(literals.ariaRowIndex), 10);\n      this.startDCellIndex = parseInt(parentsUntil(e.target, literals.rowCell).getAttribute(literals.ariaColIndex), 10);\n    }\n\n    document.body.classList.add('e-disableuserselect');\n    var gBRect = gObj.element.getBoundingClientRect();\n    var postion = getPosition(e);\n    this.x = postion.x - gBRect.left;\n    this.y = postion.y - gBRect.top;\n    EventHandler.add(gObj.getContent(), 'mousemove', this.mouseMoveHandler, this);\n\n    if (this.parent.frozenRows) {\n      EventHandler.add(gObj.getHeaderContent(), 'mousemove', this.mouseMoveHandler, this);\n    }\n\n    EventHandler.add(document, 'mouseup', this.mouseUpHandler, this);\n  };\n\n  Selection.prototype.clearSelAfterRefresh = function (e) {\n    var isInfiniteScroll = this.parent.enableInfiniteScrolling && e.requestType === 'infiniteScroll';\n\n    if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection && !isInfiniteScroll) {\n      this.clearSelection();\n    }\n\n    if ((e.requestType === 'virtualscroll' || isInfiniteScroll) && this.parent.isPersistSelection && this.isPartialSelection && this.isHdrSelectAllClicked) {\n      var rowObj = this.parent.getRowsObject().filter(function (e) {\n        return e.isSelectable;\n      });\n      var indexes = [];\n      this.selectedRowState = {};\n      this.persistSelectedData = [];\n\n      for (var i = 0; i < rowObj.length; i++) {\n        indexes.push(rowObj[i].index);\n        this.selectedRowState[rowObj[i].data[this.primaryKey]] = true;\n        this.persistSelectedData.push(rowObj[i].data);\n      }\n\n      this.selectedRowIndexes = indexes;\n    }\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.addEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.evtHandlers = [{\n      event: events.uiUpdate,\n      handler: this.enableAfterRender\n    }, {\n      event: events.initialEnd,\n      handler: this.initializeSelection\n    }, {\n      event: events.rowSelectionComplete,\n      handler: this.onActionComplete\n    }, {\n      event: events.cellSelectionComplete,\n      handler: this.onActionComplete\n    }, {\n      event: events.inBoundModelChanged,\n      handler: this.onPropertyChanged\n    }, {\n      event: events.cellFocused,\n      handler: this.onCellFocused\n    }, {\n      event: events.beforeFragAppend,\n      handler: this.clearSelAfterRefresh\n    }, {\n      event: events.columnPositionChanged,\n      handler: this.columnPositionChanged\n    }, {\n      event: events.contentReady,\n      handler: this.initialEnd\n    }, {\n      event: events.rowsRemoved,\n      handler: this.rowsRemoved\n    }, {\n      event: events.headerRefreshed,\n      handler: this.refreshHeader\n    }, {\n      event: events.destroy,\n      handler: this.destroy\n    }];\n    addRemoveEventListener(this.parent, this.evtHandlers, true, this);\n    this.actionBeginFunction = this.actionBegin.bind(this);\n    this.actionCompleteFunction = this.actionComplete.bind(this);\n    this.parent.addEventListener(events.actionBegin, this.actionBeginFunction);\n    this.parent.addEventListener(events.actionComplete, this.actionCompleteFunction);\n    this.addEventListener_checkbox();\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    addRemoveEventListener(this.parent, this.evtHandlers, false);\n    this.parent.removeEventListener(events.actionBegin, this.actionBeginFunction);\n    this.parent.removeEventListener(events.actionComplete, this.actionCompleteFunction);\n    this.removeEventListener_checkbox();\n  };\n\n  Selection.prototype.wireEvents = function () {\n    this.isMacOS = navigator.userAgent.indexOf('Mac OS') !== -1;\n\n    if (this.isMacOS) {\n      EventHandler.add(this.parent.element, 'keydown', this.keyDownHandler, this);\n      EventHandler.add(this.parent.element, 'keyup', this.keyUpHandler, this);\n    } else {\n      if (!this.parent.allowKeyboard) {\n        EventHandler.add(this.parent.element, 'keydown', this.keyDownHandler, this);\n      }\n    }\n  };\n\n  Selection.prototype.unWireEvents = function () {\n    if (this.isMacOS) {\n      EventHandler.remove(this.parent.element, 'keydown', this.keyDownHandler);\n      EventHandler.remove(this.parent.element, 'keyup', this.keyUpHandler);\n    } else {\n      if (!this.parent.allowKeyboard) {\n        EventHandler.remove(this.parent.element, 'keydown', this.keyDownHandler);\n      }\n    }\n  };\n\n  Selection.prototype.columnPositionChanged = function () {\n    if (!this.parent.isPersistSelection) {\n      this.clearSelection();\n    }\n  };\n\n  Selection.prototype.refreshHeader = function () {\n    this.setCheckAllState();\n  };\n\n  Selection.prototype.rowsRemoved = function (e) {\n    for (var i = 0; i < e.records.length; i++) {\n      delete this.selectedRowState[e.records[i][this.primaryKey]];\n      --this.totalRecordsCount;\n    }\n\n    this.setCheckAllState();\n  };\n\n  Selection.prototype.beforeFragAppend = function (e) {\n    if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection) {\n      this.clearSelection();\n    }\n  };\n\n  Selection.prototype.getCheckAllBox = function () {\n    return this.parent.getHeaderContent().querySelector('.e-checkselectall');\n  };\n\n  Selection.prototype.enableAfterRender = function (e) {\n    if (e.module === this.getModuleName() && e.enable) {\n      this.render();\n      this.initPerisistSelection();\n    }\n  }; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  Selection.prototype.render = function (e) {\n    EventHandler.add(this.parent.getContent(), 'mousedown', this.mouseDownHandler, this);\n    EventHandler.add(this.parent.getHeaderContent(), 'mousedown', this.mouseDownHandler, this);\n  };\n\n  Selection.prototype.onPropertyChanged = function (e) {\n    if (e.module !== this.getModuleName()) {\n      return;\n    }\n\n    var gObj = this.parent;\n\n    if (!isNullOrUndefined(e.properties.type) && this.selectionSettings.type === 'Single') {\n      if (this.selectedRowCellIndexes.length > 1) {\n        this.clearCellSelection();\n        this.prevCIdxs = undefined;\n      }\n\n      if (this.selectedRowIndexes.length > 1) {\n        this.clearRowSelection();\n        this.prevRowIndex = undefined;\n      }\n\n      if (this.selectedColumnsIndexes.length > 1) {\n        this.clearColumnSelection();\n        this.prevColIndex = undefined;\n      }\n\n      this.enableSelectMultiTouch = false;\n      this.hidePopUp();\n    }\n\n    if (!isNullOrUndefined(e.properties.mode) || !isNullOrUndefined(e.properties.cellSelectionMode)) {\n      this.clearSelection();\n      this.prevRowIndex = undefined;\n      this.prevCIdxs = undefined;\n      this.prevColIndex = undefined;\n    }\n\n    this.isPersisted = true;\n    this.checkBoxSelectionChanged();\n    this.isPersisted = false;\n\n    if (!this.parent.isCheckBoxSelection) {\n      this.initPerisistSelection();\n    }\n\n    var checkboxColumn = this.parent.getColumns().filter(function (col) {\n      return col.type === 'checkbox';\n    });\n\n    if (checkboxColumn.length) {\n      gObj.isCheckBoxSelection = !(this.selectionSettings.checkboxMode === 'ResetOnRowClick');\n    }\n\n    this.drawBorders();\n  };\n\n  Selection.prototype.hidePopUp = function () {\n    if (this.parent.element.querySelector('.e-gridpopup').getElementsByClassName('e-rowselect').length) {\n      this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n    }\n  };\n\n  Selection.prototype.initialEnd = function (e) {\n    var isFrozen = this.parent.isFrozenGrid();\n    var isLeftRightFrozen = this.parent.getFrozenMode() === literals.leftRight;\n\n    if ((!isFrozen || isFrozen && !isLeftRightFrozen && !e.args.isFrozen || isLeftRightFrozen && e.args.renderFrozenRightContent) && !this.selectedRowIndexes.length) {\n      this.parent.off(events.contentReady, this.initialEnd);\n      this.selectRow(this.parent.selectedRowIndex);\n    }\n  };\n\n  Selection.prototype.checkBoxSelectionChanged = function () {\n    var gobj = this.parent;\n    gobj.off(events.contentReady, this.checkBoxSelectionChanged);\n    var checkboxColumn = gobj.getColumns().filter(function (col) {\n      return col.type === 'checkbox';\n    });\n\n    if (checkboxColumn.length > 0) {\n      gobj.isCheckBoxSelection = true;\n      this.chkField = checkboxColumn[0].field;\n      this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n\n      if (isNullOrUndefined(this.totalRecordsCount)) {\n        this.totalRecordsCount = this.getCurrentBatchRecordChanges().length;\n      }\n\n      if (this.isSingleSel()) {\n        gobj.selectionSettings.type = 'Multiple';\n        gobj.dataBind();\n      } else {\n        this.initPerisistSelection();\n      }\n    }\n\n    if (!gobj.isCheckBoxSelection && !this.isPersisted) {\n      this.chkField = null;\n      this.initPerisistSelection();\n    }\n  };\n\n  Selection.prototype.initPerisistSelection = function () {\n    var gobj = this.parent;\n\n    if (this.parent.selectionSettings.persistSelection && this.parent.getPrimaryKeyFieldNames().length > 0) {\n      gobj.isPersistSelection = true;\n      this.ensureCheckboxFieldSelection();\n    } else if (this.parent.getPrimaryKeyFieldNames().length > 0) {\n      gobj.isPersistSelection = false;\n      this.ensureCheckboxFieldSelection();\n    } else {\n      gobj.isPersistSelection = false;\n      this.selectedRowState = {};\n    }\n  };\n\n  Selection.prototype.ensureCheckboxFieldSelection = function () {\n    var gobj = this.parent;\n    this.primaryKey = this.parent.getPrimaryKeyFieldNames()[0];\n\n    if (!gobj.enableVirtualization && this.chkField && (gobj.isPersistSelection && Object.keys(this.selectedRowState).length === 0 || !gobj.isPersistSelection)) {\n      var data = this.parent.getDataModule();\n      var query = new Query().where(this.chkField, 'equal', true);\n\n      if (!query.params) {\n        query.params = this.parent.query.params;\n      }\n\n      var dataManager = data.getData({}, query); // eslint-disable-next-line @typescript-eslint/no-this-alias\n\n      var proxy_1 = this;\n      this.parent.showSpinner();\n      dataManager.then(function (e) {\n        proxy_1.dataSuccess(e.result);\n        proxy_1.refreshPersistSelection();\n        proxy_1.parent.hideSpinner();\n      });\n    }\n  };\n\n  Selection.prototype.dataSuccess = function (res) {\n    for (var i = 0; i < res.length; i++) {\n      if (isNullOrUndefined(this.selectedRowState[res[i][this.primaryKey]]) && res[i][this.chkField]) {\n        this.selectedRowState[res[i][this.primaryKey]] = res[i][this.chkField];\n      }\n    }\n\n    this.persistSelectedData = res;\n  };\n\n  Selection.prototype.setRowSelection = function (state) {\n    if (!this.parent.getDataModule().isRemote()) {\n      if (state) {\n        if (this.isPartialSelection && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n          var rowObj = this.parent.getRowsObject().filter(function (e) {\n            return e.isSelectable;\n          });\n\n          for (var _i = 0, rowObj_1 = rowObj; _i < rowObj_1.length; _i++) {\n            var row = rowObj_1[_i];\n            this.selectedRowState[row.data[this.primaryKey]] = true;\n          }\n        } else {\n          var selectedData = this.isPartialSelection ? this.parent.partialSelectedRecords : this.getData();\n\n          if (this.parent.groupSettings.columns.length) {\n            for (var _a = 0, _b = this.isPartialSelection ? selectedData : selectedData.records; _a < _b.length; _a++) {\n              var data = _b[_a];\n              this.selectedRowState[data[this.primaryKey]] = true;\n            }\n          } else {\n            for (var _c = 0, selectedData_1 = selectedData; _c < selectedData_1.length; _c++) {\n              var data = selectedData_1[_c];\n              this.selectedRowState[data[this.primaryKey]] = true;\n            }\n          }\n        }\n      } else {\n        this.selectedRowState = {};\n      } // (this.getData()).forEach(function (data) {\n      //     this.selectedRowState[data[this.primaryKey]] = true;\n      // })\n\n    }\n  };\n\n  Selection.prototype.getData = function () {\n    return this.parent.getDataModule().dataManager.executeLocal(this.parent.getDataModule().generateQuery(true));\n  };\n\n  Selection.prototype.refreshPersistSelection = function () {\n    var rows = this.parent.getRows();\n\n    if (this.parent.isCheckBoxSelection && this.parent.isFrozenGrid()) {\n      var mtbody = this.parent.getMovableContentTbody();\n\n      if (mtbody.querySelector('.e-checkselect')) {\n        rows = this.parent.getMovableRows();\n      }\n\n      if (this.parent.getFrozenMode() === literals.leftRight) {\n        var frtbody = this.parent.getFrozenRightContentTbody();\n\n        if (frtbody.querySelector('.e-checkselect')) {\n          rows = this.parent.getFrozenRightRows();\n        }\n      }\n    }\n\n    this.totalRecordsCount = this.parent.getCurrentViewRecords().length;\n\n    if (this.parent.allowPaging) {\n      this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n    }\n\n    if (rows !== null && rows.length > 0 && (this.parent.isPersistSelection || this.chkField)) {\n      var indexes = [];\n\n      for (var j = 0; j < rows.length; j++) {\n        var rowObj = this.getRowObj(rows[j]);\n        var pKey = rowObj ? rowObj.data ? rowObj.data[this.primaryKey] : null : null;\n\n        if (pKey === null) {\n          return;\n        }\n\n        if (this.isPartialSelection && !rowObj.isSelectable) {\n          continue;\n        }\n\n        var checkState = void 0;\n        var chkBox = rows[j].querySelector('.e-checkselect');\n\n        if (this.selectedRowState[pKey] || this.parent.checkAllRows === 'Check' && this.selectedRowState[pKey] && this.totalRecordsCount === Object.keys(this.selectedRowState).length && this.chkAllCollec.indexOf(pKey) < 0 || this.parent.checkAllRows === 'Uncheck' && this.chkAllCollec.indexOf(pKey) > 0 || this.parent.checkAllRows === 'Intermediate' && !isNullOrUndefined(this.chkField) && rowObj.data[this.chkField]) {\n          indexes.push(parseInt(rows[j].getAttribute(literals.ariaRowIndex), 10));\n          checkState = true;\n        } else {\n          checkState = false;\n\n          if (this.checkedTarget !== chkBox && this.parent.isCheckBoxSelection && chkBox) {\n            removeAddCboxClasses(chkBox.nextElementSibling, checkState);\n          }\n        }\n\n        this.updatePersistCollection(rows[j], checkState);\n      }\n\n      if (this.isSingleSel() && indexes.length > 0) {\n        this.selectRow(indexes[0], true);\n      } else {\n        this.selectRows(indexes);\n      }\n    }\n\n    if (this.parent.isCheckBoxSelection && this.getCurrentBatchRecordChanges().length > 0) {\n      this.setCheckAllState();\n    }\n  };\n\n  Selection.prototype.actionBegin = function (e) {\n    if (e.requestType === 'save' && this.parent.isPersistSelection) {\n      var editChkBox = this.parent.element.querySelector('.e-edit-checkselect');\n\n      if (!isNullOrUndefined(editChkBox)) {\n        var row = closest(editChkBox, '.' + literals.editedRow);\n\n        if (row) {\n          if (this.parent.editSettings.mode === 'Dialog') {\n            row = this.parent.element.querySelector('.e-dlgeditrow');\n          }\n\n          var rowObj = this.getRowObj(row);\n\n          if (!rowObj) {\n            return;\n          }\n\n          this.selectedRowState[rowObj.data[this.primaryKey]] = rowObj.isSelected = editChkBox.checked;\n        } else {\n          this.isCheckedOnAdd = editChkBox.checked;\n        }\n      }\n    }\n\n    if (this.parent.isPersistSelection && this.isPartialSelection) {\n      if (e.requestType === 'paging' && this.parent.getDataModule().isRemote()) {\n        this.selectedRowIndexes = [];\n      }\n\n      if (e.requestType === 'filtering' || e.requestType === 'searching') {\n        this.parent.partialSelectedRecords = [];\n        this.parent.disableSelectedRecords = [];\n      }\n    }\n  };\n\n  Selection.prototype.actionComplete = function (e) {\n    if (e.requestType === 'save' && this.parent.isPersistSelection) {\n      if (e.action === 'add') {\n        if (this.isCheckedOnAdd) {\n          var rowObj = this.parent.getRowObjectFromUID(this.parent.getRows()[e.selectedRow].getAttribute('data-uid'));\n          this.selectedRowState[rowObj.data[this.primaryKey]] = rowObj.isSelected = this.isCheckedOnAdd;\n        }\n\n        this.isHdrSelectAllClicked = false;\n        this.setCheckAllState();\n      }\n\n      this.refreshPersistSelection();\n    }\n\n    if (e.requestType === 'delete' && this.parent.isPersistSelection) {\n      var records = e.data;\n      var data = records.slice();\n\n      for (var i = 0; i < data.length; i++) {\n        if (!isNullOrUndefined(data[i][this.primaryKey])) {\n          this.updatePersistDelete(data[i][this.primaryKey], this.isPartialSelection);\n        }\n      }\n\n      this.isHdrSelectAllClicked = false;\n      this.setCheckAllState();\n      this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n    }\n\n    if (e.requestType === 'paging') {\n      if (this.parent.isPersistSelection && this.isPartialSelection && this.isHdrSelectAllClicked) {\n        var rows = this.parent.getRowsObject();\n        var indexes = [];\n\n        for (var i = 0; i < rows.length; i++) {\n          if (rows[i].isSelectable) {\n            indexes.push(rows[i].index);\n          }\n        }\n\n        if (indexes.length) {\n          this.selectRows(indexes);\n        }\n      }\n\n      this.prevRowIndex = undefined;\n      this.prevCIdxs = undefined;\n      this.prevECIdxs = undefined;\n    }\n  };\n\n  Selection.prototype.onDataBound = function () {\n    if (!this.parent.enableVirtualization && this.parent.isPersistSelection) {\n      if (this.selectedRecords.length) {\n        this.isPrevRowSelection = true;\n      }\n    }\n\n    if (this.parent.enableVirtualization) {\n      this.setCheckAllState();\n    }\n\n    if (this.parent.isPersistSelection) {\n      this.refreshPersistSelection();\n    }\n\n    this.initialRowSelection = this.isRowType() && this.parent.element.querySelectorAll('.e-selectionbackground') && this.parent.getSelectedRows().length ? true : false;\n\n    if (this.parent.isCheckBoxSelection && !this.initialRowSelection) {\n      var totalRecords = this.parent.getRowsObject();\n      var indexes = [];\n\n      for (var i = 0; i < totalRecords.length; i++) {\n        if (totalRecords[i].isSelected) {\n          indexes.push(i);\n        }\n      }\n\n      if (indexes.length) {\n        this.selectRows(indexes);\n      }\n\n      this.initialRowSelection = true;\n    }\n  };\n\n  Selection.prototype.updatePersistSelectedData = function (checkState) {\n    if (this.parent.isPersistSelection) {\n      var rows = this.parent.getRows();\n\n      for (var i = 0; i < rows.length; i++) {\n        this.updatePersistCollection(rows[i], checkState);\n      }\n\n      if (this.parent.checkAllRows === 'Uncheck') {\n        this.setRowSelection(false);\n        this.persistSelectedData = this.parent.getDataModule().isRemote() ? this.persistSelectedData : [];\n      } else if (this.parent.checkAllRows === 'Check') {\n        this.setRowSelection(true);\n        this.persistSelectedData = !this.parent.getDataModule().isRemote() && !this.isPartialSelection ? this.parent.groupSettings.columns.length ? this.getData().records.slice() : this.getData().slice() : this.persistSelectedData;\n      }\n    }\n  };\n\n  Selection.prototype.checkSelectAllAction = function (checkState) {\n    var cRenderer = this.getRenderer();\n    var editForm = this.parent.element.querySelector('.e-gridform');\n    this.checkedTarget = this.getCheckAllBox();\n\n    if (checkState && this.getCurrentBatchRecordChanges().length) {\n      this.parent.checkAllRows = 'Check';\n      this.updatePersistSelectedData(checkState);\n      this.selectRowsByRange(cRenderer.getVirtualRowIndex(0), cRenderer.getVirtualRowIndex(this.getCurrentBatchRecordChanges().length - 1));\n    } else {\n      this.parent.checkAllRows = 'Uncheck';\n      this.updatePersistSelectedData(checkState);\n      this.clearSelection();\n    }\n\n    this.chkAllCollec = [];\n\n    if (!isNullOrUndefined(editForm)) {\n      var editChkBox = editForm.querySelector('.e-edit-checkselect');\n\n      if (!isNullOrUndefined(editChkBox)) {\n        removeAddCboxClasses(editChkBox.nextElementSibling, checkState);\n      }\n    }\n  };\n\n  Selection.prototype.checkSelectAll = function (checkBox) {\n    var _this = this;\n\n    var stateStr = this.getCheckAllStatus(checkBox);\n    var state = stateStr === 'Check';\n    this.isHeaderCheckboxClicked = true;\n\n    if (stateStr === 'Intermediate') {\n      state = this.getCurrentBatchRecordChanges().some(function (data) {\n        return data[_this.primaryKey] in _this.selectedRowState;\n      });\n    }\n\n    if (this.parent.isPersistSelection && this.parent.allowPaging) {\n      this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n    }\n\n    this.checkSelectAllAction(!state);\n    this.target = null;\n\n    if (this.getCurrentBatchRecordChanges().length > 0) {\n      this.setCheckAllState();\n      this.updateSelectedRowIndexes();\n    }\n\n    this.triggerChkChangeEvent(checkBox, !state);\n  };\n\n  Selection.prototype.getCheckAllStatus = function (ele) {\n    var classes = ele ? ele.nextElementSibling.classList : this.getCheckAllBox().nextElementSibling.classList;\n    var status;\n\n    if (classes.contains('e-check')) {\n      status = 'Check';\n    } else if (classes.contains('e-uncheck')) {\n      status = 'Uncheck';\n    } else if (classes.contains('e-stop')) {\n      status = 'Intermediate';\n    } else {\n      status = 'None';\n    }\n\n    return status;\n  };\n\n  Selection.prototype.checkSelect = function (checkBox) {\n    var target = closest(this.checkedTarget, '.' + literals.rowCell);\n    var gObj = this.parent;\n    this.isMultiCtrlRequest = true;\n    var rIndex = 0;\n    this.isHeaderCheckboxClicked = false;\n\n    if (isGroupAdaptive(gObj)) {\n      var uid = target.parentElement.getAttribute('data-uid');\n      rIndex = gObj.getRows().map(function (m) {\n        return m.getAttribute('data-uid');\n      }).indexOf(uid);\n    } else {\n      rIndex = parseInt(target.parentElement.getAttribute(literals.ariaRowIndex), 10);\n    }\n\n    if (this.parent.isPersistSelection && this.parent.element.getElementsByClassName(literals.addedRow).length > 0 && this.parent.editSettings.newRowPosition === 'Top') {\n      ++rIndex;\n    }\n\n    this.rowCellSelectionHandler(rIndex, parseInt(target.getAttribute(literals.ariaColIndex), 10));\n    this.moveIntoUncheckCollection(closest(target, '.' + literals.row));\n    this.setCheckAllState();\n    this.isMultiCtrlRequest = false;\n    this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'));\n  };\n\n  Selection.prototype.moveIntoUncheckCollection = function (row) {\n    if (this.parent.checkAllRows === 'Check' || this.parent.checkAllRows === 'Uncheck') {\n      var rowObj = this.getRowObj(row);\n      var pKey = rowObj && rowObj.data ? rowObj.data[this.primaryKey] : null;\n\n      if (!pKey) {\n        return;\n      }\n\n      if (this.chkAllCollec.indexOf(pKey) < 0) {\n        this.chkAllCollec.push(pKey);\n      } else {\n        this.chkAllCollec.splice(this.chkAllCollec.indexOf(pKey), 1);\n      }\n    }\n  };\n\n  Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState) {\n    this.parent.trigger(events.checkBoxChange, {\n      checked: checkState,\n      selectedRowIndexes: this.parent.getSelectedRowIndexes(),\n      target: checkBox\n    });\n\n    if (!this.parent.isEdit) {\n      this.checkedTarget = null;\n    }\n  };\n\n  Selection.prototype.updateSelectedRowIndexes = function () {\n    if (this.parent.isCheckBoxSelection && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && this.isPartialSelection && !this.parent.getDataModule().isRemote() && this.parent.selectionSettings.persistSelection) {\n      if (this.parent.checkAllRows !== 'Uncheck') {\n        var rowObj = this.parent.getRowsObject().filter(function (e) {\n          return e.isSelectable;\n        });\n\n        for (var _i = 0, rowObj_2 = rowObj; _i < rowObj_2.length; _i++) {\n          var row = rowObj_2[_i];\n          this.selectedRowIndexes.push(row.index);\n        }\n      }\n    }\n  };\n\n  Selection.prototype.updateSelectedRowIndex = function (index) {\n    if (this.parent.isCheckBoxSelection && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && !this.parent.getDataModule().isRemote() && !this.isPartialSelection) {\n      if (this.parent.checkAllRows === 'Check') {\n        this.selectedRowIndexes = [];\n        var dataLength = this.getData().length;\n\n        for (var data = 0; data < dataLength; data++) {\n          this.selectedRowIndexes.push(data);\n        }\n      } else if (this.parent.checkAllRows === 'Uncheck') {\n        this.selectedRowIndexes = [];\n      } else {\n        var row = this.parent.getRowByIndex(index);\n\n        if (index && row && row.getAttribute('aria-selected') === 'false') {\n          var selectedVal = this.selectedRowIndexes.indexOf(index);\n          this.selectedRowIndexes.splice(selectedVal, 1);\n        }\n      }\n    }\n  };\n\n  Selection.prototype.isAllSelected = function (count) {\n    if (this.isPartialSelection) {\n      if (this.parent.allowPaging && this.parent.pageSettings.pageSize < this.parent.pageSettings.totalRecordsCount) {\n        var data = this.parent.partialSelectedRecords;\n\n        for (var i = 0; i < data.length; i++) {\n          var pKey = data[i][this.primaryKey];\n\n          if (!this.selectedRowState[pKey]) {\n            return false;\n          }\n        }\n\n        return true;\n      } else {\n        return this.isSelectAllRowCount(count);\n      }\n    } else {\n      var data = this.getData();\n\n      for (var i = 0; i < data.length; i++) {\n        var pKey = data[i][this.primaryKey];\n\n        if (!this.selectedRowState[pKey]) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  };\n\n  Selection.prototype.someDataSelected = function () {\n    var data = this.isPartialSelection ? this.parent.partialSelectedRecords : this.getData();\n\n    for (var i = 0; i < data.length; i++) {\n      var pKey = data[i][this.primaryKey];\n\n      if (this.selectedRowState[pKey]) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  Selection.prototype.setCheckAllState = function (index, isInteraction) {\n    if (this.parent.isCheckBoxSelection || this.parent.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n      var checkToSelectAll = false;\n      var isFiltered = false;\n      var checkedLen = Object.keys(this.selectedRowState).length;\n\n      if (!this.parent.isPersistSelection) {\n        checkedLen = this.selectedRowIndexes.length;\n        this.totalRecordsCount = this.getCurrentBatchRecordChanges().length;\n      }\n\n      if (this.parent.isPersistSelection && !this.parent.getDataModule().isRemote() && (this.parent.searchSettings.key.length || this.parent.filterSettings.columns.length)) {\n        isFiltered = true;\n        checkToSelectAll = this.isAllSelected(checkedLen);\n      }\n\n      var input = this.getCheckAllBox();\n\n      if (input) {\n        var spanEle = input.nextElementSibling;\n        removeClass([spanEle], ['e-check', 'e-stop', 'e-uncheck']);\n        setChecked(input, false);\n        input.indeterminate = false;\n\n        if (checkToSelectAll && isFiltered || !isFiltered && (checkedLen === this.totalRecordsCount && this.totalRecordsCount && !this.isPartialSelection && !this.parent.enableVirtualization || !this.parent.enableVirtualization && !this.parent.enableInfiniteScrolling && this.isPartialSelection && (this.isSelectAllRowCount(checkedLen) || this.isHdrSelectAllClicked) || (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && !this.parent.allowPaging && (!this.parent.getDataModule().isRemote() && this.getData().length && checkedLen === this.getData().length || this.isPartialSelection && (this.isHdrSelectAllClicked || this.isSelectAllRowCount(checkedLen))))) {\n          addClass([spanEle], ['e-check']);\n          setChecked(input, true);\n\n          if (isInteraction) {\n            this.getRenderer().setSelection(null, true, true);\n          }\n\n          this.parent.checkAllRows = 'Check';\n        } else if ((!this.selectedRowIndexes.length && !this.parent.enableVirtualization || this.parent.enableVirtualization && (!this.persistSelectedData.length && !isFiltered || isFiltered && this.someDataSelected()) || checkedLen === 0 && this.getCurrentBatchRecordChanges().length === 0) && !this.parent.allowPaging || this.parent.allowPaging && (checkedLen === 0 || checkedLen && isFiltered && this.someDataSelected())) {\n          addClass([spanEle], ['e-uncheck']);\n\n          if (isInteraction) {\n            this.getRenderer().setSelection(null, false, true);\n          }\n\n          this.parent.checkAllRows = 'Uncheck';\n\n          if (checkedLen === 0 && this.getCurrentBatchRecordChanges().length === 0) {\n            addClass([spanEle.parentElement], ['e-checkbox-disabled']);\n          } else {\n            removeClass([spanEle.parentElement], ['e-checkbox-disabled']);\n          }\n        } else {\n          addClass([spanEle], ['e-stop']);\n          this.parent.checkAllRows = 'Intermediate';\n          input.indeterminate = true;\n        }\n\n        if (this.isPartialSelection) {\n          var rowCount = this.parent.getRowsObject().filter(function (e) {\n            return e.isSelectable;\n          }).length;\n\n          if (rowCount === 0 && spanEle.parentElement.querySelector('.e-frame').classList.contains('e-uncheck')) {\n            addClass([spanEle.parentElement], ['e-checkbox-disabled']);\n          } else {\n            removeClass([spanEle.parentElement], ['e-checkbox-disabled']);\n          }\n        }\n\n        if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && !this.parent.allowPaging && !this.parent.getDataModule().isRemote()) {\n          this.updateSelectedRowIndex(index);\n        }\n      }\n    }\n  };\n\n  Selection.prototype.isSelectAllRowCount = function (count) {\n    var rowCount = 0;\n    var rowObj = this.parent.getRowsObject();\n\n    if (this.parent.selectionSettings.persistSelection && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n      var dataLen = this.parent.getDataModule().isRemote() ? this.parent.totalDataRecordsCount : this.getData() && this.getData().length;\n\n      if (dataLen === rowObj.length) {\n        rowCount = rowObj.filter(function (e) {\n          return e.isSelectable;\n        }).length;\n        return rowCount && count === rowCount;\n      } else {\n        return false;\n      }\n    } else {\n      if (this.parent.allowPaging && this.parent.selectionSettings.persistSelection) {\n        rowCount = this.parent.partialSelectedRecords.length + this.parent.disableSelectedRecords.length;\n\n        if (rowCount === this.totalRecordsCount) {\n          return this.parent.partialSelectedRecords.length && count === this.parent.partialSelectedRecords.length;\n        } else {\n          return false;\n        }\n      } else {\n        rowCount = rowObj.filter(function (e) {\n          return e.isSelectable;\n        }).length;\n        return rowCount && count === rowCount;\n      }\n    }\n  };\n\n  Selection.prototype.keyDownHandler = function (e) {\n    // Below are keyCode for command key in MAC OS. Safari/Chrome(91-Left command, 93-Right Command), Opera(17), FireFox(224)\n    if ((Browser.info.name === 'chrome' || Browser.info.name === 'safari') && (e.keyCode === 91 || e.keyCode === 93) || Browser.info.name === 'opera' && e.keyCode === 17 || Browser.info.name === 'mozilla' && e.keyCode === 224) {\n      this.cmdKeyPressed = true;\n    }\n\n    if (e.keyCode === 32) {\n      e.preventDefault();\n    }\n  };\n\n  Selection.prototype.keyUpHandler = function (e) {\n    if ((Browser.info.name === 'chrome' || Browser.info.name === 'safari') && (e.keyCode === 91 || e.keyCode === 93) || Browser.info.name === 'opera' && e.keyCode === 17 || Browser.info.name === 'mozilla' && e.keyCode === 224) {\n      this.cmdKeyPressed = false;\n    }\n  };\n\n  Selection.prototype.clickHandler = function (e) {\n    var target = e.target;\n    this.actualTarget = target;\n\n    if (this.selectionSettings.persistSelection) {\n      this.deSelectedData = iterateExtend(this.persistSelectedData);\n    }\n\n    if (parentsUntil(target, literals.row) || parentsUntil(target, 'e-headerchkcelldiv') || this.selectionSettings.allowColumnSelection && target.classList.contains('e-headercell')) {\n      this.isInteracted = true;\n    }\n\n    this.isMultiCtrlRequest = e.ctrlKey || this.enableSelectMultiTouch || this.isMacOS && this.cmdKeyPressed;\n\n    if (!this.parent.allowKeyboard) {\n      this.isMultiShiftRequest = false;\n      this.isMultiCtrlRequest = false;\n    } else {\n      this.isMultiShiftRequest = e.shiftKey;\n    }\n\n    this.popUpClickHandler(e);\n    var chkSelect = false;\n    this.preventFocus = true;\n    var checkBox;\n    var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n    this.checkSelectAllClicked = checkWrap && checkWrap.getElementsByClassName('e-checkselectall') || this.selectionSettings.persistSelection && parentsUntil(target, literals.row) ? true : false;\n\n    if (this.selectionSettings.persistSelection && this.isPartialSelection && parentsUntil(target, 'e-headerchkcelldiv') && !target.querySelector('.e-checkbox-disabled')) {\n      this.isHdrSelectAllClicked = true;\n    }\n\n    if (checkWrap && checkWrap.querySelectorAll('.e-checkselect,.e-checkselectall').length > 0) {\n      checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n      chkSelect = true;\n    }\n\n    this.drawBorders();\n    this.updateAutoFillPosition();\n    target = parentsUntil(target, literals.rowCell);\n\n    if ((target && target.parentElement.classList.contains(literals.row) && !this.parent.selectionSettings.checkboxOnly || chkSelect) && !this.isRowDragSelected) {\n      if (this.parent.isCheckBoxSelection) {\n        this.isMultiCtrlRequest = true;\n      }\n\n      this.target = target;\n\n      if (!isNullOrUndefined(checkBox)) {\n        this.checkedTarget = checkBox;\n\n        if (checkBox.classList.contains('e-checkselectall')) {\n          this.checkSelectAll(checkBox);\n        } else {\n          this.checkSelect(checkBox);\n        }\n      } else {\n        var gObj = this.parent;\n        var rIndex = 0;\n\n        if (isGroupAdaptive(gObj)) {\n          var uid = target.parentElement.getAttribute('data-uid');\n          rIndex = gObj.getRows().map(function (m) {\n            return m.getAttribute('data-uid');\n          }).indexOf(uid);\n        } else {\n          rIndex = parseInt(target.parentElement.getAttribute(literals.ariaRowIndex), 10);\n        }\n\n        if (this.parent.isPersistSelection && this.parent.element.getElementsByClassName(literals.addedRow).length > 0) {\n          ++rIndex;\n        }\n\n        if (!this.mUPTarget || !this.mUPTarget.isEqualNode(target)) {\n          this.rowCellSelectionHandler(rIndex, parseInt(target.getAttribute(literals.ariaColIndex), 10));\n        }\n\n        this.parent.hoverFrozenRows(e);\n\n        if (this.parent.isCheckBoxSelection) {\n          this.moveIntoUncheckCollection(closest(target, '.' + literals.row));\n          this.setCheckAllState();\n        }\n      }\n\n      if (!this.parent.isCheckBoxSelection && Browser.isDevice && !this.isSingleSel()) {\n        this.showPopup(e);\n      }\n    } else if (e.target.classList.contains('e-headercell') && !e.target.classList.contains('e-stackedheadercell')) {\n      var uid = e.target.querySelector('.e-headercelldiv').getAttribute('e-mappinguid');\n      this.headerSelectionHandler(this.parent.getColumnIndexByUid(uid));\n    }\n\n    this.isMultiCtrlRequest = false;\n    this.isMultiShiftRequest = false;\n\n    if (isNullOrUndefined(closest(e.target, '.e-unboundcell'))) {\n      this.preventFocus = false;\n    }\n  };\n\n  Selection.prototype.popUpClickHandler = function (e) {\n    var target = e.target;\n\n    if (closest(target, '.e-headercell') || e.target.classList.contains(literals.rowCell) || closest(target, '.e-gridpopup')) {\n      if (target.classList.contains('e-rowselect')) {\n        if (!target.classList.contains('e-spanclicked')) {\n          target.classList.add('e-spanclicked');\n          this.enableSelectMultiTouch = true;\n        } else {\n          target.classList.remove('e-spanclicked');\n          this.enableSelectMultiTouch = false;\n          this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n        }\n      }\n    } else {\n      this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n    }\n  };\n\n  Selection.prototype.showPopup = function (e) {\n    if (!this.selectionSettings.enableSimpleMultiRowSelection) {\n      setCssInGridPopUp(this.parent.element.querySelector('.e-gridpopup'), e, 'e-rowselect e-icons e-icon-rowselect' + (!this.isSingleSel() && (this.selectedRecords.length > (this.parent.getFrozenColumns() ? 2 : 1) || this.selectedRowCellIndexes.length > 1) ? ' e-spanclicked' : ''));\n    }\n  };\n\n  Selection.prototype.rowCellSelectionHandler = function (rowIndex, cellIndex) {\n    if (!this.isMultiCtrlRequest && !this.isMultiShiftRequest || this.isSingleSel()) {\n      if (!this.isDragged) {\n        this.selectRow(rowIndex, this.selectionSettings.enableToggle);\n      }\n\n      this.selectCell({\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      }, this.selectionSettings.enableToggle);\n\n      if (this.selectedRowCellIndexes.length) {\n        this.updateAutoFillPosition();\n      }\n\n      this.drawBorders();\n    } else if (this.isMultiShiftRequest) {\n      if (this.parent.isCheckBoxSelection || !this.parent.isCheckBoxSelection && !closest(this.target, '.' + literals.rowCell).classList.contains(literals.gridChkBox)) {\n        this.selectRowsByRange(isUndefined(this.prevRowIndex) ? rowIndex : this.prevRowIndex, rowIndex);\n      } else {\n        this.addRowsToSelection([rowIndex]);\n      }\n\n      this.selectCellsByRange(isUndefined(this.prevCIdxs) ? {\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      } : this.prevCIdxs, {\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      });\n      this.updateAutoFillPosition();\n      this.drawBorders();\n    } else {\n      this.addRowsToSelection([rowIndex]);\n      this.addCellsToSelection([{\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      }]);\n      this.showHideBorders('none');\n    }\n\n    this.isDragged = false;\n  };\n\n  Selection.prototype.onCellFocused = function (e) {\n    if (this.parent.frozenRows && e.container.isHeader && e.byKey) {\n      if (e.keyArgs.action === 'upArrow') {\n        if (this.parent.allowFiltering) {\n          e.isJump = e.element.tagName === 'INPUT' ? true : false;\n        } else {\n          e.isJump = e.element.tagName === 'TH' ? true : false;\n        }\n      } else {\n        if (e.keyArgs.action === 'downArrow') {\n          var rIdx = Number(e.element.parentElement.getAttribute(literals.ariaRowIndex));\n          e.isJump = rIdx === 0 ? true : false;\n        } else {\n          if (e.keyArgs.action === 'ctrlHome') {\n            e.isJump = true;\n          }\n        }\n      }\n    }\n\n    var clear = this.parent.isFrozenGrid() ? (e.container.isHeader && e.element.tagName !== 'TD' && e.isJump && !this.selectionSettings.allowColumnSelection || (e.container.isContent || e.element.tagName === 'TD') && !(e.container.isSelectable || e.element.tagName === 'TD')) && !(e.byKey && e.keyArgs.action === 'space') : (e.container.isHeader && e.isJump || e.container.isContent && !e.container.isSelectable) && !(e.byKey && e.keyArgs.action === 'space') && !(e.element.classList.contains('e-detailrowexpand') || e.element.classList.contains('e-detailrowcollapse'));\n    var headerAction = e.container.isHeader && e.element.tagName !== 'TD' && !closest(e.element, '.' + literals.rowCell) && !(e.byKey && e.keyArgs.action === 'space');\n\n    if (!e.byKey || clear) {\n      if (clear && !this.parent.isCheckBoxSelection) {\n        this.clearSelection();\n      }\n\n      return;\n    }\n\n    var _a = e.container.isContent ? e.container.indexes : e.indexes,\n        rowIndex = _a[0],\n        cellIndex = _a[1];\n\n    var prev = this.focus.getPrevIndexes();\n\n    if (this.parent.frozenRows) {\n      if (e.container.isHeader && (e.element.tagName === 'TD' || closest(e.element, '.' + literals.rowCell))) {\n        var thLen = this.parent.getHeaderTable().querySelector('thead').childElementCount;\n        rowIndex -= thLen;\n        prev.rowIndex = !isNullOrUndefined(prev.rowIndex) ? prev.rowIndex - thLen : null;\n      } else {\n        rowIndex += this.parent.frozenRows;\n        prev.rowIndex = prev.rowIndex === 0 || !isNullOrUndefined(prev.rowIndex) ? prev.rowIndex + this.parent.frozenRows : null;\n      }\n    }\n\n    if (this.parent.isFrozenGrid()) {\n      var cIdx = Number(e.element.getAttribute(literals.ariaColIndex));\n      var selectedIndexes = this.parent.getSelectedRowCellIndexes();\n\n      if (selectedIndexes.length && prev.cellIndex === 0) {\n        prev.cellIndex = selectedIndexes[selectedIndexes.length - 1].cellIndexes[0];\n      }\n\n      prev.cellIndex = !isNullOrUndefined(prev.cellIndex) ? prev.cellIndex === cellIndex ? cIdx : cIdx - 1 : null;\n      cellIndex = cIdx;\n    }\n\n    if (this.parent.enableInfiniteScrolling && this.parent.infiniteScrollSettings.enableCache) {\n      rowIndex = parseInt(e.element.parentElement.getAttribute('aria-rowindex'), 10);\n    }\n\n    if ((headerAction || ['ctrlPlusA', 'escape'].indexOf(e.keyArgs.action) === -1 && e.keyArgs.action !== 'space' && rowIndex === prev.rowIndex && cellIndex === prev.cellIndex) && !this.selectionSettings.allowColumnSelection) {\n      return;\n    }\n\n    this.preventFocus = true;\n    var columnIndex = this.getKeyColIndex(e);\n\n    if (this.needColumnSelection) {\n      cellIndex = columnIndex;\n    }\n\n    switch (e.keyArgs.action) {\n      case 'downArrow':\n      case 'upArrow':\n      case 'enter':\n      case 'shiftEnter':\n        this.target = e.element;\n        this.isKeyAction = true;\n        this.applyDownUpKey(rowIndex, cellIndex);\n        break;\n\n      case 'rightArrow':\n      case 'leftArrow':\n        this.applyRightLeftKey(rowIndex, cellIndex);\n        break;\n\n      case 'shiftDown':\n      case 'shiftUp':\n        this.shiftDownKey(rowIndex, cellIndex);\n        break;\n\n      case 'shiftLeft':\n      case 'shiftRight':\n        this.applyShiftLeftRightKey(rowIndex, cellIndex);\n        break;\n\n      case 'home':\n      case 'end':\n        cellIndex = e.keyArgs.action === 'end' ? this.getLastColIndex(rowIndex) : 0;\n        this.applyHomeEndKey(rowIndex, cellIndex);\n        break;\n\n      case 'ctrlHome':\n      case 'ctrlEnd':\n        this.applyCtrlHomeEndKey(rowIndex, cellIndex);\n        break;\n\n      case 'escape':\n        this.clearSelection();\n        break;\n\n      case 'ctrlPlusA':\n        this.ctrlPlusA();\n        break;\n\n      case 'space':\n        this.applySpaceSelection(e.element);\n        break;\n\n      case 'tab':\n        if (this.parent.editSettings.allowNextRowEdit) {\n          this.selectRow(rowIndex);\n        }\n\n        break;\n    }\n\n    this.needColumnSelection = false;\n    this.preventFocus = false;\n    this.positionBorders();\n    this.updateAutoFillPosition();\n  };\n\n  Selection.prototype.getKeyColIndex = function (e) {\n    var uid;\n    var index = null;\n    var stackedHeader = e.element.querySelector('.e-stackedheadercelldiv');\n\n    if (this.selectionSettings.allowColumnSelection && parentsUntil(e.element, 'e-columnheader')) {\n      this.needColumnSelection = e.container.isHeader ? true : false;\n\n      if (stackedHeader) {\n        if (e.keyArgs.action === 'rightArrow' || e.keyArgs.action === 'leftArrow') {\n          return index;\n        }\n\n        uid = stackedHeader.getAttribute('e-mappinguid');\n        var innerColumn = this.getstackedColumns(this.parent.getColumnByUid(uid).columns);\n        var lastIndex = this.parent.getColumnIndexByUid(innerColumn[innerColumn.length - 1].uid);\n        var firstIndex = this.parent.getColumnIndexByUid(innerColumn[0].uid);\n        index = this.prevColIndex >= lastIndex ? firstIndex : lastIndex;\n      } else {\n        index = this.parent.getColumnIndexByUid(e.element.querySelector('.e-headercelldiv').getAttribute('e-mappinguid'));\n      }\n    }\n\n    return index;\n  };\n  /**\n   * Apply ctrl + A key selection\n   *\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.ctrlPlusA = function () {\n    if (this.isRowType() && !this.isSingleSel()) {\n      this.selectRowsByRange(0, this.getCurrentBatchRecordChanges().length - 1);\n    }\n\n    if (this.isCellType() && !this.isSingleSel()) {\n      this.selectCellsByRange({\n        rowIndex: 0,\n        cellIndex: 0\n      }, {\n        rowIndex: this.parent.getRows().length - 1,\n        cellIndex: this.parent.getColumns().length - 1\n      });\n    }\n  };\n\n  Selection.prototype.applySpaceSelection = function (target) {\n    if (target.classList.contains('e-checkselectall')) {\n      this.checkedTarget = target;\n      this.checkSelectAll(this.checkedTarget);\n    } else {\n      if (target.classList.contains('e-checkselect')) {\n        this.checkedTarget = target;\n        this.checkSelect(this.checkedTarget);\n      }\n    }\n  };\n\n  Selection.prototype.applyDownUpKey = function (rowIndex, cellIndex) {\n    var gObj = this.parent;\n\n    if (this.parent.isCheckBoxSelection && this.parent.checkAllRows === 'Check' && !this.selectionSettings.persistSelection) {\n      this.checkSelectAllAction(false);\n      this.checkedTarget = null;\n    }\n\n    if (this.isRowType() && !this.selectionSettings.checkboxOnly) {\n      if (this.parent.frozenRows) {\n        this.selectRow(rowIndex, true);\n        this.applyUpDown(gObj.selectedRowIndex);\n      } else {\n        this.selectRow(rowIndex, true);\n        this.applyUpDown(gObj.selectedRowIndex);\n      }\n    }\n\n    if (this.isCellType()) {\n      this.selectCell({\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      }, true);\n    }\n\n    if (this.selectionSettings.allowColumnSelection && this.needColumnSelection) {\n      this.selectColumn(cellIndex);\n    }\n  };\n\n  Selection.prototype.applyUpDown = function (rowIndex) {\n    if (rowIndex < 0) {\n      return;\n    }\n\n    if (!this.target) {\n      this.target = this.parent.getRows()[0].children[this.parent.groupSettings.columns.length || 0];\n    }\n\n    var cIndex = parseInt(this.target.getAttribute(literals.ariaColIndex), 10);\n    var frzCols = this.parent.getFrozenColumns();\n\n    if (frzCols) {\n      if (cIndex >= frzCols) {\n        this.target = this.contentRenderer.getMovableRowByIndex(rowIndex).getElementsByClassName(literals.rowCell)[cIndex - frzCols];\n      } else {\n        this.target = this.contentRenderer.getRowByIndex(rowIndex).getElementsByClassName(literals.rowCell)[cIndex];\n      }\n    } else {\n      var row = this.contentRenderer.getRowByIndex(rowIndex);\n\n      if (row) {\n        this.target = row.getElementsByClassName(literals.rowCell)[cIndex];\n      }\n    }\n\n    this.addAttribute(this.target);\n  };\n\n  Selection.prototype.applyRightLeftKey = function (rowIndex, cellIndex) {\n    if (this.selectionSettings.allowColumnSelection && this.needColumnSelection) {\n      this.selectColumn(cellIndex);\n    } else if (this.isCellType()) {\n      this.selectCell({\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      }, true);\n      this.addAttribute(this.target);\n    }\n  };\n\n  Selection.prototype.applyHomeEndKey = function (rowIndex, cellIndex) {\n    if (this.isCellType()) {\n      this.selectCell({\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      }, true);\n    } else {\n      this.addAttribute(this.parent.getCellFromIndex(rowIndex, cellIndex));\n    }\n  };\n  /**\n   * Apply shift+down key selection\n   *\n   * @param {number} rowIndex - specfies the rowIndex\n   * @param {number} cellIndex - specifies the CellIndex\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Selection.prototype.shiftDownKey = function (rowIndex, cellIndex) {\n    this.isMultiShiftRequest = true;\n\n    if (this.isRowType() && !this.isSingleSel()) {\n      if (!isUndefined(this.prevRowIndex)) {\n        this.selectRowsByRange(this.prevRowIndex, rowIndex);\n        this.applyUpDown(rowIndex);\n      } else if (this.isPartialSelection) {\n        this.selectRow(rowIndex, true);\n      } else {\n        this.selectRow(0, true);\n      }\n    }\n\n    if (this.isCellType() && !this.isSingleSel()) {\n      this.selectCellsByRange(this.prevCIdxs || {\n        rowIndex: 0,\n        cellIndex: 0\n      }, {\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      });\n    }\n\n    this.isMultiShiftRequest = false;\n  };\n\n  Selection.prototype.applyShiftLeftRightKey = function (rowIndex, cellIndex) {\n    this.isMultiShiftRequest = true;\n\n    if (this.selectionSettings.allowColumnSelection && this.needColumnSelection) {\n      this.selectColumnsByRange(this.prevColIndex, cellIndex);\n    } else {\n      this.selectCellsByRange(this.prevCIdxs, {\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      });\n    }\n\n    this.isMultiShiftRequest = false;\n  };\n\n  Selection.prototype.getstackedColumns = function (column) {\n    var innerColumnIndexes = [];\n\n    for (var i = 0, len = column.length; i < len; i++) {\n      if (column[i].columns) {\n        this.getstackedColumns(column[i].columns);\n      } else {\n        innerColumnIndexes.push(column[i]);\n      }\n    }\n\n    return innerColumnIndexes;\n  };\n\n  Selection.prototype.applyCtrlHomeEndKey = function (rowIndex, cellIndex) {\n    if (this.isRowType()) {\n      this.selectRow(rowIndex, true);\n      this.addAttribute(this.parent.getCellFromIndex(rowIndex, cellIndex));\n    }\n\n    if (this.isCellType()) {\n      this.selectCell({\n        rowIndex: rowIndex,\n        cellIndex: cellIndex\n      }, true);\n    }\n  };\n\n  Selection.prototype.addRemoveClassesForRow = function (row, isAdd, clearAll) {\n    var args = [];\n\n    for (var _i = 3; _i < arguments.length; _i++) {\n      args[_i - 3] = arguments[_i];\n    }\n\n    if (row) {\n      var cells = [].slice.call(row.getElementsByClassName(literals.rowCell));\n      var detailIndentCell = row.querySelector('.e-detailrowcollapse') || row.querySelector('.e-detailrowexpand');\n      var dragdropIndentCell = row.querySelector('.e-rowdragdrop');\n\n      if (detailIndentCell) {\n        cells.push(detailIndentCell);\n      }\n\n      if (dragdropIndentCell) {\n        cells.push(dragdropIndentCell);\n      }\n\n      addRemoveActiveClasses.apply(void 0, [cells, isAdd].concat(args));\n    }\n\n    this.getRenderer().setSelection(row ? row.getAttribute('data-uid') : null, isAdd, clearAll);\n  };\n\n  Selection.prototype.isRowType = function () {\n    return this.selectionSettings.mode === 'Row' || this.selectionSettings.mode === 'Both';\n  };\n\n  Selection.prototype.isCellType = function () {\n    return this.selectionSettings.mode === 'Cell' || this.selectionSettings.mode === 'Both';\n  };\n\n  Selection.prototype.isSingleSel = function () {\n    return this.selectionSettings.type === 'Single';\n  };\n\n  Selection.prototype.getRenderer = function () {\n    if (isNullOrUndefined(this.contentRenderer)) {\n      this.contentRenderer = this.factory.getRenderer(RenderType.Content);\n    }\n\n    return this.contentRenderer;\n  };\n  /**\n   * Gets the collection of selected records.\n   *\n   * @returns {Object[]} returns the Object\n   */\n\n\n  Selection.prototype.getSelectedRecords = function () {\n    var selectedData = [];\n\n    if (!this.selectionSettings.persistSelection && this.selectedRecords.length) {\n      selectedData = this.parent.getRowsObject().filter(function (row) {\n        return row.isSelected;\n      }).map(function (m) {\n        return m.data;\n      });\n    } else {\n      selectedData = this.persistSelectedData;\n    }\n\n    return selectedData;\n  };\n  /**\n   * Select the column by passing start column index\n   *\n   * @param {number} index - specifies the index\n   * @returns {void}\n   */\n\n\n  Selection.prototype.selectColumn = function (index) {\n    var gObj = this.parent;\n\n    if (isNullOrUndefined(gObj.getColumns()[index])) {\n      return;\n    }\n\n    var column = gObj.getColumnByIndex(index);\n    var selectedCol = gObj.getColumnHeaderByUid(column.uid);\n    var isColSelected = selectedCol.classList.contains('e-columnselection');\n\n    if (!gObj.selectionSettings.allowColumnSelection) {\n      return;\n    }\n\n    var isMultiColumns = this.selectedColumnsIndexes.length > 1 && this.selectedColumnsIndexes.indexOf(index) > -1;\n    this.clearColDependency();\n\n    if (!isColSelected || !this.selectionSettings.enableToggle || isMultiColumns) {\n      var args = {\n        columnIndex: index,\n        headerCell: selectedCol,\n        column: column,\n        cancel: false,\n        target: this.actualTarget,\n        isInteracted: this.isInteracted,\n        previousColumnIndex: this.prevColIndex,\n        isCtrlPressed: this.isMultiCtrlRequest,\n        isShiftPressed: this.isMultiShiftRequest\n      };\n      this.onActionBegin(args, events.columnSelecting);\n\n      if (args.cancel) {\n        this.disableInteracted();\n        return;\n      }\n\n      if (!(gObj.selectionSettings.enableToggle && index === this.prevColIndex && isColSelected) || isMultiColumns) {\n        this.updateColSelection(selectedCol, index);\n      }\n\n      var selectedArgs = {\n        columnIndex: index,\n        headerCell: selectedCol,\n        column: column,\n        target: this.actualTarget,\n        isInteracted: this.isInteracted,\n        previousColumnIndex: this.prevColIndex\n      };\n      this.onActionComplete(selectedArgs, events.columnSelected);\n    }\n\n    this.updateColProps(index);\n  };\n  /**\n   * Select the columns by passing start and end column index\n   *\n   * @param  {number} startIndex - specifies the start index\n   * @param  {number} endIndex - specifies the end index\n   * @returns {void}\n   */\n\n\n  Selection.prototype.selectColumnsByRange = function (startIndex, endIndex) {\n    var gObj = this.parent;\n\n    if (isNullOrUndefined(gObj.getColumns()[startIndex])) {\n      return;\n    }\n\n    var indexes = [];\n\n    if (gObj.selectionSettings.type === 'Single' || isNullOrUndefined(endIndex)) {\n      indexes[0] = startIndex;\n    } else {\n      var min = startIndex < endIndex;\n\n      for (var i = startIndex; min ? i <= endIndex : i >= endIndex; min ? i++ : i--) {\n        indexes.push(i);\n      }\n    }\n\n    this.selectColumns(indexes);\n  };\n  /**\n   * Select the columns by passing column indexes\n   *\n   * @param  {number[]} columnIndexes - specifies the columnIndexes\n   * @returns {void}\n   */\n\n\n  Selection.prototype.selectColumns = function (columnIndexes) {\n    var gObj = this.parent;\n    var selectedCol = this.getselectedCols();\n\n    if (gObj.selectionSettings.type === 'Single') {\n      columnIndexes = [columnIndexes[0]];\n    }\n\n    if (!gObj.selectionSettings.allowColumnSelection) {\n      return;\n    }\n\n    this.clearColDependency();\n    var selectingArgs = {\n      columnIndex: columnIndexes[0],\n      headerCell: selectedCol,\n      columnIndexes: columnIndexes,\n      column: gObj.getColumnByIndex(columnIndexes[0]),\n      cancel: false,\n      target: this.actualTarget,\n      isInteracted: this.isInteracted,\n      previousColumnIndex: this.prevColIndex,\n      isCtrlPressed: this.isMultiCtrlRequest,\n      isShiftPressed: this.isMultiShiftRequest\n    };\n    this.onActionBegin(selectingArgs, events.columnSelecting);\n\n    if (selectingArgs.cancel) {\n      this.disableInteracted();\n      return;\n    }\n\n    for (var i = 0, len = columnIndexes.length; i < len; i++) {\n      this.updateColSelection(gObj.getColumnHeaderByUid(gObj.getColumnByIndex(columnIndexes[i]).uid), columnIndexes[i]);\n    }\n\n    selectedCol = this.getselectedCols();\n    var selectedArgs = {\n      columnIndex: columnIndexes[0],\n      headerCell: selectedCol,\n      columnIndexes: columnIndexes,\n      column: gObj.getColumnByIndex(columnIndexes[0]),\n      target: this.actualTarget,\n      isInteracted: this.isInteracted,\n      previousColumnIndex: this.prevColIndex\n    };\n    this.onActionComplete(selectedArgs, events.columnSelected);\n    this.updateColProps(columnIndexes[0]);\n  };\n  /**\n   * Select the column with existing column by passing column index\n   *\n   * @param  {number} startIndex - specifies the start index\n   * @returns {void}\n   */\n\n\n  Selection.prototype.selectColumnWithExisting = function (startIndex) {\n    var gObj = this.parent;\n\n    if (isNullOrUndefined(gObj.getColumns()[startIndex])) {\n      return;\n    }\n\n    var newCol = gObj.getColumnHeaderByUid(gObj.getColumnByIndex(startIndex).uid);\n    var selectedCol = this.getselectedCols();\n\n    if (gObj.selectionSettings.type === 'Single') {\n      this.clearColDependency();\n    }\n\n    if (!gObj.selectionSettings.allowColumnSelection) {\n      return;\n    }\n\n    if (this.selectedColumnsIndexes.indexOf(startIndex) > -1) {\n      this.clearColumnSelection(startIndex);\n    } else {\n      var selectingArgs = {\n        columnIndex: startIndex,\n        headerCell: selectedCol,\n        columnIndexes: this.selectedColumnsIndexes,\n        column: gObj.getColumnByIndex(startIndex),\n        cancel: false,\n        target: this.actualTarget,\n        isInteracted: this.isInteracted,\n        previousColumnIndex: this.prevColIndex,\n        isCtrlPressed: this.isMultiCtrlRequest,\n        isShiftPressed: this.isMultiShiftRequest\n      };\n      this.onActionBegin(selectingArgs, events.columnSelecting);\n\n      if (selectingArgs.cancel) {\n        this.disableInteracted();\n        return;\n      }\n\n      this.updateColSelection(newCol, startIndex);\n      selectedCol = this.getselectedCols();\n      var selectedArgs = {\n        columnIndex: startIndex,\n        headerCell: selectedCol,\n        column: gObj.getColumnByIndex(startIndex),\n        columnIndexes: this.selectedColumnsIndexes,\n        target: this.actualTarget,\n        isInteracted: this.isInteracted,\n        previousColumnIndex: this.prevColIndex\n      };\n      this.onActionComplete(selectedArgs, events.columnSelected);\n    }\n\n    this.updateColProps(startIndex);\n  };\n  /**\n   * Clear the column selection\n   *\n   * @param {number} clearIndex - specifies the clearIndex\n   * @returns {void}\n   */\n\n\n  Selection.prototype.clearColumnSelection = function (clearIndex) {\n    if (this.isColumnSelected) {\n      var gObj = this.parent;\n\n      if (!isNullOrUndefined(clearIndex) && this.selectedColumnsIndexes.indexOf(clearIndex) === -1) {\n        return;\n      }\n\n      var index = !isNullOrUndefined(clearIndex) ? clearIndex : this.selectedColumnsIndexes[this.selectedColumnsIndexes.length - 1];\n      var col = gObj.getColumnByIndex(index);\n      var selectedCol = void 0;\n      var column = gObj.getColumnByIndex(index);\n\n      if (col.getFreezeTableName() === literals.frozenRight) {\n        selectedCol = gObj.getFrozenRightColumnHeaderByIndex(index);\n      } else if (col.getFreezeTableName() === 'movable') {\n        selectedCol = gObj.getMovableColumnHeaderByIndex(index);\n      } else {\n        selectedCol = gObj.getColumnHeaderByUid(column.uid);\n      }\n\n      var deselectedArgs = {\n        columnIndex: index,\n        headerCell: selectedCol,\n        columnIndexes: this.selectedColumnsIndexes,\n        column: column,\n        cancel: false,\n        target: this.actualTarget,\n        isInteracted: this.isInteracted\n      };\n      var isCanceled = this.columnDeselect(deselectedArgs, events.columnDeselecting);\n\n      if (isCanceled) {\n        this.disableInteracted();\n        return;\n      }\n\n      var selectedHeader = !isNullOrUndefined(clearIndex) ? [selectedCol] : [].slice.call(gObj.getHeaderContent().getElementsByClassName('e-columnselection'));\n      var selectedCells = this.getSelectedColumnCells(clearIndex);\n\n      for (var i = 0, len = selectedHeader.length; i < len; i++) {\n        addRemoveActiveClasses([selectedHeader[i]], false, 'e-columnselection');\n      }\n\n      for (var i = 0, len = selectedCells.length; i < len; i++) {\n        addRemoveActiveClasses([selectedCells[i]], false, 'e-columnselection');\n      }\n\n      if (!isNullOrUndefined(clearIndex)) {\n        this.selectedColumnsIndexes.splice(this.selectedColumnsIndexes.indexOf(clearIndex), 1);\n        this.parent.getColumns()[clearIndex].isSelected = false;\n      } else {\n        this.columnDeselect(deselectedArgs, events.columnDeselected);\n        this.selectedColumnsIndexes = [];\n        this.isColumnSelected = false;\n        this.parent.getColumns().filter(function (col) {\n          return col.isSelected = false;\n        });\n      }\n    }\n  };\n\n  Selection.prototype.getselectedCols = function () {\n    var gObj = this.parent;\n    var selectedCol;\n\n    if (this.selectedColumnsIndexes.length > 1) {\n      selectedCol = [];\n\n      for (var i = 0; i < this.selectedColumnsIndexes.length; i++) {\n        selectedCol.push(gObj.getColumnHeaderByUid(gObj.getColumnByIndex(this.selectedColumnsIndexes[i]).uid));\n      }\n    } else {\n      selectedCol = gObj.getColumnHeaderByUid(gObj.getColumnByIndex(this.selectedColumnsIndexes[0]).uid);\n    }\n\n    return selectedCol;\n  };\n\n  Selection.prototype.getSelectedColumnCells = function (clearIndex) {\n    var gObj = this.parent;\n    var isRowTemplate = !isNullOrUndefined(this.parent.rowTemplate);\n    var rows = isRowTemplate ? gObj.getRows() : gObj.getDataRows();\n    var movableRows;\n    var frRows;\n\n    if (gObj.isFrozenGrid() && gObj.getContent().querySelector('.' + literals.movableContent)) {\n      movableRows = isRowTemplate ? gObj.getMovableRows() : gObj.getMovableDataRows();\n      rows = gObj.addMovableRows(rows, movableRows);\n\n      if (gObj.getFrozenMode() === literals.leftRight) {\n        frRows = isRowTemplate ? gObj.getFrozenRightRows() : gObj.getFrozenRightDataRows();\n        rows = gObj.addMovableRows(rows, frRows);\n      }\n    }\n\n    var seletedcells = [];\n    var selectionString = !isNullOrUndefined(clearIndex) ? '[aria-colindex=\"' + clearIndex + '\"]' : '.e-columnselection';\n\n    for (var i = 0, len = rows.length; i < len; i++) {\n      seletedcells = seletedcells.concat([].slice.call(rows[i].querySelectorAll(selectionString)));\n    }\n\n    return seletedcells;\n  };\n\n  Selection.prototype.columnDeselect = function (args, event) {\n    if (event === 'columnDeselected') {\n      delete args.cancel;\n    }\n\n    this.onActionComplete(args, event);\n    return args.cancel;\n  };\n\n  Selection.prototype.updateColProps = function (startIndex) {\n    this.prevColIndex = startIndex;\n    this.isColumnSelected = this.selectedColumnsIndexes.length && true;\n  };\n\n  Selection.prototype.clearColDependency = function () {\n    this.clearColumnSelection();\n    this.selectedColumnsIndexes = [];\n  };\n\n  Selection.prototype.updateColSelection = function (selectedCol, startIndex) {\n    if (isNullOrUndefined(this.parent.getColumns()[startIndex])) {\n      return;\n    }\n\n    var left = this.parent.getFrozenLeftCount();\n    var movable = this.parent.getMovableColumnsCount();\n    var col = this.parent.getColumnByIndex(startIndex);\n    var isRowTemplate = !isNullOrUndefined(this.parent.rowTemplate);\n    var rows;\n    this.selectedColumnsIndexes.push(startIndex);\n    this.parent.getColumns()[startIndex].isSelected = true;\n\n    if (col.getFreezeTableName() === literals.frozenRight) {\n      startIndex = startIndex - (left + movable);\n      rows = isRowTemplate ? this.parent.getFrozenRightRows() : this.parent.getFrozenRightDataRows();\n    } else if (col.getFreezeTableName() === 'movable') {\n      startIndex = startIndex - left;\n      rows = isRowTemplate ? this.parent.getMovableRows() : this.parent.getMovableDataRows();\n    } else {\n      startIndex = startIndex + this.parent.getIndentCount();\n      rows = isRowTemplate ? this.parent.getRows() : this.parent.getDataRows();\n    }\n\n    addRemoveActiveClasses([selectedCol], true, 'e-columnselection');\n\n    for (var j = 0, len = rows.length; j < len; j++) {\n      if (rows[j].classList.contains(literals.row)) {\n        if ((rows[j].classList.contains(literals.editedRow) || rows[j].classList.contains(literals.addedRow)) && this.parent.editSettings.mode === 'Normal' && !isNullOrUndefined(rows[j].querySelector('tr').childNodes[startIndex])) {\n          addRemoveActiveClasses([rows[j].querySelector('tr').childNodes[startIndex]], true, 'e-columnselection');\n        } else if (!isNullOrUndefined(rows[j].childNodes[startIndex])) {\n          addRemoveActiveClasses([rows[j].childNodes[startIndex]], true, 'e-columnselection');\n        }\n      }\n    }\n  };\n\n  Selection.prototype.headerSelectionHandler = function (colIndex) {\n    if (!this.isMultiCtrlRequest && !this.isMultiShiftRequest || this.isSingleSel()) {\n      this.selectColumn(colIndex);\n    } else if (this.isMultiShiftRequest) {\n      this.selectColumnsByRange(isUndefined(this.prevColIndex) ? colIndex : this.prevColIndex, colIndex);\n    } else {\n      this.selectColumnWithExisting(colIndex);\n    }\n  }; // eslint-disable-next-line camelcase\n\n\n  Selection.prototype.addEventListener_checkbox = function () {\n    var _this = this;\n\n    this.parent.on(events.dataReady, this.dataReady, this);\n    this.onDataBoundFunction = this.onDataBound.bind(this);\n    this.parent.addEventListener(events.dataBound, this.onDataBoundFunction);\n    this.parent.on(events.refreshInfinitePersistSelection, this.onDataBoundFunction);\n    this.parent.on(events.contentReady, this.checkBoxSelectionChanged, this);\n    this.parent.on(events.beforeRefreshOnDataChange, this.initPerisistSelection, this);\n    this.parent.on(events.onEmpty, this.setCheckAllForEmptyGrid, this);\n    this.actionCompleteFunc = this.actionCompleteHandler.bind(this);\n    this.parent.addEventListener(events.actionComplete, this.actionCompleteFunc);\n    this.parent.on(events.click, this.clickHandler, this);\n\n    this.resizeEndFn = function () {\n      _this.updateAutoFillPosition();\n\n      _this.drawBorders();\n    };\n\n    this.resizeEndFn.bind(this);\n    this.parent.addEventListener(events.resizeStop, this.resizeEndFn);\n  }; // eslint-disable-next-line camelcase\n\n\n  Selection.prototype.removeEventListener_checkbox = function () {\n    this.parent.off(events.dataReady, this.dataReady);\n    this.parent.removeEventListener(events.dataBound, this.onDataBoundFunction);\n    this.parent.removeEventListener(events.actionComplete, this.actionCompleteFunc);\n    this.parent.off(events.refreshInfinitePersistSelection, this.onDataBoundFunction);\n    this.parent.off(events.onEmpty, this.setCheckAllForEmptyGrid);\n    this.parent.off(events.click, this.clickHandler);\n    this.parent.off(events.beforeRefreshOnDataChange, this.initPerisistSelection);\n  };\n\n  Selection.prototype.setCheckAllForEmptyGrid = function () {\n    var checkAllBox = this.getCheckAllBox();\n\n    if (checkAllBox) {\n      this.parent.isCheckBoxSelection = true;\n      var spanEle = checkAllBox.nextElementSibling;\n      removeClass([spanEle], ['e-check', 'e-stop', 'e-uncheck']);\n    }\n  };\n\n  Selection.prototype.dataReady = function (e) {\n    this.isHeaderCheckboxClicked = false;\n    var isInfinitecroll = this.parent.enableInfiniteScrolling && e.requestType === 'infiniteScroll';\n\n    if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection && !isInfinitecroll) {\n      this.disableUI = !this.parent.enableImmutableMode;\n      this.clearSelection();\n      this.setCheckAllState();\n      this.disableUI = false;\n    }\n  };\n\n  Selection.prototype.actionCompleteHandler = function (e) {\n    if (e.requestType === 'save' && this.parent.isPersistSelection) {\n      this.refreshPersistSelection();\n    }\n  };\n\n  Selection.prototype.selectRowIndex = function (index) {\n    this.parent.isSelectedRowIndexUpdating = true;\n    this.parent.selectedRowIndex = index;\n  };\n\n  Selection.prototype.disableInteracted = function () {\n    this.isInteracted = false;\n  };\n\n  Selection.prototype.activeTarget = function () {\n    this.actualTarget = this.isInteracted ? this.actualTarget : null;\n  };\n\n  return Selection;\n}();\n\nexport { Selection };","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","Browser","EventHandler","createElement","isNullOrUndefined","isUndefined","addClass","removeClass","remove","closest","select","Query","setCssInGridPopUp","getPosition","isGroupAdaptive","addRemoveActiveClasses","removeAddCboxClasses","getCellsByTableName","getCellByColAndRowIndex","parentsUntil","gridActionHandler","events","RenderType","iterateExtend","setChecked","addRemoveEventListener","literals","Selection","parent","selectionSettings","locator","selectedRowIndexes","selectedRowCellIndexes","selectedRecords","preventFocus","selectedColumnsIndexes","checkBoxState","isMultiShiftRequest","isMultiCtrlRequest","enableSelectMultiTouch","clearRowCheck","selectRowCheck","selectedRowState","totalRecordsCount","chkAllCollec","isCheckedOnAdd","persistSelectedData","deSelectedData","isHdrSelectAllClicked","needColumnSelection","isCancelDeSelect","isPreventCellSelect","disableUI","isPersisted","cmdKeyPressed","cellselected","isMultiSelection","isAddRowsToSelection","initialRowSelection","isPrevRowSelection","isKeyAction","isRowDragSelected","isPartialSelection","autoFillRLselection","bottom","top","right_bottom","bottom_left","top_right","top_left","top_bottom","top_right_bottom","top_bottom_left","top_right_left","right_bottom_left","all_border","factory","getService","focus","addEventListener","wireEvents","initializeSelection","log","render","onActionBegin","args","type","trigger","fDataUpdate","cellIndex","rowIndex","rowObj","getRowObj","currentIndex","foreignKeyData","onActionComplete","getModuleName","destroy","gridElement","element","querySelector","gridHeader","gridContent","hidePopUp","clearSelection","removeEventListener","unWireEvents","getContent","mouseDownHandler","getHeaderContent","isEditing","editSettings","mode","editModule","formObj","validate","isEdit","isPersistSelection","getSelectedMovableRow","index","gObj","isFrozenGrid","movableContent","getMovableRowByIndex","getSelectedFrozenRightRow","getFrozenMode","leftRight","getFrozenRightContent","getFrozenRightRowByIndex","getCurrentBatchRecordChanges","currentRecords","getCurrentViewRecords","newRowPosition","concat","getBatchChanges","addedRecords","deletedRecords","primaryKey","getPrimaryKeyFieldNames","j","splice","selectRow","isToggle","enableSimpleMultiRowSelection","addRowsToSelection","selectedRow","getRowByIndex","getRowObjectFromUID","getAttribute","isDataRow","isSelectable","selectedMovableRow","selectedFrozenRightRow","selectData","isRemoved","enableVirtualization","e","selectedIndex","isAvailable","notify","selectVirtualRow","frozenData","contentModule","getRowObjectByIndex","data","persistSelection","prevSelectedData","getSelectedRecords","clearRowSelection","isRowType","isRowSelected","hasAttribute","activeTarget","isCheckBoxSelection","can","isCtrlPressed","isShiftPressed","row","previousRow","prevRowIndex","previousRowIndex","target","actualTarget","cancel","isInteracted","isHeaderCheckboxClicked","addMovableArgs","rowSelecting","rowSelectingCallBack","_this","disableInteracted","toggle","removed","checkboxMode","clearSelectedRow","selectRowCallBack","clearRow","indexOf","updateRowSelection","selectMovableRow","selectRowIndex","isHeaderCheckBoxClicked","rowSelected","updateRowProps","targetObj","mRow","frRow","mObj","previousMovRow","getMovableRows","frozenRightRow","previousFrozenRightRow","getFrozenRightDataRows","selectRowsByRange","startIndex","endIndex","selectRows","getCollectionFromIndexes","selectedDataUpdate","selectedData","selectedRows","rowIndexes","selectableRowIndex","len","currentRow","getDataRows","push","slice","isSingleSel","prevRow","getRows","selectRowFn","rightEle","undefined","_i","selectableRowIndex_1","rowIdx","indexes","getSelectedRowIndexes","checkboxOnly","checkboxColumn","getColumns","filter","col","rowIndexes_1","isUnSelected","enableToggle","rowDeselect","rowDeselecting","removeAttribute","addRemoveClassesForRow","rowDeselected","_a","max","reverse","clearRowCallBack","checkAllRows","selectedEle","updatePersistCollection","updateCheckBoxes","chkState","ensureCheckboxFieldSelection","pKey_1","isSelected","some","updatePersistDelete","pKey","isPresent","partialSelectedRecords","chkBox","nextElementSibling","checkedTarget","classList","contains","setCheckAllState","pop","setAttribute","getPrevIndexes","cells","contextMenuModule","mouseButton","cell","onClick","checkSelectAllClicked","span","clearCellSelection","clearColumnSelection","prevCIdxs","prevECIdxs","rows_1","data_1","row_1","mRow_1","fRightRow_1","rowIndex_1","foreignKeyData_1","target_1","mRows","frRows","getFrozenRightRows","isRowClicked","getCheckAllStatus","updatePersistSelectedData","record","movableRow","rowDeselectCallBack","currentInfo","cancl_1","isSingleDeSel","rowDeselectObj","rowInString","target_2","rowidx","rowidxex","dataTxt","foreignKey","isHeaderCheckBxClick","getSelectedMovableCell","getColumnByIndex","frzCols","getFreezeTableName","getMovableCellFromIndex","getColIndex","selectCell","isCellType","selectedCell","getCellFromIndex","isCellSelected","previousRowCell","getCellIndex","currentCell","previousRowCellIndex","cellSelecting","successCallBack","cellSelectingArgs","cncl","clearCell","updateCellSelection","selectedRowCellIndex","updateCellProps","cellSelected","rIdx","cIdx","getFrozenColumns","selectCellsByRange","min","stIndex","edIndex","cellIndexes","temp","cellSelectionMode","getLastColIndex","addAttribute","cellSelectedArgs","isDragged","selectCells","rowCellIndexes","cellSelectArgs","cellLen","addRowCellIndex","prvRowCellIndex","addCellsToSelection","left","getFrozenLeftCount","movable","getMovableColumnsCount","hideAutoFill","tableName","rows","frozenLeft","getRowsObject","getMovableRowsObject","frozenRight","getFrozenRightRowsObject","groupSettings","columns","parentElement","cellIndexes_1","idx","selectedCellIdx","cellDeselect","cellDeselecting","cellDeselected","m","colIndex","parseInt","ariaColIndex","getFrozenLeftColumnsCount","getMovableDataRows","querySelectorAll","cancl","gridChkBox","add","rowCellIndex","isRowAvail","selectedCells","getSelectedCellsElement","rowCell","currentViewData","cLen","bdrElement","showHideBorders","addMovableRows","getElementsByClassName","mouseMoveHandler","preventDefault","gBRect","getBoundingClientRect","x1","x","y1","y","position","x2","y2","tmp","isCellDrag","document","elementFromPoint","offsetLeft","clientY","style","width","height","ctrlKey","shiftKey","ariaRowIndex","startDIndex","td","startAFCell","startCell","endAFCell","selectLikeExcel","isAutoFillSel","startDCellIndex","drawBorders","showAFBorders","selectLikeAutoFill","createBorders","positionBorders","isLastCell","isLastRow","tbody","isFirstRow","isFirstCell","setBorders","parentEle","border","bdrStr","ele","display","isFrozen","start","end","stOff","endOff","parentOff","offsetParent","rowHeight","topOffSet","frozenRows","leftOffset","rightOffset","enableRtl","right","selectDirection","updateStartEndCells","getContentTable","getMovableContent","mcBdrElement","frcBdrElement","getHeaderTable","fhBdrElement","headerModule","getMovableHeader","mhBdrElement","getFrozenRightHeader","frhBdrElement","applyBorders","applyBothFrozenBorders","str","rtl","borderWidth","includes","appendChild","className","id","styles","drawAFBorders","bdrAFBottom","createAFBorders","positionAFBorders","bdrAFLeft","firstCellTop","firstCellLeft","movableHeader","parentRect","sTop","scrollTop","sLeft","scrollLeft","offsetTop","totalHeight","clientHeight","totalWidth","clientWidth","Math","floor","bdrAFRight","bdrAFTop","leftRemove","scrolloffSet","parseFloat","topRemove","hideAFBorders","updateValue","createBeforeAutoFill","updateCell","field","value","column","innerText","beforeAutoFill","getAutoFillCells","startCellIdx","cls","isApply","startrowIdx","endrowIdx","endCellIdx","rowLen","colLen","cellIdx","endCell","c","startCellIndex","trIdx","r","mouseUpHandler","body","mUPTarget","updateAutoFillPosition","lastCell","updateStartCellsIndex","autofill","enableAutoFill","rindex","isFrozenCol","isFrozenRow","isFrozenRight","table","clientRect","colWidth","button","isDrag","headerContent","editedRow","allowRowDragAndDrop","enableDrag","isUpdate","tr","postion","clearSelAfterRefresh","isInfiniteScroll","enableInfiniteScrolling","requestType","isDestroyed","evtHandlers","event","uiUpdate","handler","enableAfterRender","initialEnd","rowSelectionComplete","cellSelectionComplete","inBoundModelChanged","onPropertyChanged","cellFocused","onCellFocused","beforeFragAppend","columnPositionChanged","contentReady","rowsRemoved","headerRefreshed","refreshHeader","actionBeginFunction","actionBegin","bind","actionCompleteFunction","actionComplete","addEventListener_checkbox","removeEventListener_checkbox","isMacOS","navigator","userAgent","keyDownHandler","keyUpHandler","allowKeyboard","records","getCheckAllBox","module","enable","initPerisistSelection","properties","prevColIndex","checkBoxSelectionChanged","isLeftRightFrozen","renderFrozenRightContent","off","selectedRowIndex","gobj","chkField","pageSettings","dataBind","keys","getDataModule","query","where","params","dataManager","getData","proxy_1","showSpinner","then","dataSuccess","result","refreshPersistSelection","hideSpinner","res","setRowSelection","state","isRemote","rowObj_1","_b","_c","selectedData_1","executeLocal","generateQuery","mtbody","getMovableContentTbody","frtbody","getFrozenRightContentTbody","allowPaging","checkState","editChkBox","checked","disableSelectedRecords","action","onDataBound","getSelectedRows","totalRecords","checkSelectAllAction","cRenderer","getRenderer","editForm","getVirtualRowIndex","checkSelectAll","checkBox","stateStr","updateSelectedRowIndexes","triggerChkChangeEvent","classes","status","checkSelect","rIndex","uid","map","addedRow","rowCellSelectionHandler","moveIntoUncheckCollection","checkBoxChange","rowObj_2","updateSelectedRowIndex","dataLength","selectedVal","isAllSelected","count","pageSize","isSelectAllRowCount","someDataSelected","isInteraction","checkToSelectAll","isFiltered","checkedLen","searchSettings","key","filterSettings","input","spanEle","indeterminate","setSelection","rowCount","dataLen","totalDataRecordsCount","info","name","keyCode","clickHandler","allowColumnSelection","popUpClickHandler","chkSelect","checkWrap","isEqualNode","hoverFrozenRows","isDevice","showPopup","headerSelectionHandler","getColumnIndexByUid","container","isHeader","byKey","keyArgs","allowFiltering","isJump","tagName","Number","clear","isContent","headerAction","prev","thLen","childElementCount","selectedIndexes","getSelectedRowCellIndexes","infiniteScrollSettings","enableCache","columnIndex","getKeyColIndex","applyDownUpKey","applyRightLeftKey","shiftDownKey","applyShiftLeftRightKey","applyHomeEndKey","applyCtrlHomeEndKey","ctrlPlusA","applySpaceSelection","allowNextRowEdit","stackedHeader","innerColumn","getstackedColumns","getColumnByUid","lastIndex","firstIndex","applyUpDown","selectColumn","children","cIndex","contentRenderer","selectColumnsByRange","innerColumnIndexes","isAdd","clearAll","detailIndentCell","dragdropIndentCell","Content","selectedCol","getColumnHeaderByUid","isColSelected","isMultiColumns","clearColDependency","headerCell","previousColumnIndex","columnSelecting","updateColSelection","selectedArgs","columnSelected","updateColProps","selectColumns","columnIndexes","getselectedCols","selectingArgs","selectColumnWithExisting","newCol","clearIndex","isColumnSelected","getFrozenRightColumnHeaderByIndex","getMovableColumnHeaderByIndex","deselectedArgs","isCanceled","columnDeselect","columnDeselecting","selectedHeader","getSelectedColumnCells","columnDeselected","isRowTemplate","rowTemplate","movableRows","seletedcells","selectionString","getIndentCount","childNodes","on","dataReady","onDataBoundFunction","dataBound","refreshInfinitePersistSelection","beforeRefreshOnDataChange","onEmpty","setCheckAllForEmptyGrid","actionCompleteFunc","actionCompleteHandler","click","resizeEndFn","resizeStop","checkAllBox","isInfinitecroll","enableImmutableMode","isSelectedRowIndexUpdating"],"sources":["/home/morgan/Desktop/Projets/ENT4/Jwt-Auth-pdf/react-jwt-auth/react-jwt-auth/node_modules/@syncfusion/ej2-grids/src/grid/actions/selection.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { Browser, EventHandler, createElement } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined, isUndefined, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { remove, closest, select } from '@syncfusion/ej2-base';\nimport { Query } from '@syncfusion/ej2-data';\nimport { setCssInGridPopUp, getPosition, isGroupAdaptive, addRemoveActiveClasses, removeAddCboxClasses } from '../base/util';\nimport { getCellsByTableName, getCellByColAndRowIndex, parentsUntil, gridActionHandler } from '../base/util';\nimport * as events from '../base/constant';\nimport { RenderType } from '../base/enum';\nimport { iterateExtend, setChecked } from '../base/util';\nimport { addRemoveEventListener } from '../base/util';\nimport * as literals from '../base/string-literals';\n/**\n * The `Selection` module is used to handle cell and row selection.\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for the Grid selection module\n     *\n     * @param {IGrid} parent - specifies the IGrid\n     * @param {SelectionSettings} selectionSettings - specifies the selectionsettings\n     * @param {ServiceLocator} locator - specifies the ServiceLocator\n     * @hidden\n     */\n    function Selection(parent, selectionSettings, locator) {\n        //Internal letiables\n        /**\n         * @hidden\n         */\n        this.selectedRowIndexes = [];\n        /**\n         * @hidden\n         */\n        this.selectedRowCellIndexes = [];\n        /**\n         * @hidden\n         */\n        this.selectedRecords = [];\n        /**\n         * @hidden\n         */\n        this.preventFocus = false;\n        /**\n         *  @hidden\n         */\n        this.selectedColumnsIndexes = [];\n        this.checkBoxState = false;\n        this.isMultiShiftRequest = false;\n        this.isMultiCtrlRequest = false;\n        this.enableSelectMultiTouch = false;\n        this.clearRowCheck = false;\n        this.selectRowCheck = false;\n        this.selectedRowState = {};\n        this.totalRecordsCount = 0;\n        this.chkAllCollec = [];\n        this.isCheckedOnAdd = false;\n        this.persistSelectedData = [];\n        this.deSelectedData = [];\n        this.isHdrSelectAllClicked = false;\n        this.needColumnSelection = false;\n        this.isCancelDeSelect = false;\n        this.isPreventCellSelect = false;\n        this.disableUI = false;\n        this.isPersisted = false;\n        this.cmdKeyPressed = false;\n        this.cellselected = false;\n        this.isMultiSelection = false;\n        this.isAddRowsToSelection = false;\n        this.initialRowSelection = false;\n        this.isPrevRowSelection = false;\n        this.isKeyAction = false;\n        this.isRowDragSelected = false;\n        this.isPartialSelection = false;\n        /**\n         * @hidden\n         */\n        this.autoFillRLselection = true;\n        this.bottom = '0 0 2px 0';\n        this.top = '2px 0 0 0';\n        /* eslint-disable */\n        this.right_bottom = '0 2px 2px 0';\n        this.bottom_left = '0 0 2px 2px';\n        this.top_right = '2px 2px 0 0';\n        this.top_left = '2px 0 0 2px';\n        this.top_bottom = '2px 0 2px 0';\n        this.top_right_bottom = '2px 2px 2px 0';\n        this.top_bottom_left = '2px 0 2px 2px';\n        this.top_right_left = '2px 2px 0 2px';\n        this.right_bottom_left = '0 2px 2px 2px';\n        this.all_border = '2px';\n        this.parent = parent;\n        this.selectionSettings = selectionSettings;\n        this.factory = locator.getService('rendererFactory');\n        this.focus = locator.getService('focus');\n        this.addEventListener();\n        this.wireEvents();\n    }\n    Selection.prototype.initializeSelection = function () {\n        this.parent.log('selection_key_missing');\n        this.render();\n    };\n    /**\n     * The function used to trigger onActionBegin\n     *\n     * @param {Object} args - specifies the args\n     * @param {string} type - specifies the type\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.onActionBegin = function (args, type) {\n        this.parent.trigger(type, this.fDataUpdate(args));\n    };\n    Selection.prototype.fDataUpdate = function (args) {\n        if (!this.isMultiSelection && (!isNullOrUndefined(args.cellIndex) || !isNullOrUndefined(args.rowIndex))) {\n            var rowObj = this.getRowObj(isNullOrUndefined(args.rowIndex) ? isNullOrUndefined(args.cellIndex) ?\n                this.currentIndex : args.cellIndex.rowIndex : args.rowIndex);\n            args.foreignKeyData = rowObj.foreignKeyData;\n        }\n        return args;\n    };\n    /**\n     * The function used to trigger onActionComplete\n     *\n     * @param {Object} args - specifies the args\n     * @param {string} type - specifies the type\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.onActionComplete = function (args, type) {\n        this.parent.trigger(type, this.fDataUpdate(args));\n        this.isMultiSelection = false;\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} returns the module name\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    /**\n     * To destroy the selection\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        var gridElement = this.parent.element;\n        if (!gridElement || (!gridElement.querySelector('.' + literals.gridHeader) && !gridElement.querySelector('.' + literals.gridContent))) {\n            return;\n        }\n        this.hidePopUp();\n        this.clearSelection();\n        this.removeEventListener();\n        this.unWireEvents();\n        EventHandler.remove(this.parent.getContent(), 'mousedown', this.mouseDownHandler);\n        EventHandler.remove(this.parent.getHeaderContent(), 'mousedown', this.mouseDownHandler);\n    };\n    Selection.prototype.isEditing = function () {\n        return (this.parent.editSettings.mode === 'Normal' || (this.parent.editSettings.mode === 'Batch' && this.parent.editModule &&\n            this.parent.editModule.formObj && !this.parent.editModule.formObj.validate())) &&\n            this.parent.isEdit && !this.parent.isPersistSelection;\n    };\n    Selection.prototype.getSelectedMovableRow = function (index) {\n        var gObj = this.parent;\n        if (gObj.isFrozenGrid() && this.parent.getContent().querySelector('.' + literals.movableContent)) {\n            return gObj.getMovableRowByIndex(index);\n        }\n        return null;\n    };\n    Selection.prototype.getSelectedFrozenRightRow = function (index) {\n        var gObj = this.parent;\n        if (gObj.isFrozenGrid() && gObj.getFrozenMode() === literals.leftRight && gObj.getFrozenRightContent()) {\n            return gObj.getFrozenRightRowByIndex(index);\n        }\n        return null;\n    };\n    Selection.prototype.getCurrentBatchRecordChanges = function () {\n        var gObj = this.parent;\n        if (gObj.editSettings.mode === 'Batch' && gObj.editModule) {\n            var currentRecords = iterateExtend(this.parent.getCurrentViewRecords());\n            currentRecords = gObj.editSettings.newRowPosition === 'Bottom' ?\n                currentRecords.concat(this.parent.editModule.getBatchChanges()[literals.addedRecords]) :\n                this.parent.editModule.getBatchChanges()[literals.addedRecords].concat(currentRecords);\n            var deletedRecords = this.parent.editModule.getBatchChanges()[literals.deletedRecords];\n            var primaryKey = this.parent.getPrimaryKeyFieldNames()[0];\n            for (var i = 0; i < (deletedRecords.length); i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (deletedRecords[i][primaryKey] === currentRecords[j][primaryKey]) {\n                        currentRecords.splice(j, 1);\n                        break;\n                    }\n                }\n            }\n            return currentRecords;\n        }\n        else {\n            return gObj.getCurrentViewRecords();\n        }\n    };\n    /**\n     * Selects a row by the given index.\n     *\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    Selection.prototype.selectRow = function (index, isToggle) {\n        if (this.selectedRowIndexes.length && this.selectionSettings.enableSimpleMultiRowSelection) {\n            this.addRowsToSelection([index]);\n            return;\n        }\n        var gObj = this.parent;\n        var selectedRow = gObj.getRowByIndex(index);\n        var rowObj = selectedRow && gObj.getRowObjectFromUID(selectedRow.getAttribute('data-uid'));\n        if (this.isPartialSelection && rowObj && rowObj.isDataRow && !rowObj.isSelectable) {\n            return;\n        }\n        var selectedMovableRow = this.getSelectedMovableRow(index);\n        var selectedFrozenRightRow = this.getSelectedFrozenRightRow(index);\n        var selectData;\n        var isRemoved = false;\n        if (gObj.enableVirtualization && index > -1) {\n            var e = { selectedIndex: index, isAvailable: true };\n            this.parent.notify(events.selectVirtualRow, e);\n            var frozenData = gObj.isFrozenGrid() ? gObj.contentModule.getRowObjectByIndex(index)\n                : null;\n            if (selectedRow && (gObj.getRowObjectFromUID(selectedRow.getAttribute('data-uid')) || frozenData)) {\n                selectData = frozenData ? frozenData : gObj.getRowObjectFromUID(selectedRow.getAttribute('data-uid')).data;\n            }\n            else {\n                if (e.isAvailable && !gObj.selectionSettings.persistSelection) {\n                    var prevSelectedData = this.parent.getSelectedRecords();\n                    if (prevSelectedData.length > 0) {\n                        this.clearRowSelection();\n                    }\n                }\n                return;\n            }\n        }\n        else {\n            selectData = this.getRowObj(index).data;\n        }\n        if (!this.isRowType() || !selectedRow || this.isEditing()) {\n            // if (this.isEditing()) {\n            //     gObj.selectedRowIndex = index;\n            // }\n            return;\n        }\n        var isRowSelected = selectedRow.hasAttribute('aria-selected');\n        this.activeTarget();\n        isToggle = !isToggle ? isToggle :\n            !this.selectedRowIndexes.length ? false :\n                (this.selectedRowIndexes.length === 1 ? (this.isKeyAction && this.parent.isCheckBoxSelection ?\n                    false : index === this.selectedRowIndexes[0]) : false);\n        this.isKeyAction = false;\n        var args;\n        var can = 'cancel';\n        if (!isToggle) {\n            args = {\n                data: selectData, rowIndex: index, isCtrlPressed: this.isMultiCtrlRequest,\n                isShiftPressed: this.isMultiShiftRequest, row: selectedRow,\n                previousRow: gObj.getRowByIndex(this.prevRowIndex),\n                previousRowIndex: this.prevRowIndex, target: this.actualTarget, cancel: false, isInteracted: this.isInteracted,\n                isHeaderCheckboxClicked: this.isHeaderCheckboxClicked\n            };\n            args = this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n            this.parent.trigger(events.rowSelecting, this.fDataUpdate(args), this.rowSelectingCallBack(args, isToggle, index, selectData, isRemoved, isRowSelected, can));\n        }\n        else {\n            this.rowSelectingCallBack(args, isToggle, index, selectData, isRemoved, isRowSelected, can)(args);\n        }\n    };\n    Selection.prototype.rowSelectingCallBack = function (args, isToggle, index, selectData, isRemoved, isRowSelected, can) {\n        var _this = this;\n        return function (args) {\n            if (!isNullOrUndefined(args) && args[can] === true) {\n                _this.disableInteracted();\n                return;\n            }\n            _this.index = index;\n            _this.toggle = isToggle;\n            _this.data = selectData;\n            _this.removed = isRemoved;\n            if (isRowSelected && _this.selectionSettings.persistSelection && !(_this.selectionSettings.checkboxMode === 'ResetOnRowClick')) {\n                _this.clearSelectedRow(index);\n                _this.selectRowCallBack();\n            }\n            else if (!isRowSelected && _this.selectionSettings.persistSelection &&\n                _this.selectionSettings.checkboxMode !== 'ResetOnRowClick') {\n                _this.selectRowCallBack();\n            }\n            if (_this.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n                _this.clearSelection();\n            }\n            if (!_this.selectionSettings.persistSelection || _this.selectionSettings.checkboxMode === 'ResetOnRowClick' ||\n                (!_this.parent.isCheckBoxSelection && _this.selectionSettings.persistSelection)) {\n                _this.selectRowCheck = true;\n                _this.clearRow();\n            }\n        };\n    };\n    Selection.prototype.selectRowCallBack = function () {\n        var gObj = this.parent;\n        var args;\n        var index = this.index;\n        var isToggle = this.toggle;\n        var selectData = this.data;\n        var isRemoved = this.removed;\n        var selectedRow = gObj.getRowByIndex(index);\n        var selectedMovableRow = this.getSelectedMovableRow(index);\n        var selectedFrozenRightRow = this.getSelectedFrozenRightRow(index);\n        if (!isToggle && !isRemoved) {\n            if (this.selectedRowIndexes.indexOf(index) <= -1) {\n                this.updateRowSelection(selectedRow, index);\n                this.selectMovableRow(selectedMovableRow, selectedFrozenRightRow, index);\n            }\n            this.selectRowIndex(index);\n        }\n        if (!isToggle) {\n            args = {\n                data: selectData, rowIndex: index,\n                row: selectedRow, previousRow: gObj.getRowByIndex(this.prevRowIndex),\n                previousRowIndex: this.prevRowIndex, target: this.actualTarget, isInteracted: this.isInteracted,\n                isHeaderCheckBoxClicked: this.isHeaderCheckboxClicked\n            };\n            args = this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n            this.onActionComplete(args, events.rowSelected);\n        }\n        this.isInteracted = false;\n        this.updateRowProps(index);\n    };\n    Selection.prototype.selectMovableRow = function (selectedMovableRow, selectedFrozenRightRow, index) {\n        if (this.parent.isFrozenGrid()) {\n            this.updateRowSelection(selectedMovableRow, index);\n            if (this.parent.getFrozenMode() === literals.leftRight && selectedFrozenRightRow) {\n                this.updateRowSelection(selectedFrozenRightRow, index);\n            }\n        }\n    };\n    Selection.prototype.addMovableArgs = function (targetObj, mRow, frRow) {\n        if (this.parent.isFrozenGrid()) {\n            var mObj = { mRow: mRow, previousMovRow: this.parent.getMovableRows()[this.prevRowIndex] };\n            var frozenRightRow = 'frozenRightRow';\n            var previousFrozenRightRow = 'previousFrozenRightRow';\n            if (this.parent.getFrozenMode() === literals.leftRight && frRow) {\n                mObj[frozenRightRow] = frRow;\n                mObj[previousFrozenRightRow] = this.parent.getFrozenRightDataRows()[this.prevRowIndex];\n            }\n            targetObj = __assign({}, targetObj, mObj);\n        }\n        return targetObj;\n    };\n    /**\n     * Selects a range of rows from start and end row indexes.\n     *\n     * @param  {number} startIndex - Specifies the start row index.\n     * @param  {number} endIndex - Specifies the end row index.\n     * @returns {void}\n     */\n    Selection.prototype.selectRowsByRange = function (startIndex, endIndex) {\n        this.selectRows(this.getCollectionFromIndexes(startIndex, endIndex));\n        this.selectRowIndex(endIndex);\n    };\n    Selection.prototype.selectedDataUpdate = function (selectedData, foreignKeyData, selectedRows, rowIndexes, selectableRowIndex) {\n        for (var i = 0, len = rowIndexes.length; i < len; i++) {\n            var currentRow = this.parent.getDataRows()[rowIndexes[i]];\n            if (this.parent.enableVirtualization) {\n                currentRow = this.parent.getRowByIndex(rowIndexes[i]);\n            }\n            var rowObj = this.getRowObj(currentRow);\n            if (rowObj && rowObj.isDataRow && rowObj.isSelectable) {\n                selectedData.push(rowObj.data);\n                selectedRows.push(currentRow);\n                foreignKeyData.push(rowObj.foreignKeyData);\n            }\n            else {\n                if (this.isPartialSelection && selectableRowIndex) {\n                    selectableRowIndex.splice(selectableRowIndex.indexOf(rowIndexes[i]), 1);\n                }\n            }\n        }\n    };\n    /**\n     * Selects a collection of rows by index.\n     *\n     * @param  {number[]} rowIndexes - Specifies an array of row indexes.\n     * @returns {void}\n     */\n    Selection.prototype.selectRows = function (rowIndexes) {\n        var _this = this;\n        var gObj = this.parent;\n        var selectableRowIndex = rowIndexes.slice();\n        var rowIndex = !this.isSingleSel() ? rowIndexes[0] : rowIndexes[rowIndexes.length - 1];\n        this.isMultiSelection = true;\n        var selectedRows = [];\n        var foreignKeyData = [];\n        var selectedMovableRow = this.getSelectedMovableRow(rowIndex);\n        var selectedFrozenRightRow = this.getSelectedFrozenRightRow(rowIndex);\n        var can = 'cancel';\n        var selectedData = [];\n        if (!this.isRowType() || this.isEditing()) {\n            return;\n        }\n        this.selectedDataUpdate(selectedData, foreignKeyData, selectedRows, rowIndexes, selectableRowIndex);\n        this.activeTarget();\n        var args = {\n            cancel: false,\n            rowIndexes: selectableRowIndex, row: selectedRows, rowIndex: rowIndex, target: this.actualTarget,\n            prevRow: gObj.getRows()[this.prevRowIndex], previousRowIndex: this.prevRowIndex,\n            isInteracted: this.isInteracted, isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest,\n            data: selectedData, isHeaderCheckboxClicked: this.isHeaderCheckboxClicked, foreignKeyData: foreignKeyData\n        };\n        args = this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n        this.parent.trigger(events.rowSelecting, this.fDataUpdate(args), function (args) {\n            if (!isNullOrUndefined(args) && args[can] === true) {\n                _this.disableInteracted();\n                return;\n            }\n            _this.clearRow();\n            _this.selectRowIndex(selectableRowIndex.slice(-1)[0]);\n            var selectRowFn = function (index) {\n                _this.updateRowSelection(gObj.getRowByIndex(index), index);\n                if (gObj.isFrozenGrid()) {\n                    var rightEle = _this.parent.getFrozenMode() === literals.leftRight ? gObj.getFrozenRightRowByIndex(index)\n                        : undefined;\n                    _this.selectMovableRow(gObj.getMovableRowByIndex(index), rightEle, index);\n                }\n                _this.updateRowProps(rowIndex);\n            };\n            if (!_this.isSingleSel()) {\n                for (var _i = 0, selectableRowIndex_1 = selectableRowIndex; _i < selectableRowIndex_1.length; _i++) {\n                    var rowIdx = selectableRowIndex_1[_i];\n                    selectRowFn(rowIdx);\n                }\n            }\n            else {\n                selectRowFn(rowIndex);\n            }\n            args = {\n                rowIndexes: selectableRowIndex, row: selectedRows, rowIndex: rowIndex, target: _this.actualTarget,\n                prevRow: gObj.getRows()[_this.prevRowIndex], previousRowIndex: _this.prevRowIndex,\n                data: _this.getSelectedRecords(), isInteracted: _this.isInteracted,\n                isHeaderCheckboxClicked: _this.isHeaderCheckboxClicked, foreignKeyData: foreignKeyData\n            };\n            args = _this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n            if (_this.isRowSelected) {\n                _this.onActionComplete(args, events.rowSelected);\n            }\n            _this.isInteracted = false;\n        });\n    };\n    /**\n     * Select rows with existing row selection by passing row indexes.\n     *\n     * @param {number} rowIndexes - Specifies the row indexes.\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.addRowsToSelection = function (rowIndexes) {\n        var gObj = this.parent;\n        var can = 'cancel';\n        var target = this.target;\n        this.isMultiSelection = true;\n        var selectedRows = [];\n        var foreignKeyData = [];\n        var selectedData = [];\n        var indexes = gObj.getSelectedRowIndexes().concat(rowIndexes);\n        var selectedRow = !this.isSingleSel() ? gObj.getRowByIndex(rowIndexes[0]) :\n            gObj.getRowByIndex(rowIndexes[rowIndexes.length - 1]);\n        var selectedMovableRow = !this.isSingleSel() ? this.getSelectedMovableRow(rowIndexes[0]) :\n            this.getSelectedMovableRow(rowIndexes[rowIndexes.length - 1]);\n        var selectedFrozenRightRow = !this.isSingleSel() ? this.getSelectedFrozenRightRow(rowIndexes[0]) :\n            this.getSelectedFrozenRightRow(rowIndexes[rowIndexes.length - 1]);\n        if ((!this.isRowType() || this.isEditing()) && !this.selectionSettings.checkboxOnly) {\n            return;\n        }\n        var args;\n        var checkboxColumn = this.parent.getColumns().filter(function (col) { return col.type === 'checkbox'; });\n        if (this.isMultiCtrlRequest && !checkboxColumn.length) {\n            this.selectedDataUpdate(selectedData, foreignKeyData, selectedRows, indexes);\n        }\n        for (var _i = 0, rowIndexes_1 = rowIndexes; _i < rowIndexes_1.length; _i++) {\n            var rowIndex = rowIndexes_1[_i];\n            var rowObj = this.getRowObj(rowIndex);\n            var isUnSelected = this.selectedRowIndexes.indexOf(rowIndex) > -1;\n            if (this.isPartialSelection && rowObj && rowObj.isDataRow && !rowObj.isSelectable) {\n                continue;\n            }\n            this.selectRowIndex(rowIndex);\n            if (isUnSelected && ((checkboxColumn.length ? true : this.selectionSettings.enableToggle) || this.isMultiCtrlRequest)) {\n                this.isAddRowsToSelection = true;\n                this.rowDeselect(events.rowDeselecting, [rowIndex], [rowObj.data], [selectedRow], [rowObj.foreignKeyData], target);\n                if (this.isCancelDeSelect) {\n                    return;\n                }\n                this.selectedRowIndexes.splice(this.selectedRowIndexes.indexOf(rowIndex), 1);\n                this.selectedRecords.splice(this.selectedRecords.indexOf(selectedRow), 1);\n                this.selectRowIndex(this.selectedRowIndexes.length ? this.selectedRowIndexes[this.selectedRowIndexes.length - 1] : -1);\n                selectedRow.removeAttribute('aria-selected');\n                this.addRemoveClassesForRow(selectedRow, false, null, 'e-selectionbackground', 'e-active');\n                if (selectedMovableRow) {\n                    this.selectedRecords.splice(this.selectedRecords.indexOf(selectedMovableRow), 1);\n                    selectedMovableRow.removeAttribute('aria-selected');\n                    this.addRemoveClassesForRow(selectedMovableRow, false, null, 'e-selectionbackground', 'e-active');\n                }\n                if (selectedFrozenRightRow) {\n                    this.selectedRecords.splice(this.selectedRecords.indexOf(selectedFrozenRightRow), 1);\n                    selectedFrozenRightRow.removeAttribute('aria-selected');\n                    this.addRemoveClassesForRow(selectedFrozenRightRow, false, null, 'e-selectionbackground', 'e-active');\n                }\n                this.rowDeselect(events.rowDeselected, [rowIndex], [rowObj.data], [selectedRow], [rowObj.foreignKeyData], target, [selectedMovableRow], undefined, [selectedFrozenRightRow]);\n                this.isInteracted = false;\n                this.isMultiSelection = false;\n                this.isAddRowsToSelection = false;\n                this.isHdrSelectAllClicked = false;\n            }\n            else {\n                this.activeTarget();\n                args = {\n                    cancel: false,\n                    data: selectedData.length ? selectedData : rowObj.data, rowIndex: rowIndex, row: selectedRows.length ? selectedRows :\n                        selectedRow, target: this.actualTarget, prevRow: gObj.getRows()[this.prevRowIndex],\n                    previousRowIndex: this.prevRowIndex, isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest,\n                    foreignKeyData: foreignKeyData.length ? foreignKeyData : rowObj.foreignKeyData, isInteracted: this.isInteracted,\n                    isHeaderCheckboxClicked: this.isHeaderCheckboxClicked, rowIndexes: indexes\n                };\n                args = this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n                this.parent.trigger(events.rowSelecting, this.fDataUpdate(args));\n                if (!isNullOrUndefined(args) && args[can] === true) {\n                    this.disableInteracted();\n                    return;\n                }\n                if (this.isSingleSel()) {\n                    this.clearRow();\n                }\n                this.updateRowSelection(selectedRow, rowIndex);\n                this.selectMovableRow(selectedMovableRow, selectedFrozenRightRow, rowIndex);\n            }\n            if (!isUnSelected) {\n                args = {\n                    data: selectedData.length ? selectedData : rowObj.data, rowIndex: rowIndex, row: selectedRows.length ? selectedRows :\n                        selectedRow, target: this.actualTarget, prevRow: gObj.getRows()[this.prevRowIndex],\n                    previousRowIndex: this.prevRowIndex, foreignKeyData: foreignKeyData.length ? foreignKeyData : rowObj.foreignKeyData,\n                    isInteracted: this.isInteracted, isHeaderCheckboxClicked: this.isHeaderCheckboxClicked, rowIndexes: indexes\n                };\n                args = this.addMovableArgs(args, selectedMovableRow, selectedFrozenRightRow);\n                this.onActionComplete(args, events.rowSelected);\n            }\n            this.isInteracted = false;\n            this.updateRowProps(rowIndex);\n            if (this.isSingleSel()) {\n                break;\n            }\n        }\n    };\n    Selection.prototype.getCollectionFromIndexes = function (startIndex, endIndex) {\n        var indexes = [];\n        // eslint-disable-next-line prefer-const\n        var _a = (startIndex <= endIndex) ?\n            { i: startIndex, max: endIndex } : { i: endIndex, max: startIndex }, i = _a.i, max = _a.max;\n        for (; i <= max; i++) {\n            indexes.push(i);\n        }\n        if (startIndex > endIndex) {\n            indexes.reverse();\n        }\n        return indexes;\n    };\n    Selection.prototype.clearRow = function () {\n        this.clearRowCheck = true;\n        this.clearRowSelection();\n    };\n    Selection.prototype.clearRowCallBack = function () {\n        if (this.isCancelDeSelect && this.parent.checkAllRows !== 'Check') {\n            return;\n        }\n        this.selectedRowIndexes = [];\n        this.selectedRecords = [];\n        this.selectRowIndex(-1);\n        if (this.isSingleSel() && this.parent.isPersistSelection) {\n            this.selectedRowState = {};\n        }\n    };\n    Selection.prototype.clearSelectedRow = function (index) {\n        if (this.toggle) {\n            var selectedEle = this.parent.getRowByIndex(index);\n            if (!this.disableUI) {\n                selectedEle.removeAttribute('aria-selected');\n                this.addRemoveClassesForRow(selectedEle, false, true, 'e-selectionbackground', 'e-active');\n            }\n            this.removed = true;\n            this.updatePersistCollection(selectedEle, false);\n            this.updateCheckBoxes(selectedEle);\n            this.selectedRowIndexes.splice(this.selectedRowIndexes.indexOf(index), 1);\n            this.selectedRecords.splice(this.selectedRecords.indexOf(this.parent.getRowByIndex(index)), 1);\n        }\n    };\n    Selection.prototype.updateRowProps = function (startIndex) {\n        this.prevRowIndex = startIndex;\n        this.isRowSelected = this.selectedRowIndexes.length && true;\n    };\n    Selection.prototype.updatePersistCollection = function (selectedRow, chkState) {\n        var _this = this;\n        if ((this.parent.isPersistSelection || this.parent.selectionSettings.persistSelection &&\n            this.parent.getPrimaryKeyFieldNames().length > 0) && !isNullOrUndefined(selectedRow)) {\n            if (!this.parent.isPersistSelection) {\n                this.ensureCheckboxFieldSelection();\n            }\n            var rowObj = this.getRowObj(selectedRow);\n            var pKey_1 = rowObj.data ? rowObj.data[this.primaryKey] : null;\n            if (pKey_1 === null) {\n                return;\n            }\n            rowObj.isSelected = chkState;\n            if ((chkState && !this.isPartialSelection) || (this.isPartialSelection && rowObj.isSelectable && rowObj.isSelected)) {\n                this.selectedRowState[pKey_1] = chkState;\n                if (!this.persistSelectedData.some(function (data) { return data[_this.primaryKey] === pKey_1; })) {\n                    this.persistSelectedData.push(rowObj.data);\n                }\n            }\n            else {\n                this.updatePersistDelete(pKey_1);\n            }\n        }\n    };\n    Selection.prototype.updatePersistDelete = function (pKey, isPartialSelection) {\n        var _this = this;\n        delete (this.selectedRowState[pKey]);\n        var index;\n        var isPresent = this.persistSelectedData.some(function (data, i) {\n            index = i;\n            return data[_this.primaryKey] === pKey;\n        });\n        if (isPresent) {\n            this.persistSelectedData.splice(index, 1);\n            if (isPartialSelection) {\n                this.parent.partialSelectedRecords.splice(index, 1);\n            }\n        }\n    };\n    Selection.prototype.updateCheckBoxes = function (row, chkState, rowIndex) {\n        if (!isNullOrUndefined(row)) {\n            var chkBox = row.querySelector('.e-checkselect');\n            if (!isNullOrUndefined(chkBox)) {\n                removeAddCboxClasses(chkBox.nextElementSibling, chkState);\n                setChecked(chkBox, chkState);\n                if (isNullOrUndefined(this.checkedTarget) || (!isNullOrUndefined(this.checkedTarget)\n                    && !this.checkedTarget.classList.contains('e-checkselectall'))) {\n                    this.setCheckAllState(rowIndex);\n                }\n            }\n        }\n    };\n    Selection.prototype.updateRowSelection = function (selectedRow, startIndex) {\n        if (!selectedRow) {\n            return;\n        }\n        this.selectedRowIndexes.push(startIndex);\n        var len = this.selectedRowIndexes.length;\n        if (this.parent.isFrozenGrid() && len > 1) {\n            if ((this.selectedRowIndexes[len - 2] === this.selectedRowIndexes[len - 1])) {\n                this.selectedRowIndexes.pop();\n            }\n        }\n        this.selectedRecords.push(selectedRow);\n        selectedRow.setAttribute('aria-selected', 'true');\n        this.updatePersistCollection(selectedRow, true);\n        this.updateCheckBoxes(selectedRow, true);\n        this.addRemoveClassesForRow(selectedRow, true, null, 'e-selectionbackground', 'e-active');\n        if (!this.preventFocus) {\n            var target = this.focus.getPrevIndexes().cellIndex ?\n                selectedRow.cells[this.focus.getPrevIndexes().cellIndex] :\n                selectedRow.querySelector('.e-selectionbackground:not(.e-hide):not(.e-detailrowcollapse):not(.e-detailrowexpand)');\n            if (this.parent.contextMenuModule && this.mouseButton === 2) {\n                target = this.parent.contextMenuModule.cell;\n            }\n            if (!target) {\n                return;\n            }\n            this.focus.onClick({ target: target }, true);\n        }\n    };\n    /**\n     * Deselects the currently selected rows and cells.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.clearSelection = function () {\n        this.checkSelectAllClicked = true;\n        if (this.selectionSettings.persistSelection && this.persistSelectedData.length) {\n            this.deSelectedData = iterateExtend(this.persistSelectedData);\n        }\n        if (!this.parent.isPersistSelection || (this.parent.isPersistSelection && !this.parent.isEdit) ||\n            (!isNullOrUndefined(this.checkedTarget) && this.checkedTarget.classList.contains('e-checkselectall'))) {\n            var span = this.parent.element.querySelector('.e-gridpopup').querySelector('span');\n            if (span.classList.contains('e-rowselect')) {\n                span.classList.remove('e-spanclicked');\n            }\n            if (this.parent.isPersistSelection) {\n                this.persistSelectedData = [];\n                this.selectedRowState = {};\n            }\n            this.clearRowSelection();\n            this.clearCellSelection();\n            this.clearColumnSelection();\n            this.prevRowIndex = undefined;\n            this.prevCIdxs = undefined;\n            this.prevECIdxs = undefined;\n            this.enableSelectMultiTouch = false;\n            this.isInteracted = false;\n            this.checkSelectAllClicked = false;\n            this.isHdrSelectAllClicked = false;\n        }\n    };\n    /**\n     * Deselects the currently selected rows.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.clearRowSelection = function () {\n        var _this = this;\n        if (this.isRowSelected) {\n            var gObj = this.parent;\n            var rows_1 = this.parent.getDataRows();\n            var data_1 = [];\n            var row_1 = [];\n            var mRow_1 = [];\n            var fRightRow_1 = [];\n            var rowIndex_1 = [];\n            var foreignKeyData_1 = [];\n            var target_1 = this.target;\n            for (var i = 0, len = this.selectedRowIndexes.length; i < len; i++) {\n                var currentRow = this.parent.editSettings.mode === 'Batch' ?\n                    this.parent.getRows()[this.selectedRowIndexes[i]]\n                    : this.parent.getDataRows()[this.selectedRowIndexes[i]];\n                var rowObj = this.getRowObj(currentRow);\n                if (rowObj) {\n                    data_1.push(rowObj.data);\n                    row_1.push(currentRow);\n                    rowIndex_1.push(this.selectedRowIndexes[i]);\n                    foreignKeyData_1.push(rowObj.foreignKeyData);\n                }\n                if (gObj.isFrozenGrid()) {\n                    var mRows = gObj.getMovableRows();\n                    if (mRows && mRows.length) {\n                        mRow_1.push(mRows[this.selectedRowIndexes[i]]);\n                    }\n                    if (gObj.getFrozenMode() === literals.leftRight) {\n                        var frRows = gObj.getFrozenRightRows();\n                        if (frRows && frRows.length) {\n                            fRightRow_1.push(frRows[this.selectedRowIndexes[i]]);\n                        }\n                    }\n                }\n            }\n            if (this.selectionSettings.persistSelection && this.selectionSettings.checkboxMode !== 'ResetOnRowClick') {\n                this.isRowClicked = this.checkSelectAllClicked ? true : false;\n            }\n            this.rowDeselect(events.rowDeselecting, rowIndex_1, data_1, row_1, foreignKeyData_1, target_1, mRow_1, function () {\n                if (_this.isCancelDeSelect && (_this.isRowClicked || _this.checkSelectAllClicked || (_this.isInteracted &&\n                    !_this.parent.isPersistSelection))) {\n                    if (_this.parent.isPersistSelection) {\n                        if (_this.getCheckAllStatus(_this.parent.element.querySelector('.e-checkselectall')) === 'Intermediate') {\n                            for (var i = 0; i < _this.selectedRecords.length; i++) {\n                                _this.updatePersistCollection(_this.selectedRecords[i], true);\n                            }\n                        }\n                        else {\n                            _this.parent.checkAllRows = 'Check';\n                            _this.updatePersistSelectedData(true);\n                        }\n                    }\n                    if (_this.clearRowCheck) {\n                        _this.clearRowCallBack();\n                        _this.clearRowCheck = false;\n                        if (_this.selectRowCheck) {\n                            _this.selectRowCallBack();\n                            _this.selectRowCheck = false;\n                        }\n                    }\n                    return;\n                }\n                var element = [].slice.call(rows_1.filter(function (record) { return record.hasAttribute('aria-selected'); }));\n                for (var j = 0; j < element.length; j++) {\n                    if (!_this.disableUI) {\n                        element[j].removeAttribute('aria-selected');\n                        _this.addRemoveClassesForRow(element[j], false, true, 'e-selectionbackground', 'e-active');\n                    }\n                    // tslint:disable-next-line:align\n                    if (!_this.isPrevRowSelection) {\n                        _this.updatePersistCollection(element[j], false);\n                    }\n                    _this.updateCheckBoxes(element[j]);\n                }\n                for (var i = 0, len = _this.selectedRowIndexes.length; i < len; i++) {\n                    var movableRow = _this.getSelectedMovableRow(_this.selectedRowIndexes[i]);\n                    if (movableRow) {\n                        if (!_this.disableUI) {\n                            movableRow.removeAttribute('aria-selected');\n                            _this.addRemoveClassesForRow(movableRow, false, true, 'e-selectionbackground', 'e-active');\n                        }\n                        _this.updateCheckBoxes(movableRow);\n                        if (!_this.isPrevRowSelection) {\n                            _this.updatePersistCollection(movableRow, false);\n                        }\n                    }\n                    var frRow = _this.getSelectedFrozenRightRow(_this.selectedRowIndexes[i]);\n                    if (frRow) {\n                        if (!_this.disableUI) {\n                            frRow.removeAttribute('aria-selected');\n                            _this.addRemoveClassesForRow(frRow, false, true, 'e-selectionbackground', 'e-active');\n                        }\n                        _this.updateCheckBoxes(frRow);\n                        if (!_this.isPrevRowSelection) {\n                            _this.updatePersistCollection(frRow, false);\n                        }\n                    }\n                }\n                _this.selectedRowIndexes = [];\n                _this.selectedRecords = [];\n                _this.isRowSelected = false;\n                _this.selectRowIndex(-1);\n                _this.isPrevRowSelection = false;\n                _this.rowDeselect(events.rowDeselected, rowIndex_1, data_1, row_1, foreignKeyData_1, target_1, mRow_1, undefined, fRightRow_1);\n                if (_this.clearRowCheck) {\n                    _this.clearRowCallBack();\n                    _this.clearRowCheck = false;\n                    if (_this.selectRowCheck) {\n                        _this.selectRowCallBack();\n                        _this.selectRowCheck = false;\n                    }\n                }\n            }, fRightRow_1);\n        }\n        else {\n            if (this.clearRowCheck) {\n                this.clearRowCallBack();\n                this.clearRowCheck = false;\n                if (this.selectRowCheck) {\n                    this.selectRowCallBack();\n                    this.selectRowCheck = false;\n                }\n            }\n        }\n    };\n    Selection.prototype.rowDeselect = function (type, rowIndex, data, row, foreignKeyData, target, mRow, rowDeselectCallBack, frozenRightRow) {\n        var _this = this;\n        if ((this.selectionSettings.persistSelection && (this.isRowClicked || this.checkSelectAllClicked || (this.focus['activeKey'] &&\n            this.focus.currentInfo.element.classList.contains('e-gridchkbox') && this.focus['activeKey'] === 'space'))) ||\n            !this.selectionSettings.persistSelection) {\n            var cancl_1 = 'cancel';\n            var isSingleDeSel = rowIndex.length === 1 && this.deSelectedData.length === 1;\n            var rowDeselectObj = {\n                rowIndex: rowIndex[0], data: this.selectionSettings.persistSelection && (this.parent.checkAllRows === 'Uncheck' &&\n                    !isSingleDeSel) && this.selectionSettings.checkboxMode !== 'ResetOnRowClick' ? this.deSelectedData : data,\n                foreignKeyData: foreignKeyData, cancel: false, isInteracted: this.isInteracted,\n                isHeaderCheckboxClicked: this.isHeaderCheckboxClicked\n            };\n            if (type === 'rowDeselected') {\n                delete rowDeselectObj.cancel;\n            }\n            var rowInString = 'row';\n            var target_2 = 'target';\n            var rowidx = 'rowIndex';\n            var rowidxex = 'rowIndexes';\n            var dataTxt = 'data';\n            var foreignKey = 'foreignKeyData';\n            rowDeselectObj[rowInString] = row;\n            rowDeselectObj[target_2] = this.actualTarget;\n            var isHeaderCheckBxClick = this.actualTarget && !isNullOrUndefined(closest(this.actualTarget, 'thead'));\n            if (isHeaderCheckBxClick || rowIndex.length > 1) {\n                rowDeselectObj[rowidx] = rowIndex[0];\n                rowDeselectObj[rowidxex] = rowIndex;\n            }\n            else if (rowIndex.length === 1) {\n                rowDeselectObj[dataTxt] = rowDeselectObj[dataTxt][0];\n                rowDeselectObj[rowInString] = rowDeselectObj[rowInString][0];\n                rowDeselectObj[foreignKey] = rowDeselectObj[foreignKey][0];\n                if (this.isAddRowsToSelection) {\n                    rowDeselectObj[rowidxex] = rowIndex;\n                }\n            }\n            this.parent.trigger(type, this.parent.isFrozenGrid() ? __assign({}, rowDeselectObj, { mRow: mRow, frozenRightRow: frozenRightRow }) : rowDeselectObj, function (args) {\n                _this.isCancelDeSelect = args[cancl_1];\n                if (!_this.isCancelDeSelect || (!_this.isRowClicked && !_this.isInteracted && !_this.checkSelectAllClicked)) {\n                    _this.updatePersistCollection(row[0], false);\n                    _this.updateCheckBoxes(row[0], undefined, rowIndex[0]);\n                    if (mRow) {\n                        _this.updateCheckBoxes(mRow[0], undefined, rowIndex[0]);\n                    }\n                    if (frozenRightRow) {\n                        _this.updateCheckBoxes(frozenRightRow[0], undefined, rowIndex[0]);\n                    }\n                }\n                if (rowDeselectCallBack !== undefined) {\n                    rowDeselectCallBack();\n                }\n            });\n        }\n        else if (this.selectionSettings.persistSelection && !this.isInteracted) {\n            if (rowDeselectCallBack !== undefined) {\n                rowDeselectCallBack();\n            }\n        }\n    };\n    Selection.prototype.getRowObj = function (row) {\n        if (row === void 0) { row = this.currentIndex; }\n        if (isNullOrUndefined(row)) {\n            return {};\n        }\n        if (typeof row === 'number') {\n            row = this.parent.getRowByIndex(row);\n        }\n        if (row) {\n            return this.parent.getRowObjectFromUID(row.getAttribute('data-uid')) || {};\n        }\n        return {};\n    };\n    Selection.prototype.getSelectedMovableCell = function (cellIndex) {\n        var gObj = this.parent;\n        var col = gObj.getColumnByIndex(cellIndex.cellIndex);\n        var frzCols = gObj.isFrozenGrid();\n        if (frzCols) {\n            if (col.getFreezeTableName() === 'movable') {\n                return gObj.getMovableCellFromIndex(cellIndex.rowIndex, this.getColIndex(cellIndex.rowIndex, cellIndex.cellIndex));\n            }\n            return null;\n        }\n        return null;\n    };\n    /**\n     * Selects a cell by the given index.\n     *\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    Selection.prototype.selectCell = function (cellIndex, isToggle) {\n        if (!this.isCellType()) {\n            return;\n        }\n        var gObj = this.parent;\n        var selectedCell = this.getSelectedMovableCell(cellIndex);\n        var args;\n        if (!selectedCell) {\n            selectedCell = gObj.getCellFromIndex(cellIndex.rowIndex, this.getColIndex(cellIndex.rowIndex, cellIndex.cellIndex));\n        }\n        this.currentIndex = cellIndex.rowIndex;\n        var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n        if (!this.isCellType() || !selectedCell || this.isEditing()) {\n            return;\n        }\n        var isCellSelected = selectedCell.classList.contains('e-cellselectionbackground');\n        isToggle = !isToggle ? isToggle : (!isUndefined(this.prevCIdxs) &&\n            cellIndex.rowIndex === this.prevCIdxs.rowIndex && cellIndex.cellIndex === this.prevCIdxs.cellIndex &&\n            isCellSelected);\n        if (!isToggle) {\n            args = {\n                data: selectedData, cellIndex: cellIndex,\n                isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest,\n                previousRowCell: this.prevECIdxs ?\n                    this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined,\n                cancel: false\n            };\n            var currentCell = 'currentCell';\n            args[currentCell] = selectedCell;\n            var previousRowCellIndex = 'previousRowCellIndex';\n            args[previousRowCellIndex] = this.prevECIdxs;\n            this.parent.trigger(events.cellSelecting, this.fDataUpdate(args), this.successCallBack(args, isToggle, cellIndex, selectedCell, selectedData));\n            this.cellselected = true;\n        }\n        else {\n            this.successCallBack(args, isToggle, cellIndex, selectedCell, selectedData)(args);\n        }\n    };\n    Selection.prototype.successCallBack = function (cellSelectingArgs, isToggle, cellIndex, selectedCell, selectedData) {\n        var _this = this;\n        return function (cellSelectingArgs) {\n            var cncl = 'cancel';\n            var currentCell = 'currentCell';\n            if (!isNullOrUndefined(cellSelectingArgs) && cellSelectingArgs[cncl] === true) {\n                return;\n            }\n            if (!isToggle) {\n                cellSelectingArgs[currentCell] = cellSelectingArgs[currentCell] ? cellSelectingArgs[currentCell] : selectedCell;\n            }\n            _this.clearCell();\n            if (!isToggle) {\n                _this.updateCellSelection(selectedCell, cellIndex.rowIndex, cellIndex.cellIndex);\n            }\n            if (!isToggle) {\n                var args = {\n                    data: selectedData, cellIndex: cellIndex, currentCell: selectedCell,\n                    selectedRowCellIndex: _this.selectedRowCellIndexes,\n                    previousRowCell: _this.prevECIdxs ?\n                        _this.getCellIndex(_this.prevECIdxs.rowIndex, _this.prevECIdxs.cellIndex) : undefined\n                };\n                var previousRowCellIndex = 'previousRowCellIndex';\n                args[previousRowCellIndex] = _this.prevECIdxs;\n                _this.updateCellProps(cellIndex, cellIndex);\n                _this.onActionComplete(args, events.cellSelected);\n            }\n        };\n    };\n    Selection.prototype.getCellIndex = function (rIdx, cIdx) {\n        return (this.parent.getFrozenColumns() ? (cIdx >= this.parent.getFrozenColumns() ? this.parent.getMovableCellFromIndex(rIdx, cIdx)\n            : this.parent.getCellFromIndex(rIdx, cIdx)) : this.parent.getCellFromIndex(rIdx, cIdx));\n    };\n    /**\n     * Selects a range of cells from start and end indexes.\n     *\n     * @param  {IIndex} startIndex - Specifies the row and column's start index.\n     * @param  {IIndex} endIndex - Specifies the row and column's end index.\n     * @returns {void}\n     */\n    Selection.prototype.selectCellsByRange = function (startIndex, endIndex) {\n        var _this = this;\n        if (!this.isCellType()) {\n            return;\n        }\n        var gObj = this.parent;\n        var selectedCell = this.getSelectedMovableCell(startIndex);\n        var frzCols = gObj.getFrozenColumns();\n        if (!selectedCell) {\n            selectedCell = gObj.getCellFromIndex(startIndex.rowIndex, startIndex.cellIndex);\n        }\n        var min;\n        var max;\n        var stIndex = startIndex;\n        var edIndex = endIndex = endIndex ? endIndex : startIndex;\n        var cellIndexes;\n        this.currentIndex = startIndex.rowIndex;\n        var cncl = 'cancel';\n        var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n        if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n            return;\n        }\n        var args = {\n            data: selectedData, cellIndex: startIndex, currentCell: selectedCell,\n            isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest,\n            previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n        };\n        var previousRowCellIndex = 'previousRowCellIndex';\n        args[previousRowCellIndex] = this.prevECIdxs;\n        this.parent.trigger(events.cellSelecting, this.fDataUpdate(args), function (cellSelectingArgs) {\n            if (!isNullOrUndefined(cellSelectingArgs) && cellSelectingArgs[cncl] === true) {\n                return;\n            }\n            _this.clearCell();\n            if (startIndex.rowIndex > endIndex.rowIndex) {\n                var temp = startIndex;\n                startIndex = endIndex;\n                endIndex = temp;\n            }\n            for (var i = startIndex.rowIndex; i <= endIndex.rowIndex; i++) {\n                if (_this.selectionSettings.cellSelectionMode.indexOf('Box') < 0) {\n                    min = i === startIndex.rowIndex ? (startIndex.cellIndex) : 0;\n                    max = i === endIndex.rowIndex ? (endIndex.cellIndex) : _this.getLastColIndex(i);\n                }\n                else {\n                    min = startIndex.cellIndex;\n                    max = endIndex.cellIndex;\n                }\n                cellIndexes = [];\n                for (var j = min < max ? min : max, len = min > max ? min : max; j <= len; j++) {\n                    if (frzCols) {\n                        if (j < frzCols) {\n                            selectedCell = gObj.getCellFromIndex(i, j);\n                        }\n                        else {\n                            selectedCell = gObj.getMovableCellFromIndex(i, j);\n                        }\n                    }\n                    else {\n                        selectedCell = gObj.getCellFromIndex(i, j);\n                    }\n                    if (!selectedCell) {\n                        continue;\n                    }\n                    cellIndexes.push(j);\n                    _this.updateCellSelection(selectedCell);\n                    _this.addAttribute(selectedCell);\n                }\n                _this.selectedRowCellIndexes.push({ rowIndex: i, cellIndexes: cellIndexes });\n            }\n            var cellSelectedArgs = {\n                data: selectedData, cellIndex: edIndex, currentCell: gObj.getCellFromIndex(edIndex.rowIndex, edIndex.cellIndex),\n                selectedRowCellIndex: _this.selectedRowCellIndexes,\n                previousRowCell: _this.prevECIdxs ? _this.getCellIndex(_this.prevECIdxs.rowIndex, _this.prevECIdxs.cellIndex) : undefined\n            };\n            var previousRowCellIndex = 'previousRowCellIndex';\n            cellSelectedArgs[previousRowCellIndex] = _this.prevECIdxs;\n            if (!_this.isDragged) {\n                _this.onActionComplete(cellSelectedArgs, events.cellSelected);\n                _this.cellselected = true;\n            }\n            _this.updateCellProps(stIndex, edIndex);\n        });\n    };\n    /**\n     * Selects a collection of cells by row and column indexes.\n     *\n     * @param  {ISelectedCell[]} rowCellIndexes - Specifies the row and column indexes.\n     * @returns {void}\n     */\n    Selection.prototype.selectCells = function (rowCellIndexes) {\n        if (!this.isCellType()) {\n            return;\n        }\n        var gObj = this.parent;\n        var selectedCell = this.getSelectedMovableCell(rowCellIndexes[0]);\n        var frzCols = gObj.getFrozenColumns();\n        if (!selectedCell) {\n            selectedCell = gObj.getCellFromIndex(rowCellIndexes[0].rowIndex, rowCellIndexes[0].cellIndexes[0]);\n        }\n        this.currentIndex = rowCellIndexes[0].rowIndex;\n        var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n        if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n            return;\n        }\n        var cellSelectArgs = {\n            data: selectedData, cellIndex: rowCellIndexes[0].cellIndexes[0],\n            currentCell: selectedCell, isCtrlPressed: this.isMultiCtrlRequest,\n            isShiftPressed: this.isMultiShiftRequest,\n            previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n        };\n        var previousRowCellIndex = 'previousRowCellIndex';\n        cellSelectArgs[previousRowCellIndex] = this.prevECIdxs;\n        this.onActionBegin(cellSelectArgs, events.cellSelecting);\n        for (var i = 0, len = rowCellIndexes.length; i < len; i++) {\n            for (var j = 0, cellLen = rowCellIndexes[i].cellIndexes.length; j < cellLen; j++) {\n                if (frzCols) {\n                    if (rowCellIndexes[i].cellIndexes[j] < frzCols) {\n                        selectedCell = gObj.getCellFromIndex(rowCellIndexes[i].rowIndex, rowCellIndexes[i].cellIndexes[j]);\n                    }\n                    else {\n                        selectedCell = gObj.getMovableCellFromIndex(rowCellIndexes[i].rowIndex, rowCellIndexes[i].cellIndexes[j]);\n                    }\n                }\n                else {\n                    selectedCell = gObj.getCellFromIndex(rowCellIndexes[i].rowIndex, rowCellIndexes[i].cellIndexes[j]);\n                }\n                if (!selectedCell) {\n                    continue;\n                }\n                this.updateCellSelection(selectedCell);\n                this.addAttribute(selectedCell);\n                this.addRowCellIndex({ rowIndex: rowCellIndexes[i].rowIndex, cellIndex: rowCellIndexes[i].cellIndexes[j] });\n            }\n        }\n        this.updateCellProps({ rowIndex: rowCellIndexes[0].rowIndex, cellIndex: rowCellIndexes[0].cellIndexes[0] }, { rowIndex: rowCellIndexes[0].rowIndex, cellIndex: rowCellIndexes[0].cellIndexes[0] });\n        var cellSelectedArgs = {\n            data: selectedData, cellIndex: rowCellIndexes[0].cellIndexes[0],\n            currentCell: selectedCell, selectedRowCellIndex: this.selectedRowCellIndexes,\n            previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n        };\n        var prvRowCellIndex = 'previousRowCellIndex';\n        cellSelectedArgs[prvRowCellIndex] = this.prevECIdxs;\n        this.onActionComplete(cellSelectedArgs, events.cellSelected);\n    };\n    /**\n     * Select cells with existing cell selection by passing row and column index.\n     *\n     * @param {IIndex} cellIndexes - Defines the collection of row and column index.\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.addCellsToSelection = function (cellIndexes) {\n        if (!this.isCellType()) {\n            return;\n        }\n        var gObj = this.parent;\n        var selectedCell;\n        var index;\n        this.currentIndex = cellIndexes[0].rowIndex;\n        var cncl = 'cancel';\n        var selectedData = this.getCurrentBatchRecordChanges()[this.currentIndex];\n        var left = gObj.getFrozenLeftCount();\n        var movable = gObj.getMovableColumnsCount();\n        if (this.isSingleSel() || !this.isCellType() || this.isEditing()) {\n            return;\n        }\n        this.hideAutoFill();\n        var col = gObj.getColumnByIndex(cellIndexes[0].cellIndex);\n        var rowObj;\n        gridActionHandler(this.parent, function (tableName, rows) {\n            rowObj = rows[cellIndexes[0].rowIndex];\n        }, [\n            !col.getFreezeTableName() || col.getFreezeTableName() === literals.frozenLeft ? gObj.getRowsObject() : [],\n            col.getFreezeTableName() === 'movable' ? gObj.getMovableRowsObject() : [],\n            col.getFreezeTableName() === literals.frozenRight ? gObj.getFrozenRightRowsObject() : []\n        ]);\n        if (gObj.groupSettings.columns.length > 0) {\n            rowObj = gObj.getRowObjectFromUID(this.target.parentElement.getAttribute('data-uid'));\n        }\n        var foreignKeyData = [];\n        for (var _i = 0, cellIndexes_1 = cellIndexes; _i < cellIndexes_1.length; _i++) {\n            var cellIndex = cellIndexes_1[_i];\n            for (var i = 0, len = this.selectedRowCellIndexes.length; i < len; i++) {\n                if (this.selectedRowCellIndexes[i].rowIndex === cellIndex.rowIndex) {\n                    index = i;\n                    break;\n                }\n            }\n            selectedCell = this.getSelectedMovableCell(cellIndex);\n            if (!selectedCell) {\n                selectedCell = gObj.getCellFromIndex(cellIndex.rowIndex, this.getColIndex(cellIndex.rowIndex, cellIndex.cellIndex));\n            }\n            var idx = col.getFreezeTableName() === 'movable' ? cellIndex.cellIndex - left\n                : col.getFreezeTableName() === literals.frozenRight ? cellIndex.cellIndex - (left + movable) : cellIndex.cellIndex;\n            if (gObj.groupSettings.columns.length > 0) {\n                foreignKeyData.push(rowObj.cells[idx + gObj.groupSettings.columns.length].foreignKeyData);\n            }\n            else {\n                foreignKeyData.push(rowObj.cells[idx].foreignKeyData);\n            }\n            var args = {\n                cancel: false, data: selectedData, cellIndex: cellIndexes[0],\n                isShiftPressed: this.isMultiShiftRequest,\n                currentCell: selectedCell, isCtrlPressed: this.isMultiCtrlRequest,\n                previousRowCell: this.prevECIdxs ?\n                    gObj.getCellFromIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) : undefined\n            };\n            var prvRowCellIndex = 'previousRowCellIndex';\n            args[prvRowCellIndex] = this.prevECIdxs;\n            var isUnSelected = index > -1;\n            if (isUnSelected) {\n                var selectedCellIdx = this.selectedRowCellIndexes[index].cellIndexes;\n                if (selectedCellIdx.indexOf(cellIndex.cellIndex) > -1) {\n                    this.cellDeselect(events.cellDeselecting, [{ rowIndex: cellIndex.rowIndex, cellIndexes: [cellIndex.cellIndex] }], selectedData, [selectedCell], foreignKeyData);\n                    selectedCellIdx.splice(selectedCellIdx.indexOf(cellIndex.cellIndex), 1);\n                    if (selectedCellIdx.length === 0) {\n                        this.selectedRowCellIndexes.splice(index, 1);\n                    }\n                    selectedCell.classList.remove('e-cellselectionbackground');\n                    selectedCell.removeAttribute('aria-selected');\n                    this.cellDeselect(events.cellDeselected, [{ rowIndex: cellIndex.rowIndex, cellIndexes: [cellIndex.cellIndex] }], selectedData, [selectedCell], foreignKeyData);\n                }\n                else {\n                    isUnSelected = false;\n                    this.onActionBegin(args, events.cellSelecting);\n                    this.addRowCellIndex({ rowIndex: cellIndex.rowIndex, cellIndex: cellIndex.cellIndex });\n                    this.updateCellSelection(selectedCell);\n                    this.addAttribute(selectedCell);\n                }\n            }\n            else {\n                this.onActionBegin(args, events.cellSelecting);\n                if (!isNullOrUndefined(args) && args[cncl] === true) {\n                    return;\n                }\n                this.updateCellSelection(selectedCell, cellIndex.rowIndex, cellIndex.cellIndex);\n            }\n            if (!isUnSelected) {\n                var cellSelectedArgs = {\n                    data: selectedData, cellIndex: cellIndexes[0], currentCell: selectedCell,\n                    previousRowCell: this.prevECIdxs ? this.getCellIndex(this.prevECIdxs.rowIndex, this.prevECIdxs.cellIndex) :\n                        undefined, selectedRowCellIndex: this.selectedRowCellIndexes\n                };\n                cellSelectedArgs[prvRowCellIndex] = this.prevECIdxs;\n                this.onActionComplete(cellSelectedArgs, events.cellSelected);\n                this.cellselected = true;\n            }\n            this.updateCellProps(cellIndex, cellIndex);\n        }\n    };\n    Selection.prototype.getColIndex = function (rowIndex, index) {\n        var frzCols = this.parent.isFrozenGrid();\n        var col = this.parent.getColumnByIndex(index);\n        var cells = getCellsByTableName(this.parent, col, rowIndex);\n        if (cells) {\n            for (var m = 0; m < cells.length; m++) {\n                var colIndex = parseInt(cells[m].getAttribute(literals.ariaColIndex), 10);\n                if (colIndex === index) {\n                    if (frzCols) {\n                        if (col.getFreezeTableName() === 'movable') {\n                            m += this.parent.getFrozenLeftCount();\n                        }\n                        else if (col.getFreezeTableName() === literals.frozenRight) {\n                            m += (this.parent.getFrozenLeftColumnsCount() + this.parent.getMovableColumnsCount());\n                        }\n                    }\n                    return m;\n                }\n            }\n        }\n        return -1;\n    };\n    Selection.prototype.getLastColIndex = function (rowIndex) {\n        var cells = this.parent.getFrozenColumns() ? this.parent.getMovableDataRows()[rowIndex].querySelectorAll('td.e-rowcell')\n            : this.parent.getDataRows()[rowIndex].querySelectorAll('td.e-rowcell');\n        return parseInt(cells[cells.length - 1].getAttribute(literals.ariaColIndex), 10);\n    };\n    Selection.prototype.clearCell = function () {\n        this.clearCellSelection();\n    };\n    Selection.prototype.cellDeselect = function (type, cellIndexes, data, cells, foreignKeyData) {\n        var cancl = 'cancel';\n        if (cells[0] && cells[0].classList.contains(literals.gridChkBox)) {\n            this.updateCheckBoxes(closest(cells[0], 'tr'));\n        }\n        var args = {\n            cells: cells, data: data, cellIndexes: cellIndexes, foreignKeyData: foreignKeyData, cancel: false\n        };\n        this.parent.trigger(type, args);\n        this.isPreventCellSelect = args[cancl];\n    };\n    Selection.prototype.updateCellSelection = function (selectedCell, rowIndex, cellIndex) {\n        if (!isNullOrUndefined(rowIndex)) {\n            this.addRowCellIndex({ rowIndex: rowIndex, cellIndex: cellIndex });\n        }\n        selectedCell.classList.add('e-cellselectionbackground');\n        if (selectedCell.classList.contains(literals.gridChkBox)) {\n            this.updateCheckBoxes(closest(selectedCell, 'tr'), true);\n        }\n        this.addAttribute(selectedCell);\n    };\n    Selection.prototype.addAttribute = function (cell) {\n        this.target = cell;\n        if (!isNullOrUndefined(cell)) {\n            cell.setAttribute('aria-selected', 'true');\n            if (!this.preventFocus) {\n                this.focus.onClick({ target: cell }, true);\n            }\n        }\n    };\n    Selection.prototype.updateCellProps = function (startIndex, endIndex) {\n        this.prevCIdxs = startIndex;\n        this.prevECIdxs = endIndex;\n        this.isCellSelected = this.selectedRowCellIndexes.length && true;\n    };\n    Selection.prototype.addRowCellIndex = function (rowCellIndex) {\n        var isRowAvail;\n        var index;\n        for (var i = 0, len = this.selectedRowCellIndexes.length; i < len; i++) {\n            if (this.selectedRowCellIndexes[i].rowIndex === rowCellIndex.rowIndex) {\n                isRowAvail = true;\n                index = i;\n                break;\n            }\n        }\n        if (isRowAvail) {\n            if (this.selectedRowCellIndexes[index].cellIndexes.indexOf(rowCellIndex.cellIndex) < 0) {\n                this.selectedRowCellIndexes[index].cellIndexes.push(rowCellIndex.cellIndex);\n            }\n        }\n        else {\n            this.selectedRowCellIndexes.push({ rowIndex: rowCellIndex.rowIndex, cellIndexes: [rowCellIndex.cellIndex] });\n        }\n    };\n    /**\n     * Deselects the currently selected cells.\n     *\n     * @returns {void}\n     */\n    Selection.prototype.clearCellSelection = function () {\n        if (this.isCellSelected) {\n            var gObj = this.parent;\n            var selectedCells = this.getSelectedCellsElement();\n            var rowCell = this.selectedRowCellIndexes;\n            var data = [];\n            var cells = [];\n            var foreignKeyData = [];\n            var currentViewData = this.getCurrentBatchRecordChanges();\n            var frzCols = gObj.isFrozenGrid();\n            this.hideAutoFill();\n            for (var i = 0, len = rowCell.length; i < len; i++) {\n                data.push(currentViewData[rowCell[i].rowIndex]);\n                var rowObj = this.getRowObj(rowCell[i].rowIndex);\n                for (var j = 0, cLen = rowCell[i].cellIndexes.length; j < cLen; j++) {\n                    if (frzCols) {\n                        var col = gObj.getColumnByIndex(rowCell[i].cellIndexes[j]);\n                        cells.push(getCellByColAndRowIndex(this.parent, col, rowCell[i].rowIndex, rowCell[i].cellIndexes[j]));\n                    }\n                    else {\n                        if (rowObj.cells) {\n                            foreignKeyData.push(rowObj.cells[rowCell[i].cellIndexes[j]].foreignKeyData);\n                        }\n                        cells.push(gObj.getCellFromIndex(rowCell[i].rowIndex, rowCell[i].cellIndexes[j]));\n                    }\n                }\n            }\n            this.cellDeselect(events.cellDeselecting, rowCell, data, cells, foreignKeyData);\n            if (this.isPreventCellSelect === true) {\n                return;\n            }\n            for (var i = 0, len = selectedCells.length; i < len; i++) {\n                selectedCells[i].classList.remove('e-cellselectionbackground');\n                selectedCells[i].removeAttribute('aria-selected');\n            }\n            if (this.bdrElement) {\n                this.showHideBorders('none');\n            }\n            this.selectedRowCellIndexes = [];\n            this.isCellSelected = false;\n            if (!this.isDragged && this.cellselected) {\n                this.cellDeselect(events.cellDeselected, rowCell, data, cells, foreignKeyData);\n            }\n        }\n    };\n    Selection.prototype.getSelectedCellsElement = function () {\n        var gObj = this.parent;\n        var rows = gObj.getDataRows();\n        var mRows;\n        if (gObj.isFrozenGrid()) {\n            mRows = gObj.getMovableDataRows();\n            rows = gObj.addMovableRows(rows, mRows);\n            if (gObj.getFrozenMode() === literals.leftRight) {\n                rows = gObj.addMovableRows(rows, gObj.getFrozenRightDataRows());\n            }\n        }\n        var cells = [];\n        for (var i = 0, len = rows.length; i < len; i++) {\n            cells = cells.concat([].slice.call(rows[i].getElementsByClassName('e-cellselectionbackground')));\n        }\n        return cells;\n    };\n    Selection.prototype.mouseMoveHandler = function (e) {\n        e.preventDefault();\n        var gBRect = this.parent.element.getBoundingClientRect();\n        var x1 = this.x;\n        var y1 = this.y;\n        var position = getPosition(e);\n        var x2 = position.x - gBRect.left;\n        var y2 = position.y - gBRect.top;\n        var tmp;\n        var target = closest(e.target, 'tr');\n        this.isDragged = true;\n        if (!this.isCellDrag) {\n            if (!target) {\n                target = closest(document.elementFromPoint(this.parent.element.offsetLeft + 2, e.clientY), 'tr');\n            }\n            if (x1 > x2) {\n                tmp = x2;\n                x2 = x1;\n                x1 = tmp;\n            }\n            if (y1 > y2) {\n                tmp = y2;\n                y2 = y1;\n                y1 = tmp;\n            }\n            this.element.style.left = x1 + 'px';\n            this.element.style.top = y1 + 'px';\n            this.element.style.width = x2 - x1 + 'px';\n            this.element.style.height = y2 - y1 + 'px';\n        }\n        if (target && !e.ctrlKey && !e.shiftKey) {\n            var rowIndex = parseInt(target.getAttribute(literals.ariaRowIndex), 10);\n            if (!this.isCellDrag) {\n                this.hideAutoFill();\n                this.selectRowsByRange(this.startDIndex, rowIndex);\n                this.isRowDragSelected = true;\n            }\n            else {\n                var td = parentsUntil(e.target, literals.rowCell);\n                if (td) {\n                    this.startAFCell = this.startCell;\n                    this.endAFCell = parentsUntil(e.target, literals.rowCell);\n                    this.selectLikeExcel(e, rowIndex, parseInt(td.getAttribute(literals.ariaColIndex), 10));\n                }\n            }\n        }\n    };\n    Selection.prototype.selectLikeExcel = function (e, rowIndex, cellIndex) {\n        if (!this.isAutoFillSel) {\n            this.clearCellSelection();\n            this.selectCellsByRange({ rowIndex: this.startDIndex, cellIndex: this.startDCellIndex }, { rowIndex: rowIndex, cellIndex: cellIndex });\n            this.drawBorders();\n        }\n        else { //Autofill\n            this.showAFBorders();\n            this.selectLikeAutoFill(e);\n        }\n    };\n    Selection.prototype.drawBorders = function () {\n        if (this.selectionSettings.cellSelectionMode === 'BoxWithBorder' && this.selectedRowCellIndexes.length && !this.parent.isEdit) {\n            this.parent.element.classList.add('e-enabledboxbdr');\n            if (!this.bdrElement) {\n                this.createBorders();\n            }\n            this.positionBorders();\n        }\n        else {\n            this.showHideBorders('none');\n        }\n    };\n    Selection.prototype.isLastCell = function (cell) {\n        var cells = [].slice.call(cell.parentElement.querySelectorAll('.e-rowcell:not(.e-hide)'));\n        return cells[cells.length - 1] === cell;\n    };\n    Selection.prototype.isLastRow = function (cell) {\n        var rows = [].slice.call(closest(cell, literals.tbody).querySelectorAll('.e-row:not(.e-hiddenrow)'));\n        return cell.parentElement === rows[rows.length - 1];\n    };\n    Selection.prototype.isFirstRow = function (cell) {\n        var rows = [].slice.call(closest(cell, literals.tbody).querySelectorAll('.e-row:not(.e-hiddenrow)'));\n        return cell.parentElement === rows[0];\n    };\n    Selection.prototype.isFirstCell = function (cell) {\n        var cells = [].slice.call(cell.parentElement.querySelectorAll('.e-rowcell:not(.e-hide)'));\n        return cells[0] === cell;\n    };\n    Selection.prototype.setBorders = function (parentEle, border, bdrStr) {\n        var cells = [].slice.call(parentEle.getElementsByClassName('e-cellselectionbackground')).\n            filter(function (ele) { return ele.style.display === ''; });\n        if (cells.length) {\n            var isFrozen = this.parent.isFrozenGrid();\n            var start = cells[0];\n            var end = cells[cells.length - 1];\n            var stOff = start.getBoundingClientRect();\n            var endOff = end.getBoundingClientRect();\n            var parentOff = start.offsetParent.getBoundingClientRect();\n            var rowHeight = this.isLastRow(end) && (bdrStr === '1' || bdrStr === '2' || bdrStr === '5') ? 2 : 0;\n            var topOffSet = this.parent.frozenRows && (bdrStr === '1' || bdrStr === '2') &&\n                this.isFirstRow(start) ? 1.5 : 0;\n            var leftOffset = isFrozen && (bdrStr === '2' || bdrStr === '4') && this.isFirstCell(start) ? 1 : 0;\n            var rightOffset = ((this.parent.getFrozenMode() === 'Right' && (bdrStr === '1' || bdrStr === '3'))\n                || (this.parent.getFrozenMode() === literals.leftRight && (bdrStr === '5' || bdrStr === '6')))\n                && this.isFirstCell(start) ? 1 : 0;\n            if (this.parent.enableRtl) {\n                border.style.right = parentOff.right - stOff.right - leftOffset + 'px';\n                border.style.width = stOff.right - endOff.left + leftOffset + 1 + 'px';\n            }\n            else {\n                border.style.left = stOff.left - parentOff.left - leftOffset - rightOffset + 'px';\n                border.style.width = endOff.right - stOff.left + leftOffset - rightOffset + 1 + 'px';\n            }\n            border.style.top = stOff.top - parentOff.top - topOffSet + 'px';\n            border.style.height = endOff.top - stOff.top > 0 ?\n                (endOff.top - parentOff.top + endOff.height + 1) - (stOff.top - parentOff.top) - rowHeight + topOffSet + 'px' :\n                endOff.height + topOffSet - rowHeight + 1 + 'px';\n            this.selectDirection += bdrStr;\n        }\n        else {\n            border.style.display = 'none';\n        }\n    };\n    Selection.prototype.positionBorders = function () {\n        this.updateStartEndCells();\n        if (!this.startCell || !this.bdrElement || !this.selectedRowCellIndexes.length) {\n            return;\n        }\n        this.selectDirection = '';\n        this.showHideBorders('');\n        this.setBorders(this.parent.getContentTable(), this.bdrElement, '1');\n        if (this.parent.isFrozenGrid()) {\n            this.setBorders(this.parent.contentModule.getMovableContent(), this.mcBdrElement, '2');\n            if (this.parent.getFrozenMode() === literals.leftRight) {\n                this.setBorders(this.parent.contentModule.getFrozenRightContent(), this.frcBdrElement, '5');\n            }\n        }\n        if (this.parent.frozenRows) {\n            this.setBorders(this.parent.getHeaderTable(), this.fhBdrElement, '3');\n            if (this.parent.isFrozenGrid()) {\n                this.setBorders(this.parent.headerModule.getMovableHeader(), this.mhBdrElement, '4');\n                if (this.parent.getFrozenMode() === literals.leftRight) {\n                    this.setBorders(this.parent.headerModule.getFrozenRightHeader(), this.frhBdrElement, '6');\n                }\n            }\n        }\n        this.applyBorders(this.selectDirection);\n    };\n    /* eslint-enable */\n    Selection.prototype.applyBothFrozenBorders = function (str) {\n        var rtl = this.parent.enableRtl;\n        switch (str.length) {\n            case 6:\n                {\n                    this.bdrElement.style.borderWidth = rtl ? this.right_bottom : this.bottom_left;\n                    this.mcBdrElement.style.borderWidth = this.bottom;\n                    this.fhBdrElement.style.borderWidth = rtl ? this.top_right : this.top_left;\n                    this.mhBdrElement.style.borderWidth = this.top;\n                    this.frcBdrElement.style.borderWidth = rtl ? this.bottom_left : this.right_bottom;\n                    this.frhBdrElement.style.borderWidth = rtl ? this.top_left : this.top_right;\n                }\n                break;\n            case 4:\n                {\n                    if (str.includes('1') && str.includes('2') && str.includes('3') && str.includes('4')) {\n                        this.fhBdrElement.style.borderWidth = rtl ? this.top_right : this.top_left;\n                        this.mhBdrElement.style.borderWidth = rtl ? this.top_left : this.top_right;\n                        this.bdrElement.style.borderWidth = rtl ? this.right_bottom : this.bottom_left;\n                        this.mcBdrElement.style.borderWidth = rtl ? this.bottom_left : this.right_bottom;\n                    }\n                    if (str.includes('2') && str.includes('4') && str.includes('5') && str.includes('6')) {\n                        this.mcBdrElement.style.borderWidth = rtl ? this.right_bottom : this.bottom_left;\n                        this.mhBdrElement.style.borderWidth = rtl ? this.top_right : this.top_left;\n                        this.frcBdrElement.style.borderWidth = rtl ? this.bottom_left : this.right_bottom;\n                        this.frhBdrElement.style.borderWidth = rtl ? this.top_left : this.top_right;\n                    }\n                }\n                break;\n            case 3:\n                {\n                    this.bdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n                    this.mcBdrElement.style.borderWidth = this.top_bottom;\n                    this.frcBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n                    if (this.parent.frozenRows) {\n                        this.fhBdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n                        this.mhBdrElement.style.borderWidth = this.top_bottom;\n                        this.frcBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n                    }\n                }\n                break;\n            case 2:\n                {\n                    if (str.includes('1')) {\n                        this.mcBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n                        if (this.parent.frozenRows) {\n                            this.fhBdrElement.style.borderWidth = this.top_right_left;\n                        }\n                    }\n                    if (str.includes('2')) {\n                        this.bdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n                        this.frcBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n                        if (this.parent.frozenRows) {\n                            this.mhBdrElement.style.borderWidth = this.top_right_left;\n                        }\n                    }\n                    if (str.includes('3')) {\n                        this.mhBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n                        this.bdrElement.style.borderWidth = this.right_bottom_left;\n                    }\n                    if (str.includes('4')) {\n                        this.fhBdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n                        this.frhBdrElement.style.borderWidth = rtl ? this.top_bottom_left : this.top_right_bottom;\n                        this.mcBdrElement.style.borderWidth = this.right_bottom_left;\n                    }\n                    if (str.includes('5')) {\n                        this.mcBdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n                        if (this.parent.frozenRows) {\n                            this.frhBdrElement.style.borderWidth = this.top_right_left;\n                        }\n                    }\n                    if (str.includes('6')) {\n                        this.mhBdrElement.style.borderWidth = rtl ? this.top_right_bottom : this.top_bottom_left;\n                        this.frcBdrElement.style.borderWidth = this.right_bottom_left;\n                    }\n                }\n                break;\n            default:\n                this.bdrElement.style.borderWidth = this.all_border;\n                this.mcBdrElement.style.borderWidth = this.all_border;\n                this.frcBdrElement.style.borderWidth = this.all_border;\n                if (this.parent.frozenRows) {\n                    this.fhBdrElement.style.borderWidth = this.all_border;\n                    this.mhBdrElement.style.borderWidth = this.all_border;\n                    this.frhBdrElement.style.borderWidth = this.all_border;\n                }\n                break;\n        }\n    };\n    Selection.prototype.applyBorders = function (str) {\n        var rtl = this.parent.enableRtl;\n        if (this.parent.getFrozenMode() === literals.leftRight) {\n            this.applyBothFrozenBorders(str);\n        }\n        else {\n            switch (str.length) {\n                case 4:\n                    {\n                        if (this.parent.getFrozenMode() === 'Right') {\n                            this.bdrElement.style.borderWidth = rtl ? this.bottom_left : this.right_bottom;\n                            this.mcBdrElement.style.borderWidth = rtl ? this.right_bottom : this.bottom_left;\n                            this.fhBdrElement.style.borderWidth = rtl ? this.top_left : this.top_right;\n                            this.mhBdrElement.style.borderWidth = rtl ? this.top_right : this.top_left;\n                        }\n                        else {\n                            this.bdrElement.style.borderWidth = rtl ? this.right_bottom : this.bottom_left;\n                            this.mcBdrElement.style.borderWidth = rtl ? this.bottom_left : this.right_bottom;\n                            this.fhBdrElement.style.borderWidth = rtl ? this.top_right : this.top_left;\n                            this.mhBdrElement.style.borderWidth = rtl ? this.top_left : this.top_right;\n                        }\n                    }\n                    break;\n                case 2:\n                    {\n                        if (this.parent.getFrozenMode() === 'Right') {\n                            this.bdrElement.style.borderWidth = str.includes('2') ? rtl ? this.top_bottom_left\n                                : this.top_right_bottom : this.right_bottom_left;\n                            this.mcBdrElement.style.borderWidth = str.includes('1') ? rtl ? this.top_right_bottom\n                                : this.top_bottom_left : this.right_bottom_left;\n                            if (this.parent.frozenRows) {\n                                this.fhBdrElement.style.borderWidth = str.includes('1') ? this.top_right_left\n                                    : rtl ? this.top_bottom_left : this.top_right_bottom;\n                                this.mhBdrElement.style.borderWidth = str.includes('2') ? this.top_right_left\n                                    : rtl ? this.top_right_bottom : this.top_bottom_left;\n                            }\n                        }\n                        else {\n                            this.bdrElement.style.borderWidth = str.includes('2') ? rtl ? this.top_right_bottom\n                                : this.top_bottom_left : this.right_bottom_left;\n                            if (this.parent.isFrozenGrid()) {\n                                this.mcBdrElement.style.borderWidth = str.includes('1') ? rtl ? this.top_bottom_left\n                                    : this.top_right_bottom : this.right_bottom_left;\n                            }\n                            if (this.parent.frozenRows) {\n                                this.fhBdrElement.style.borderWidth = str.includes('1') ? this.top_right_left\n                                    : rtl ? this.top_right_bottom : this.top_bottom_left;\n                                if (this.parent.isFrozenGrid()) {\n                                    this.mhBdrElement.style.borderWidth = str.includes('2') ? this.top_right_left\n                                        : rtl ? this.top_bottom_left : this.top_right_bottom;\n                                }\n                            }\n                        }\n                    }\n                    break;\n                default:\n                    this.bdrElement.style.borderWidth = this.all_border;\n                    if (this.parent.isFrozenGrid()) {\n                        this.mcBdrElement.style.borderWidth = this.all_border;\n                    }\n                    if (this.parent.frozenRows) {\n                        this.fhBdrElement.style.borderWidth = this.all_border;\n                        if (this.parent.isFrozenGrid()) {\n                            this.mhBdrElement.style.borderWidth = this.all_border;\n                        }\n                    }\n                    break;\n            }\n        }\n    };\n    Selection.prototype.createBorders = function () {\n        if (!this.bdrElement) {\n            this.bdrElement = this.parent.getContentTable().parentElement.appendChild(createElement('div', {\n                className: 'e-xlsel', id: this.parent.element.id + '_bdr',\n                styles: 'width: 2px; border-width: 0;'\n            }));\n            if (this.parent.isFrozenGrid()) {\n                this.mcBdrElement = this.parent.contentModule.getMovableContent().appendChild(createElement('div', {\n                    className: 'e-xlsel', id: this.parent.element.id + '_mcbdr',\n                    styles: 'height: 2px; border-width: 0;'\n                }));\n                if (this.parent.getFrozenMode() === literals.leftRight) {\n                    this.frcBdrElement = this.parent.contentModule.getFrozenRightContent().appendChild(createElement('div', {\n                        className: 'e-xlsel', id: this.parent.element.id + '_frcbdr',\n                        styles: 'height: 2px; border-width: 0;'\n                    }));\n                }\n            }\n            if (this.parent.frozenRows) {\n                this.fhBdrElement = this.parent.getHeaderTable().parentElement.appendChild(createElement('div', { className: 'e-xlsel', id: this.parent.element.id + '_fhbdr', styles: 'height: 2px;' }));\n            }\n            if (this.parent.frozenRows && this.parent.isFrozenGrid()) {\n                this.mhBdrElement = this.parent.headerModule.getMovableHeader().appendChild(createElement('div', { className: 'e-xlsel', id: this.parent.element.id + '_mhbdr', styles: 'height: 2px;' }));\n                if (this.parent.getFrozenMode() === literals.leftRight) {\n                    this.frhBdrElement = this.parent.headerModule.getFrozenRightHeader().appendChild(createElement('div', { className: 'e-xlsel', id: this.parent.element.id + '_frhbdr', styles: 'height: 2px;' }));\n                }\n            }\n        }\n    };\n    Selection.prototype.showHideBorders = function (display) {\n        if (this.bdrElement) {\n            this.bdrElement.style.display = display;\n            if (this.parent.isFrozenGrid()) {\n                this.mcBdrElement.style.display = display;\n                if (this.parent.getFrozenMode() === literals.leftRight) {\n                    this.frcBdrElement.style.display = display;\n                }\n            }\n            if (this.parent.frozenRows) {\n                this.fhBdrElement.style.display = display;\n            }\n            if (this.parent.frozenRows && this.parent.isFrozenGrid()) {\n                this.mhBdrElement.style.display = display;\n                if (this.parent.getFrozenMode() === literals.leftRight) {\n                    this.frhBdrElement.style.display = display;\n                }\n            }\n        }\n    };\n    Selection.prototype.drawAFBorders = function () {\n        if (!this.bdrAFBottom) {\n            this.createAFBorders();\n        }\n        this.positionAFBorders();\n    };\n    Selection.prototype.positionAFBorders = function () {\n        if (!this.startCell || !this.bdrAFLeft) {\n            return;\n        }\n        var stOff = this.startAFCell.getBoundingClientRect();\n        var endOff = this.endAFCell.getBoundingClientRect();\n        var top = endOff.top - stOff.top > 0 ? 1 : 0;\n        var firstCellTop = endOff.top - stOff.top >= 0 && (parentsUntil(this.startAFCell, literals.movableContent) ||\n            parentsUntil(this.startAFCell, 'e-frozencontent')) && this.isFirstRow(this.startAFCell) ? 1.5 : 0;\n        var firstCellLeft = (parentsUntil(this.startAFCell, literals.movableContent) ||\n            parentsUntil(this.startAFCell, literals.movableHeader)) && this.isFirstCell(this.startAFCell) ? 1 : 0;\n        var rowHeight = this.isLastRow(this.endAFCell) && (parentsUntil(this.endAFCell, literals.movableContent) ||\n            parentsUntil(this.endAFCell, 'e-frozencontent')) ? 2 : 0;\n        var parentOff = this.startAFCell.offsetParent.getBoundingClientRect();\n        var parentRect = this.parent.element.getBoundingClientRect();\n        var sTop = this.startAFCell.offsetParent.parentElement.scrollTop;\n        var sLeft = this.startAFCell.offsetParent.parentElement.scrollLeft;\n        var scrollTop = sTop - this.startAFCell.offsetTop;\n        var scrollLeft = sLeft - this.startAFCell.offsetLeft;\n        var totalHeight = this.parent.element.clientHeight;\n        var totalWidth = this.parent.element.clientWidth;\n        scrollTop = scrollTop > 0 ? Math.floor(scrollTop) - 1 : 0;\n        scrollLeft = scrollLeft > 0 ? scrollLeft : 0;\n        var left = stOff.left - parentRect.left;\n        if (!this.parent.enableRtl) {\n            this.bdrAFLeft.style.left = left - firstCellLeft + scrollLeft - 1 + 'px';\n            this.bdrAFRight.style.left = endOff.left - parentRect.left - 2 + endOff.width + 'px';\n            this.bdrAFRight.style.width = totalWidth <= parseInt(this.bdrAFRight.style.left, 10) ? '0px' : '2px';\n            this.bdrAFTop.style.left = left + scrollLeft - 0.5 + 'px';\n            this.bdrAFTop.style.width = parseInt(this.bdrAFRight.style.left, 10) - parseInt(this.bdrAFLeft.style.left, 10)\n                - firstCellLeft + 1 + 'px';\n            if (totalWidth <= (parseInt(this.bdrAFTop.style.width, 10) + parseInt(this.bdrAFTop.style.left, 10))) {\n                var leftRemove = (parseInt(this.bdrAFTop.style.width, 10) + parseInt(this.bdrAFTop.style.left, 10)) - totalWidth;\n                this.bdrAFTop.style.width = parseInt(this.bdrAFTop.style.width, 10) - leftRemove + 'px';\n            }\n        }\n        else {\n            var scrolloffSet = (parentsUntil(this.startAFCell, literals.movableContent) ||\n                parentsUntil(this.startAFCell, literals.movableHeader)) ? stOff.right -\n                this.startAFCell.offsetParent.parentElement.getBoundingClientRect().width -\n                parentRect.left : 0;\n            this.bdrAFLeft.style.right = parentRect.right - endOff.right - 2 + endOff.width + 'px';\n            this.bdrAFLeft.style.width = totalWidth <= parseInt(this.bdrAFLeft.style.right, 10) ? '0px' : '2px';\n            this.bdrAFRight.style.right = parentRect.right - stOff.right - firstCellLeft + scrolloffSet - 1 + 'px';\n            this.bdrAFTop.style.left = endOff.left - parentRect.left - 0.5 + 'px';\n            this.bdrAFTop.style.width = parseInt(this.bdrAFLeft.style.right, 10) - parseInt(this.bdrAFRight.style.right, 10)\n                - firstCellLeft + 1 + 'px';\n            if (parseInt(this.bdrAFTop.style.left, 10) < 0) {\n                this.bdrAFTop.style.width = parseInt(this.bdrAFTop.style.width, 10) + parseInt(this.bdrAFTop.style.left, 10) + 'px';\n                this.bdrAFTop.style.left = '0px';\n            }\n        }\n        this.bdrAFLeft.style.top = stOff.top - parentRect.top - firstCellTop + scrollTop + 'px';\n        this.bdrAFLeft.style.height = endOff.top - stOff.top > 0 ?\n            (endOff.top - parentOff.top + endOff.height + 1) - (stOff.top - parentOff.top) + firstCellTop - rowHeight - scrollTop + 'px' :\n            endOff.height + firstCellTop - rowHeight - scrollTop + 'px';\n        this.bdrAFRight.style.top = this.bdrAFLeft.style.top;\n        this.bdrAFRight.style.height = parseInt(this.bdrAFLeft.style.height, 10) + 'px';\n        this.bdrAFTop.style.top = this.bdrAFRight.style.top;\n        this.bdrAFBottom.style.left = this.bdrAFTop.style.left;\n        this.bdrAFBottom.style.top = parseFloat(this.bdrAFLeft.style.top) + parseFloat(this.bdrAFLeft.style.height) - top - 1 + 'px';\n        this.bdrAFBottom.style.width = totalHeight <= parseFloat(this.bdrAFBottom.style.top) ? '0px' : this.bdrAFTop.style.width;\n        if (totalHeight <= (parseInt(this.bdrAFLeft.style.height, 10) + parseInt(this.bdrAFLeft.style.top, 10))) {\n            var topRemove = parseInt(this.bdrAFLeft.style.height, 10) + parseInt(this.bdrAFLeft.style.top, 10) - totalHeight;\n            this.bdrAFLeft.style.height = parseInt(this.bdrAFLeft.style.height, 10) - topRemove + 'px';\n            this.bdrAFRight.style.height = parseInt(this.bdrAFLeft.style.height, 10) + 'px';\n        }\n    };\n    Selection.prototype.createAFBorders = function () {\n        if (!this.bdrAFLeft) {\n            this.bdrAFLeft = this.parent.element.appendChild(createElement('div', { className: 'e-xlselaf', id: this.parent.element.id + '_bdrafleft', styles: 'width: 2px;' }));\n            this.bdrAFRight = this.parent.element.appendChild(createElement('div', { className: 'e-xlselaf', id: this.parent.element.id + '_bdrafright', styles: 'width: 2px;' }));\n            this.bdrAFBottom = this.parent.element.appendChild(createElement('div', { className: 'e-xlselaf', id: this.parent.element.id + '_bdrafbottom', styles: 'height: 2px;' }));\n            this.bdrAFTop = this.parent.element.appendChild(createElement('div', { className: 'e-xlselaf', id: this.parent.element.id + '_bdraftop', styles: 'height: 2px;' }));\n        }\n    };\n    Selection.prototype.showAFBorders = function () {\n        if (this.bdrAFLeft) {\n            this.bdrAFLeft.style.display = '';\n            this.bdrAFRight.style.display = '';\n            this.bdrAFBottom.style.display = '';\n            this.bdrAFTop.style.display = '';\n        }\n    };\n    Selection.prototype.hideAFBorders = function () {\n        if (this.bdrAFLeft) {\n            this.bdrAFLeft.style.display = 'none';\n            this.bdrAFRight.style.display = 'none';\n            this.bdrAFBottom.style.display = 'none';\n            this.bdrAFTop.style.display = 'none';\n        }\n    };\n    Selection.prototype.updateValue = function (rIdx, cIdx, cell) {\n        var args = this.createBeforeAutoFill(rIdx, cIdx, cell);\n        if (!args.cancel) {\n            var col = this.parent.getColumnByIndex(cIdx);\n            if (this.parent.editModule && cell) {\n                if (col.type === 'number') {\n                    this.parent.editModule.updateCell(rIdx, col.field, parseFloat(args.value));\n                }\n                else {\n                    this.parent.editModule.updateCell(rIdx, col.field, args.value);\n                }\n            }\n        }\n    };\n    Selection.prototype.createBeforeAutoFill = function (rowIndex, colIndex, cell) {\n        var col = this.parent.getColumnByIndex(colIndex);\n        var args = {\n            column: col,\n            value: cell.innerText\n        };\n        this.parent.trigger(events.beforeAutoFill, args);\n        return args;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    Selection.prototype.getAutoFillCells = function (rowIndex, startCellIdx) {\n        var cls = '.e-cellselectionbackground';\n        var cells = [].slice.call(this.parent.getDataRows()[rowIndex].querySelectorAll(cls));\n        if (this.parent.isFrozenGrid()) {\n            cells = cells.concat([].slice.call(this.parent.getMovableDataRows()[rowIndex].querySelectorAll(cls)));\n            if (this.parent.getFrozenMode() === literals.leftRight) {\n                cells = cells.concat([].slice.call(this.parent.getFrozenRightDataRows()[rowIndex].querySelectorAll(cls)));\n            }\n        }\n        return cells;\n    };\n    Selection.prototype.selectLikeAutoFill = function (e, isApply) {\n        var startrowIdx = parseInt(parentsUntil(this.startAFCell, literals.row).getAttribute(literals.ariaRowIndex), 10);\n        var startCellIdx = parseInt(this.startAFCell.getAttribute(literals.ariaColIndex), 10);\n        var endrowIdx = parseInt(parentsUntil(this.endAFCell, literals.row).getAttribute(literals.ariaRowIndex), 10);\n        var endCellIdx = parseInt(this.endAFCell.getAttribute(literals.ariaColIndex), 10);\n        var rowLen = this.selectedRowCellIndexes.length - 1;\n        var colLen = this.selectedRowCellIndexes[0].cellIndexes.length - 1;\n        switch (true) { //direction\n            case !isApply && this.endAFCell.classList.contains('e-cellselectionbackground') &&\n                !!parentsUntil(e.target, literals.rowCell):\n                this.startAFCell = this.parent.getCellFromIndex(startrowIdx, startCellIdx);\n                this.endAFCell = this.parent.getCellFromIndex(startrowIdx + rowLen, startCellIdx + colLen);\n                this.drawAFBorders();\n                break;\n            case this.autoFillRLselection && startCellIdx + colLen < endCellIdx && //right\n                endCellIdx - startCellIdx - colLen + 1 > endrowIdx - startrowIdx - rowLen // right bottom\n                && endCellIdx - startCellIdx - colLen + 1 > startrowIdx - endrowIdx: //right top\n                this.endAFCell = this.parent.getCellFromIndex(startrowIdx + rowLen, endCellIdx);\n                endrowIdx = parseInt(parentsUntil(this.endAFCell, literals.row).getAttribute(literals.ariaRowIndex), 10);\n                endCellIdx = parseInt(this.endAFCell.getAttribute(literals.ariaColIndex), 10);\n                if (!isApply) {\n                    this.drawAFBorders();\n                }\n                else {\n                    var cellIdx = parseInt(this.endCell.getAttribute(literals.ariaColIndex), 10);\n                    for (var i = startrowIdx; i <= endrowIdx; i++) {\n                        var cells = this.getAutoFillCells(i, startCellIdx);\n                        var c = 0;\n                        for (var j = cellIdx + 1; j <= endCellIdx; j++) {\n                            if (c > colLen) {\n                                c = 0;\n                            }\n                            this.updateValue(i, j, cells[c]);\n                            c++;\n                        }\n                    }\n                    this.selectCellsByRange({ rowIndex: startrowIdx, cellIndex: this.startCellIndex }, { rowIndex: endrowIdx, cellIndex: endCellIdx });\n                }\n                break;\n            case this.autoFillRLselection && startCellIdx > endCellIdx && // left\n                startCellIdx - endCellIdx + 1 > endrowIdx - startrowIdx - rowLen && //left top\n                startCellIdx - endCellIdx + 1 > startrowIdx - endrowIdx: // left bottom\n                this.startAFCell = this.parent.getCellFromIndex(startrowIdx, endCellIdx);\n                this.endAFCell = this.endCell;\n                if (!isApply) {\n                    this.drawAFBorders();\n                }\n                else {\n                    for (var i = startrowIdx; i <= startrowIdx + rowLen; i++) {\n                        var cells = this.getAutoFillCells(i, startCellIdx);\n                        cells.reverse();\n                        var c = 0;\n                        for (var j = this.startCellIndex - 1; j >= endCellIdx; j--) {\n                            if (c > colLen) {\n                                c = 0;\n                            }\n                            this.updateValue(i, j, cells[c]);\n                            c++;\n                        }\n                    }\n                    this.selectCellsByRange({ rowIndex: startrowIdx, cellIndex: endCellIdx }, { rowIndex: startrowIdx + rowLen, cellIndex: this.startCellIndex + colLen });\n                }\n                break;\n            case startrowIdx > endrowIdx: //up\n                this.startAFCell = this.parent.getCellFromIndex(endrowIdx, startCellIdx);\n                this.endAFCell = this.endCell;\n                if (!isApply) {\n                    this.drawAFBorders();\n                }\n                else {\n                    var trIdx = parseInt(this.endCell.parentElement.getAttribute(literals.ariaRowIndex), 10);\n                    var r = trIdx;\n                    for (var i = startrowIdx - 1; i >= endrowIdx; i--) {\n                        if (r === this.startIndex - 1) {\n                            r = trIdx;\n                        }\n                        var cells = this.getAutoFillCells(r, startCellIdx);\n                        var c = 0;\n                        r--;\n                        for (var j = this.startCellIndex; j <= this.startCellIndex + colLen; j++) {\n                            this.updateValue(i, j, cells[c]);\n                            c++;\n                        }\n                    }\n                    this.selectCellsByRange({ rowIndex: endrowIdx, cellIndex: startCellIdx + colLen }, { rowIndex: startrowIdx + rowLen, cellIndex: startCellIdx });\n                }\n                break;\n            default: //down\n                this.endAFCell = this.parent.getCellFromIndex(endrowIdx, startCellIdx + colLen);\n                if (!isApply) {\n                    this.drawAFBorders();\n                }\n                else {\n                    var trIdx = parseInt(this.endCell.parentElement.getAttribute(literals.ariaRowIndex), 10);\n                    var r = this.startIndex;\n                    for (var i = trIdx + 1; i <= endrowIdx; i++) {\n                        if (r === trIdx + 1) {\n                            r = this.startIndex;\n                        }\n                        var cells = this.getAutoFillCells(r, startCellIdx);\n                        r++;\n                        var c = 0;\n                        for (var m = this.startCellIndex; m <= this.startCellIndex + colLen; m++) {\n                            this.updateValue(i, m, cells[c]);\n                            c++;\n                        }\n                    }\n                    this.selectCellsByRange({ rowIndex: trIdx - rowLen, cellIndex: startCellIdx }, { rowIndex: endrowIdx, cellIndex: startCellIdx + colLen });\n                }\n                break;\n        }\n    };\n    Selection.prototype.mouseUpHandler = function (e) {\n        document.body.classList.remove('e-disableuserselect');\n        if (this.element) {\n            remove(this.element);\n        }\n        if (this.isDragged && this.selectedRowCellIndexes.length === 1 && this.selectedRowCellIndexes[0].cellIndexes.length === 1) {\n            this.mUPTarget = parentsUntil(e.target, literals.rowCell);\n        }\n        else {\n            this.mUPTarget = null;\n        }\n        if (this.isDragged && !this.isAutoFillSel && this.selectionSettings.mode === 'Cell' &&\n            e.target.classList.contains(literals.rowCell)) {\n            var target = e.target;\n            var rowIndex = parseInt(target.parentElement.getAttribute(literals.ariaRowIndex), 10);\n            var cellIndex = parseInt(target.getAttribute(literals.ariaColIndex), 10);\n            this.isDragged = false;\n            this.clearCellSelection();\n            this.selectCellsByRange({ rowIndex: this.startDIndex, cellIndex: this.startDCellIndex }, { rowIndex: rowIndex, cellIndex: cellIndex });\n        }\n        this.isDragged = false;\n        this.updateAutoFillPosition();\n        if (this.isAutoFillSel) {\n            var lastCell = parentsUntil(e.target, literals.rowCell);\n            this.endAFCell = lastCell ? lastCell : this.endCell === this.endAFCell ? this.startAFCell : this.endAFCell;\n            this.startAFCell = this.startCell;\n            this.updateStartCellsIndex();\n            this.selectLikeAutoFill(e, true);\n            this.updateAutoFillPosition();\n            this.hideAFBorders();\n            this.positionBorders();\n            this.isAutoFillSel = false;\n        }\n        EventHandler.remove(this.parent.getContent(), 'mousemove', this.mouseMoveHandler);\n        if (this.parent.frozenRows) {\n            EventHandler.remove(this.parent.getHeaderContent(), 'mousemove', this.mouseMoveHandler);\n        }\n        EventHandler.remove(document, 'mouseup', this.mouseUpHandler);\n    };\n    Selection.prototype.hideAutoFill = function () {\n        if (this.autofill) {\n            this.autofill.style.display = 'none';\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.updateAutoFillPosition = function () {\n        if (this.parent.enableAutoFill && !this.parent.isEdit &&\n            this.selectionSettings.cellSelectionMode.indexOf('Box') > -1 && !this.isRowType() && !this.isSingleSel()\n            && this.selectedRowCellIndexes.length) {\n            var index = parseInt(this.target.getAttribute(literals.ariaColIndex), 10);\n            var rindex = parseInt(this.target.getAttribute('index'), 10);\n            var rowIndex = this.selectedRowCellIndexes[this.selectedRowCellIndexes.length - 1].rowIndex;\n            var cells = this.getAutoFillCells(rowIndex, index).filter(function (ele) { return ele.style.display === ''; });\n            var col = this.parent.getColumnByIndex(index);\n            var isFrozenCol = col.getFreezeTableName() === 'movable';\n            var isFrozenRow = rindex < this.parent.frozenRows;\n            var isFrozenRight = this.parent.getFrozenMode() === literals.leftRight\n                && col.getFreezeTableName() === literals.frozenRight;\n            if (!select('#' + this.parent.element.id + '_autofill', parentsUntil(this.target, literals.table))) {\n                if (select('#' + this.parent.element.id + '_autofill', this.parent.element)) {\n                    select('#' + this.parent.element.id + '_autofill', this.parent.element).remove();\n                }\n                this.autofill = createElement('div', { className: 'e-autofill', id: this.parent.element.id + '_autofill' });\n                this.autofill.style.display = 'none';\n                if (!isFrozenRow) {\n                    if (!isFrozenCol) {\n                        this.parent.getContentTable().parentElement.appendChild(this.autofill);\n                    }\n                    else {\n                        this.parent.contentModule.getMovableContent().appendChild(this.autofill);\n                    }\n                }\n                else {\n                    if (!isFrozenCol) {\n                        this.parent.getHeaderTable().parentElement.appendChild(this.autofill);\n                    }\n                    else {\n                        this.parent.headerModule.getMovableHeader().appendChild(this.autofill);\n                    }\n                }\n                if (isFrozenRight) {\n                    if (isFrozenRow) {\n                        this.parent.getFrozenRightHeader().appendChild(this.autofill);\n                    }\n                    else {\n                        this.parent.getFrozenRightContent().appendChild(this.autofill);\n                    }\n                }\n            }\n            var cell = cells[cells.length - 1];\n            if (cell && cell.offsetParent) {\n                var clientRect = cell.getBoundingClientRect();\n                var parentOff = cell.offsetParent.getBoundingClientRect();\n                var colWidth = this.isLastCell(cell) ? 4 : 0;\n                var rowHeight = this.isLastRow(cell) ? 3 : 0;\n                if (!this.parent.enableRtl) {\n                    this.autofill.style.left = clientRect.left - parentOff.left + clientRect.width - 4 - colWidth + 'px';\n                }\n                else {\n                    this.autofill.style.right = parentOff.right - clientRect.right + clientRect.width - 4 - colWidth + 'px';\n                }\n                this.autofill.style.top = clientRect.top - parentOff.top + clientRect.height - 5 - rowHeight + 'px';\n            }\n            this.autofill.style.display = '';\n        }\n        else {\n            this.hideAutoFill();\n        }\n    };\n    Selection.prototype.mouseDownHandler = function (e) {\n        this.mouseButton = e.button;\n        var target = e.target;\n        var gObj = this.parent;\n        var isDrag;\n        var gridElement = parentsUntil(target, 'e-grid');\n        if (gridElement && gridElement.id !== gObj.element.id || parentsUntil(target, literals.headerContent) && !this.parent.frozenRows ||\n            parentsUntil(target, 'e-editedbatchcell') || parentsUntil(target, literals.editedRow)) {\n            return;\n        }\n        if (e.shiftKey || e.ctrlKey) {\n            e.preventDefault();\n        }\n        if (parentsUntil(target, literals.rowCell) && !e.shiftKey && !e.ctrlKey) {\n            if (gObj.selectionSettings.cellSelectionMode.indexOf('Box') > -1 && !this.isRowType() && !this.isSingleSel()) {\n                this.isCellDrag = true;\n                isDrag = true;\n            }\n            else if (gObj.allowRowDragAndDrop && !gObj.isEdit && !this.parent.selectionSettings.checkboxOnly) {\n                this.isRowDragSelected = false;\n                if (!this.isRowType() || this.isSingleSel() || closest(target, 'td').classList.contains('e-selectionbackground')) {\n                    this.isDragged = false;\n                    return;\n                }\n                isDrag = true;\n                this.element = this.parent.createElement('div', { className: 'e-griddragarea' });\n                gObj.getContent().appendChild(this.element);\n            }\n            if (isDrag) {\n                this.enableDrag(e, true);\n            }\n        }\n        this.updateStartEndCells();\n        if (target.classList.contains('e-autofill') || target.classList.contains('e-xlsel')) {\n            this.isCellDrag = true;\n            this.isAutoFillSel = true;\n            this.enableDrag(e);\n        }\n    };\n    Selection.prototype.updateStartEndCells = function () {\n        var cells = [].slice.call(this.parent.element.getElementsByClassName('e-cellselectionbackground'));\n        this.startCell = cells[0];\n        this.endCell = cells[cells.length - 1];\n        if (this.startCell) {\n            this.startIndex = parseInt(this.startCell.parentElement.getAttribute(literals.ariaRowIndex), 10);\n            this.startCellIndex = parseInt(parentsUntil(this.startCell, literals.rowCell).getAttribute(literals.ariaColIndex), 10);\n        }\n    };\n    Selection.prototype.updateStartCellsIndex = function () {\n        if (this.startCell) {\n            this.startIndex = parseInt(this.startCell.parentElement.getAttribute(literals.ariaRowIndex), 10);\n            this.startCellIndex = parseInt(parentsUntil(this.startCell, literals.rowCell).getAttribute(literals.ariaColIndex), 10);\n        }\n    };\n    Selection.prototype.enableDrag = function (e, isUpdate) {\n        var gObj = this.parent;\n        if (isUpdate) {\n            var tr = closest(e.target, 'tr');\n            this.startDIndex = parseInt(tr.getAttribute(literals.ariaRowIndex), 10);\n            this.startDCellIndex = parseInt(parentsUntil(e.target, literals.rowCell).getAttribute(literals.ariaColIndex), 10);\n        }\n        document.body.classList.add('e-disableuserselect');\n        var gBRect = gObj.element.getBoundingClientRect();\n        var postion = getPosition(e);\n        this.x = postion.x - gBRect.left;\n        this.y = postion.y - gBRect.top;\n        EventHandler.add(gObj.getContent(), 'mousemove', this.mouseMoveHandler, this);\n        if (this.parent.frozenRows) {\n            EventHandler.add(gObj.getHeaderContent(), 'mousemove', this.mouseMoveHandler, this);\n        }\n        EventHandler.add(document, 'mouseup', this.mouseUpHandler, this);\n    };\n    Selection.prototype.clearSelAfterRefresh = function (e) {\n        var isInfiniteScroll = this.parent.enableInfiniteScrolling && e.requestType === 'infiniteScroll';\n        if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection && !isInfiniteScroll) {\n            this.clearSelection();\n        }\n        if ((e.requestType === 'virtualscroll' || isInfiniteScroll) && this.parent.isPersistSelection && this.isPartialSelection\n            && this.isHdrSelectAllClicked) {\n            var rowObj = this.parent.getRowsObject().filter(function (e) { return e.isSelectable; });\n            var indexes = [];\n            this.selectedRowState = {};\n            this.persistSelectedData = [];\n            for (var i = 0; i < rowObj.length; i++) {\n                indexes.push(rowObj[i].index);\n                this.selectedRowState[rowObj[i].data[this.primaryKey]] = true;\n                this.persistSelectedData.push(rowObj[i].data);\n            }\n            this.selectedRowIndexes = indexes;\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.evtHandlers = [{ event: events.uiUpdate, handler: this.enableAfterRender },\n            { event: events.initialEnd, handler: this.initializeSelection },\n            { event: events.rowSelectionComplete, handler: this.onActionComplete },\n            { event: events.cellSelectionComplete, handler: this.onActionComplete },\n            { event: events.inBoundModelChanged, handler: this.onPropertyChanged },\n            { event: events.cellFocused, handler: this.onCellFocused },\n            { event: events.beforeFragAppend, handler: this.clearSelAfterRefresh },\n            { event: events.columnPositionChanged, handler: this.columnPositionChanged },\n            { event: events.contentReady, handler: this.initialEnd },\n            { event: events.rowsRemoved, handler: this.rowsRemoved },\n            { event: events.headerRefreshed, handler: this.refreshHeader },\n            { event: events.destroy, handler: this.destroy }];\n        addRemoveEventListener(this.parent, this.evtHandlers, true, this);\n        this.actionBeginFunction = this.actionBegin.bind(this);\n        this.actionCompleteFunction = this.actionComplete.bind(this);\n        this.parent.addEventListener(events.actionBegin, this.actionBeginFunction);\n        this.parent.addEventListener(events.actionComplete, this.actionCompleteFunction);\n        this.addEventListener_checkbox();\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        addRemoveEventListener(this.parent, this.evtHandlers, false);\n        this.parent.removeEventListener(events.actionBegin, this.actionBeginFunction);\n        this.parent.removeEventListener(events.actionComplete, this.actionCompleteFunction);\n        this.removeEventListener_checkbox();\n    };\n    Selection.prototype.wireEvents = function () {\n        this.isMacOS = navigator.userAgent.indexOf('Mac OS') !== -1;\n        if (this.isMacOS) {\n            EventHandler.add(this.parent.element, 'keydown', this.keyDownHandler, this);\n            EventHandler.add(this.parent.element, 'keyup', this.keyUpHandler, this);\n        }\n        else {\n            if (!this.parent.allowKeyboard) {\n                EventHandler.add(this.parent.element, 'keydown', this.keyDownHandler, this);\n            }\n        }\n    };\n    Selection.prototype.unWireEvents = function () {\n        if (this.isMacOS) {\n            EventHandler.remove(this.parent.element, 'keydown', this.keyDownHandler);\n            EventHandler.remove(this.parent.element, 'keyup', this.keyUpHandler);\n        }\n        else {\n            if (!this.parent.allowKeyboard) {\n                EventHandler.remove(this.parent.element, 'keydown', this.keyDownHandler);\n            }\n        }\n    };\n    Selection.prototype.columnPositionChanged = function () {\n        if (!this.parent.isPersistSelection) {\n            this.clearSelection();\n        }\n    };\n    Selection.prototype.refreshHeader = function () {\n        this.setCheckAllState();\n    };\n    Selection.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            delete (this.selectedRowState[e.records[i][this.primaryKey]]);\n            --this.totalRecordsCount;\n        }\n        this.setCheckAllState();\n    };\n    Selection.prototype.beforeFragAppend = function (e) {\n        if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection) {\n            this.clearSelection();\n        }\n    };\n    Selection.prototype.getCheckAllBox = function () {\n        return this.parent.getHeaderContent().querySelector('.e-checkselectall');\n    };\n    Selection.prototype.enableAfterRender = function (e) {\n        if (e.module === this.getModuleName() && e.enable) {\n            this.render();\n            this.initPerisistSelection();\n        }\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    Selection.prototype.render = function (e) {\n        EventHandler.add(this.parent.getContent(), 'mousedown', this.mouseDownHandler, this);\n        EventHandler.add(this.parent.getHeaderContent(), 'mousedown', this.mouseDownHandler, this);\n    };\n    Selection.prototype.onPropertyChanged = function (e) {\n        if (e.module !== this.getModuleName()) {\n            return;\n        }\n        var gObj = this.parent;\n        if (!isNullOrUndefined(e.properties.type) && this.selectionSettings.type === 'Single') {\n            if (this.selectedRowCellIndexes.length > 1) {\n                this.clearCellSelection();\n                this.prevCIdxs = undefined;\n            }\n            if (this.selectedRowIndexes.length > 1) {\n                this.clearRowSelection();\n                this.prevRowIndex = undefined;\n            }\n            if (this.selectedColumnsIndexes.length > 1) {\n                this.clearColumnSelection();\n                this.prevColIndex = undefined;\n            }\n            this.enableSelectMultiTouch = false;\n            this.hidePopUp();\n        }\n        if (!isNullOrUndefined(e.properties.mode) ||\n            !isNullOrUndefined(e.properties.cellSelectionMode)) {\n            this.clearSelection();\n            this.prevRowIndex = undefined;\n            this.prevCIdxs = undefined;\n            this.prevColIndex = undefined;\n        }\n        this.isPersisted = true;\n        this.checkBoxSelectionChanged();\n        this.isPersisted = false;\n        if (!this.parent.isCheckBoxSelection) {\n            this.initPerisistSelection();\n        }\n        var checkboxColumn = this.parent.getColumns().filter(function (col) { return col.type === 'checkbox'; });\n        if (checkboxColumn.length) {\n            gObj.isCheckBoxSelection = !(this.selectionSettings.checkboxMode === 'ResetOnRowClick');\n        }\n        this.drawBorders();\n    };\n    Selection.prototype.hidePopUp = function () {\n        if (this.parent.element.querySelector('.e-gridpopup').getElementsByClassName('e-rowselect').length) {\n            this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n        }\n    };\n    Selection.prototype.initialEnd = function (e) {\n        var isFrozen = this.parent.isFrozenGrid();\n        var isLeftRightFrozen = this.parent.getFrozenMode() === literals.leftRight;\n        if ((!isFrozen || (isFrozen && (!isLeftRightFrozen && !e.args.isFrozen)\n            || (isLeftRightFrozen && e.args.renderFrozenRightContent))) && !this.selectedRowIndexes.length) {\n            this.parent.off(events.contentReady, this.initialEnd);\n            this.selectRow(this.parent.selectedRowIndex);\n        }\n    };\n    Selection.prototype.checkBoxSelectionChanged = function () {\n        var gobj = this.parent;\n        gobj.off(events.contentReady, this.checkBoxSelectionChanged);\n        var checkboxColumn = gobj.getColumns().filter(function (col) { return col.type === 'checkbox'; });\n        if (checkboxColumn.length > 0) {\n            gobj.isCheckBoxSelection = true;\n            this.chkField = checkboxColumn[0].field;\n            this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n            if (isNullOrUndefined(this.totalRecordsCount)) {\n                this.totalRecordsCount = this.getCurrentBatchRecordChanges().length;\n            }\n            if (this.isSingleSel()) {\n                gobj.selectionSettings.type = 'Multiple';\n                gobj.dataBind();\n            }\n            else {\n                this.initPerisistSelection();\n            }\n        }\n        if (!gobj.isCheckBoxSelection && !this.isPersisted) {\n            this.chkField = null;\n            this.initPerisistSelection();\n        }\n    };\n    Selection.prototype.initPerisistSelection = function () {\n        var gobj = this.parent;\n        if (this.parent.selectionSettings.persistSelection && this.parent.getPrimaryKeyFieldNames().length > 0) {\n            gobj.isPersistSelection = true;\n            this.ensureCheckboxFieldSelection();\n        }\n        else if (this.parent.getPrimaryKeyFieldNames().length > 0) {\n            gobj.isPersistSelection = false;\n            this.ensureCheckboxFieldSelection();\n        }\n        else {\n            gobj.isPersistSelection = false;\n            this.selectedRowState = {};\n        }\n    };\n    Selection.prototype.ensureCheckboxFieldSelection = function () {\n        var gobj = this.parent;\n        this.primaryKey = this.parent.getPrimaryKeyFieldNames()[0];\n        if (!gobj.enableVirtualization && this.chkField\n            && ((gobj.isPersistSelection && Object.keys(this.selectedRowState).length === 0) ||\n                !gobj.isPersistSelection)) {\n            var data = this.parent.getDataModule();\n            var query = new Query().where(this.chkField, 'equal', true);\n            if (!query.params) {\n                query.params = this.parent.query.params;\n            }\n            var dataManager = data.getData({}, query);\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var proxy_1 = this;\n            this.parent.showSpinner();\n            dataManager.then(function (e) {\n                proxy_1.dataSuccess(e.result);\n                proxy_1.refreshPersistSelection();\n                proxy_1.parent.hideSpinner();\n            });\n        }\n    };\n    Selection.prototype.dataSuccess = function (res) {\n        for (var i = 0; i < res.length; i++) {\n            if (isNullOrUndefined(this.selectedRowState[res[i][this.primaryKey]]) && res[i][this.chkField]) {\n                this.selectedRowState[res[i][this.primaryKey]] = res[i][this.chkField];\n            }\n        }\n        this.persistSelectedData = res;\n    };\n    Selection.prototype.setRowSelection = function (state) {\n        if (!this.parent.getDataModule().isRemote()) {\n            if (state) {\n                if (this.isPartialSelection && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                    var rowObj = this.parent.getRowsObject().filter(function (e) { return e.isSelectable; });\n                    for (var _i = 0, rowObj_1 = rowObj; _i < rowObj_1.length; _i++) {\n                        var row = rowObj_1[_i];\n                        this.selectedRowState[row.data[this.primaryKey]] = true;\n                    }\n                }\n                else {\n                    var selectedData = this.isPartialSelection ? this.parent.partialSelectedRecords : this.getData();\n                    if (this.parent.groupSettings.columns.length) {\n                        for (var _a = 0, _b = this.isPartialSelection ? selectedData : selectedData.records; _a < _b.length; _a++) {\n                            var data = _b[_a];\n                            this.selectedRowState[data[this.primaryKey]] = true;\n                        }\n                    }\n                    else {\n                        for (var _c = 0, selectedData_1 = selectedData; _c < selectedData_1.length; _c++) {\n                            var data = selectedData_1[_c];\n                            this.selectedRowState[data[this.primaryKey]] = true;\n                        }\n                    }\n                }\n            }\n            else {\n                this.selectedRowState = {};\n            }\n            // (this.getData()).forEach(function (data) {\n            //     this.selectedRowState[data[this.primaryKey]] = true;\n            // })\n        }\n    };\n    Selection.prototype.getData = function () {\n        return this.parent.getDataModule().dataManager.executeLocal(this.parent.getDataModule().generateQuery(true));\n    };\n    Selection.prototype.refreshPersistSelection = function () {\n        var rows = this.parent.getRows();\n        if (this.parent.isCheckBoxSelection && this.parent.isFrozenGrid()) {\n            var mtbody = this.parent.getMovableContentTbody();\n            if (mtbody.querySelector('.e-checkselect')) {\n                rows = this.parent.getMovableRows();\n            }\n            if (this.parent.getFrozenMode() === literals.leftRight) {\n                var frtbody = this.parent.getFrozenRightContentTbody();\n                if (frtbody.querySelector('.e-checkselect')) {\n                    rows = this.parent.getFrozenRightRows();\n                }\n            }\n        }\n        this.totalRecordsCount = this.parent.getCurrentViewRecords().length;\n        if (this.parent.allowPaging) {\n            this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n        }\n        if (rows !== null && rows.length > 0 && (this.parent.isPersistSelection || this.chkField)) {\n            var indexes = [];\n            for (var j = 0; j < rows.length; j++) {\n                var rowObj = this.getRowObj(rows[j]);\n                var pKey = rowObj ? rowObj.data ? rowObj.data[this.primaryKey] : null : null;\n                if (pKey === null) {\n                    return;\n                }\n                if (this.isPartialSelection && !rowObj.isSelectable) {\n                    continue;\n                }\n                var checkState = void 0;\n                var chkBox = rows[j].querySelector('.e-checkselect');\n                if (this.selectedRowState[pKey] || (this.parent.checkAllRows === 'Check' && this.selectedRowState[pKey] &&\n                    this.totalRecordsCount === Object.keys(this.selectedRowState).length && this.chkAllCollec.indexOf(pKey) < 0)\n                    || (this.parent.checkAllRows === 'Uncheck' && this.chkAllCollec.indexOf(pKey) > 0)\n                    || (this.parent.checkAllRows === 'Intermediate' && !isNullOrUndefined(this.chkField) && rowObj.data[this.chkField])) {\n                    indexes.push(parseInt(rows[j].getAttribute(literals.ariaRowIndex), 10));\n                    checkState = true;\n                }\n                else {\n                    checkState = false;\n                    if (this.checkedTarget !== chkBox && this.parent.isCheckBoxSelection && chkBox) {\n                        removeAddCboxClasses(chkBox.nextElementSibling, checkState);\n                    }\n                }\n                this.updatePersistCollection(rows[j], checkState);\n            }\n            if (this.isSingleSel() && indexes.length > 0) {\n                this.selectRow(indexes[0], true);\n            }\n            else {\n                this.selectRows(indexes);\n            }\n        }\n        if (this.parent.isCheckBoxSelection && this.getCurrentBatchRecordChanges().length > 0) {\n            this.setCheckAllState();\n        }\n    };\n    Selection.prototype.actionBegin = function (e) {\n        if (e.requestType === 'save' && this.parent.isPersistSelection) {\n            var editChkBox = this.parent.element.querySelector('.e-edit-checkselect');\n            if (!isNullOrUndefined(editChkBox)) {\n                var row = closest(editChkBox, '.' + literals.editedRow);\n                if (row) {\n                    if (this.parent.editSettings.mode === 'Dialog') {\n                        row = this.parent.element.querySelector('.e-dlgeditrow');\n                    }\n                    var rowObj = this.getRowObj(row);\n                    if (!rowObj) {\n                        return;\n                    }\n                    this.selectedRowState[rowObj.data[this.primaryKey]] = rowObj.isSelected = editChkBox.checked;\n                }\n                else {\n                    this.isCheckedOnAdd = editChkBox.checked;\n                }\n            }\n        }\n        if (this.parent.isPersistSelection && this.isPartialSelection) {\n            if (e.requestType === 'paging' && this.parent.getDataModule().isRemote()) {\n                this.selectedRowIndexes = [];\n            }\n            if (e.requestType === 'filtering' || e.requestType === 'searching') {\n                this.parent.partialSelectedRecords = [];\n                this.parent.disableSelectedRecords = [];\n            }\n        }\n    };\n    Selection.prototype.actionComplete = function (e) {\n        if (e.requestType === 'save' && this.parent.isPersistSelection) {\n            if (e.action === 'add') {\n                if (this.isCheckedOnAdd) {\n                    var rowObj = this.parent.getRowObjectFromUID(this.parent.getRows()[e.selectedRow].getAttribute('data-uid'));\n                    this.selectedRowState[rowObj.data[this.primaryKey]] = rowObj.isSelected = this.isCheckedOnAdd;\n                }\n                this.isHdrSelectAllClicked = false;\n                this.setCheckAllState();\n            }\n            this.refreshPersistSelection();\n        }\n        if (e.requestType === 'delete' && this.parent.isPersistSelection) {\n            var records = e.data;\n            var data = records.slice();\n            for (var i = 0; i < data.length; i++) {\n                if (!isNullOrUndefined(data[i][this.primaryKey])) {\n                    this.updatePersistDelete(data[i][this.primaryKey], this.isPartialSelection);\n                }\n            }\n            this.isHdrSelectAllClicked = false;\n            this.setCheckAllState();\n            this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n        }\n        if (e.requestType === 'paging') {\n            if (this.parent.isPersistSelection && this.isPartialSelection && this.isHdrSelectAllClicked) {\n                var rows = this.parent.getRowsObject();\n                var indexes = [];\n                for (var i = 0; i < rows.length; i++) {\n                    if (rows[i].isSelectable) {\n                        indexes.push(rows[i].index);\n                    }\n                }\n                if (indexes.length) {\n                    this.selectRows(indexes);\n                }\n            }\n            this.prevRowIndex = undefined;\n            this.prevCIdxs = undefined;\n            this.prevECIdxs = undefined;\n        }\n    };\n    Selection.prototype.onDataBound = function () {\n        if (!this.parent.enableVirtualization && this.parent.isPersistSelection) {\n            if (this.selectedRecords.length) {\n                this.isPrevRowSelection = true;\n            }\n        }\n        if (this.parent.enableVirtualization) {\n            this.setCheckAllState();\n        }\n        if (this.parent.isPersistSelection) {\n            this.refreshPersistSelection();\n        }\n        this.initialRowSelection = this.isRowType() && this.parent.element.querySelectorAll('.e-selectionbackground') &&\n            this.parent.getSelectedRows().length ? true : false;\n        if (this.parent.isCheckBoxSelection && !this.initialRowSelection) {\n            var totalRecords = this.parent.getRowsObject();\n            var indexes = [];\n            for (var i = 0; i < totalRecords.length; i++) {\n                if (totalRecords[i].isSelected) {\n                    indexes.push(i);\n                }\n            }\n            if (indexes.length) {\n                this.selectRows(indexes);\n            }\n            this.initialRowSelection = true;\n        }\n    };\n    Selection.prototype.updatePersistSelectedData = function (checkState) {\n        if (this.parent.isPersistSelection) {\n            var rows = this.parent.getRows();\n            for (var i = 0; i < rows.length; i++) {\n                this.updatePersistCollection(rows[i], checkState);\n            }\n            if (this.parent.checkAllRows === 'Uncheck') {\n                this.setRowSelection(false);\n                this.persistSelectedData = this.parent.getDataModule().isRemote() ? this.persistSelectedData : [];\n            }\n            else if (this.parent.checkAllRows === 'Check') {\n                this.setRowSelection(true);\n                this.persistSelectedData = !this.parent.getDataModule().isRemote() && !this.isPartialSelection ?\n                    this.parent.groupSettings.columns.length ? this.getData().records.slice() :\n                        this.getData().slice() : this.persistSelectedData;\n            }\n        }\n    };\n    Selection.prototype.checkSelectAllAction = function (checkState) {\n        var cRenderer = this.getRenderer();\n        var editForm = this.parent.element.querySelector('.e-gridform');\n        this.checkedTarget = this.getCheckAllBox();\n        if (checkState && this.getCurrentBatchRecordChanges().length) {\n            this.parent.checkAllRows = 'Check';\n            this.updatePersistSelectedData(checkState);\n            this.selectRowsByRange(cRenderer.getVirtualRowIndex(0), cRenderer.getVirtualRowIndex(this.getCurrentBatchRecordChanges().length - 1));\n        }\n        else {\n            this.parent.checkAllRows = 'Uncheck';\n            this.updatePersistSelectedData(checkState);\n            this.clearSelection();\n        }\n        this.chkAllCollec = [];\n        if (!isNullOrUndefined(editForm)) {\n            var editChkBox = editForm.querySelector('.e-edit-checkselect');\n            if (!isNullOrUndefined(editChkBox)) {\n                removeAddCboxClasses(editChkBox.nextElementSibling, checkState);\n            }\n        }\n    };\n    Selection.prototype.checkSelectAll = function (checkBox) {\n        var _this = this;\n        var stateStr = this.getCheckAllStatus(checkBox);\n        var state = stateStr === 'Check';\n        this.isHeaderCheckboxClicked = true;\n        if (stateStr === 'Intermediate') {\n            state = this.getCurrentBatchRecordChanges().some(function (data) {\n                return data[_this.primaryKey] in _this.selectedRowState;\n            });\n        }\n        if (this.parent.isPersistSelection && this.parent.allowPaging) {\n            this.totalRecordsCount = this.parent.pageSettings.totalRecordsCount;\n        }\n        this.checkSelectAllAction(!state);\n        this.target = null;\n        if (this.getCurrentBatchRecordChanges().length > 0) {\n            this.setCheckAllState();\n            this.updateSelectedRowIndexes();\n        }\n        this.triggerChkChangeEvent(checkBox, !state);\n    };\n    Selection.prototype.getCheckAllStatus = function (ele) {\n        var classes = ele ? ele.nextElementSibling.classList :\n            this.getCheckAllBox().nextElementSibling.classList;\n        var status;\n        if (classes.contains('e-check')) {\n            status = 'Check';\n        }\n        else if (classes.contains('e-uncheck')) {\n            status = 'Uncheck';\n        }\n        else if (classes.contains('e-stop')) {\n            status = 'Intermediate';\n        }\n        else {\n            status = 'None';\n        }\n        return status;\n    };\n    Selection.prototype.checkSelect = function (checkBox) {\n        var target = closest(this.checkedTarget, '.' + literals.rowCell);\n        var gObj = this.parent;\n        this.isMultiCtrlRequest = true;\n        var rIndex = 0;\n        this.isHeaderCheckboxClicked = false;\n        if (isGroupAdaptive(gObj)) {\n            var uid = target.parentElement.getAttribute('data-uid');\n            rIndex = gObj.getRows().map(function (m) { return m.getAttribute('data-uid'); }).indexOf(uid);\n        }\n        else {\n            rIndex = parseInt(target.parentElement.getAttribute(literals.ariaRowIndex), 10);\n        }\n        if (this.parent.isPersistSelection && this.parent.element.getElementsByClassName(literals.addedRow).length > 0 &&\n            this.parent.editSettings.newRowPosition === 'Top') {\n            ++rIndex;\n        }\n        this.rowCellSelectionHandler(rIndex, parseInt(target.getAttribute(literals.ariaColIndex), 10));\n        this.moveIntoUncheckCollection(closest(target, '.' + literals.row));\n        this.setCheckAllState();\n        this.isMultiCtrlRequest = false;\n        this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'));\n    };\n    Selection.prototype.moveIntoUncheckCollection = function (row) {\n        if (this.parent.checkAllRows === 'Check' || this.parent.checkAllRows === 'Uncheck') {\n            var rowObj = this.getRowObj(row);\n            var pKey = rowObj && rowObj.data ? rowObj.data[this.primaryKey] : null;\n            if (!pKey) {\n                return;\n            }\n            if (this.chkAllCollec.indexOf(pKey) < 0) {\n                this.chkAllCollec.push(pKey);\n            }\n            else {\n                this.chkAllCollec.splice(this.chkAllCollec.indexOf(pKey), 1);\n            }\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState) {\n        this.parent.trigger(events.checkBoxChange, {\n            checked: checkState, selectedRowIndexes: this.parent.getSelectedRowIndexes(),\n            target: checkBox\n        });\n        if (!this.parent.isEdit) {\n            this.checkedTarget = null;\n        }\n    };\n    Selection.prototype.updateSelectedRowIndexes = function () {\n        if (this.parent.isCheckBoxSelection && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) &&\n            this.isPartialSelection && !this.parent.getDataModule().isRemote() && this.parent.selectionSettings.persistSelection) {\n            if (this.parent.checkAllRows !== 'Uncheck') {\n                var rowObj = this.parent.getRowsObject().filter(function (e) { return e.isSelectable; });\n                for (var _i = 0, rowObj_2 = rowObj; _i < rowObj_2.length; _i++) {\n                    var row = rowObj_2[_i];\n                    this.selectedRowIndexes.push(row.index);\n                }\n            }\n        }\n    };\n    Selection.prototype.updateSelectedRowIndex = function (index) {\n        if (this.parent.isCheckBoxSelection && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)\n            && !this.parent.getDataModule().isRemote() && !this.isPartialSelection) {\n            if (this.parent.checkAllRows === 'Check') {\n                this.selectedRowIndexes = [];\n                var dataLength = this.getData().length;\n                for (var data = 0; data < dataLength; data++) {\n                    this.selectedRowIndexes.push(data);\n                }\n            }\n            else if (this.parent.checkAllRows === 'Uncheck') {\n                this.selectedRowIndexes = [];\n            }\n            else {\n                var row = this.parent.getRowByIndex(index);\n                if (index && row && row.getAttribute('aria-selected') === 'false') {\n                    var selectedVal = this.selectedRowIndexes.indexOf(index);\n                    this.selectedRowIndexes.splice(selectedVal, 1);\n                }\n            }\n        }\n    };\n    Selection.prototype.isAllSelected = function (count) {\n        if (this.isPartialSelection) {\n            if (this.parent.allowPaging && this.parent.pageSettings.pageSize < this.parent.pageSettings.totalRecordsCount) {\n                var data = this.parent.partialSelectedRecords;\n                for (var i = 0; i < data.length; i++) {\n                    var pKey = data[i][this.primaryKey];\n                    if (!this.selectedRowState[pKey]) {\n                        return false;\n                    }\n                }\n                return true;\n            }\n            else {\n                return this.isSelectAllRowCount(count);\n            }\n        }\n        else {\n            var data = this.getData();\n            for (var i = 0; i < data.length; i++) {\n                var pKey = data[i][this.primaryKey];\n                if (!this.selectedRowState[pKey]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    };\n    Selection.prototype.someDataSelected = function () {\n        var data = this.isPartialSelection ? this.parent.partialSelectedRecords : this.getData();\n        for (var i = 0; i < data.length; i++) {\n            var pKey = data[i][this.primaryKey];\n            if (this.selectedRowState[pKey]) {\n                return false;\n            }\n        }\n        return true;\n    };\n    Selection.prototype.setCheckAllState = function (index, isInteraction) {\n        if (this.parent.isCheckBoxSelection || this.parent.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n            var checkToSelectAll = false;\n            var isFiltered = false;\n            var checkedLen = Object.keys(this.selectedRowState).length;\n            if (!this.parent.isPersistSelection) {\n                checkedLen = this.selectedRowIndexes.length;\n                this.totalRecordsCount = this.getCurrentBatchRecordChanges().length;\n            }\n            if (this.parent.isPersistSelection && !this.parent.getDataModule().isRemote() && (this.parent.searchSettings.key.length\n                || this.parent.filterSettings.columns.length)) {\n                isFiltered = true;\n                checkToSelectAll = this.isAllSelected(checkedLen);\n            }\n            var input = this.getCheckAllBox();\n            if (input) {\n                var spanEle = input.nextElementSibling;\n                removeClass([spanEle], ['e-check', 'e-stop', 'e-uncheck']);\n                setChecked(input, false);\n                input.indeterminate = false;\n                if ((checkToSelectAll && isFiltered) || (!isFiltered && ((checkedLen === this.totalRecordsCount && this.totalRecordsCount\n                    && !this.isPartialSelection && !this.parent.enableVirtualization) ||\n                    (!this.parent.enableVirtualization && !this.parent.enableInfiniteScrolling\n                        && this.isPartialSelection && (this.isSelectAllRowCount(checkedLen) || this.isHdrSelectAllClicked))\n                    || ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)\n                        && !this.parent.allowPaging && ((!this.parent.getDataModule().isRemote() &&\n                        this.getData().length && checkedLen === this.getData().length) ||\n                        (this.isPartialSelection && (this.isHdrSelectAllClicked || this.isSelectAllRowCount(checkedLen)))))))) {\n                    addClass([spanEle], ['e-check']);\n                    setChecked(input, true);\n                    if (isInteraction) {\n                        this.getRenderer().setSelection(null, true, true);\n                    }\n                    this.parent.checkAllRows = 'Check';\n                }\n                else if ((((!this.selectedRowIndexes.length && !this.parent.enableVirtualization) ||\n                    (this.parent.enableVirtualization && ((!this.persistSelectedData.length && !isFiltered) ||\n                        (isFiltered && this.someDataSelected()))) ||\n                    checkedLen === 0 && this.getCurrentBatchRecordChanges().length === 0) && !this.parent.allowPaging) ||\n                    (this.parent.allowPaging && (checkedLen === 0 || (checkedLen && isFiltered && this.someDataSelected())))) {\n                    addClass([spanEle], ['e-uncheck']);\n                    if (isInteraction) {\n                        this.getRenderer().setSelection(null, false, true);\n                    }\n                    this.parent.checkAllRows = 'Uncheck';\n                    if (checkedLen === 0 && this.getCurrentBatchRecordChanges().length === 0) {\n                        addClass([spanEle.parentElement], ['e-checkbox-disabled']);\n                    }\n                    else {\n                        removeClass([spanEle.parentElement], ['e-checkbox-disabled']);\n                    }\n                }\n                else {\n                    addClass([spanEle], ['e-stop']);\n                    this.parent.checkAllRows = 'Intermediate';\n                    input.indeterminate = true;\n                }\n                if (this.isPartialSelection) {\n                    var rowCount = this.parent.getRowsObject().filter(function (e) { return e.isSelectable; }).length;\n                    if (rowCount === 0 && spanEle.parentElement.querySelector('.e-frame').classList.contains('e-uncheck')) {\n                        addClass([spanEle.parentElement], ['e-checkbox-disabled']);\n                    }\n                    else {\n                        removeClass([spanEle.parentElement], ['e-checkbox-disabled']);\n                    }\n                }\n                if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)\n                    && !this.parent.allowPaging && !this.parent.getDataModule().isRemote()) {\n                    this.updateSelectedRowIndex(index);\n                }\n            }\n        }\n    };\n    Selection.prototype.isSelectAllRowCount = function (count) {\n        var rowCount = 0;\n        var rowObj = this.parent.getRowsObject();\n        if (this.parent.selectionSettings.persistSelection && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n            var dataLen = this.parent.getDataModule().isRemote() ? this.parent.totalDataRecordsCount : this.getData() &&\n                this.getData().length;\n            if (dataLen === rowObj.length) {\n                rowCount = rowObj.filter(function (e) { return e.isSelectable; }).length;\n                return rowCount && count === rowCount;\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            if (this.parent.allowPaging && this.parent.selectionSettings.persistSelection) {\n                rowCount = this.parent.partialSelectedRecords.length + this.parent.disableSelectedRecords.length;\n                if (rowCount === this.totalRecordsCount) {\n                    return this.parent.partialSelectedRecords.length && count === this.parent.partialSelectedRecords.length;\n                }\n                else {\n                    return false;\n                }\n            }\n            else {\n                rowCount = rowObj.filter(function (e) { return e.isSelectable; }).length;\n                return rowCount && count === rowCount;\n            }\n        }\n    };\n    Selection.prototype.keyDownHandler = function (e) {\n        // Below are keyCode for command key in MAC OS. Safari/Chrome(91-Left command, 93-Right Command), Opera(17), FireFox(224)\n        if ((((Browser.info.name === 'chrome') || (Browser.info.name === 'safari')) && (e.keyCode === 91 || e.keyCode === 93)) ||\n            (Browser.info.name === 'opera' && e.keyCode === 17) || (Browser.info.name === 'mozilla' && e.keyCode === 224)) {\n            this.cmdKeyPressed = true;\n        }\n        if (e.keyCode === 32) {\n            e.preventDefault();\n        }\n    };\n    Selection.prototype.keyUpHandler = function (e) {\n        if ((((Browser.info.name === 'chrome') || (Browser.info.name === 'safari')) && (e.keyCode === 91 || e.keyCode === 93)) ||\n            (Browser.info.name === 'opera' && e.keyCode === 17) || (Browser.info.name === 'mozilla' && e.keyCode === 224)) {\n            this.cmdKeyPressed = false;\n        }\n    };\n    Selection.prototype.clickHandler = function (e) {\n        var target = e.target;\n        this.actualTarget = target;\n        if (this.selectionSettings.persistSelection) {\n            this.deSelectedData = iterateExtend(this.persistSelectedData);\n        }\n        if (parentsUntil(target, literals.row) || parentsUntil(target, 'e-headerchkcelldiv') ||\n            (this.selectionSettings.allowColumnSelection && target.classList.contains('e-headercell'))) {\n            this.isInteracted = true;\n        }\n        this.isMultiCtrlRequest = e.ctrlKey || this.enableSelectMultiTouch ||\n            (this.isMacOS && this.cmdKeyPressed);\n        if (!this.parent.allowKeyboard) {\n            this.isMultiShiftRequest = false;\n            this.isMultiCtrlRequest = false;\n        }\n        else {\n            this.isMultiShiftRequest = e.shiftKey;\n        }\n        this.popUpClickHandler(e);\n        var chkSelect = false;\n        this.preventFocus = true;\n        var checkBox;\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        this.checkSelectAllClicked = checkWrap && checkWrap.getElementsByClassName('e-checkselectall') ||\n            (this.selectionSettings.persistSelection && parentsUntil(target, literals.row)) ? true : false;\n        if (this.selectionSettings.persistSelection && this.isPartialSelection && parentsUntil(target, 'e-headerchkcelldiv')\n            && !target.querySelector('.e-checkbox-disabled')) {\n            this.isHdrSelectAllClicked = true;\n        }\n        if (checkWrap && checkWrap.querySelectorAll('.e-checkselect,.e-checkselectall').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            chkSelect = true;\n        }\n        this.drawBorders();\n        this.updateAutoFillPosition();\n        target = parentsUntil(target, literals.rowCell);\n        if (((target && target.parentElement.classList.contains(literals.row) && !this.parent.selectionSettings.checkboxOnly) || chkSelect)\n            && !this.isRowDragSelected) {\n            if (this.parent.isCheckBoxSelection) {\n                this.isMultiCtrlRequest = true;\n            }\n            this.target = target;\n            if (!isNullOrUndefined(checkBox)) {\n                this.checkedTarget = checkBox;\n                if (checkBox.classList.contains('e-checkselectall')) {\n                    this.checkSelectAll(checkBox);\n                }\n                else {\n                    this.checkSelect(checkBox);\n                }\n            }\n            else {\n                var gObj = this.parent;\n                var rIndex = 0;\n                if (isGroupAdaptive(gObj)) {\n                    var uid = target.parentElement.getAttribute('data-uid');\n                    rIndex = gObj.getRows().map(function (m) { return m.getAttribute('data-uid'); }).indexOf(uid);\n                }\n                else {\n                    rIndex = parseInt(target.parentElement.getAttribute(literals.ariaRowIndex), 10);\n                }\n                if (this.parent.isPersistSelection && this.parent.element.getElementsByClassName(literals.addedRow).length > 0) {\n                    ++rIndex;\n                }\n                if (!this.mUPTarget || !this.mUPTarget.isEqualNode(target)) {\n                    this.rowCellSelectionHandler(rIndex, parseInt(target.getAttribute(literals.ariaColIndex), 10));\n                }\n                this.parent.hoverFrozenRows(e);\n                if (this.parent.isCheckBoxSelection) {\n                    this.moveIntoUncheckCollection(closest(target, '.' + literals.row));\n                    this.setCheckAllState();\n                }\n            }\n            if (!this.parent.isCheckBoxSelection && Browser.isDevice && !this.isSingleSel()) {\n                this.showPopup(e);\n            }\n        }\n        else if (e.target.classList.contains('e-headercell') &&\n            !e.target.classList.contains('e-stackedheadercell')) {\n            var uid = e.target.querySelector('.e-headercelldiv').getAttribute('e-mappinguid');\n            this.headerSelectionHandler(this.parent.getColumnIndexByUid(uid));\n        }\n        this.isMultiCtrlRequest = false;\n        this.isMultiShiftRequest = false;\n        if (isNullOrUndefined(closest(e.target, '.e-unboundcell'))) {\n            this.preventFocus = false;\n        }\n    };\n    Selection.prototype.popUpClickHandler = function (e) {\n        var target = e.target;\n        if (closest(target, '.e-headercell') || e.target.classList.contains(literals.rowCell) ||\n            closest(target, '.e-gridpopup')) {\n            if (target.classList.contains('e-rowselect')) {\n                if (!target.classList.contains('e-spanclicked')) {\n                    target.classList.add('e-spanclicked');\n                    this.enableSelectMultiTouch = true;\n                }\n                else {\n                    target.classList.remove('e-spanclicked');\n                    this.enableSelectMultiTouch = false;\n                    this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n                }\n            }\n        }\n        else {\n            this.parent.element.querySelector('.e-gridpopup').style.display = 'none';\n        }\n    };\n    Selection.prototype.showPopup = function (e) {\n        if (!this.selectionSettings.enableSimpleMultiRowSelection) {\n            setCssInGridPopUp(this.parent.element.querySelector('.e-gridpopup'), e, 'e-rowselect e-icons e-icon-rowselect' +\n                (!this.isSingleSel() && (this.selectedRecords.length > (this.parent.getFrozenColumns() ? 2 : 1)\n                    || this.selectedRowCellIndexes.length > 1) ? ' e-spanclicked' : ''));\n        }\n    };\n    Selection.prototype.rowCellSelectionHandler = function (rowIndex, cellIndex) {\n        if ((!this.isMultiCtrlRequest && !this.isMultiShiftRequest) || this.isSingleSel()) {\n            if (!this.isDragged) {\n                this.selectRow(rowIndex, this.selectionSettings.enableToggle);\n            }\n            this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex }, this.selectionSettings.enableToggle);\n            if (this.selectedRowCellIndexes.length) {\n                this.updateAutoFillPosition();\n            }\n            this.drawBorders();\n        }\n        else if (this.isMultiShiftRequest) {\n            if (this.parent.isCheckBoxSelection || (!this.parent.isCheckBoxSelection &&\n                !closest(this.target, '.' + literals.rowCell).classList.contains(literals.gridChkBox))) {\n                this.selectRowsByRange(isUndefined(this.prevRowIndex) ? rowIndex : this.prevRowIndex, rowIndex);\n            }\n            else {\n                this.addRowsToSelection([rowIndex]);\n            }\n            this.selectCellsByRange(isUndefined(this.prevCIdxs) ? { rowIndex: rowIndex, cellIndex: cellIndex } : this.prevCIdxs, { rowIndex: rowIndex, cellIndex: cellIndex });\n            this.updateAutoFillPosition();\n            this.drawBorders();\n        }\n        else {\n            this.addRowsToSelection([rowIndex]);\n            this.addCellsToSelection([{ rowIndex: rowIndex, cellIndex: cellIndex }]);\n            this.showHideBorders('none');\n        }\n        this.isDragged = false;\n    };\n    Selection.prototype.onCellFocused = function (e) {\n        if (this.parent.frozenRows && e.container.isHeader && e.byKey) {\n            if (e.keyArgs.action === 'upArrow') {\n                if (this.parent.allowFiltering) {\n                    e.isJump = e.element.tagName === 'INPUT' ? true : false;\n                }\n                else {\n                    e.isJump = e.element.tagName === 'TH' ? true : false;\n                }\n            }\n            else {\n                if (e.keyArgs.action === 'downArrow') {\n                    var rIdx = Number(e.element.parentElement.getAttribute(literals.ariaRowIndex));\n                    e.isJump = rIdx === 0 ? true : false;\n                }\n                else {\n                    if (e.keyArgs.action === 'ctrlHome') {\n                        e.isJump = true;\n                    }\n                }\n            }\n        }\n        var clear = this.parent.isFrozenGrid() ? (((e.container.isHeader && e.element.tagName !== 'TD' && e.isJump &&\n            !this.selectionSettings.allowColumnSelection) ||\n            ((e.container.isContent || e.element.tagName === 'TD') && !(e.container.isSelectable || e.element.tagName === 'TD')))\n            && !(e.byKey && e.keyArgs.action === 'space')) : ((e.container.isHeader && e.isJump) ||\n            (e.container.isContent && !e.container.isSelectable)) && !(e.byKey && e.keyArgs.action === 'space')\n            && !(e.element.classList.contains('e-detailrowexpand') || e.element.classList.contains('e-detailrowcollapse'));\n        var headerAction = (e.container.isHeader && e.element.tagName !== 'TD' && !closest(e.element, '.' + literals.rowCell))\n            && !(e.byKey && e.keyArgs.action === 'space');\n        if (!e.byKey || clear) {\n            if (clear && !this.parent.isCheckBoxSelection) {\n                this.clearSelection();\n            }\n            return;\n        }\n        var _a = e.container.isContent ? e.container.indexes : e.indexes, rowIndex = _a[0], cellIndex = _a[1];\n        var prev = this.focus.getPrevIndexes();\n        if (this.parent.frozenRows) {\n            if (e.container.isHeader && (e.element.tagName === 'TD' || closest(e.element, '.' + literals.rowCell))) {\n                var thLen = this.parent.getHeaderTable().querySelector('thead').childElementCount;\n                rowIndex -= thLen;\n                prev.rowIndex = !isNullOrUndefined(prev.rowIndex) ? prev.rowIndex - thLen : null;\n            }\n            else {\n                rowIndex += this.parent.frozenRows;\n                prev.rowIndex = prev.rowIndex === 0 || !isNullOrUndefined(prev.rowIndex) ? prev.rowIndex + this.parent.frozenRows : null;\n            }\n        }\n        if (this.parent.isFrozenGrid()) {\n            var cIdx = Number(e.element.getAttribute(literals.ariaColIndex));\n            var selectedIndexes = this.parent.getSelectedRowCellIndexes();\n            if (selectedIndexes.length && prev.cellIndex === 0) {\n                prev.cellIndex = selectedIndexes[selectedIndexes.length - 1].cellIndexes[0];\n            }\n            prev.cellIndex = !isNullOrUndefined(prev.cellIndex) ? (prev.cellIndex === cellIndex ? cIdx : cIdx - 1) : null;\n            cellIndex = cIdx;\n        }\n        if (this.parent.enableInfiniteScrolling && this.parent.infiniteScrollSettings.enableCache) {\n            rowIndex = parseInt(e.element.parentElement.getAttribute('aria-rowindex'), 10);\n        }\n        if ((headerAction || (['ctrlPlusA', 'escape'].indexOf(e.keyArgs.action) === -1 &&\n            e.keyArgs.action !== 'space' && rowIndex === prev.rowIndex && cellIndex === prev.cellIndex)) &&\n            !this.selectionSettings.allowColumnSelection) {\n            return;\n        }\n        this.preventFocus = true;\n        var columnIndex = this.getKeyColIndex(e);\n        if (this.needColumnSelection) {\n            cellIndex = columnIndex;\n        }\n        switch (e.keyArgs.action) {\n            case 'downArrow':\n            case 'upArrow':\n            case 'enter':\n            case 'shiftEnter':\n                this.target = e.element;\n                this.isKeyAction = true;\n                this.applyDownUpKey(rowIndex, cellIndex);\n                break;\n            case 'rightArrow':\n            case 'leftArrow':\n                this.applyRightLeftKey(rowIndex, cellIndex);\n                break;\n            case 'shiftDown':\n            case 'shiftUp':\n                this.shiftDownKey(rowIndex, cellIndex);\n                break;\n            case 'shiftLeft':\n            case 'shiftRight':\n                this.applyShiftLeftRightKey(rowIndex, cellIndex);\n                break;\n            case 'home':\n            case 'end':\n                cellIndex = e.keyArgs.action === 'end' ? this.getLastColIndex(rowIndex) : 0;\n                this.applyHomeEndKey(rowIndex, cellIndex);\n                break;\n            case 'ctrlHome':\n            case 'ctrlEnd':\n                this.applyCtrlHomeEndKey(rowIndex, cellIndex);\n                break;\n            case 'escape':\n                this.clearSelection();\n                break;\n            case 'ctrlPlusA':\n                this.ctrlPlusA();\n                break;\n            case 'space':\n                this.applySpaceSelection(e.element);\n                break;\n            case 'tab':\n                if (this.parent.editSettings.allowNextRowEdit) {\n                    this.selectRow(rowIndex);\n                }\n                break;\n        }\n        this.needColumnSelection = false;\n        this.preventFocus = false;\n        this.positionBorders();\n        this.updateAutoFillPosition();\n    };\n    Selection.prototype.getKeyColIndex = function (e) {\n        var uid;\n        var index = null;\n        var stackedHeader = e.element.querySelector('.e-stackedheadercelldiv');\n        if (this.selectionSettings.allowColumnSelection && parentsUntil(e.element, 'e-columnheader')) {\n            this.needColumnSelection = e.container.isHeader ? true : false;\n            if (stackedHeader) {\n                if (e.keyArgs.action === 'rightArrow' || e.keyArgs.action === 'leftArrow') {\n                    return index;\n                }\n                uid = stackedHeader.getAttribute('e-mappinguid');\n                var innerColumn = this.getstackedColumns(this.parent.getColumnByUid(uid).columns);\n                var lastIndex = this.parent.getColumnIndexByUid(innerColumn[innerColumn.length - 1].uid);\n                var firstIndex = this.parent.getColumnIndexByUid(innerColumn[0].uid);\n                index = this.prevColIndex >= lastIndex ? firstIndex : lastIndex;\n            }\n            else {\n                index = this.parent.getColumnIndexByUid(e.element\n                    .querySelector('.e-headercelldiv').getAttribute('e-mappinguid'));\n            }\n        }\n        return index;\n    };\n    /**\n     * Apply ctrl + A key selection\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.ctrlPlusA = function () {\n        if (this.isRowType() && !this.isSingleSel()) {\n            this.selectRowsByRange(0, this.getCurrentBatchRecordChanges().length - 1);\n        }\n        if (this.isCellType() && !this.isSingleSel()) {\n            this.selectCellsByRange({ rowIndex: 0, cellIndex: 0 }, { rowIndex: this.parent.getRows().length - 1, cellIndex: this.parent.getColumns().length - 1 });\n        }\n    };\n    Selection.prototype.applySpaceSelection = function (target) {\n        if (target.classList.contains('e-checkselectall')) {\n            this.checkedTarget = target;\n            this.checkSelectAll(this.checkedTarget);\n        }\n        else {\n            if (target.classList.contains('e-checkselect')) {\n                this.checkedTarget = target;\n                this.checkSelect(this.checkedTarget);\n            }\n        }\n    };\n    Selection.prototype.applyDownUpKey = function (rowIndex, cellIndex) {\n        var gObj = this.parent;\n        if (this.parent.isCheckBoxSelection && this.parent.checkAllRows === 'Check' && !this.selectionSettings.persistSelection) {\n            this.checkSelectAllAction(false);\n            this.checkedTarget = null;\n        }\n        if (this.isRowType() && !this.selectionSettings.checkboxOnly) {\n            if (this.parent.frozenRows) {\n                this.selectRow(rowIndex, true);\n                this.applyUpDown(gObj.selectedRowIndex);\n            }\n            else {\n                this.selectRow(rowIndex, true);\n                this.applyUpDown(gObj.selectedRowIndex);\n            }\n        }\n        if (this.isCellType()) {\n            this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex }, true);\n        }\n        if (this.selectionSettings.allowColumnSelection && this.needColumnSelection) {\n            this.selectColumn(cellIndex);\n        }\n    };\n    Selection.prototype.applyUpDown = function (rowIndex) {\n        if (rowIndex < 0) {\n            return;\n        }\n        if (!this.target) {\n            this.target = this.parent.getRows()[0].children[this.parent.groupSettings.columns.length || 0];\n        }\n        var cIndex = parseInt(this.target.getAttribute(literals.ariaColIndex), 10);\n        var frzCols = this.parent.getFrozenColumns();\n        if (frzCols) {\n            if (cIndex >= frzCols) {\n                this.target =\n                    this.contentRenderer.getMovableRowByIndex(rowIndex).getElementsByClassName(literals.rowCell)[cIndex - frzCols];\n            }\n            else {\n                this.target = this.contentRenderer.getRowByIndex(rowIndex).getElementsByClassName(literals.rowCell)[cIndex];\n            }\n        }\n        else {\n            var row = this.contentRenderer.getRowByIndex(rowIndex);\n            if (row) {\n                this.target = row.getElementsByClassName(literals.rowCell)[cIndex];\n            }\n        }\n        this.addAttribute(this.target);\n    };\n    Selection.prototype.applyRightLeftKey = function (rowIndex, cellIndex) {\n        if (this.selectionSettings.allowColumnSelection && this.needColumnSelection) {\n            this.selectColumn(cellIndex);\n        }\n        else if (this.isCellType()) {\n            this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex }, true);\n            this.addAttribute(this.target);\n        }\n    };\n    Selection.prototype.applyHomeEndKey = function (rowIndex, cellIndex) {\n        if (this.isCellType()) {\n            this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex }, true);\n        }\n        else {\n            this.addAttribute(this.parent.getCellFromIndex(rowIndex, cellIndex));\n        }\n    };\n    /**\n     * Apply shift+down key selection\n     *\n     * @param {number} rowIndex - specfies the rowIndex\n     * @param {number} cellIndex - specifies the CellIndex\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.shiftDownKey = function (rowIndex, cellIndex) {\n        this.isMultiShiftRequest = true;\n        if (this.isRowType() && !this.isSingleSel()) {\n            if (!isUndefined(this.prevRowIndex)) {\n                this.selectRowsByRange(this.prevRowIndex, rowIndex);\n                this.applyUpDown(rowIndex);\n            }\n            else if (this.isPartialSelection) {\n                this.selectRow(rowIndex, true);\n            }\n            else {\n                this.selectRow(0, true);\n            }\n        }\n        if (this.isCellType() && !this.isSingleSel()) {\n            this.selectCellsByRange(this.prevCIdxs || { rowIndex: 0, cellIndex: 0 }, { rowIndex: rowIndex, cellIndex: cellIndex });\n        }\n        this.isMultiShiftRequest = false;\n    };\n    Selection.prototype.applyShiftLeftRightKey = function (rowIndex, cellIndex) {\n        this.isMultiShiftRequest = true;\n        if (this.selectionSettings.allowColumnSelection && this.needColumnSelection) {\n            this.selectColumnsByRange(this.prevColIndex, cellIndex);\n        }\n        else {\n            this.selectCellsByRange(this.prevCIdxs, { rowIndex: rowIndex, cellIndex: cellIndex });\n        }\n        this.isMultiShiftRequest = false;\n    };\n    Selection.prototype.getstackedColumns = function (column) {\n        var innerColumnIndexes = [];\n        for (var i = 0, len = column.length; i < len; i++) {\n            if (column[i].columns) {\n                this.getstackedColumns(column[i].columns);\n            }\n            else {\n                innerColumnIndexes.push(column[i]);\n            }\n        }\n        return innerColumnIndexes;\n    };\n    Selection.prototype.applyCtrlHomeEndKey = function (rowIndex, cellIndex) {\n        if (this.isRowType()) {\n            this.selectRow(rowIndex, true);\n            this.addAttribute(this.parent.getCellFromIndex(rowIndex, cellIndex));\n        }\n        if (this.isCellType()) {\n            this.selectCell({ rowIndex: rowIndex, cellIndex: cellIndex }, true);\n        }\n    };\n    Selection.prototype.addRemoveClassesForRow = function (row, isAdd, clearAll) {\n        var args = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            args[_i - 3] = arguments[_i];\n        }\n        if (row) {\n            var cells = [].slice.call(row.getElementsByClassName(literals.rowCell));\n            var detailIndentCell = row.querySelector('.e-detailrowcollapse') || row.querySelector('.e-detailrowexpand');\n            var dragdropIndentCell = row.querySelector('.e-rowdragdrop');\n            if (detailIndentCell) {\n                cells.push(detailIndentCell);\n            }\n            if (dragdropIndentCell) {\n                cells.push(dragdropIndentCell);\n            }\n            addRemoveActiveClasses.apply(void 0, [cells, isAdd].concat(args));\n        }\n        this.getRenderer().setSelection(row ? row.getAttribute('data-uid') : null, isAdd, clearAll);\n    };\n    Selection.prototype.isRowType = function () {\n        return this.selectionSettings.mode === 'Row' || this.selectionSettings.mode === 'Both';\n    };\n    Selection.prototype.isCellType = function () {\n        return this.selectionSettings.mode === 'Cell' || this.selectionSettings.mode === 'Both';\n    };\n    Selection.prototype.isSingleSel = function () {\n        return this.selectionSettings.type === 'Single';\n    };\n    Selection.prototype.getRenderer = function () {\n        if (isNullOrUndefined(this.contentRenderer)) {\n            this.contentRenderer = this.factory.getRenderer(RenderType.Content);\n        }\n        return this.contentRenderer;\n    };\n    /**\n     * Gets the collection of selected records.\n     *\n     * @returns {Object[]} returns the Object\n     */\n    Selection.prototype.getSelectedRecords = function () {\n        var selectedData = [];\n        if (!this.selectionSettings.persistSelection && this.selectedRecords.length) {\n            selectedData = this.parent.getRowsObject().filter(function (row) { return row.isSelected; })\n                .map(function (m) { return m.data; });\n        }\n        else {\n            selectedData = this.persistSelectedData;\n        }\n        return selectedData;\n    };\n    /**\n     * Select the column by passing start column index\n     *\n     * @param {number} index - specifies the index\n     * @returns {void}\n     */\n    Selection.prototype.selectColumn = function (index) {\n        var gObj = this.parent;\n        if (isNullOrUndefined(gObj.getColumns()[index])) {\n            return;\n        }\n        var column = gObj.getColumnByIndex(index);\n        var selectedCol = gObj.getColumnHeaderByUid(column.uid);\n        var isColSelected = selectedCol.classList.contains('e-columnselection');\n        if ((!gObj.selectionSettings.allowColumnSelection)) {\n            return;\n        }\n        var isMultiColumns = this.selectedColumnsIndexes.length > 1 &&\n            this.selectedColumnsIndexes.indexOf(index) > -1;\n        this.clearColDependency();\n        if (!isColSelected || !this.selectionSettings.enableToggle || isMultiColumns) {\n            var args = {\n                columnIndex: index, headerCell: selectedCol,\n                column: column,\n                cancel: false, target: this.actualTarget,\n                isInteracted: this.isInteracted, previousColumnIndex: this.prevColIndex,\n                isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest\n            };\n            this.onActionBegin(args, events.columnSelecting);\n            if (args.cancel) {\n                this.disableInteracted();\n                return;\n            }\n            if (!(gObj.selectionSettings.enableToggle && index === this.prevColIndex && isColSelected) || isMultiColumns) {\n                this.updateColSelection(selectedCol, index);\n            }\n            var selectedArgs = {\n                columnIndex: index, headerCell: selectedCol,\n                column: column,\n                target: this.actualTarget,\n                isInteracted: this.isInteracted, previousColumnIndex: this.prevColIndex\n            };\n            this.onActionComplete(selectedArgs, events.columnSelected);\n        }\n        this.updateColProps(index);\n    };\n    /**\n     * Select the columns by passing start and end column index\n     *\n     * @param  {number} startIndex - specifies the start index\n     * @param  {number} endIndex - specifies the end index\n     * @returns {void}\n     */\n    Selection.prototype.selectColumnsByRange = function (startIndex, endIndex) {\n        var gObj = this.parent;\n        if (isNullOrUndefined(gObj.getColumns()[startIndex])) {\n            return;\n        }\n        var indexes = [];\n        if (gObj.selectionSettings.type === 'Single' || isNullOrUndefined(endIndex)) {\n            indexes[0] = startIndex;\n        }\n        else {\n            var min = startIndex < endIndex;\n            for (var i = startIndex; min ? i <= endIndex : i >= endIndex; min ? i++ : i--) {\n                indexes.push(i);\n            }\n        }\n        this.selectColumns(indexes);\n    };\n    /**\n     * Select the columns by passing column indexes\n     *\n     * @param  {number[]} columnIndexes - specifies the columnIndexes\n     * @returns {void}\n     */\n    Selection.prototype.selectColumns = function (columnIndexes) {\n        var gObj = this.parent;\n        var selectedCol = this.getselectedCols();\n        if (gObj.selectionSettings.type === 'Single') {\n            columnIndexes = [columnIndexes[0]];\n        }\n        if (!gObj.selectionSettings.allowColumnSelection) {\n            return;\n        }\n        this.clearColDependency();\n        var selectingArgs = {\n            columnIndex: columnIndexes[0], headerCell: selectedCol,\n            columnIndexes: columnIndexes,\n            column: gObj.getColumnByIndex(columnIndexes[0]),\n            cancel: false, target: this.actualTarget,\n            isInteracted: this.isInteracted, previousColumnIndex: this.prevColIndex,\n            isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest\n        };\n        this.onActionBegin(selectingArgs, events.columnSelecting);\n        if (selectingArgs.cancel) {\n            this.disableInteracted();\n            return;\n        }\n        for (var i = 0, len = columnIndexes.length; i < len; i++) {\n            this.updateColSelection(gObj.getColumnHeaderByUid(gObj.getColumnByIndex(columnIndexes[i]).uid), columnIndexes[i]);\n        }\n        selectedCol = this.getselectedCols();\n        var selectedArgs = {\n            columnIndex: columnIndexes[0], headerCell: selectedCol,\n            columnIndexes: columnIndexes,\n            column: gObj.getColumnByIndex(columnIndexes[0]),\n            target: this.actualTarget,\n            isInteracted: this.isInteracted, previousColumnIndex: this.prevColIndex\n        };\n        this.onActionComplete(selectedArgs, events.columnSelected);\n        this.updateColProps(columnIndexes[0]);\n    };\n    /**\n     * Select the column with existing column by passing column index\n     *\n     * @param  {number} startIndex - specifies the start index\n     * @returns {void}\n     */\n    Selection.prototype.selectColumnWithExisting = function (startIndex) {\n        var gObj = this.parent;\n        if (isNullOrUndefined(gObj.getColumns()[startIndex])) {\n            return;\n        }\n        var newCol = gObj.getColumnHeaderByUid(gObj.getColumnByIndex(startIndex).uid);\n        var selectedCol = this.getselectedCols();\n        if (gObj.selectionSettings.type === 'Single') {\n            this.clearColDependency();\n        }\n        if (!gObj.selectionSettings.allowColumnSelection) {\n            return;\n        }\n        if (this.selectedColumnsIndexes.indexOf(startIndex) > -1) {\n            this.clearColumnSelection(startIndex);\n        }\n        else {\n            var selectingArgs = {\n                columnIndex: startIndex, headerCell: selectedCol,\n                columnIndexes: this.selectedColumnsIndexes,\n                column: gObj.getColumnByIndex(startIndex),\n                cancel: false, target: this.actualTarget,\n                isInteracted: this.isInteracted, previousColumnIndex: this.prevColIndex,\n                isCtrlPressed: this.isMultiCtrlRequest, isShiftPressed: this.isMultiShiftRequest\n            };\n            this.onActionBegin(selectingArgs, events.columnSelecting);\n            if (selectingArgs.cancel) {\n                this.disableInteracted();\n                return;\n            }\n            this.updateColSelection(newCol, startIndex);\n            selectedCol = this.getselectedCols();\n            var selectedArgs = {\n                columnIndex: startIndex, headerCell: selectedCol,\n                column: gObj.getColumnByIndex(startIndex),\n                columnIndexes: this.selectedColumnsIndexes,\n                target: this.actualTarget,\n                isInteracted: this.isInteracted, previousColumnIndex: this.prevColIndex\n            };\n            this.onActionComplete(selectedArgs, events.columnSelected);\n        }\n        this.updateColProps(startIndex);\n    };\n    /**\n     * Clear the column selection\n     *\n     * @param {number} clearIndex - specifies the clearIndex\n     * @returns {void}\n     */\n    Selection.prototype.clearColumnSelection = function (clearIndex) {\n        if (this.isColumnSelected) {\n            var gObj = this.parent;\n            if (!isNullOrUndefined(clearIndex) && this.selectedColumnsIndexes.indexOf(clearIndex) === -1) {\n                return;\n            }\n            var index = !isNullOrUndefined(clearIndex) ? clearIndex :\n                this.selectedColumnsIndexes[this.selectedColumnsIndexes.length - 1];\n            var col = gObj.getColumnByIndex(index);\n            var selectedCol = void 0;\n            var column = gObj.getColumnByIndex(index);\n            if (col.getFreezeTableName() === literals.frozenRight) {\n                selectedCol = gObj.getFrozenRightColumnHeaderByIndex(index);\n            }\n            else if (col.getFreezeTableName() === 'movable') {\n                selectedCol = gObj.getMovableColumnHeaderByIndex(index);\n            }\n            else {\n                selectedCol = gObj.getColumnHeaderByUid(column.uid);\n            }\n            var deselectedArgs = {\n                columnIndex: index, headerCell: selectedCol,\n                columnIndexes: this.selectedColumnsIndexes,\n                column: column,\n                cancel: false, target: this.actualTarget,\n                isInteracted: this.isInteracted\n            };\n            var isCanceled = this.columnDeselect(deselectedArgs, events.columnDeselecting);\n            if (isCanceled) {\n                this.disableInteracted();\n                return;\n            }\n            var selectedHeader = !isNullOrUndefined(clearIndex) ? [selectedCol] :\n                [].slice.call(gObj.getHeaderContent().getElementsByClassName('e-columnselection'));\n            var selectedCells = this.getSelectedColumnCells(clearIndex);\n            for (var i = 0, len = selectedHeader.length; i < len; i++) {\n                addRemoveActiveClasses([selectedHeader[i]], false, 'e-columnselection');\n            }\n            for (var i = 0, len = selectedCells.length; i < len; i++) {\n                addRemoveActiveClasses([selectedCells[i]], false, 'e-columnselection');\n            }\n            if (!isNullOrUndefined(clearIndex)) {\n                this.selectedColumnsIndexes.splice(this.selectedColumnsIndexes.indexOf(clearIndex), 1);\n                this.parent.getColumns()[clearIndex].isSelected = false;\n            }\n            else {\n                this.columnDeselect(deselectedArgs, events.columnDeselected);\n                this.selectedColumnsIndexes = [];\n                this.isColumnSelected = false;\n                this.parent.getColumns().filter(function (col) { return col.isSelected = false; });\n            }\n        }\n    };\n    Selection.prototype.getselectedCols = function () {\n        var gObj = this.parent;\n        var selectedCol;\n        if (this.selectedColumnsIndexes.length > 1) {\n            selectedCol = [];\n            for (var i = 0; i < this.selectedColumnsIndexes.length; i++) {\n                (selectedCol).push(gObj.getColumnHeaderByUid(gObj.getColumnByIndex(this.selectedColumnsIndexes[i]).uid));\n            }\n        }\n        else {\n            selectedCol = gObj.getColumnHeaderByUid(gObj.getColumnByIndex(this.selectedColumnsIndexes[0]).uid);\n        }\n        return selectedCol;\n    };\n    Selection.prototype.getSelectedColumnCells = function (clearIndex) {\n        var gObj = this.parent;\n        var isRowTemplate = !isNullOrUndefined(this.parent.rowTemplate);\n        var rows = isRowTemplate ? gObj.getRows() : gObj.getDataRows();\n        var movableRows;\n        var frRows;\n        if (gObj.isFrozenGrid() && gObj.getContent().querySelector('.' + literals.movableContent)) {\n            movableRows = isRowTemplate ? gObj.getMovableRows() : gObj.getMovableDataRows();\n            rows = gObj.addMovableRows(rows, movableRows);\n            if (gObj.getFrozenMode() === literals.leftRight) {\n                frRows = isRowTemplate ? gObj.getFrozenRightRows() : gObj.getFrozenRightDataRows();\n                rows = gObj.addMovableRows(rows, frRows);\n            }\n        }\n        var seletedcells = [];\n        var selectionString = !isNullOrUndefined(clearIndex) ? '[aria-colindex=\"' + clearIndex + '\"]' : '.e-columnselection';\n        for (var i = 0, len = rows.length; i < len; i++) {\n            seletedcells = seletedcells.concat([].slice.call(rows[i].querySelectorAll(selectionString)));\n        }\n        return seletedcells;\n    };\n    Selection.prototype.columnDeselect = function (args, event) {\n        if (event === 'columnDeselected') {\n            delete args.cancel;\n        }\n        this.onActionComplete(args, event);\n        return args.cancel;\n    };\n    Selection.prototype.updateColProps = function (startIndex) {\n        this.prevColIndex = startIndex;\n        this.isColumnSelected = this.selectedColumnsIndexes.length && true;\n    };\n    Selection.prototype.clearColDependency = function () {\n        this.clearColumnSelection();\n        this.selectedColumnsIndexes = [];\n    };\n    Selection.prototype.updateColSelection = function (selectedCol, startIndex) {\n        if (isNullOrUndefined(this.parent.getColumns()[startIndex])) {\n            return;\n        }\n        var left = this.parent.getFrozenLeftCount();\n        var movable = this.parent.getMovableColumnsCount();\n        var col = this.parent.getColumnByIndex(startIndex);\n        var isRowTemplate = !isNullOrUndefined(this.parent.rowTemplate);\n        var rows;\n        this.selectedColumnsIndexes.push(startIndex);\n        this.parent.getColumns()[startIndex].isSelected = true;\n        if (col.getFreezeTableName() === literals.frozenRight) {\n            startIndex = startIndex - (left + movable);\n            rows = isRowTemplate ? this.parent.getFrozenRightRows() : this.parent.getFrozenRightDataRows();\n        }\n        else if (col.getFreezeTableName() === 'movable') {\n            startIndex = startIndex - left;\n            rows = isRowTemplate ? this.parent.getMovableRows() : this.parent.getMovableDataRows();\n        }\n        else {\n            startIndex = startIndex + this.parent.getIndentCount();\n            rows = isRowTemplate ? this.parent.getRows() : this.parent.getDataRows();\n        }\n        addRemoveActiveClasses([selectedCol], true, 'e-columnselection');\n        for (var j = 0, len = rows.length; j < len; j++) {\n            if (rows[j].classList.contains(literals.row)) {\n                if ((rows[j].classList.contains(literals.editedRow) || rows[j].classList.contains(literals.addedRow)) &&\n                    this.parent.editSettings.mode === 'Normal' && !isNullOrUndefined(rows[j].querySelector('tr').childNodes[startIndex])) {\n                    addRemoveActiveClasses([rows[j].querySelector('tr').childNodes[startIndex]], true, 'e-columnselection');\n                }\n                else if (!isNullOrUndefined(rows[j].childNodes[startIndex])) {\n                    addRemoveActiveClasses([rows[j].childNodes[startIndex]], true, 'e-columnselection');\n                }\n            }\n        }\n    };\n    Selection.prototype.headerSelectionHandler = function (colIndex) {\n        if ((!this.isMultiCtrlRequest && !this.isMultiShiftRequest) || this.isSingleSel()) {\n            this.selectColumn(colIndex);\n        }\n        else if (this.isMultiShiftRequest) {\n            this.selectColumnsByRange(isUndefined(this.prevColIndex) ? colIndex : this.prevColIndex, colIndex);\n        }\n        else {\n            this.selectColumnWithExisting(colIndex);\n        }\n    };\n    // eslint-disable-next-line camelcase\n    Selection.prototype.addEventListener_checkbox = function () {\n        var _this = this;\n        this.parent.on(events.dataReady, this.dataReady, this);\n        this.onDataBoundFunction = this.onDataBound.bind(this);\n        this.parent.addEventListener(events.dataBound, this.onDataBoundFunction);\n        this.parent.on(events.refreshInfinitePersistSelection, this.onDataBoundFunction);\n        this.parent.on(events.contentReady, this.checkBoxSelectionChanged, this);\n        this.parent.on(events.beforeRefreshOnDataChange, this.initPerisistSelection, this);\n        this.parent.on(events.onEmpty, this.setCheckAllForEmptyGrid, this);\n        this.actionCompleteFunc = this.actionCompleteHandler.bind(this);\n        this.parent.addEventListener(events.actionComplete, this.actionCompleteFunc);\n        this.parent.on(events.click, this.clickHandler, this);\n        this.resizeEndFn = function () {\n            _this.updateAutoFillPosition();\n            _this.drawBorders();\n        };\n        this.resizeEndFn.bind(this);\n        this.parent.addEventListener(events.resizeStop, this.resizeEndFn);\n    };\n    // eslint-disable-next-line camelcase\n    Selection.prototype.removeEventListener_checkbox = function () {\n        this.parent.off(events.dataReady, this.dataReady);\n        this.parent.removeEventListener(events.dataBound, this.onDataBoundFunction);\n        this.parent.removeEventListener(events.actionComplete, this.actionCompleteFunc);\n        this.parent.off(events.refreshInfinitePersistSelection, this.onDataBoundFunction);\n        this.parent.off(events.onEmpty, this.setCheckAllForEmptyGrid);\n        this.parent.off(events.click, this.clickHandler);\n        this.parent.off(events.beforeRefreshOnDataChange, this.initPerisistSelection);\n    };\n    Selection.prototype.setCheckAllForEmptyGrid = function () {\n        var checkAllBox = this.getCheckAllBox();\n        if (checkAllBox) {\n            this.parent.isCheckBoxSelection = true;\n            var spanEle = checkAllBox.nextElementSibling;\n            removeClass([spanEle], ['e-check', 'e-stop', 'e-uncheck']);\n        }\n    };\n    Selection.prototype.dataReady = function (e) {\n        this.isHeaderCheckboxClicked = false;\n        var isInfinitecroll = this.parent.enableInfiniteScrolling && e.requestType === 'infiniteScroll';\n        if (e.requestType !== 'virtualscroll' && !this.parent.isPersistSelection && !isInfinitecroll) {\n            this.disableUI = !this.parent.enableImmutableMode;\n            this.clearSelection();\n            this.setCheckAllState();\n            this.disableUI = false;\n        }\n    };\n    Selection.prototype.actionCompleteHandler = function (e) {\n        if (e.requestType === 'save' && this.parent.isPersistSelection) {\n            this.refreshPersistSelection();\n        }\n    };\n    Selection.prototype.selectRowIndex = function (index) {\n        this.parent.isSelectedRowIndexUpdating = true;\n        this.parent.selectedRowIndex = index;\n    };\n    Selection.prototype.disableInteracted = function () {\n        this.isInteracted = false;\n    };\n    Selection.prototype.activeTarget = function () {\n        this.actualTarget = this.isInteracted ? this.actualTarget : null;\n    };\n    return Selection;\n}());\nexport { Selection };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}