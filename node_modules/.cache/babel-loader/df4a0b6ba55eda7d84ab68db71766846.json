{"ast":null,"code":"import { Observer } from '@syncfusion/ej2-base';\nimport * as CONSTANT from './constant';\nimport { MDLists } from './../plugin/lists';\nimport { MDFormats } from './../plugin/formats';\nimport { MDSelectionFormats } from './../plugin/md-selection-formats';\nimport { MarkdownSelection } from './../plugin/markdown-selection';\nimport { extend } from '@syncfusion/ej2-base';\nimport { markdownFormatTags, markdownListsTags, markdownSelectionTags } from './../../common/config';\nimport { UndoRedoCommands } from './../plugin/undo';\nimport { MDLink } from './../plugin/link';\nimport { MDTable } from './../plugin/table';\nimport * as EVENTS from './../../common/constant';\nimport { ClearFormat } from './../plugin/clearformat';\nimport { MDInsertText } from './../plugin/insert-text';\n/**\n * MarkdownParser internal component\n *\n * @hidden\n\n */\n\nvar MarkdownParser =\n/** @class */\nfunction () {\n  /**\n   * Constructor for creating the component\n   *\n   * @param {IMarkdownParserModel} options - specifies the options\n   * @hidden\n    */\n  function MarkdownParser(options) {\n    this.initialize();\n    extend(this, this, options, true);\n    this.observer = new Observer(this);\n    this.markdownSelection = new MarkdownSelection();\n    this.listObj = new MDLists({\n      parent: this,\n      syntax: this.listTags\n    });\n    this.formatObj = new MDFormats({\n      parent: this,\n      syntax: this.formatTags\n    });\n    this.undoRedoManager = new UndoRedoCommands(this, options.options);\n    this.mdSelectionFormats = new MDSelectionFormats({\n      parent: this,\n      syntax: this.selectionTags\n    });\n    this.linkObj = new MDLink(this);\n    this.tableObj = new MDTable({\n      parent: this,\n      syntaxTag: {\n        Formats: this.formatTags,\n        List: this.listTags\n      }\n    });\n    this.clearObj = new ClearFormat(this);\n    this.insertTextObj = new MDInsertText(this);\n    this.wireEvents();\n  }\n\n  MarkdownParser.prototype.initialize = function () {\n    this.formatTags = markdownFormatTags;\n    this.listTags = markdownListsTags;\n    this.selectionTags = markdownSelectionTags;\n  };\n\n  MarkdownParser.prototype.wireEvents = function () {\n    this.observer.on(EVENTS.KEY_DOWN, this.editorKeyDown, this);\n    this.observer.on(EVENTS.KEY_UP, this.editorKeyUp, this);\n    this.observer.on(EVENTS.MODEL_CHANGED, this.onPropertyChanged, this);\n  };\n\n  MarkdownParser.prototype.onPropertyChanged = function (props) {\n    this.observer.notify(EVENTS.MODEL_CHANGED_PLUGIN, props);\n  };\n\n  MarkdownParser.prototype.editorKeyDown = function (e) {\n    this.observer.notify(EVENTS.KEY_DOWN_HANDLER, e);\n  };\n\n  MarkdownParser.prototype.editorKeyUp = function (e) {\n    this.observer.notify(EVENTS.KEY_UP_HANDLER, e);\n  };\n  /* eslint-disable */\n\n  /**\n   * markdown execCommand method\n   *\n   * @param {MarkdownExecCommand} command - specifies the command\n   * @param {T} - specifies the value\n   * @param {Event} event - specifies the event\n   * @param {Function} callBack - specifies the call back function\n   * @param {string} text - specifies the string value\n   * @param {T} exeValue - specifies the value\n   * @returns {void}\n   * @hidden\n    */\n\n  /* eslint-enable */\n\n\n  MarkdownParser.prototype.execCommand = function (command, value, event, callBack, text, exeValue) {\n    switch (command.toLocaleLowerCase()) {\n      case 'lists':\n        this.observer.notify(CONSTANT.LISTS_COMMAND, {\n          subCommand: value,\n          event: event,\n          callBack: callBack\n        });\n        break;\n\n      case 'formats':\n        this.observer.notify(EVENTS.FORMAT_TYPE, {\n          subCommand: value,\n          event: event,\n          callBack: callBack\n        });\n        break;\n\n      case 'actions':\n        this.observer.notify(EVENTS.ACTION, {\n          subCommand: value,\n          event: event,\n          callBack: callBack\n        });\n        break;\n\n      case 'style':\n      case 'effects':\n      case 'casing':\n        this.observer.notify(CONSTANT.selectionCommand, {\n          subCommand: value,\n          event: event,\n          callBack: callBack\n        });\n        break;\n\n      case 'links':\n      case 'images':\n        this.observer.notify(CONSTANT.LINK_COMMAND, {\n          subCommand: value,\n          event: event,\n          callBack: callBack,\n          item: exeValue\n        });\n        break;\n\n      case 'table':\n        switch (value.toString().toLocaleLowerCase()) {\n          case 'createtable':\n            this.observer.notify(CONSTANT.MD_TABLE, {\n              subCommand: value,\n              item: exeValue,\n              event: event,\n              callBack: callBack\n            });\n            break;\n        }\n\n        break;\n\n      case 'clear':\n        this.observer.notify(CONSTANT.CLEAR_COMMAND, {\n          subCommand: value,\n          event: event,\n          callBack: callBack\n        });\n        break;\n\n      case 'inserttext':\n        this.observer.notify(CONSTANT.INSERT_TEXT_COMMAND, {\n          subCommand: value,\n          event: event,\n          callBack: callBack,\n          value: {\n            text: exeValue\n          }\n        });\n        break;\n    }\n  };\n\n  return MarkdownParser;\n}();\n\nexport { MarkdownParser };","map":{"version":3,"names":["Observer","CONSTANT","MDLists","MDFormats","MDSelectionFormats","MarkdownSelection","extend","markdownFormatTags","markdownListsTags","markdownSelectionTags","UndoRedoCommands","MDLink","MDTable","EVENTS","ClearFormat","MDInsertText","MarkdownParser","options","initialize","observer","markdownSelection","listObj","parent","syntax","listTags","formatObj","formatTags","undoRedoManager","mdSelectionFormats","selectionTags","linkObj","tableObj","syntaxTag","Formats","List","clearObj","insertTextObj","wireEvents","prototype","on","KEY_DOWN","editorKeyDown","KEY_UP","editorKeyUp","MODEL_CHANGED","onPropertyChanged","props","notify","MODEL_CHANGED_PLUGIN","e","KEY_DOWN_HANDLER","KEY_UP_HANDLER","execCommand","command","value","event","callBack","text","exeValue","toLocaleLowerCase","LISTS_COMMAND","subCommand","FORMAT_TYPE","ACTION","selectionCommand","LINK_COMMAND","item","toString","MD_TABLE","CLEAR_COMMAND","INSERT_TEXT_COMMAND"],"sources":["/home/morgan/Desktop/Projets/ENT4/Jwt-Auth-pdf/react-jwt-auth/react-jwt-auth/node_modules/@syncfusion/ej2-richtexteditor/src/markdown-parser/base/markdown-parser.js"],"sourcesContent":["import { Observer } from '@syncfusion/ej2-base';\nimport * as CONSTANT from './constant';\nimport { MDLists } from './../plugin/lists';\nimport { MDFormats } from './../plugin/formats';\nimport { MDSelectionFormats } from './../plugin/md-selection-formats';\nimport { MarkdownSelection } from './../plugin/markdown-selection';\nimport { extend } from '@syncfusion/ej2-base';\nimport { markdownFormatTags, markdownListsTags, markdownSelectionTags } from './../../common/config';\nimport { UndoRedoCommands } from './../plugin/undo';\nimport { MDLink } from './../plugin/link';\nimport { MDTable } from './../plugin/table';\nimport * as EVENTS from './../../common/constant';\nimport { ClearFormat } from './../plugin/clearformat';\nimport { MDInsertText } from './../plugin/insert-text';\n/**\n * MarkdownParser internal component\n *\n * @hidden\n\n */\nvar MarkdownParser = /** @class */ (function () {\n    /**\n     * Constructor for creating the component\n     *\n     * @param {IMarkdownParserModel} options - specifies the options\n     * @hidden\n\n     */\n    function MarkdownParser(options) {\n        this.initialize();\n        extend(this, this, options, true);\n        this.observer = new Observer(this);\n        this.markdownSelection = new MarkdownSelection();\n        this.listObj = new MDLists({ parent: this, syntax: this.listTags });\n        this.formatObj = new MDFormats({ parent: this, syntax: this.formatTags });\n        this.undoRedoManager = new UndoRedoCommands(this, options.options);\n        this.mdSelectionFormats = new MDSelectionFormats({ parent: this, syntax: this.selectionTags });\n        this.linkObj = new MDLink(this);\n        this.tableObj = new MDTable({ parent: this, syntaxTag: ({ Formats: this.formatTags, List: this.listTags }) });\n        this.clearObj = new ClearFormat(this);\n        this.insertTextObj = new MDInsertText(this);\n        this.wireEvents();\n    }\n    MarkdownParser.prototype.initialize = function () {\n        this.formatTags = markdownFormatTags;\n        this.listTags = markdownListsTags;\n        this.selectionTags = markdownSelectionTags;\n    };\n    MarkdownParser.prototype.wireEvents = function () {\n        this.observer.on(EVENTS.KEY_DOWN, this.editorKeyDown, this);\n        this.observer.on(EVENTS.KEY_UP, this.editorKeyUp, this);\n        this.observer.on(EVENTS.MODEL_CHANGED, this.onPropertyChanged, this);\n    };\n    MarkdownParser.prototype.onPropertyChanged = function (props) {\n        this.observer.notify(EVENTS.MODEL_CHANGED_PLUGIN, props);\n    };\n    MarkdownParser.prototype.editorKeyDown = function (e) {\n        this.observer.notify(EVENTS.KEY_DOWN_HANDLER, e);\n    };\n    MarkdownParser.prototype.editorKeyUp = function (e) {\n        this.observer.notify(EVENTS.KEY_UP_HANDLER, e);\n    };\n    /* eslint-disable */\n    /**\n     * markdown execCommand method\n     *\n     * @param {MarkdownExecCommand} command - specifies the command\n     * @param {T} - specifies the value\n     * @param {Event} event - specifies the event\n     * @param {Function} callBack - specifies the call back function\n     * @param {string} text - specifies the string value\n     * @param {T} exeValue - specifies the value\n     * @returns {void}\n     * @hidden\n\n     */\n    /* eslint-enable */\n    MarkdownParser.prototype.execCommand = function (command, value, event, callBack, text, exeValue) {\n        switch (command.toLocaleLowerCase()) {\n            case 'lists':\n                this.observer.notify(CONSTANT.LISTS_COMMAND, { subCommand: value, event: event, callBack: callBack });\n                break;\n            case 'formats':\n                this.observer.notify(EVENTS.FORMAT_TYPE, { subCommand: value, event: event, callBack: callBack });\n                break;\n            case 'actions':\n                this.observer.notify(EVENTS.ACTION, { subCommand: value, event: event, callBack: callBack });\n                break;\n            case 'style':\n            case 'effects':\n            case 'casing':\n                this.observer.notify(CONSTANT.selectionCommand, { subCommand: value, event: event, callBack: callBack });\n                break;\n            case 'links':\n            case 'images':\n                this.observer.notify(CONSTANT.LINK_COMMAND, { subCommand: value, event: event, callBack: callBack, item: exeValue });\n                break;\n            case 'table':\n                switch (value.toString().toLocaleLowerCase()) {\n                    case 'createtable':\n                        this.observer.notify(CONSTANT.MD_TABLE, { subCommand: value, item: exeValue, event: event, callBack: callBack });\n                        break;\n                }\n                break;\n            case 'clear':\n                this.observer.notify(CONSTANT.CLEAR_COMMAND, { subCommand: value, event: event, callBack: callBack });\n                break;\n            case 'inserttext':\n                this.observer.notify(CONSTANT.INSERT_TEXT_COMMAND, { subCommand: value, event: event, callBack: callBack,\n                    value: { text: exeValue } });\n                break;\n        }\n    };\n    return MarkdownParser;\n}());\nexport { MarkdownParser };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}