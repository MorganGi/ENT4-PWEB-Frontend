{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { Component, ChildProperty, Browser, closest, extend } from '@syncfusion/ej2-base';\nimport { addClass, removeClass, append, remove, classList, setStyleAttribute } from '@syncfusion/ej2-base';\nimport { Property, Collection, Complex, Event, NotifyPropertyChanges, L10n } from '@syncfusion/ej2-base';\nimport { EventHandler, KeyboardEvents } from '@syncfusion/ej2-base';\nimport { DataManager, DataUtil, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner, Tooltip } from '@syncfusion/ej2-popups';\nimport { iterateArrayOrObject, prepareColumns, parentsUntil, wrap, templateCompiler, isGroupAdaptive, refreshForeignData } from './util';\nimport { getRowHeight, setColumnIndex, Global, ispercentageWidth, renderMovable, getNumberFormat } from './util';\nimport { setRowElements, resetRowIndex, compareChanges, getCellByColAndRowIndex, performComplexDataOperation } from './util';\nimport * as events from '../base/constant';\nimport { Render } from '../renderer/render';\nimport { RenderType } from './enum';\nimport { RowRenderer } from '../renderer/row-renderer';\nimport { CellRenderer } from '../renderer/cell-renderer';\nimport { CellRendererFactory } from '../services/cell-render-factory';\nimport { ServiceLocator } from '../services/service-locator';\nimport { ValueFormatter } from '../services/value-formatter';\nimport { RendererFactory } from '../services/renderer-factory';\nimport { ColumnWidthService } from '../services/width-controller';\nimport { AriaService } from '../services/aria-service';\nimport { FocusStrategy } from '../services/focus-strategy';\nimport { PageSettings } from '../models/page-settings';\nimport { ColumnChooserSettings } from '../models/column-chooser-settings';\nimport { Selection } from '../actions/selection';\nimport { Search } from '../actions/search';\nimport { ShowHide } from '../actions/show-hide';\nimport { Scroll } from '../actions/scroll';\nimport { Print } from '../actions/print';\nimport { AggregateRow } from '../models/aggregate';\nimport { Clipboard } from '../actions/clipboard';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport * as literals from '../base/string-literals';\nimport { HeaderCellRenderer } from '../renderer/header-cell-renderer';\n/**\n * Represents the field name and direction of sort column.\n */\n\nvar SortDescriptor =\n/** @class */\nfunction (_super) {\n  __extends(SortDescriptor, _super);\n\n  function SortDescriptor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property()], SortDescriptor.prototype, \"field\", void 0);\n\n  __decorate([Property()], SortDescriptor.prototype, \"direction\", void 0);\n\n  __decorate([Property(false)], SortDescriptor.prototype, \"isFromGroup\", void 0);\n\n  return SortDescriptor;\n}(ChildProperty);\n\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of Grid.\n */\n\nvar SortSettings =\n/** @class */\nfunction (_super) {\n  __extends(SortSettings, _super);\n\n  function SortSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Collection([], SortDescriptor)], SortSettings.prototype, \"columns\", void 0);\n\n  __decorate([Property(true)], SortSettings.prototype, \"allowUnsort\", void 0);\n\n  return SortSettings;\n}(ChildProperty);\n\nexport { SortSettings };\n/**\n * Represents the predicate for the filter column.\n */\n\nvar Predicate =\n/** @class */\nfunction (_super) {\n  __extends(Predicate, _super);\n\n  function Predicate() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property()], Predicate.prototype, \"field\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"operator\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"value\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"matchCase\", void 0);\n\n  __decorate([Property(false)], Predicate.prototype, \"ignoreAccent\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"predicate\", void 0);\n\n  __decorate([Property({})], Predicate.prototype, \"actualFilterValue\", void 0);\n\n  __decorate([Property({})], Predicate.prototype, \"actualOperator\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"type\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"ejpredicate\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"uid\", void 0);\n\n  __decorate([Property()], Predicate.prototype, \"isForeignKey\", void 0);\n\n  return Predicate;\n}(ChildProperty);\n\nexport { Predicate };\n/**\n * Configures the infinite scroll behavior of Grid.\n */\n\nvar InfiniteScrollSettings =\n/** @class */\nfunction (_super) {\n  __extends(InfiniteScrollSettings, _super);\n\n  function InfiniteScrollSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(false)], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n\n  __decorate([Property(3)], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n\n  __decorate([Property(3)], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n\n  return InfiniteScrollSettings;\n}(ChildProperty);\n\nexport { InfiniteScrollSettings };\n/**\n * Configures the filtering behavior of the Grid.\n */\n\nvar FilterSettings =\n/** @class */\nfunction (_super) {\n  __extends(FilterSettings, _super);\n\n  function FilterSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Collection([], Predicate)], FilterSettings.prototype, \"columns\", void 0);\n\n  __decorate([Property('FilterBar')], FilterSettings.prototype, \"type\", void 0);\n\n  __decorate([Property()], FilterSettings.prototype, \"mode\", void 0);\n\n  __decorate([Property(true)], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n\n  __decorate([Property(1500)], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n\n  __decorate([Property()], FilterSettings.prototype, \"operators\", void 0);\n\n  __decorate([Property(false)], FilterSettings.prototype, \"ignoreAccent\", void 0);\n\n  __decorate([Property(false)], FilterSettings.prototype, \"enableCaseSensitivity\", void 0);\n\n  __decorate([Property(false)], FilterSettings.prototype, \"showFilterBarOperator\", void 0);\n\n  return FilterSettings;\n}(ChildProperty);\n\nexport { FilterSettings };\n/**\n * Configures the selection behavior of the Grid.\n */\n\nvar SelectionSettings =\n/** @class */\nfunction (_super) {\n  __extends(SelectionSettings, _super);\n\n  function SelectionSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('Row')], SelectionSettings.prototype, \"mode\", void 0);\n\n  __decorate([Property('Flow')], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n\n  __decorate([Property('Single')], SelectionSettings.prototype, \"type\", void 0);\n\n  __decorate([Property(false)], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n\n  __decorate([Property(false)], SelectionSettings.prototype, \"persistSelection\", void 0);\n\n  __decorate([Property('Default')], SelectionSettings.prototype, \"checkboxMode\", void 0);\n\n  __decorate([Property(false)], SelectionSettings.prototype, \"enableSimpleMultiRowSelection\", void 0);\n\n  __decorate([Property(true)], SelectionSettings.prototype, \"enableToggle\", void 0);\n\n  __decorate([Property(false)], SelectionSettings.prototype, \"allowColumnSelection\", void 0);\n\n  return SelectionSettings;\n}(ChildProperty);\n\nexport { SelectionSettings };\n/**\n * Configures the search behavior of the Grid.\n */\n\nvar SearchSettings =\n/** @class */\nfunction (_super) {\n  __extends(SearchSettings, _super);\n\n  function SearchSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property([])], SearchSettings.prototype, \"fields\", void 0);\n\n  __decorate([Property('')], SearchSettings.prototype, \"key\", void 0);\n\n  __decorate([Property('contains')], SearchSettings.prototype, \"operator\", void 0);\n\n  __decorate([Property(true)], SearchSettings.prototype, \"ignoreCase\", void 0);\n\n  __decorate([Property(false)], SearchSettings.prototype, \"ignoreAccent\", void 0);\n\n  return SearchSettings;\n}(ChildProperty);\n\nexport { SearchSettings };\n/**\n * Configures the row drop settings of the Grid.\n */\n\nvar RowDropSettings =\n/** @class */\nfunction (_super) {\n  __extends(RowDropSettings, _super);\n\n  function RowDropSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property()], RowDropSettings.prototype, \"targetID\", void 0);\n\n  return RowDropSettings;\n}(ChildProperty);\n\nexport { RowDropSettings };\n/**\n * Configures the text wrap settings of the Grid.\n */\n\nvar TextWrapSettings =\n/** @class */\nfunction (_super) {\n  __extends(TextWrapSettings, _super);\n\n  function TextWrapSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('Both')], TextWrapSettings.prototype, \"wrapMode\", void 0);\n\n  return TextWrapSettings;\n}(ChildProperty);\n\nexport { TextWrapSettings };\n/**\n * Configures the resize behavior of the Grid.\n */\n\nvar ResizeSettings =\n/** @class */\nfunction (_super) {\n  __extends(ResizeSettings, _super);\n\n  function ResizeSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('Normal')], ResizeSettings.prototype, \"mode\", void 0);\n\n  return ResizeSettings;\n}(ChildProperty);\n\nexport { ResizeSettings };\n/**\n * Configures the group behavior of the Grid.\n */\n\nvar GroupSettings =\n/** @class */\nfunction (_super) {\n  __extends(GroupSettings, _super);\n\n  function GroupSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(true)], GroupSettings.prototype, \"showDropArea\", void 0);\n\n  __decorate([Property(false)], GroupSettings.prototype, \"allowReordering\", void 0);\n\n  __decorate([Property(false)], GroupSettings.prototype, \"showToggleButton\", void 0);\n\n  __decorate([Property(false)], GroupSettings.prototype, \"showGroupedColumn\", void 0);\n\n  __decorate([Property(true)], GroupSettings.prototype, \"showUngroupButton\", void 0);\n\n  __decorate([Property(false)], GroupSettings.prototype, \"disablePageWiseAggregates\", void 0);\n\n  __decorate([Property([])], GroupSettings.prototype, \"columns\", void 0);\n\n  __decorate([Property()], GroupSettings.prototype, \"captionTemplate\", void 0);\n\n  __decorate([Property(false)], GroupSettings.prototype, \"enableLazyLoading\", void 0);\n\n  return GroupSettings;\n}(ChildProperty);\n\nexport { GroupSettings };\n/**\n * Configures the edit behavior of the Grid.\n */\n\nvar EditSettings =\n/** @class */\nfunction (_super) {\n  __extends(EditSettings, _super);\n\n  function EditSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property(false)], EditSettings.prototype, \"allowAdding\", void 0);\n\n  __decorate([Property(false)], EditSettings.prototype, \"allowEditing\", void 0);\n\n  __decorate([Property(false)], EditSettings.prototype, \"allowDeleting\", void 0);\n\n  __decorate([Property('Normal')], EditSettings.prototype, \"mode\", void 0);\n\n  __decorate([Property(true)], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n\n  __decorate([Property(true)], EditSettings.prototype, \"showConfirmDialog\", void 0);\n\n  __decorate([Property(false)], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n\n  __decorate([Property('')], EditSettings.prototype, \"template\", void 0);\n\n  __decorate([Property('')], EditSettings.prototype, \"headerTemplate\", void 0);\n\n  __decorate([Property('')], EditSettings.prototype, \"footerTemplate\", void 0);\n\n  __decorate([Property('Top')], EditSettings.prototype, \"newRowPosition\", void 0);\n\n  __decorate([Property({})], EditSettings.prototype, \"dialog\", void 0);\n\n  __decorate([Property(false)], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n\n  return EditSettings;\n}(ChildProperty);\n\nexport { EditSettings };\n/**\n * Represents the Grid component.\n * ```html\n * <div id=\"grid\"></div>\n * <script>\n *  var gridObj = new Grid({ allowPaging: true });\n *  gridObj.appendTo(\"#grid\");\n * </script>\n * ```\n */\n\nvar Grid =\n/** @class */\nfunction (_super) {\n  __extends(Grid, _super);\n  /**\n   * Constructor for creating the component\n   *\n   * @param {GridModel} options - specifies the options\n   * @param {string | HTMLElement} element - specifies the element\n   * @hidden\n   */\n\n\n  function Grid(options, element) {\n    var _this = _super.call(this, options, element) || this;\n\n    _this.isPreventScrollEvent = false;\n    _this.inViewIndexes = [];\n    _this.keyA = false;\n    _this.frozenRightCount = 0;\n    _this.frozenLeftCount = 0;\n    _this.tablesCount = 1;\n    _this.movableCount = 0;\n    _this.visibleFrozenLeft = 0;\n    _this.visibleFrozenRight = 0;\n    _this.visibleMovable = 0;\n    _this.frozenLeftColumns = [];\n    _this.frozenRightColumns = [];\n    _this.movableColumns = [];\n    _this.media = {};\n    _this.isFreezeRefresh = false;\n    /** @hidden */\n\n    _this.tableIndex = 0;\n    _this.componentRefresh = Component.prototype.refresh;\n    /** @hidden */\n\n    _this.isVirtualAdaptive = false;\n    /** @hidden */\n\n    _this.vRows = [];\n    /** @hidden */\n\n    _this.vcRows = [];\n    /** @hidden */\n\n    _this.vGroupOffsets = {};\n    /** @hidden */\n\n    _this.rowUid = 0;\n    /**\n     * Gets the currently visible records of the Grid.\n     */\n\n    _this.currentViewData = [];\n    /** @hidden */\n\n    _this.isManualRefresh = false;\n    /** @hidden */\n\n    _this.isAutoFitColumns = false;\n    /** @hidden */\n\n    _this.enableDeepCompare = false;\n    /** @hidden */\n\n    _this.totalDataRecordsCount = 0;\n    /** @hidden */\n\n    _this.disableSelectedRecords = [];\n    /** @hidden */\n\n    _this.partialSelectedRecords = [];\n    /** @hidden */\n\n    _this.lockcolPositionCount = 0;\n    /** @hidden */\n\n    _this.prevPageMoving = false;\n    /** @hidden */\n\n    _this.pageTemplateChange = false;\n    /** @hidden */\n\n    _this.isAutoGen = false;\n    _this.mediaBindInstance = {};\n    /** @hidden */\n\n    _this.commandDelIndex = undefined;\n    /** @hidden */\n\n    _this.asyncTimeOut = 50;\n    /** @hidden */\n\n    _this.isExportGrid = false; // enable/disable logger for MVC & Core\n\n    _this.enableLogger = true;\n    _this.needsID = true;\n    Grid_1.Inject(Selection);\n    setValue('mergePersistData', _this.mergePersistGridData, _this);\n    return _this;\n  }\n\n  Grid_1 = Grid;\n  /**\n   * Get the properties to be maintained in the persisted state.\n   *\n   * @returns {string} returns the persist data\n   */\n\n  Grid.prototype.getPersistData = function () {\n    var keyEntity = ['pageSettings', 'sortSettings', 'filterSettings', 'groupSettings', 'columns', 'searchSettings', 'selectedRowIndex', 'scrollPosition'];\n    var ignoreOnPersist = {\n      pageSettings: ['template', 'pageSizes', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n      filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent'],\n      groupSettings: ['showDropArea', 'showToggleButton', 'showGroupedColumn', 'showUngroupButton', 'disablePageWiseAggregates', 'hideCaptionCount'],\n      searchSettings: ['fields', 'operator', 'ignoreCase'],\n      sortSettings: [],\n      columns: [],\n      selectedRowIndex: [],\n      scrollPosition: []\n    };\n\n    for (var i = 0; i < keyEntity.length; i++) {\n      var currentObject = this[keyEntity[i]];\n\n      for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n        var val = _a[_i];\n        delete currentObject[val];\n      }\n    }\n\n    var temp = this.pageSettings.template;\n    var settings = Object.assign({\n      template: undefined\n    }, this.pageSettings);\n    this.setProperties({\n      pageSettings: settings\n    }, true); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    if (this.isAngular) {\n      delete this.groupSettings['properties']['captionTemplate'];\n    }\n\n    this.pageTemplateChange = !isNullOrUndefined(this.pagerTemplate);\n    var persistData = this.addOnPersist(keyEntity);\n    settings.template = temp;\n    this.setProperties({\n      pageSettings: settings\n    }, true);\n    return persistData;\n  };\n  /**\n   * To provide the array of modules needed for component rendering\n   *\n   * @returns {ModuleDeclaration[]} Returns the module Declaration\n   * @hidden\n   */\n\n\n  Grid.prototype.requiredModules = function () {\n    this.setFrozenCount();\n    this.enableInfiniteAggrgate();\n    var modules = [];\n\n    if (this.isDestroyed) {\n      return modules;\n    }\n\n    if (this.allowFiltering) {\n      modules.push({\n        member: 'filter',\n        args: [this, this.filterSettings, this.serviceLocator]\n      });\n    }\n\n    if (this.allowExcelExport) {\n      modules.push({\n        member: 'ExcelExport',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.allowPdfExport) {\n      modules.push({\n        member: 'PdfExport',\n        args: [this]\n      });\n    }\n\n    if (this.allowSorting) {\n      modules.push({\n        member: 'sort',\n        args: [this, this.sortSettings, this.sortedColumns, this.serviceLocator]\n      });\n    }\n\n    if (this.allowPaging) {\n      modules.push({\n        member: 'pager',\n        args: [this, this.pageSettings]\n      });\n    }\n\n    if (this.allowSelection) {\n      modules.push({\n        member: 'selection',\n        args: [this, this.selectionSettings, this.serviceLocator]\n      });\n    }\n\n    modules.push({\n      member: 'resize',\n      args: [this]\n    });\n\n    if (this.allowReordering) {\n      modules.push({\n        member: 'reorder',\n        args: [this]\n      });\n    }\n\n    if (this.allowRowDragAndDrop) {\n      modules.push({\n        member: 'rowDragAndDrop',\n        args: [this]\n      });\n    }\n\n    if (this.allowGrouping) {\n      modules.push({\n        member: 'group',\n        args: [this, this.groupSettings, this.sortedColumns, this.serviceLocator]\n      });\n    }\n\n    if (this.aggregates.length) {\n      modules.push({\n        member: 'aggregate',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.isDetail()) {\n      modules.push({\n        member: 'detailRow',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.toolbar || this.toolbarTemplate) {\n      modules.push({\n        member: 'toolbar',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.enableVirtualization || this.enableColumnVirtualization) {\n      modules.push({\n        member: 'virtualscroll',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.getFrozenColumns() || this.frozenRows || this.frozenRightCount || this.frozenLeftCount) {\n      modules.push({\n        member: 'freeze',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.isCommandColumn(this.columns)) {\n      modules.push({\n        member: 'commandColumn',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n      modules.push({\n        member: 'edit',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    this.extendRequiredModules(modules);\n    return modules;\n  };\n\n  Grid.prototype.extendRequiredModules = function (modules) {\n    if (this.enableInfiniteScrolling) {\n      modules.push({\n        member: 'infiniteScroll',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.groupSettings.enableLazyLoading) {\n      modules.push({\n        member: 'lazyLoadGroup',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.contextMenuItems) {\n      modules.push({\n        member: 'contextMenu',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.showColumnMenu) {\n      modules.push({\n        member: 'columnMenu',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.showColumnChooser) {\n      modules.push({\n        member: 'columnChooser',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.isForeignKeyEnabled(this.columns)) {\n      modules.push({\n        member: 'foreignKey',\n        args: [this, this.serviceLocator]\n      });\n    }\n\n    if (this.enableLogger) {\n      modules.push({\n        member: 'logger',\n        args: [this]\n      });\n    }\n  };\n  /**\n   * For internal use only - Initialize the event handler;\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  Grid.prototype.preRender = function () {\n    this.serviceLocator = new ServiceLocator();\n    this.initProperties();\n    this.initializeServices();\n  };\n\n  Grid.prototype.initProperties = function () {\n    this.isInitial = true;\n    this.sortedColumns = [];\n    this.inViewIndexes = [];\n    this.mediaCol = [];\n    this.isInitialLoad = false;\n    this.allowServerDataBinding = false;\n    this.ignoreCollectionWatch = true;\n    this.mergeCells = {};\n    this.isEdit = false;\n    this.checkAllRows = 'None';\n    this.isCheckBoxSelection = false;\n    this.isPersistSelection = false;\n    this.componentRefresh = Component.prototype.refresh;\n    this.filterOperators = {\n      contains: 'contains',\n      endsWith: 'endswith',\n      equal: 'equal',\n      greaterThan: 'greaterthan',\n      greaterThanOrEqual: 'greaterthanorequal',\n      lessThan: 'lessthan',\n      lessThanOrEqual: 'lessthanorequal',\n      notEqual: 'notequal',\n      startsWith: 'startswith'\n    };\n    this.defaultLocale = {\n      EmptyRecord: 'No records to display',\n      True: 'true',\n      False: 'false',\n      InvalidFilterMessage: 'Invalid Filter Data',\n      GroupDropArea: 'Drag a column header here to group its column',\n      UnGroup: 'Click here to ungroup',\n      UnGroupButton: 'Click here to ungroup',\n      GroupDisable: 'Grouping is disabled for this column',\n      FilterbarTitle: '\\'s filter bar cell',\n      EmptyDataSourceError: 'DataSource must not be empty at initial load since columns are generated from dataSource in AutoGenerate Column Grid',\n      // Toolbar Items\n      Add: 'Add',\n      Edit: 'Edit',\n      Cancel: 'Cancel',\n      Update: 'Update',\n      Delete: 'Delete',\n      Print: 'Print',\n      Pdfexport: 'PDF Export',\n      Excelexport: 'Excel Export',\n      Wordexport: 'Word Export',\n      Csvexport: 'CSV Export',\n      Search: 'Search',\n      Columnchooser: 'Columns',\n      Save: 'Save',\n      Item: 'item',\n      Items: 'items',\n      EditOperationAlert: 'No records selected for edit operation',\n      DeleteOperationAlert: 'No records selected for delete operation',\n      SaveButton: 'Save',\n      OKButton: 'OK',\n      CancelButton: 'Cancel',\n      EditFormTitle: 'Details of ',\n      AddFormTitle: 'Add New Record',\n      BatchSaveConfirm: 'Are you sure you want to save changes?',\n      BatchSaveLostChanges: 'Unsaved changes will be lost. Are you sure you want to continue?',\n      ConfirmDelete: 'Are you sure you want to Delete Record?',\n      CancelEdit: 'Are you sure you want to Cancel the changes?',\n      ChooseColumns: 'Choose Column',\n      SearchColumns: 'search columns',\n      Matchs: 'No matches found',\n      FilterButton: 'Filter',\n      ClearButton: 'Clear',\n      StartsWith: 'Starts With',\n      EndsWith: 'Ends With',\n      Contains: 'Contains',\n      Equal: 'Equal',\n      NotEqual: 'Not Equal',\n      LessThan: 'Less Than',\n      LessThanOrEqual: 'Less Than Or Equal',\n      GreaterThan: 'Greater Than',\n      GreaterThanOrEqual: 'Greater Than Or Equal',\n      ChooseDate: 'Choose a Date',\n      EnterValue: 'Enter the value',\n      Copy: 'Copy',\n      Group: 'Group by this column',\n      Ungroup: 'Ungroup by this column',\n      autoFitAll: 'Autofit all columns',\n      autoFit: 'Autofit this column',\n      AutoFitAll: 'Autofit all columns',\n      AutoFit: 'Autofit this column',\n      Export: 'Export',\n      FirstPage: 'First Page',\n      LastPage: 'Last Page',\n      PreviousPage: 'Previous Page',\n      NextPage: 'Next Page',\n      SortAscending: 'Sort Ascending',\n      SortDescending: 'Sort Descending',\n      EditRecord: 'Edit Record',\n      DeleteRecord: 'Delete Record',\n      FilterMenu: 'Filter',\n      SelectAll: 'Select All',\n      Blanks: 'Blanks',\n      FilterTrue: 'True',\n      FilterFalse: 'False',\n      NoResult: 'No matches found',\n      ClearFilter: 'Clear Filter',\n      Clear: 'Clear',\n      NumberFilter: 'Number Filters',\n      TextFilter: 'Text Filters',\n      DateFilter: 'Date Filters',\n      DateTimeFilter: 'DateTime Filters',\n      MatchCase: 'Match Case',\n      Between: 'Between',\n      CustomFilter: 'Custom Filter',\n      CustomFilterPlaceHolder: 'Enter the value',\n      CustomFilterDatePlaceHolder: 'Choose a date',\n      AND: 'AND',\n      OR: 'OR',\n      ShowRowsWhere: 'Show rows where:',\n      FilterMenuDialogARIA: 'Filter menu dialog',\n      ExcelFilterDialogARIA: 'Excel filter dialog',\n      DialogEditARIA: 'Edit dialog',\n      ColumnChooserDialogARIA: 'Column chooser dialog',\n      ColumnMenuDialogARIA: 'Column menu dialog',\n      CustomFilterDialogARIA: 'Customer filter dialog',\n      SortAtoZ: 'Sort A to Z',\n      SortZtoA: 'Sort Z to A',\n      SortByOldest: 'Sort by Oldest',\n      SortByNewest: 'Sort by Newest',\n      SortSmallestToLargest: 'Sort Smallest to Largest',\n      SortLargestToSmallest: 'Sort Largest to Smallest',\n      Sort: 'Sort'\n    };\n    this.keyConfigs = {\n      downArrow: 'downarrow',\n      upArrow: 'uparrow',\n      rightArrow: 'rightarrow',\n      leftArrow: 'leftarrow',\n      shiftDown: 'shift+downarrow',\n      shiftUp: 'shift+uparrow',\n      shiftRight: 'shift+rightarrow',\n      shiftLeft: 'shift+leftarrow',\n      home: 'home',\n      end: 'end',\n      escape: 'escape',\n      ctrlHome: 'ctrl+home',\n      ctrlEnd: 'ctrl+end',\n      pageUp: 'pageup',\n      pageDown: 'pagedown',\n      ctrlAltPageUp: 'ctrl+alt+pageup',\n      ctrlAltPageDown: 'ctrl+alt+pagedown',\n      altPageUp: 'alt+pageup',\n      altPageDown: 'alt+pagedown',\n      altDownArrow: 'alt+downarrow',\n      altUpArrow: 'alt+uparrow',\n      ctrlDownArrow: 'ctrl+downarrow',\n      ctrlUpArrow: 'ctrl+uparrow',\n      ctrlPlusA: 'ctrl+A',\n      ctrlPlusP: 'ctrl+P',\n      insert: 'insert',\n      delete: 'delete',\n      f2: 'f2',\n      enter: 'enter',\n      ctrlEnter: 'ctrl+enter',\n      shiftEnter: 'shift+enter',\n      tab: 'tab',\n      shiftTab: 'shift+tab',\n      space: 'space',\n      ctrlPlusC: 'ctrl+C',\n      ctrlShiftPlusH: 'ctrl+shift+H',\n      ctrlSpace: 'ctrl+space',\n      ctrlLeftArrow: 'ctrl+leftarrow',\n      ctrlRightArrow: 'ctrl+rightarrow'\n    };\n  };\n  /**\n   * For internal use only - To Initialize the component rendering.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  Grid.prototype.render = function () {\n    this.log(['module_missing', 'promise_enabled', 'locale_missing', 'check_datasource_columns']);\n    this.ariaService.setOptions(this.element, {\n      datarole: 'grid'\n    });\n    createSpinner({\n      target: this.element,\n      cssClass: this.cssClass ? this.cssClass : null\n    }, this.createElement);\n    this.renderModule = new Render(this, this.serviceLocator);\n    this.searchModule = new Search(this);\n    this.scrollModule = new Scroll(this);\n    this.notify(events.initialLoad, {});\n\n    if (this.getDataModule().dataManager.dataSource.offline === true || this.getDataModule().dataManager.dataSource.url === undefined) {\n      this.isVirtualAdaptive = true;\n    }\n\n    this.trigger(events.load);\n    prepareColumns(this.columns, this.enableColumnVirtualization, this);\n\n    if (this.enablePersistence) {\n      this.notify(events.columnsPrepared, {});\n    }\n\n    this.getMediaColumns();\n    setColumnIndex(this.columns);\n    this.checkLockColumns(this.columns);\n    this.getColumns();\n    this.processModel();\n    this.gridRender();\n    this.wireEvents();\n    this.addListener();\n    this.updateDefaultCursor();\n    this.updateStackedFilter();\n    this.showSpinner();\n    this.notify(events.initialEnd, {});\n\n    if (this.refreshing) {\n      this.trigger('created');\n    }\n  };\n  /**\n   * By default, grid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.showSpinner = function () {\n    if (!this.isExportGrid) {\n      showSpinner(this.element);\n    }\n  };\n  /**\n   * By default, grid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.hideSpinner = function () {\n    if (!this.isExportGrid) {\n      hideSpinner(this.element);\n    }\n  };\n\n  Grid.prototype.updateStackedFilter = function () {\n    if (this.allowFiltering && this.filterSettings.type === 'FilterBar' && this.getHeaderContent().getElementsByClassName('e-stackedheadercell').length) {\n      this.getHeaderContent().classList.add('e-stackedfilter');\n    } else {\n      this.getHeaderContent().classList.remove('e-stackedfilter');\n    }\n  };\n\n  Grid.prototype.getMediaColumns = function () {\n    if (!this.enableColumnVirtualization) {\n      var gcol = this.getColumns();\n      this.getShowHideService = this.serviceLocator.getService('showHideService');\n\n      if (!isNullOrUndefined(gcol)) {\n        for (var index = 0; index < gcol.length; index++) {\n          if (!isNullOrUndefined(gcol[index].hideAtMedia) && (isNullOrUndefined(gcol[index].visible) || gcol[index].visible)) {\n            this.pushMediaColumn(gcol[index], index);\n          }\n        }\n      }\n    }\n  };\n\n  Grid.prototype.pushMediaColumn = function (col, index) {\n    this.mediaCol.push(col);\n    this.media[col.uid] = window.matchMedia(col.hideAtMedia);\n    this.mediaQueryUpdate(index, this.media[col.uid]);\n    this.mediaBindInstance[index] = this.mediaQueryUpdate.bind(this, index);\n    this.media[col.uid].addListener(this.mediaBindInstance[index]);\n  };\n  /**\n   * @param {Column} col - specifies the column\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.updateMediaColumns = function (col) {\n    if (!this.enableColumnVirtualization) {\n      var index = this.getColumnIndexByUid(col.uid);\n\n      for (var i = 0; i < this.mediaCol.length; i++) {\n        if (col.uid === this.mediaCol[i].uid) {\n          this.mediaCol.splice(i, 1);\n          return;\n        }\n      }\n\n      this.pushMediaColumn(col, index);\n    }\n  };\n  /**\n   * @param {number} columnIndex - specifies the column index\n   * @param {MediaQueryList} e - specifies the MediaQueryList\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.mediaQueryUpdate = function (columnIndex, e) {\n    var col = this.getColumns()[columnIndex];\n\n    if (this.mediaCol.some(function (mediaColumn) {\n      return mediaColumn.uid === col.uid;\n    })) {\n      col.visible = e.matches;\n\n      if (this.isInitialLoad) {\n        this.invokedFromMedia = true;\n\n        if (col.visible) {\n          this.showHider.show(col.headerText, 'headerText');\n        } else {\n          this.showHider.hide(col.headerText, 'headerText');\n        }\n      }\n    }\n  };\n\n  Grid.prototype.refreshMediaCol = function () {\n    this.isInitialLoad = true;\n    var footerContent = this.element.querySelector('.' + literals.gridFooter);\n\n    if (this.aggregates.length && this.element.scrollHeight > this.height && footerContent) {\n      addClass([footerContent], ['e-footerpadding']);\n    }\n\n    var checkboxColumn = this.getColumns().filter(function (col) {\n      return col.type === 'checkbox';\n    });\n\n    if (checkboxColumn.length && this.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n      this.isCheckBoxSelection = false;\n    }\n\n    if (this.rowRenderingMode === 'Vertical') {\n      if (this.enableHover) {\n        this.setProperties({\n          enableAdaptiveUI: true,\n          enableHover: false\n        }, true);\n        removeClass([this.element], 'e-gridhover');\n      }\n    }\n\n    if (this.enableAdaptiveUI && this.scrollModule) {\n      this.scrollModule.refresh();\n    }\n  };\n\n  Grid.prototype.removeMediaListener = function () {\n    for (var i = 0; i < this.mediaCol.length; i++) {\n      this.media[this.mediaCol[i].uid].removeListener(this.mediaBindInstance[this.mediaCol[i].index]);\n    }\n  };\n  /**\n   * For internal use only - Initialize the event handler\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  Grid.prototype.eventInitializer = function () {//eventInitializer\n  };\n  /**\n   * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n   *\n   * @function destroy\n   * @returns {void}\n   */\n\n\n  Grid.prototype.destroy = function () {\n    var gridElement = this.element;\n\n    if (!gridElement) {\n      return;\n    }\n\n    var hasGridChild = gridElement.querySelector('.' + literals.gridHeader) && gridElement.querySelector('.' + literals.gridContent) ? true : false;\n\n    if (hasGridChild) {\n      this.unwireEvents();\n    }\n\n    this.removeListener();\n    this.removeMediaListener();\n    this.notify(events.destroy, {});\n    this.destroyDependentModules();\n\n    if (this.isReact || this.isVue) {\n      this.destroyTemplate(['template']);\n    }\n\n    if (hasGridChild) {\n      _super.prototype.destroy.call(this);\n    }\n\n    this.toolTipObj.destroy();\n\n    if (this.isReact && !Browser.isIE) {\n      this.element.innerHTML = '';\n    }\n\n    var modules = ['renderModule', 'headerModule', 'contentModule', 'valueFormatterService', 'serviceLocator', 'ariaService', 'keyboardModule', 'widthService', 'searchModule', 'showHider', 'scrollModule', 'printModule', 'clipboardModule', 'focusModule'];\n\n    for (var i = 0; i < modules.length; i++) {\n      if (this[modules[i]]) {\n        this[modules[i]] = null;\n      }\n    }\n\n    this.element.innerHTML = '';\n    classList(this.element, [], ['e-rtl', 'e-gridhover', 'e-responsive', 'e-default', 'e-device', 'e-grid-min-height']);\n    this.isFreezeRefresh = false;\n  };\n\n  Grid.prototype.destroyDependentModules = function () {\n    var gridElement = this.element;\n\n    if (!gridElement || !gridElement.querySelector('.' + literals.gridHeader) && !gridElement.querySelector('.' + literals.gridContent)) {\n      return;\n    }\n\n    this.scrollModule.destroy();\n    this.keyboardModule.destroy();\n    this.focusModule.destroy();\n    this.clipboardModule.destroy();\n    this.printModule.destroy();\n  };\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @returns {string} returns the module name\n   * @private\n   */\n\n\n  Grid.prototype.getModuleName = function () {\n    return 'grid';\n  };\n\n  Grid.prototype.enableBoxSelection = function () {\n    if (this.enableAutoFill) {\n      this.selectionSettings.cellSelectionMode = 'BoxWithBorder';\n      this.element.classList.add('e-afenabled');\n    } else {\n      this.element.classList.remove('e-afenabled');\n    }\n  };\n\n  Grid.prototype.setCSSClass = function (oldCSSClass) {\n    if (this.cssClass) {\n      addClass([this.element], this.cssClass.split(' '));\n    }\n\n    if (oldCSSClass) {\n      removeClass([this.element], oldCSSClass.split(' '));\n    }\n  };\n  /**\n   * Called internally if any of the property value changed.\n   *\n   * @param {GridModel} newProp - Defines new properties\n   * @param {GridModel} oldProp - Defines old properties\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.onPropertyChanged = function (newProp, oldProp) {\n    var requireRefresh = false;\n    var requireGridRefresh = false;\n    var freezeRefresh = false;\n    var checkCursor;\n    var args = {\n      requestType: 'refresh'\n    };\n\n    if (this.isDestroyed) {\n      return;\n    }\n\n    this.log('module_missing');\n\n    if (this.isEllipsisTooltip()) {\n      this.toolTipObj.close();\n    }\n\n    var properties = Object.keys(newProp);\n\n    if (properties.indexOf('columns') > -1) {\n      if (this.enableColumnVirtualization) {\n        this.columnModel = [];\n      }\n\n      this.updateColumnObject();\n      requireGridRefresh = true;\n    }\n\n    for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n      var prop = properties_1[_i];\n\n      switch (prop) {\n        case 'allowPaging':\n          this.notify(events.uiUpdate, {\n            module: 'pager',\n            enable: this.allowPaging\n          });\n          requireRefresh = true;\n          break;\n\n        case 'pageSettings':\n          if (this.pageTemplateChange) {\n            this.pageTemplateChange = false;\n            this.notify(events.inBoundModelChanged, {\n              module: 'pager',\n              properties: newProp.pageSettings\n            });\n            break;\n          }\n\n          this.notify(events.inBoundModelChanged, {\n            module: 'pager',\n            properties: newProp.pageSettings\n          });\n\n          if (isNullOrUndefined(newProp.pageSettings.currentPage) && isNullOrUndefined(newProp.pageSettings.pageSize) && isNullOrUndefined(newProp.pageSettings.totalRecordsCount) || !isNullOrUndefined(oldProp.pageSettings) && newProp.pageSettings.currentPage !== oldProp.pageSettings.currentPage && !this.enableColumnVirtualization && !this.enableVirtualization && this.pageSettings.totalRecordsCount <= this.pageSettings.pageSize) {\n            requireRefresh = true;\n          }\n\n          break;\n\n        case 'allowSorting':\n          this.notify(events.uiUpdate, {\n            module: 'sort',\n            enable: this.allowSorting\n          });\n          requireRefresh = true;\n          checkCursor = true;\n          break;\n\n        case 'allowFiltering':\n          this.updateStackedFilter();\n          this.notify(events.uiUpdate, {\n            module: 'filter',\n            enable: this.allowFiltering\n          });\n          requireRefresh = true;\n\n          if (this.filterSettings.type !== 'FilterBar') {\n            this.refreshHeader();\n          }\n\n          break;\n\n        case 'height':\n        case 'width':\n          this.notify(events.uiUpdate, {\n            module: 'scroll',\n            properties: {\n              width: newProp.width,\n              height: newProp.height\n            }\n          });\n          break;\n\n        case 'allowReordering':\n          this.headerModule.refreshUI();\n          checkCursor = true;\n          break;\n\n        case 'allowRowDragAndDrop':\n          this.notify(events.uiUpdate, {\n            module: 'rowDragAndDrop',\n            enable: this.allowRowDragAndDrop\n          });\n          this.renderModule.refresh();\n          this.headerModule.refreshUI();\n          break;\n\n        case 'allowSelection':\n          this.notify(events.uiUpdate, {\n            module: 'selection',\n            enable: this.allowSelection\n          });\n          break;\n\n        case 'cssClass':\n          this.setCSSClass(oldProp.cssClass);\n          break;\n\n        case 'enableAutoFill':\n          if (this.selectionModule) {\n            this.enableBoxSelection();\n            this.selectionModule.updateAutoFillPosition();\n          }\n\n          break;\n\n        case 'rowTemplate':\n          this.rowTemplateFn = templateCompiler(this.rowTemplate);\n          requireRefresh = true;\n          break;\n\n        case 'detailTemplate':\n          this.detailTemplateFn = templateCompiler(this.detailTemplate);\n          requireRefresh = true;\n          break;\n\n        case 'allowGrouping':\n          this.notify(events.uiUpdate, {\n            module: 'group',\n            enable: this.allowGrouping\n          });\n          this.headerModule.refreshUI();\n          requireRefresh = true;\n          checkCursor = true;\n          break;\n\n        case 'enableInfiniteScrolling':\n        case 'childGrid':\n          requireRefresh = true;\n          break;\n\n        case 'toolbar':\n          this.notify(events.uiUpdate, {\n            module: 'toolbar'\n          });\n          break;\n\n        case 'groupSettings':\n          this.notify(events.inBoundModelChanged, {\n            module: 'group',\n            properties: newProp.groupSettings,\n            oldProperties: oldProp.groupSettings\n          });\n          break;\n\n        case 'aggregates':\n          if (!this.aggregates.length && this.allowGrouping && this.groupSettings.columns.length) {\n            requireRefresh = true;\n          }\n\n          this.notify(events.uiUpdate, {\n            module: 'aggregate',\n            properties: newProp\n          });\n          break;\n\n        case 'frozenColumns':\n        case 'frozenRows':\n        case 'enableVirtualization':\n        case 'currencyCode':\n        case 'locale':\n          this.log('frozen_rows_columns');\n          freezeRefresh = true;\n          requireGridRefresh = true;\n          break;\n\n        case 'query':\n          if (!this.getDataModule().isQueryInvokedFromData) {\n            requireRefresh = true;\n          }\n\n          this.getDataModule().isQueryInvokedFromData = false;\n          break;\n\n        default:\n          this.extendedPropertyChange(prop, newProp, requireGridRefresh);\n      }\n    }\n\n    if (checkCursor) {\n      this.updateDefaultCursor();\n    }\n\n    if (requireGridRefresh) {\n      if (freezeRefresh || this.getFrozenColumns() || this.frozenRows) {\n        this.freezeRefresh();\n      } else {\n        this.refresh();\n      }\n    } else if (requireRefresh) {\n      this.notify(events.modelChanged, args);\n      requireRefresh = false;\n      this.maintainSelection(newProp.selectedRowIndex);\n    }\n  };\n\n  Grid.prototype.extendedPropertyChange = function (prop, newProp, requireGridRefresh) {\n    switch (prop) {\n      case 'enableRtl':\n        this.updateRTL();\n\n        if (this.allowPaging) {\n          this.element.querySelector('.e-gridpager').ej2_instances[0].enableRtl = newProp.enableRtl;\n          this.element.querySelector('.e-gridpager').ej2_instances[0].dataBind();\n        }\n\n        if (this.height !== 'auto') {\n          this.scrollModule.removePadding(!newProp.enableRtl);\n          this.scrollModule.setPadding();\n        }\n\n        if (this.toolbar && this.toolbarModule) {\n          this.toolbarModule.getToolbar().ej2_instances[0].enableRtl = newProp.enableRtl;\n          this.toolbarModule.getToolbar().ej2_instances[0].dataBind();\n        }\n\n        if (this.contextMenuItems && this.contextMenuModule) {\n          this.contextMenuModule.getContextMenu().ej2_instances[0].enableRtl = newProp.enableRtl;\n          this.contextMenuModule.getContextMenu().ej2_instances[0].dataBind();\n        }\n\n        if (this.showColumnMenu && this.columnMenuModule) {\n          this.columnMenuModule.getColumnMenu().ej2_instances[0].enableRtl = newProp.enableRtl;\n          this.columnMenuModule.getColumnMenu().ej2_instances[0].dataBind();\n        }\n\n        if (this.filterSettings.type === 'FilterBar' && this.filterSettings.showFilterBarOperator) {\n          this.refreshHeader();\n        }\n\n        this.notify(events.rtlUpdated, {});\n        break;\n\n      case 'enableAltRow':\n        this.renderModule.refresh();\n        break;\n\n      case 'allowResizing':\n        this.headerModule.refreshUI();\n        this.updateResizeLines();\n        break;\n\n      case 'rowHeight':\n        if (this.rowHeight) {\n          addClass([this.element], 'e-grid-min-height');\n        } else {\n          removeClass([this.element], 'e-grid-min-height');\n        }\n\n        this.renderModule.refresh();\n        this.headerModule.refreshUI();\n        break;\n\n      case 'gridLines':\n        this.updateGridLines();\n        break;\n\n      case 'showColumnMenu':\n        this.headerModule.refreshUI();\n        this.notify(events.uiUpdate, {\n          module: 'columnMenu',\n          enable: true\n        });\n        break;\n\n      case 'columnMenuItems':\n        this.notify(events.uiUpdate, {\n          module: 'columnMenu',\n          enable: this.columnMenuItems\n        });\n        break;\n\n      case 'contextMenuItems':\n        this.notify(events.uiUpdate, {\n          module: 'contextMenu',\n          enable: this.contextMenuItems\n        });\n        break;\n\n      case 'showColumnChooser':\n        this.notify(events.uiUpdate, {\n          module: 'columnChooser',\n          enable: this.showColumnChooser\n        });\n        break;\n\n      case 'filterSettings':\n        this.updateStackedFilter();\n        this.notify(events.inBoundModelChanged, {\n          module: 'filter',\n          properties: newProp.filterSettings\n        });\n        break;\n\n      case 'searchSettings':\n        this.notify(events.inBoundModelChanged, {\n          module: 'search',\n          properties: newProp.searchSettings\n        });\n        break;\n\n      case 'sortSettings':\n        this.notify(events.inBoundModelChanged, {\n          module: 'sort'\n        });\n        break;\n\n      case 'selectionSettings':\n        this.notify(events.inBoundModelChanged, {\n          module: 'selection',\n          properties: newProp.selectionSettings\n        });\n        break;\n\n      case 'editSettings':\n        this.notify(events.inBoundModelChanged, {\n          module: 'edit',\n          properties: newProp.editSettings\n        });\n        break;\n\n      case 'allowTextWrap':\n      case 'textWrapSettings':\n        if (this.allowTextWrap) {\n          this.applyTextWrap();\n        } else {\n          this.removeTextWrap();\n        }\n\n        this.notify(events.freezeRender, {\n          case: 'textwrap',\n          isModeChg: prop === 'textWrapSettings'\n        });\n        break;\n\n      case 'dataSource':\n        // eslint-disable-next-line no-case-declarations\n        var pending_1 = this.getDataModule().getState();\n\n        if (Object.getPrototypeOf(newProp).deepWatch) {\n          var pKeyField = this.getPrimaryKeyFieldNames()[0];\n\n          for (var i = 0, props = Object.keys(newProp.dataSource); i < props.length; i++) {\n            this.setRowData(getValue(pKeyField, this.dataSource[props[i]]), this.dataSource[props[i]]);\n          }\n        } else if (pending_1.isPending) {\n          var gResult = !isNullOrUndefined(this.dataSource) ? this.dataSource.result : [];\n          var names = pending_1.group || [];\n\n          for (var i = 0; i < names.length; i++) {\n            gResult = DataUtil.group(gResult, names[i], pending_1.aggregates || []);\n          }\n\n          this.dataSource = {\n            result: gResult,\n            count: this.dataSource.count,\n            aggregates: this.dataSource.aggregates\n          };\n          this.getDataModule().setState({});\n          pending_1.resolver(this.dataSource);\n        } else {\n          this.getDataModule().setState({\n            isDataChanged: false\n          });\n          this.notify(events.dataSourceModified, {});\n\n          if (!requireGridRefresh) {\n            this.renderModule.refresh();\n\n            if (this.isCheckBoxSelection) {\n              this.notify(events.beforeRefreshOnDataChange, {});\n            }\n          }\n        }\n\n        this.scrollRefresh();\n        break;\n\n      case 'enableHover':\n        // eslint-disable-next-line no-case-declarations\n        var action = newProp.enableHover ? addClass : removeClass;\n        action([this.element], 'e-gridhover');\n        break;\n\n      case 'selectedRowIndex':\n        if (!this.isSelectedRowIndexUpdating) {\n          this.selectRow(newProp.selectedRowIndex);\n        }\n\n        this.isSelectedRowIndexUpdating = false;\n        break;\n\n      case 'resizeSettings':\n        this.widthService.setWidthToTable();\n        break;\n\n      case 'enableAdaptiveUI':\n        this.notify(events.setFullScreenDialog, {});\n        break;\n\n      case 'rowRenderingMode':\n        this.enableVerticalRendering();\n        this.notify(events.rowModeChange, {});\n        this.refresh();\n        break;\n\n      case 'enableStickyHeader':\n        this.scrollModule.addStickyListener(newProp.enableStickyHeader);\n        break;\n    }\n  };\n\n  Grid.prototype.maintainSelection = function (index) {\n    var _this = this;\n\n    if (index !== -1) {\n      var fn_1 = function () {\n        _this.selectRow(index);\n\n        _this.off(events.contentReady, fn_1);\n      };\n\n      this.on(events.contentReady, fn_1, this);\n    }\n  };\n  /**\n   * @param {Object} prop - Defines the property\n   * @param {boolean} muteOnChange - Defines the mute on change\n   * @returns {void}\n   * @private\n   */\n\n\n  Grid.prototype.setProperties = function (prop, muteOnChange) {\n    _super.prototype.setProperties.call(this, prop, muteOnChange);\n\n    var filterSettings = 'filterSettings';\n\n    if (prop[filterSettings] && this.filterModule && muteOnChange) {\n      this.filterModule.refreshFilter();\n    }\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n\n\n  Grid.prototype.setTablesCount = function () {\n    var frozenCols = this.getFrozenColumns();\n    var frozenLeft = this.getFrozenLeftColumnsCount();\n    var frozenRight = this.getFrozenRightColumnsCount();\n\n    if (frozenCols && !frozenLeft && !frozenRight) {\n      this.tablesCount = 2;\n    } else if (!frozenCols && (frozenLeft || frozenRight)) {\n      if (frozenLeft && !frozenRight || frozenRight && !frozenLeft) {\n        this.tablesCount = 2;\n      } else if (frozenLeft && frozenRight) {\n        this.tablesCount = 3;\n      }\n    }\n  };\n  /**\n   * @hidden\n   * @returns {number} - Returns the tables count\n   */\n\n\n  Grid.prototype.getTablesCount = function () {\n    return this.tablesCount;\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n\n\n  Grid.prototype.updateDefaultCursor = function () {\n    var headerCells = [].slice.call(this.getHeaderContent().querySelectorAll('.e-headercell:not(.e-stackedheadercell)'));\n    var stdHdrCell = [].slice.call(this.getHeaderContent().getElementsByClassName('e-stackedheadercell'));\n    var cols = this.getColumns();\n\n    if (this.enableColumnVirtualization && this.getFrozenColumns()) {\n      var cells = this.contentModule.getHeaderCells();\n      headerCells = cells.length ? cells : headerCells;\n    }\n\n    for (var i = 0; i < headerCells.length; i++) {\n      var cell = headerCells[i];\n\n      if (this.allowGrouping || this.allowReordering || this.allowSorting) {\n        if (!cols[i].allowReordering || !cols[i].allowSorting || !cols[i].allowGrouping) {\n          cell.classList.add('e-defaultcursor');\n        } else {\n          cell.classList.add('e-mousepointer');\n        }\n      }\n    }\n\n    for (var count = 0; count < stdHdrCell.length; count++) {\n      if (this.allowReordering) {\n        stdHdrCell[count].classList.add('e-mousepointer');\n      }\n    }\n  };\n\n  Grid.prototype.updateColumnModel = function (columns) {\n    for (var i = 0, len = columns.length; i < len; i++) {\n      if (columns[i].columns) {\n        this.updateColumnModel(columns[i].columns);\n      } else {\n        this.columnModel.push(columns[i]);\n      }\n    }\n\n    this.updateColumnLevelFrozen();\n    this.updateFrozenColumns();\n    this.updateLockableColumns();\n  };\n\n  Grid.prototype.updateColumnLevelFrozen = function () {\n    var cols = this.columnModel;\n    var leftCols = [];\n    var rightCols = [];\n    var movableCols = [];\n\n    if (this.frozenLeftCount || this.frozenRightCount) {\n      for (var i = 0, len = cols.length; i < len; i++) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var col = cols[i];\n\n        if (col.freeze === 'Left') {\n          col.freezeTable = literals.frozenLeft;\n          leftCols.push(col);\n        } else if (col.freeze === 'Right') {\n          col.freezeTable = literals.frozenRight;\n          rightCols.push(col);\n        } else {\n          col.freezeTable = 'movable';\n          movableCols.push(col);\n        }\n      }\n\n      this.columnModel = leftCols.concat(movableCols).concat(rightCols);\n    }\n  };\n\n  Grid.prototype.updateFrozenColumns = function () {\n    if (this.frozenLeftCount || this.frozenRightCount) {\n      return;\n    }\n\n    var cols = this.columnModel;\n    var directFrozenCount = this.frozenColumns;\n    var totalFrozenCount = this.getFrozenColumns();\n    var count = 0;\n\n    for (var i = 0, len = cols.length; i < len; i++) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var col = cols[i];\n\n      if (directFrozenCount) {\n        if (i < directFrozenCount) {\n          col.freezeTable = literals.frozenLeft;\n        } else {\n          col.freezeTable = 'movable';\n        }\n      }\n\n      if (col.isFrozen && i >= directFrozenCount) {\n        col.freezeTable = literals.frozenLeft;\n        cols.splice(this.frozenColumns + count, 0, cols.splice(i, 1)[0]);\n        count++;\n      } else if (totalFrozenCount && !directFrozenCount) {\n        col.freezeTable = 'movable';\n      }\n    }\n  };\n\n  Grid.prototype.getFrozenLeftCount = function () {\n    return this.getFrozenColumns() || this.getFrozenLeftColumnsCount();\n  };\n\n  Grid.prototype.isFrozenGrid = function () {\n    return this.getFrozenColumns() !== 0 || this.getFrozenLeftColumnsCount() !== 0 || this.getFrozenRightColumnsCount() !== 0;\n  };\n\n  Grid.prototype.getFrozenMode = function () {\n    return this.frozenName;\n  };\n\n  Grid.prototype.updateLockableColumns = function () {\n    var cols = this.columnModel;\n    var frozenCount = 0;\n    var movableCount = 0;\n    var frozenColumns = this.getFrozenColumns();\n\n    for (var i = 0; i < cols.length; i++) {\n      if (cols[i].lockColumn) {\n        if (i < frozenColumns) {\n          cols.splice(frozenCount, 0, cols.splice(i, 1)[0]);\n          frozenCount++;\n        } else {\n          cols.splice(frozenColumns + movableCount, 0, cols.splice(i, 1)[0]);\n          movableCount++;\n        }\n      }\n    }\n  };\n\n  Grid.prototype.checkLockColumns = function (cols) {\n    for (var i = 0; i < cols.length; i++) {\n      if (cols[i].columns) {\n        this.checkLockColumns(cols[i].columns);\n      } else if (cols[i].lockColumn) {\n        this.lockcolPositionCount++;\n      }\n    }\n  };\n  /**\n   * Gets the columns from the Grid.\n   *\n   * @param {boolean} isRefresh - Defines the boolean whether to refresh\n   * @returns {Column[]} - returns the column\n   */\n\n\n  Grid.prototype.getColumns = function (isRefresh) {\n    var _this = this;\n\n    var inview = this.inViewIndexes.map(function (v) {\n      return v - _this.groupSettings.columns.length;\n    }).filter(function (v) {\n      return v > -1;\n    });\n    var vLen = inview.length;\n\n    if (!this.enableColumnVirtualization || isNullOrUndefined(this.columnModel) || this.columnModel.length === 0 || isRefresh) {\n      this.columnModel = [];\n      this.updateColumnModel(this.columns);\n    }\n\n    var columns = vLen === 0 ? this.columnModel : this.columnModel.slice(inview[0], inview[vLen - 1] + 1);\n\n    if (this.contentModule && this.enableColumnVirtualization && this.isFrozenGrid() && inview.length && inview[0] > 0) {\n      var frozenCols = this.contentModule.ensureFrozenCols(columns);\n      columns = frozenCols;\n    }\n\n    return columns;\n  };\n  /**\n   * @private\n   * @param {string} stackedHeader - Defines the stacked header\n   * @param {Column[]} col - Defines the column\n   * @returns {Column} Returns the Column\n   */\n\n\n  Grid.prototype.getStackedHeaderColumnByHeaderText = function (stackedHeader, col) {\n    for (var i = 0; i < col.length; i++) {\n      var individualColumn = col[i];\n\n      if (individualColumn.field === stackedHeader || individualColumn.headerText === stackedHeader) {\n        this.stackedColumn = individualColumn;\n        break;\n      } else if (individualColumn.columns) {\n        this.getStackedHeaderColumnByHeaderText(stackedHeader, individualColumn.columns);\n      }\n    }\n\n    return this.stackedColumn;\n  };\n  /**\n   * @private\n   * @returns {number[]} Returns the column indexes\n   */\n\n\n  Grid.prototype.getColumnIndexesInView = function () {\n    return this.inViewIndexes;\n  };\n  /**\n   * @private\n   * @returns {Query} - returns the query\n   */\n\n\n  Grid.prototype.getQuery = function () {\n    return this.query;\n  };\n  /**\n   * @private\n   * @returns {object} - returns the locale constants\n   */\n\n\n  Grid.prototype.getLocaleConstants = function () {\n    return this.defaultLocale;\n  };\n  /**\n   * @param {number[]} indexes - specifies the indexes\n   * @returns {void}\n   * @private\n   */\n\n\n  Grid.prototype.setColumnIndexesInView = function (indexes) {\n    this.inViewIndexes = indexes;\n  };\n  /**\n   * Gets the visible columns from the Grid.\n   *\n   * @returns {Column[]} returns the column\n   */\n\n\n  Grid.prototype.getVisibleColumns = function () {\n    return this.getCurrentVisibleColumns();\n  };\n  /**\n   * Gets the header div of the Grid.\n   *\n   * @returns {Element} - Returns the element\n   */\n\n\n  Grid.prototype.getHeaderContent = function () {\n    return this.headerModule.getPanel();\n  };\n  /**\n   * Sets the header div of the Grid to replace the old header.\n   *\n   * @param  {Element} element - Specifies the Grid header.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.setGridHeaderContent = function (element) {\n    this.headerModule.setPanel(element);\n  };\n  /**\n   * Gets the content table of the Grid.\n   *\n   * @returns {Element} - Returns the element\n   */\n\n\n  Grid.prototype.getContentTable = function () {\n    return this.contentModule.getTable();\n  };\n  /**\n   * Sets the content table of the Grid to replace the old content table.\n   *\n   * @param  {Element} element - Specifies the Grid content table.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.setGridContentTable = function (element) {\n    this.contentModule.setTable(element);\n  };\n  /**\n   * Gets the content div of the Grid.\n   *\n   * @returns {Element} Returns the element\n   */\n\n\n  Grid.prototype.getContent = function () {\n    return this.contentModule.getPanel();\n  };\n  /**\n   * Sets the content div of the Grid to replace the old Grid content.\n   *\n   * @param  {Element} element - Specifies the Grid content.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.setGridContent = function (element) {\n    this.contentModule.setPanel(element);\n  };\n  /**\n   * Gets the header table element of the Grid.\n   *\n   * @returns {Element} returns the element\n   */\n\n\n  Grid.prototype.getHeaderTable = function () {\n    return this.headerModule.getTable();\n  };\n  /**\n   * Sets the header table of the Grid to replace the old one.\n   *\n   * @param  {Element} element - Specifies the Grid header table.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.setGridHeaderTable = function (element) {\n    this.headerModule.setTable(element);\n  };\n  /**\n   * Gets the footer div of the Grid.\n   *\n   * @returns {Element} returns the element\n   */\n\n\n  Grid.prototype.getFooterContent = function () {\n    this.footerElement = this.element.getElementsByClassName(literals.gridFooter)[0];\n    return this.footerElement;\n  };\n  /**\n   * Gets the footer table element of the Grid.\n   *\n   * @returns {Element} returns the element\n   */\n\n\n  Grid.prototype.getFooterContentTable = function () {\n    this.footerElement = this.element.getElementsByClassName(literals.gridFooter)[0];\n    return this.footerElement.firstChild.firstChild;\n  };\n  /**\n   * Gets the pager of the Grid.\n   *\n   * @returns {Element} returns the element\n   */\n\n\n  Grid.prototype.getPager = function () {\n    return this.gridPager; //get element from pager\n  };\n  /**\n   * Sets the pager of the Grid to replace the old pager.\n   *\n   * @param  {Element} element - Specifies the Grid pager.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.setGridPager = function (element) {\n    this.gridPager = element;\n  };\n  /**\n   * Gets a row by index.\n   *\n   * @param  {number} index - Specifies the row index.\n   * @returns {Element} returns the element\n   */\n\n\n  Grid.prototype.getRowByIndex = function (index) {\n    return this.contentModule.getRowByIndex(index);\n  };\n  /**\n   * Gets a movable tables row by index.\n   *\n   * @param  {number} index - Specifies the row index.\n   * @returns {Element} returns the element\n   */\n\n\n  Grid.prototype.getMovableRowByIndex = function (index) {\n    return this.contentModule.getMovableRowByIndex(index);\n  };\n  /**\n   * Gets a frozen tables row by index.\n   *\n   * @param  {number} index - Specifies the row index.\n   * @returns {Element} returns the element\n   */\n\n\n  Grid.prototype.getFrozenRowByIndex = function (index) {\n    return this.getFrozenDataRows()[index];\n  };\n  /**\n   * Gets all the data rows of the Grid.\n   *\n   * @returns {Element[]} returns the element\n   */\n\n\n  Grid.prototype.getRows = function () {\n    return this.contentModule.getRowElements();\n  };\n  /**\n   * Gets a frozen right tables row element by index.\n   *\n   * @param  {number} index - Specifies the row index.\n   * @returns {Element} returns the element\n   */\n\n\n  Grid.prototype.getFrozenRightRowByIndex = function (index) {\n    return this.contentModule.getFrozenRightRowByIndex(index);\n  };\n  /**\n   * Get a row information based on cell\n   *\n   * @param {Element | EventTarget} target - specifies the element\n   * @returns {RowInfo} returns the row info\n   */\n\n\n  Grid.prototype.getRowInfo = function (target) {\n    var ele = target;\n    var args = {\n      target: target\n    };\n\n    if (!isNullOrUndefined(target) && isNullOrUndefined(parentsUntil(ele, 'e-detailrowcollapse') && isNullOrUndefined(parentsUntil(ele, 'e-recordplusexpand')))) {\n      var cell = closest(ele, '.' + literals.rowCell);\n\n      if (!cell) {\n        var row = closest(ele, '.' + literals.row);\n\n        if (!isNullOrUndefined(row) && !row.classList.contains('e-addedrow')) {\n          var rowObj = this.getRowObjectFromUID(row.getAttribute('data-uid'));\n          var rowIndex = parseInt(row.getAttribute(literals.ariaRowIndex), 10);\n          args = {\n            row: row,\n            rowData: rowObj.data,\n            rowIndex: rowIndex\n          };\n        }\n\n        return args;\n      }\n\n      var cellIndex = parseInt(cell.getAttribute(literals.ariaColIndex), 10);\n\n      if (!isNullOrUndefined(cell) && !isNaN(cellIndex)) {\n        var row_1 = closest(cell, '.' + literals.row);\n        var rowIndex = parseInt(row_1.getAttribute(literals.ariaRowIndex), 10);\n        var frzCols = this.getFrozenColumns();\n        var tableName = this.columnModel[cellIndex].getFreezeTableName();\n        var rows = this.contentModule.getRows();\n        var index = cellIndex + this.getIndentCount();\n\n        if (this.isFrozenGrid()) {\n          if (tableName === literals.frozenLeft) {\n            rows = this.contentModule.getRows();\n          } else if (tableName === 'movable') {\n            index = cellIndex - frzCols - this.frozenLeftCount;\n            rows = this.contentModule.getMovableRows();\n          } else if (tableName === literals.frozenRight) {\n            index = cellIndex - (this.frozenLeftCount + this.movableCount);\n            rows = this.contentModule.getFrozenRightRows();\n          }\n        }\n\n        var rowsObject = rows.filter(function (r) {\n          return r.uid === row_1.getAttribute('data-uid');\n        });\n        var rowData = {};\n        var column = void 0;\n\n        if (Object.keys(rowsObject).length) {\n          rowData = rowsObject[0].data;\n          column = rowsObject[0].cells[index].column;\n        }\n\n        args = {\n          cell: cell,\n          cellIndex: cellIndex,\n          row: row_1,\n          rowIndex: rowIndex,\n          rowData: rowData,\n          column: column,\n          target: target\n        };\n      }\n    }\n\n    return args;\n  };\n  /**\n   * Gets the Grid's movable content rows from frozen grid.\n   *\n   * @returns {Element[]} returns the element\n   */\n\n\n  Grid.prototype.getMovableRows = function () {\n    return this.contentModule.getMovableRowElements();\n  };\n  /**\n   * Gets the Grid's frozen right content rows from frozen grid.\n   *\n   * @returns {Element[]} returns the element\n   */\n\n\n  Grid.prototype.getFrozenRightRows = function () {\n    return this.contentModule.getFrozenRightRowElements();\n  };\n  /**\n   * Gets all the Grid's data rows.\n   *\n   * @returns {Element[]} returns the element\n   */\n\n\n  Grid.prototype.getDataRows = function () {\n    return this.getAllDataRows();\n  };\n  /**\n   * @param {boolean} includeAdd - specifies includeAdd\n   * @returns {Element[]} returns the element\n   * @hidden\n   */\n\n\n  Grid.prototype.getAllDataRows = function (includeAdd) {\n    if (isNullOrUndefined(this.getContentTable().querySelector(literals.tbody))) {\n      return [];\n    }\n\n    var tbody = this.isFrozenGrid() ? this.getFrozenLeftContentTbody() : this.getContentTable().querySelector(literals.tbody);\n    var rows = [].slice.call(tbody.children);\n\n    if (this.frozenRows) {\n      var hdrTbody = this.isFrozenGrid() ? this.getHeaderContent().querySelector('.' + literals.frozenHeader).querySelector(literals.tbody) : this.getHeaderTable().querySelector(literals.tbody);\n      var freezeRows = [].slice.call(hdrTbody.children);\n      rows = this.addMovableRows(freezeRows, rows);\n    }\n\n    var dataRows = this.generateDataRows(rows, includeAdd);\n    return dataRows;\n  };\n  /**\n   * @param {HTMLElement[]} fRows - Defines the frozen Rows\n   * @param {HTMLElement[]} mrows - Defines the movable Rows\n   * @returns {HTMLElement[]} Returns the element\n   * @hidden\n   */\n\n\n  Grid.prototype.addMovableRows = function (fRows, mrows) {\n    for (var i = 0, len = mrows.length; i < len; i++) {\n      fRows.push(mrows[i]);\n    }\n\n    return fRows;\n  };\n\n  Grid.prototype.generateDataRows = function (rows, includAdd) {\n    var dRows = [];\n\n    for (var i = 0, len = rows.length; i < len; i++) {\n      if (rows[i].classList.contains(literals.row) && (!rows[i].classList.contains('e-hiddenrow') || includAdd)) {\n        if (this.isCollapseStateEnabled()) {\n          dRows[parseInt(rows[i].getAttribute('aria-rowindex'), 10)] = rows[i];\n        } else {\n          dRows.push(rows[i]);\n        }\n      }\n    }\n\n    return dRows;\n  };\n  /**\n   * Gets all the Grid's movable table data rows.\n   *\n   * @returns {Element[]} Returns the element\n   */\n\n\n  Grid.prototype.getMovableDataRows = function () {\n    return this.getAllMovableDataRows();\n  };\n  /**\n   * @param {boolean} includeAdd Defines the include add in boolean\n   * @returns {Element[]} Returns the element\n   * @hidden\n   */\n\n\n  Grid.prototype.getAllMovableDataRows = function (includeAdd) {\n    if (!this.isFrozenGrid()) {\n      return [];\n    }\n\n    var rows = [].slice.call(this.getContent().querySelector('.' + literals.movableContent).querySelector(literals.tbody).children);\n\n    if (this.frozenRows) {\n      var freezeRows = [].slice.call(this.getHeaderContent().querySelector('.' + literals.movableHeader).querySelector(literals.tbody).children);\n      rows = this.addMovableRows(freezeRows, rows);\n    }\n\n    var dataRows = this.generateDataRows(rows, includeAdd);\n    return dataRows;\n  };\n  /**\n   * Gets all the Grid's frozen table data rows.\n   *\n   * @returns {Element[]} returns the element\n   */\n\n\n  Grid.prototype.getFrozenDataRows = function () {\n    return this.getAllFrozenDataRows();\n  };\n  /**\n   * @param {boolean} includeAdd Defines the include add in boolean\n   * @returns {Element[]} Returns the element\n   * @hidden\n   */\n\n\n  Grid.prototype.getAllFrozenDataRows = function (includeAdd) {\n    var rows = [].slice.call(this.getContent().querySelector('.' + literals.frozenContent).querySelector(literals.tbody).children);\n\n    if (this.frozenRows) {\n      var freezeRows = [].slice.call(this.getHeaderContent().querySelector('.' + literals.frozenHeader).querySelector(literals.tbody).children);\n      rows = this.addMovableRows(freezeRows, rows);\n    }\n\n    var dataRows = this.generateDataRows(rows, includeAdd);\n    return dataRows;\n  };\n  /**\n   * Gets all the Grid's frozen right table data rows.\n   *\n   * @returns {Element[]} Returns the Element\n   */\n\n\n  Grid.prototype.getFrozenRightDataRows = function () {\n    return this.getAllFrozenRightDataRows();\n  };\n  /**\n   * @param {boolean} includeAdd Defines the include add in boolean\n   * @returns {Element[]} Returns the element\n   * @hidden\n   */\n\n\n  Grid.prototype.getAllFrozenRightDataRows = function (includeAdd) {\n    if (this.getFrozenMode() !== 'Right' && this.getFrozenMode() !== 'Left-Right') {\n      return [];\n    }\n\n    var rows = [].slice.call(this.getContent().querySelector('.e-frozen-right-content').querySelector(literals.tbody).children);\n\n    if (this.frozenRows) {\n      var freezeRows = [].slice.call(this.getHeaderContent().querySelector('.e-frozen-right-header').querySelector(literals.tbody).children);\n      rows = this.addMovableRows(freezeRows, rows);\n    }\n\n    var dataRows = this.generateDataRows(rows, includeAdd);\n    return dataRows;\n  };\n  /**\n   * Updates particular cell value based on the given primary key value.\n   * > Primary key column must be specified using `columns.isPrimaryKey` property.\n   *\n   * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n   * @param {string } field - Specifies the field name which you want to update.\n   * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.setCellValue = function (key, field, value) {\n    var cells = 'cells';\n    var rowData = 'data';\n    var rowIdx = 'index';\n    var rowuID = 'uid';\n    var isRight = this.getFrozenMode() === 'Right';\n    var pkName = this.getPrimaryKeyFieldNames()[0];\n    var cell = new CellRenderer(this, this.serviceLocator);\n    var fieldIdx = this.getColumnIndexByField(field);\n    var col = this.getColumnByField(field);\n    var rowObjects = col.getFreezeTableName() === 'movable' ? this.contentModule.getMovableRows() : col.getFreezeTableName() === 'frozen-right' ? this.getFrozenRightRowsObject() : this.contentModule.getRows();\n    var selectedRow = rowObjects.filter(function (r) {\n      return getValue(pkName, r.data) === key;\n    })[0];\n    var tr = selectedRow ? this.element.querySelector('[data-uid=' + selectedRow[rowuID] + ']') : null;\n\n    if (!isNullOrUndefined(tr)) {\n      setValue(field, value, selectedRow[rowData]);\n      var left = this.getFrozenLeftColumnsCount() || this.getFrozenColumns();\n      var movable = this.getMovableColumnsCount();\n\n      if (this.isRowDragable() && !isRight) {\n        left++;\n      }\n\n      var frIdx = left + movable;\n      var td = this.getCellFromIndex(selectedRow[rowIdx], fieldIdx);\n\n      if (!isNullOrUndefined(td)) {\n        var Idx = col.getFreezeTableName() === 'movable' ? left : col.getFreezeTableName() === 'frozen-right' ? frIdx : 0;\n\n        if (this.groupSettings.columns.length) {\n          fieldIdx = fieldIdx + this.groupSettings.columns.length;\n        }\n\n        if (this.childGrid || this.detailTemplate) {\n          fieldIdx++;\n        }\n\n        if (this.isRowDragable() && !isRight) {\n          fieldIdx++;\n        }\n\n        var sRow = selectedRow[cells][fieldIdx - Idx];\n        cell.refreshTD(td, sRow, selectedRow[rowData], {\n          index: selectedRow[rowIdx]\n        });\n\n        if (this.aggregates.length > 0) {\n          this.notify(events.refreshFooterRenderer, {});\n\n          if (this.groupSettings.columns.length > 0) {\n            this.notify(events.groupAggregates, {});\n          }\n        }\n        /* tslint:disable:no-string-literal */\n\n\n        if (!isNullOrUndefined(selectedRow) && !isNullOrUndefined(selectedRow['changes'])) {\n          selectedRow['changes'][field] = value;\n        }\n        /* tslint:disable:no-string-literal */\n\n\n        this.trigger(events.queryCellInfo, {\n          cell: td,\n          column: col,\n          data: selectedRow[rowData]\n        });\n      }\n    } else {\n      return;\n    }\n  };\n  /**\n   * @param {string} columnUid - Defines column uid\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.refreshReactColumnTemplateByUid = function (columnUid) {\n    var _this = this;\n\n    if (this.isReact) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.clearTemplate(['columnTemplate'], undefined, function () {\n        var cells = 'cells';\n        var rowIdx = 'index';\n\n        var rows = _this.getDataRows();\n\n        var indent = _this.getIndentCount();\n\n        var cellIndex = _this.getNormalizedColumnIndex(columnUid);\n\n        for (var j = 0; j < rows.length; j++) {\n          var rowsObj = _this.getRowObjectFromUID(rows[j].getAttribute('data-uid'));\n\n          if (rowsObj && rowsObj.isDataRow && !isNullOrUndefined(rowsObj.index)) {\n            var cell = rowsObj[cells][cellIndex];\n            var cellRenderer = new CellRenderer(_this, _this.serviceLocator);\n\n            var td = _this.getCellFromIndex(j, cellIndex - indent);\n\n            cellRenderer.refreshTD(td, cell, rowsObj.data, {\n              index: rowsObj[rowIdx]\n            });\n          }\n        }\n      });\n    }\n  };\n  /**\n   * @param {string} columnUid - Defines column uid\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.refreshReactHeaderTemplateByUid = function (columnUid) {\n    if (this.isReact) {\n      var cells = 'cells';\n      var rowsObj = this.headerModule.rows;\n      var cellIndex = this.getNormalizedColumnIndex(columnUid);\n\n      for (var j = 0; j < rowsObj.length; j++) {\n        var cell = rowsObj[j][cells][cellIndex];\n\n        if (cell && cell.column.uid === columnUid) {\n          var headerCellRenderer = new HeaderCellRenderer(this, this.serviceLocator);\n          var td = parentsUntil(this.element.querySelectorAll('[e-mappinguid=' + columnUid + ']')[0], 'e-templatecell');\n          headerCellRenderer.refresh(cell, td);\n        }\n      }\n    }\n  };\n  /**\n   * Updates and refresh the particular row values based on the given primary key value.\n   * > Primary key column must be specified using `columns.isPrimaryKey` property.\n   *\n   * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n   * @param {Object} rowData - To update new data for the particular row.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.setRowData = function (key, rowData) {\n    var rowuID = 'uid';\n    var rowObjects = this.contentModule.getRows();\n    var pkName = this.getPrimaryKeyFieldNames()[0];\n    var rowRenderer = new RowRenderer(this.serviceLocator, null, this);\n\n    if (this.groupSettings.columns.length > 0 && this.aggregates.length > 0) {\n      rowObjects = rowObjects.filter(function (row) {\n        return row.isDataRow;\n      });\n    }\n\n    var selectedRow = rowObjects.filter(function (r) {\n      return getValue(pkName, r.data) === key;\n    })[0];\n\n    if (!isNullOrUndefined(selectedRow) && this.element.querySelectorAll('[data-uid=' + selectedRow[rowuID] + ']').length) {\n      selectedRow.changes = rowData;\n      refreshForeignData(selectedRow, this.getForeignKeyColumns(), selectedRow.changes);\n      rowRenderer.refresh(selectedRow, this.getColumns(), true);\n\n      if (this.aggregates.length > 0) {\n        this.notify(events.refreshFooterRenderer, {});\n\n        if (this.groupSettings.columns.length > 0) {\n          this.notify(events.groupAggregates, {});\n        }\n      }\n    } else {\n      return;\n    }\n  };\n  /**\n   * Gets a cell by row and column index.\n   *\n   * @param  {number} rowIndex - Specifies the row index.\n   * @param  {number} columnIndex - Specifies the column index.\n   * @returns {Element} Returns the Element\n   */\n\n\n  Grid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n    var col = this.getColumnByIndex(columnIndex);\n    return getCellByColAndRowIndex(this, col, rowIndex, columnIndex);\n  };\n  /**\n   * Gets a movable table cell by row and column index.\n   *\n   * @param  {number} rowIndex - Specifies the row index.\n   * @param  {number} columnIndex - Specifies the column index.\n   * @returns {Element} Returns the Element\n   */\n\n\n  Grid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n    if (this.frozenName === 'Left-Right' && columnIndex >= this.movableCount) {\n      return undefined;\n    }\n\n    var index = this.getFrozenColumns() || this.getFrozenLeftColumnsCount();\n    return this.getMovableDataRows()[rowIndex] && this.getMovableDataRows()[rowIndex].getElementsByClassName(literals.rowCell)[columnIndex - index];\n  };\n  /**\n   * Gets a frozen right table cell by row and column index.\n   *\n   * @param  {number} rowIndex - Specifies the row index.\n   * @param  {number} columnIndex - Specifies the column index.\n   * @returns {Element} Returns the Element\n   */\n\n\n  Grid.prototype.getFrozenRightCellFromIndex = function (rowIndex, columnIndex) {\n    var index = this.getFrozenLeftColumnsCount() + this.getMovableColumnsCount();\n    var rows = this.getFrozenRightDataRows();\n    return rows[rowIndex] && rows[rowIndex].getElementsByClassName(literals.rowCell)[columnIndex - index];\n  };\n  /**\n   * Gets a column header by column index.\n   *\n   * @param  {number} index - Specifies the column index.\n   * @returns {Element} Returns the Element\n   */\n\n\n  Grid.prototype.getColumnHeaderByIndex = function (index) {\n    return this.getHeaderTable().getElementsByClassName('e-headercell')[index];\n  };\n  /**\n   * Gets a movable column header by column index.\n   *\n   * @param  {number} index - Specifies the column index.\n   * @returns {Element} Returns the Element\n   */\n\n\n  Grid.prototype.getMovableColumnHeaderByIndex = function (index) {\n    var left = this.getFrozenColumns() || this.getFrozenLeftColumnsCount();\n    return this.getMovableVirtualHeader().getElementsByClassName('e-headercell')[index - left];\n  };\n  /**\n   * Gets a frozen right column header by column index.\n   *\n   * @param  {number} index - Specifies the column index.\n   * @returns {Element} Returns the Element\n   */\n\n\n  Grid.prototype.getFrozenRightColumnHeaderByIndex = function (index) {\n    var left = this.getFrozenLeftColumnsCount() + this.getMovableColumnsCount();\n    return this.getFrozenRightHeader().getElementsByClassName('e-headercell')[index - left];\n  };\n  /**\n   * Gets a frozen left column header by column index.\n   *\n   * @param  {number} index - Specifies the column index.\n   * @returns {Element} Returns the Element\n   */\n\n\n  Grid.prototype.getFrozenLeftColumnHeaderByIndex = function (index) {\n    return this.getFrozenVirtualHeader().getElementsByClassName('e-headercell')[index];\n  };\n  /**\n   * @param {string} uid - Defines the uid\n   * @param {boolean} isMovable - Defines isMovable\n   * @param {boolean} isFrozenRight - Defines isFrozenRight\n   * @returns {Row<Column>} Returns the row object\n   * @hidden\n   */\n\n\n  Grid.prototype.getRowObjectFromUID = function (uid, isMovable, isFrozenRight) {\n    var rows = this.contentModule.getRows();\n    var row = this.rowObject(rows, uid);\n\n    if (this.isFrozenGrid()) {\n      if (!row || isMovable || isFrozenRight) {\n        row = this.rowObject(this.contentModule.getMovableRows(), uid);\n\n        if (!row && this.getFrozenMode() === 'Left-Right' || isFrozenRight) {\n          row = this.rowObject(this.contentModule.getFrozenRightRows(), uid);\n        }\n\n        return row;\n      }\n    }\n\n    if (isNullOrUndefined(row) && this.enableVirtualization && this.groupSettings.columns.length > 0) {\n      row = this.rowObject(this.vRows, uid);\n      return row;\n    }\n\n    return row;\n  };\n\n  Grid.prototype.rowObject = function (rows, uid) {\n    for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n      var row = rows_1[_i];\n\n      if (row.uid === uid) {\n        return row;\n      }\n    }\n\n    return null;\n  };\n  /**\n   * @hidden\n   * @returns {Row<Column>[]} Returns the Row object\n   */\n\n\n  Grid.prototype.getRowsObject = function () {\n    return this.contentModule.getRows();\n  };\n  /**\n   * @hidden\n   * @returns {Row<Column>[]} Returns the Row object\n   */\n\n\n  Grid.prototype.getMovableRowsObject = function () {\n    var rows = [];\n\n    if (this.isFrozenGrid()) {\n      rows = this.contentModule.getMovableRows();\n    }\n\n    return rows;\n  };\n  /**\n   * @hidden\n   * @returns {Row<Column>[]} Returns the Row object\n   */\n\n\n  Grid.prototype.getFrozenRightRowsObject = function () {\n    var rows = [];\n\n    if (this.getFrozenMode() === 'Right' || this.getFrozenMode() === 'Left-Right') {\n      rows = this.contentModule.getFrozenRightRows();\n    }\n\n    return rows;\n  };\n  /**\n   * Gets a column header by column name.\n   *\n   * @param  {string} field - Specifies the column name.\n   * @returns {Element} - Returns the element\n   */\n\n\n  Grid.prototype.getColumnHeaderByField = function (field) {\n    var column = this.getColumnByField(field);\n    return column ? this.getColumnHeaderByUid(column.uid) : undefined;\n  };\n  /**\n   * Gets a column header by UID.\n   *\n   * @param {string} uid - Specifies the column uid.\n   * @returns {Element} - Returns the element\n   */\n\n\n  Grid.prototype.getColumnHeaderByUid = function (uid) {\n    var element = this.getHeaderContent().querySelector('[e-mappinguid=' + uid + ']');\n    return element ? element.parentElement : undefined;\n  };\n  /**\n   * @hidden\n   * @param {number} index - Defines the index\n   * @returns {Column} Returns the column\n   */\n\n\n  Grid.prototype.getColumnByIndex = function (index) {\n    var column;\n    this.getColumns().some(function (col, i) {\n      column = col;\n      return i === index;\n    });\n    return column;\n  };\n  /**\n   * Gets a Column by column name.\n   *\n   * @param  {string} field - Specifies the column name.\n   * @returns {Column} Returns the column\n   */\n\n\n  Grid.prototype.getColumnByField = function (field) {\n    return iterateArrayOrObject(this.getColumns(), function (item) {\n      if (item.field === field) {\n        return item;\n      }\n\n      return undefined;\n    })[0];\n  };\n  /**\n   * Gets a column index by column name.\n   *\n   * @param  {string} field - Specifies the column name.\n   * @returns {number} Returns the index by field\n   */\n\n\n  Grid.prototype.getColumnIndexByField = function (field) {\n    var cols = this.getColumns();\n\n    for (var i = 0; i < cols.length; i++) {\n      if (cols[i].field === field) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n  /**\n   * Gets a column by UID.\n   *\n   * @param  {string} uid - Specifies the column UID.\n   * @returns {Column} Returns the column\n   */\n\n\n  Grid.prototype.getColumnByUid = function (uid) {\n    return iterateArrayOrObject(this.getColumns().concat(this.getStackedColumns(this.columns)), function (item) {\n      if (item.uid === uid) {\n        return item;\n      }\n\n      return undefined;\n    })[0];\n  };\n  /**\n   * @param {Column[]} columns - Defines the columns\n   * @param {Column[]} stackedColumn - Defines the stacked columns\n   * @returns {Column[]} Returns the columns\n   * @hidden\n   */\n\n\n  Grid.prototype.getStackedColumns = function (columns, stackedColumn) {\n    if (stackedColumn === void 0) {\n      stackedColumn = [];\n    }\n\n    for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n      var column = columns_1[_i];\n\n      if (column.columns) {\n        stackedColumn.push(column);\n        this.getStackedColumns(column.columns, stackedColumn);\n      }\n    }\n\n    return stackedColumn;\n  };\n  /**\n   * Gets a column index by UID.\n   *\n   * @param  {string} uid - Specifies the column UID.\n   * @returns {number} Returns the column by index\n   */\n\n\n  Grid.prototype.getColumnIndexByUid = function (uid) {\n    var index = iterateArrayOrObject(this.getColumns(), function (item, index) {\n      if (item.uid === uid) {\n        return index;\n      }\n\n      return undefined;\n    })[0];\n    return !isNullOrUndefined(index) ? index : -1;\n  };\n  /**\n   * Gets UID by column name.\n   *\n   * @param  {string} field - Specifies the column name.\n   * @returns {string} Returns the column by field\n   */\n\n\n  Grid.prototype.getUidByColumnField = function (field) {\n    return iterateArrayOrObject(this.getColumns(), function (item) {\n      if (item.field === field) {\n        return item.uid;\n      }\n\n      return undefined;\n    })[0];\n  };\n  /**\n   * Gets column index by column uid value.\n   *\n   * @private\n   * @param  {string} uid - Specifies the column uid.\n   * @returns {number} Returns the column by field\n   */\n\n\n  Grid.prototype.getNormalizedColumnIndex = function (uid) {\n    var index = this.getColumnIndexByUid(uid);\n    return index + this.getIndentCount();\n  };\n  /**\n   * Gets indent cell count.\n   *\n   * @private\n   * @returns {number} Returns the indent count\n   */\n\n\n  Grid.prototype.getIndentCount = function () {\n    var index = 0;\n\n    if (this.allowGrouping) {\n      index += this.groupSettings.columns.length;\n    }\n\n    if (this.isDetail()) {\n      index++;\n    }\n\n    if (this.isRowDragable() && isNullOrUndefined(this.rowDropSettings.targetID)) {\n      index++;\n    }\n    /**\n     * TODO: index normalization based on the stacked header, grouping and detailTemplate\n     * and frozen should be handled here\n     */\n\n\n    return index;\n  };\n  /**\n   * Gets the collection of column fields.\n   *\n   * @returns {string[]} Returns the Field names\n   */\n\n\n  Grid.prototype.getColumnFieldNames = function () {\n    var columnNames = [];\n    var column;\n\n    for (var i = 0, len = this.getColumns().length; i < len; i++) {\n      column = this.getColumns()[i];\n\n      if (column.visible) {\n        columnNames.push(column.field);\n      }\n    }\n\n    return columnNames;\n  };\n  /**\n   * Gets a compiled row template.\n   *\n   * @returns {Function} Returns the row TEmplate\n   * @private\n   */\n\n\n  Grid.prototype.getRowTemplate = function () {\n    return this.rowTemplateFn;\n  };\n  /**\n   * Gets a compiled detail row template.\n   *\n   * @private\n   * @returns {Function} Returns the Detail template\n   */\n\n\n  Grid.prototype.getDetailTemplate = function () {\n    return this.detailTemplateFn;\n  };\n  /**\n   * Gets a compiled detail row template.\n   *\n   * @private\n   * @returns {Function}Returns the Edit template\n   */\n\n\n  Grid.prototype.getEditTemplate = function () {\n    return this.editTemplateFn;\n  };\n  /**\n   * Gets a compiled dialog edit header template.\n   *\n   * @private\n   * @returns {Function} returns template function\n   */\n\n\n  Grid.prototype.getEditHeaderTemplate = function () {\n    return this.editHeaderTemplateFn;\n  };\n  /**\n   * Gets a compiled dialog edit footer template.\n   *\n   * @private\n   * @returns {Function} Returns the Footer template\n   */\n\n\n  Grid.prototype.getEditFooterTemplate = function () {\n    return this.editFooterTemplateFn;\n  };\n  /**\n   * Get the names of the primary key columns of the Grid.\n   *\n   * @returns {string[]} Returns the field names\n   */\n\n\n  Grid.prototype.getPrimaryKeyFieldNames = function () {\n    var keys = [];\n\n    for (var k = 0; k < this.columnModel.length; k++) {\n      if (this.columnModel[k].isPrimaryKey) {\n        keys.push(this.columnModel[k].field);\n      }\n    }\n\n    return keys;\n  };\n  /**\n   * Refreshes the Grid header and content.\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.refresh = function () {\n    if (!this.isDestroyed) {\n      this.isManualRefresh = true;\n      this.headerModule.refreshUI();\n      this.updateStackedFilter();\n      this.renderModule.refresh();\n    }\n  };\n  /**\n   * Refreshes the Grid header.\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.refreshHeader = function () {\n    this.headerModule.refreshUI();\n  };\n  /**\n   * Gets the collection of selected rows.\n   *\n   * @returns {Element[]} Returns the element\n   */\n\n\n  Grid.prototype.getSelectedRows = function () {\n    return this.selectionModule ? this.selectionModule.selectedRecords : [];\n  };\n  /**\n   * Gets the collection of selected row indexes.\n   *\n   * @returns {number[]} Returns the Selected row indexes\n   */\n\n\n  Grid.prototype.getSelectedRowIndexes = function () {\n    return this.selectionModule ? this.selectionModule.selectedRowIndexes : [];\n  };\n  /**\n   * Gets the collection of selected row and cell indexes.\n   *\n   * @returns {number[]} Returns the Selected row cell indexes\n   */\n\n\n  Grid.prototype.getSelectedRowCellIndexes = function () {\n    return this.selectionModule ? this.selectionModule.selectedRowCellIndexes : [];\n  };\n  /**\n   * Gets the collection of selected records.\n   *\n   * @returns {Object[]} Returns the selected records\n   * @isGenericType true\n   */\n\n\n  Grid.prototype.getSelectedRecords = function () {\n    return this.selectionModule ? this.selectionModule.getSelectedRecords() : [];\n  };\n  /**\n   * Gets the collection of selected columns uid.\n   *\n   * @returns {string[]} Returns the selected column uid\n   * @isGenericType true\n   */\n\n\n  Grid.prototype.getSelectedColumnsUid = function () {\n    var _this = this;\n\n    var uid = [];\n\n    if (this.selectionModule) {\n      this.selectionModule.selectedColumnsIndexes.filter(function (i) {\n        return uid.push(_this.getColumns()[i].uid);\n      });\n    }\n\n    return uid;\n  };\n  /**\n   * Gets the data module.\n   *\n   * @returns {Data} Returns the data\n   */\n\n\n  Grid.prototype.getDataModule = function () {\n    return this.renderModule.data;\n  };\n  /**\n   * Shows a column by its column name.\n   *\n   * @param  {string|string[]} keys - Defines a single or collection of column names.\n   * @param  {string} showBy - Defines the column key either as field name or header text.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.showColumns = function (keys, showBy) {\n    showBy = showBy ? showBy : 'headerText';\n    this.showHider.show(keys, showBy);\n  };\n  /**\n   * Hides a column by column name.\n   *\n   * @param  {string|string[]} keys - Defines a single or collection of column names.\n   * @param  {string} hideBy - Defines the column key either as field name or header text.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.hideColumns = function (keys, hideBy) {\n    hideBy = hideBy ? hideBy : 'headerText';\n    this.showHider.hide(keys, hideBy);\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the Frozen column\n   */\n\n\n  Grid.prototype.getFrozenColumns = function () {\n    return this.frozenColumns + this.getFrozenCount(this.columns, 0, 0);\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the Frozen Right column count\n   */\n\n\n  Grid.prototype.getFrozenRightColumnsCount = function () {\n    return this.frozenRightCount;\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the Frozen Left column\n   */\n\n\n  Grid.prototype.getFrozenLeftColumnsCount = function () {\n    return this.frozenLeftCount;\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the movable column count\n   */\n\n\n  Grid.prototype.getMovableColumnsCount = function () {\n    return this.movableCount;\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n\n\n  Grid.prototype.setFrozenCount = function () {\n    this.frozenLeftCount = this.frozenRightCount = this.movableCount = 0;\n    this.visibleFrozenLeft = this.visibleFrozenRight = this.visibleMovable = 0;\n    this.frozenLeftColumns = [];\n    this.frozenRightColumns = [];\n    this.movableColumns = [];\n    this.splitFrozenCount(this.columns);\n\n    if (this.frozenColumns && (this.frozenLeftCount || this.frozenRightCount)) {\n      this.setProperties({\n        frozenColumns: 0\n      }, true);\n    }\n\n    this.setTablesCount();\n\n    if (this.frozenLeftCount && !this.frozenRightCount) {\n      this.frozenName = 'Left';\n    } else if (this.frozenRightCount && !this.frozenLeftCount) {\n      this.frozenName = 'Right';\n    } else if (this.frozenLeftCount && this.frozenRightCount) {\n      this.frozenName = 'Left-Right';\n    } else if (this.frozenColumns && this.frozenRows) {\n      this.frozenName = 'Left';\n    } else {\n      this.frozenName = undefined;\n    }\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the visible Frozen left count\n   */\n\n\n  Grid.prototype.getVisibleFrozenLeftCount = function () {\n    return this.visibleFrozenLeft;\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the visible Frozen Right count\n   */\n\n\n  Grid.prototype.getVisibleFrozenRightCount = function () {\n    return this.visibleFrozenRight;\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the visible movable count\n   */\n\n\n  Grid.prototype.getVisibleMovableCount = function () {\n    return this.visibleMovable;\n  };\n  /**\n   * @hidden\n   * @returns {Column[]} Returns the column\n   */\n\n\n  Grid.prototype.getFrozenRightColumns = function () {\n    return this.frozenRightColumns;\n  };\n  /**\n   * @hidden\n   * @returns {Column[]} Returns the column\n   */\n\n\n  Grid.prototype.getFrozenLeftColumns = function () {\n    return this.frozenLeftColumns;\n  };\n  /**\n   * @hidden\n   * @returns {Column[]} Returns the column\n   */\n\n\n  Grid.prototype.getMovableColumns = function () {\n    return this.movableColumns;\n  };\n\n  Grid.prototype.splitFrozenCount = function (columns) {\n    for (var i = 0; i < columns.length; i++) {\n      if (columns[i].columns) {\n        this.splitFrozenCount(columns[i].columns);\n      } else {\n        if (columns[i].freeze === 'Right') {\n          if (columns[i].visible !== false) {\n            this.visibleFrozenRight++;\n          }\n\n          this.frozenRightColumns.push(columns[i]);\n          this.frozenRightCount++;\n        } else if (columns[i].freeze === 'Left') {\n          if (columns[i].visible !== false) {\n            this.visibleFrozenLeft++;\n          }\n\n          this.frozenLeftColumns.push(columns[i]);\n          this.frozenLeftCount++;\n        } else {\n          if (columns[i].visible !== false) {\n            this.visibleMovable++;\n          }\n\n          this.movableColumns.push(columns[i]);\n          this.movableCount++;\n        }\n      }\n    }\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the visible frozen columns count\n   */\n\n\n  Grid.prototype.getVisibleFrozenColumns = function () {\n    return this.getVisibleFrozenColumnsCount() + this.getVisibleFrozenCount(this.columns, 0);\n  };\n  /**\n   * Get the current Filter operator and field.\n   *\n   * @returns {FilterUI} Returns the filter UI\n   */\n\n\n  Grid.prototype.getFilterUIInfo = function () {\n    return this.filterModule ? this.filterModule.getFilterUIInfo() : {};\n  };\n\n  Grid.prototype.getVisibleFrozenColumnsCount = function () {\n    var visibleFrozenColumns = 0;\n    var columns = this.columnModel;\n\n    for (var i = 0; i < this.frozenColumns; i++) {\n      if (columns[i].visible) {\n        visibleFrozenColumns++;\n      }\n    }\n\n    if (this.frozenLeftCount || this.frozenRightCount) {\n      for (var i = 0; i < columns.length; i++) {\n        if (columns[i].visible && (columns[i].freeze === 'Left' || columns[i].freeze === 'Right')) {\n          visibleFrozenColumns++;\n        }\n      }\n    }\n\n    return visibleFrozenColumns;\n  };\n\n  Grid.prototype.getVisibleFrozenCount = function (cols, cnt) {\n    if (!this.frozenLeftCount && !this.frozenRightCount) {\n      for (var i = 0, len = cols.length; i < len; i++) {\n        if (cols[i].columns) {\n          cnt = this.getVisibleFrozenCount(cols[i].columns, cnt);\n        } else {\n          if (cols[i].isFrozen && cols[i].visible) {\n            cnt++;\n          }\n        }\n      }\n    }\n\n    return cnt;\n  };\n\n  Grid.prototype.getFrozenCount = function (cols, cnt, index) {\n    for (var i = 0, len = cols.length; i < len; i++) {\n      if (cols[i].columns) {\n        cnt = this.getFrozenCount(cols[i].columns, cnt, index);\n      } else {\n        if (cols[i].isFrozen && index > this.frozenColumns - 1) {\n          cnt++;\n        }\n\n        index++;\n      }\n    }\n\n    return cnt;\n  };\n  /**\n   * Navigates to the specified target page.\n   *\n   * @param  {number} pageNo - Defines the page number to navigate.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.goToPage = function (pageNo) {\n    if (this.pagerModule) {\n      this.pagerModule.goToPage(pageNo);\n    }\n  };\n  /**\n   * Defines the text of external message.\n   *\n   * @param  {string} message - Defines the message to update.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.updateExternalMessage = function (message) {\n    if (this.pagerModule) {\n      this.pagerModule.updateExternalMessage(message);\n    }\n  };\n  /**\n   * Sorts a column with the given options.\n   *\n   * @param {string} columnName - Defines the column name to be sorted.\n   * @param {SortDirection} direction - Defines the direction of sorting field.\n   * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n    if (this.sortModule) {\n      this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    }\n  };\n  /**\n   * Clears all the sorted columns of the Grid.\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.clearSorting = function () {\n    if (this.sortModule) {\n      this.sortModule.clearSorting();\n    }\n  };\n  /**\n   * Remove sorted column by field name.\n   *\n   * @param {string} field - Defines the column field name to remove sort.\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.removeSortColumn = function (field) {\n    if (this.sortModule) {\n      this.sortModule.removeSortColumn(field);\n    }\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n\n\n  Grid.prototype.clearGridActions = function () {\n    this.setProperties({\n      sortSettings: {\n        columns: []\n      }\n    }, true);\n    this.setProperties({\n      filterSettings: {\n        columns: []\n      }\n    }, true);\n    this.setProperties({\n      searchSettings: {\n        key: ''\n      }\n    }, true);\n\n    if (this.allowGrouping) {\n      this.setProperties({\n        groupSettings: {\n          columns: []\n        }\n      }, false);\n    } else {\n      this.freezeRefresh();\n    }\n  };\n  /**\n   * Filters grid row by column name with the given options.\n   *\n   * @param  {string} fieldName - Defines the field name of the column.\n   * @param  {string} filterOperator - Defines the operator to filter records.\n   * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n   * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n   * @param  {boolean} matchCase - If match case is set to true, the grid filters the records with exact match. if false, it filters case\n   * insensitive records (uppercase and lowercase letters treated the same).\n   * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n   * then filter ignores the diacritic characters or accents while filtering.\n   * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n   * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n    if (this.filterModule) {\n      this.filterModule.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    }\n  };\n  /**\n   * Clears all the filtered rows of the Grid.\n   *\n   * @param {string[]} fields - Defines the Fields\n   * @returns {void}\n   */\n\n\n  Grid.prototype.clearFiltering = function (fields) {\n    if (this.filterModule) {\n      this.filterModule.clearFiltering(fields);\n    }\n  };\n  /**\n   * Removes filtered column by field name.\n   *\n   * @param  {string} field - Defines column field name to remove filter.\n   * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n    if (this.filterModule) {\n      this.filterModule.removeFilteredColsByField(field, isClearFilterBar);\n    }\n  };\n  /**\n   * Selects a row by given index.\n   *\n   * @param  {number} index - Defines the row index.\n   * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.selectRow = function (index, isToggle) {\n    if (this.selectionModule) {\n      this.selectionModule.selectRow(index, isToggle);\n    }\n  };\n  /**\n   * Selects a collection of rows by indexes.\n   *\n   * @param  {number[]} rowIndexes - Specifies the row indexes.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.selectRows = function (rowIndexes) {\n    if (this.selectionModule) {\n      this.selectionModule.selectRows(rowIndexes);\n    }\n  };\n  /**\n   * Deselects the current selected rows and cells.\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.clearSelection = function () {\n    if (this.selectionModule) {\n      this.selectionModule.clearSelection();\n    }\n  };\n  /**\n   * Selects a cell by the given index.\n   *\n   * @param  {IIndex} cellIndex - Defines the row and column indexes.\n   * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.selectCell = function (cellIndex, isToggle) {\n    if (this.selectionModule) {\n      this.selectionModule.selectCell(cellIndex, isToggle);\n    }\n  };\n  /**\n   * Selects a range of cells from start and end indexes.\n   *\n   * @param  {IIndex} startIndex - Specifies the row and column's start index.\n   * @param  {IIndex} endIndex - Specifies the row and column's end index.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.selectCellsByRange = function (startIndex, endIndex) {\n    this.selectionModule.selectCellsByRange(startIndex, endIndex);\n  };\n  /**\n   * Searches Grid records using the given key.\n   * You can customize the default search option by using the\n   * [`searchSettings`](./#searchsettings/).\n   *\n   * @param  {string} searchString - Defines the key.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.search = function (searchString) {\n    if (this.searchModule) {\n      this.searchModule.search(searchString);\n    }\n  };\n  /**\n   * By default, prints all the pages of the Grid and hides the pager.\n   * > You can customize print options using the\n   * [`printMode`](./#printmode).\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.print = function () {\n    if (this.printModule) {\n      this.printModule.print();\n    }\n  };\n  /**\n   * Delete a record with Given options. If fieldname and data is not given then grid will delete the selected record.\n   * > `editSettings.allowDeleting` should be true.\n   *\n   * @param {string} fieldname - Defines the primary key field, 'Name of the column'.\n   * @param {Object} data - Defines the JSON data of the record to be deleted.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.deleteRecord = function (fieldname, data) {\n    if (this.editModule) {\n      this.editModule.deleteRecord(fieldname, data);\n    }\n  };\n  /**\n   * Starts edit the selected row. At least one row must be selected before invoking this method.\n   * `editSettings.allowEditing` should be true.\n   * {% codeBlock src='grid/startEdit/index.md' %}{% endcodeBlock %}\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.startEdit = function () {\n    if (this.editModule) {\n      this.editModule.startEdit();\n    }\n  };\n  /**\n   * If Grid is in editable state, you can save a record by invoking endEdit.\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.endEdit = function () {\n    if (this.editModule) {\n      this.editModule.endEdit();\n    }\n  };\n  /**\n   * Cancels edited state.\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.closeEdit = function () {\n    if (this.editModule) {\n      this.editModule.closeEdit();\n    }\n  };\n  /**\n   * Adds a new record to the Grid. Without passing parameters, it adds empty rows.\n   * > `editSettings.allowEditing` should be true.\n   *\n   * @param {Object} data - Defines the new add record data.\n   * @param {number} index - Defines the row index to be added\n   * @returns {void}\n   */\n\n\n  Grid.prototype.addRecord = function (data, index) {\n    if (this.editModule) {\n      this.editModule.addRecord(data, index);\n    }\n  };\n  /**\n   * Delete any visible row by TR element.\n   *\n   * @param {HTMLTableRowElement} tr - Defines the table row element.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.deleteRow = function (tr) {\n    if (this.editModule) {\n      this.editModule.deleteRow(tr);\n    }\n  };\n  /**\n   * Changes a particular cell into edited state based on the row index and field name provided in the `batch` mode.\n   *\n   * @param {number} index - Defines row index to edit a particular cell.\n   * @param {string} field - Defines the field name of the column to perform batch edit.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.editCell = function (index, field) {\n    if (this.editModule) {\n      this.editModule.editCell(index, field);\n    }\n  };\n  /**\n   * Saves the cell that is currently edited. It does not save the value to the DataSource.\n   *\n   * @returns {void}\n   * {% codeBlock src='grid/saveCell/index.md' %}{% endcodeBlock %}\n   */\n\n\n  Grid.prototype.saveCell = function () {\n    if (this.editModule) {\n      this.editModule.saveCell();\n    }\n  };\n  /**\n   * To update the specified cell by given value without changing into edited state.\n   *\n   * @param {number} rowIndex Defines the row index.\n   * @param {string} field Defines the column field.\n   * @param {string | number | boolean | Date} value - Defines the value to be changed.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.updateCell = function (rowIndex, field, value) {\n    if (this.editModule) {\n      this.editModule.updateCell(rowIndex, field, value);\n    }\n  };\n  /**\n   * To update the specified row by given values without changing into edited state.\n   *\n   * {% codeBlock src='grid/updateRow/index.md' %}{% endcodeBlock %}\n   *\n   * @param {number} index Defines the row index.\n   * @param {Object} data Defines the data object to be updated.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.updateRow = function (index, data) {\n    if (this.editModule) {\n      this.editModule.updateRow(index, data);\n    }\n  };\n  /**\n   * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n   *\n   * @returns {Object} Returns the batch changes\n   */\n\n\n  Grid.prototype.getBatchChanges = function () {\n    if (this.editModule) {\n      return this.editModule.getBatchChanges();\n    }\n\n    return {};\n  };\n  /**\n   * Enables or disables ToolBar items.\n   *\n   * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n   * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.enableToolbarItems = function (items, isEnable) {\n    if (this.toolbarModule) {\n      this.toolbarModule.enableItems(items, isEnable);\n    }\n  };\n  /**\n   * Copy the selected rows or cells data into clipboard.\n   *\n   * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.copy = function (withHeader) {\n    if (this.clipboardModule) {\n      this.clipboardModule.copy(withHeader);\n    }\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n\n\n  Grid.prototype.recalcIndentWidth = function () {\n    var _this = this;\n\n    if (!this.getHeaderTable().querySelector('.e-emptycell')) {\n      return;\n    }\n\n    if (!this.groupSettings.columns.length && !this.isDetail() && !this.isRowDragable() || this.getHeaderTable().querySelector('.e-emptycell').getAttribute('indentRefreshed') || !this.getContentTable()) {\n      return;\n    }\n\n    var indentWidth = this.getHeaderTable().querySelector('.e-emptycell').parentElement.offsetWidth;\n    var headerCol = [].slice.call(this.getHeaderTable().querySelector(literals.colGroup).childNodes);\n    var contentCol = [].slice.call(this.getContentTable().querySelector(literals.colGroup).childNodes);\n    var perPixel = indentWidth / 30;\n    var i = this.getFrozenMode() === 'Right' ? this.frozenRightCount : 0;\n    var parentOffset = this.element.offsetWidth;\n\n    var applyWidth = function (index, width) {\n      if (ispercentageWidth(_this)) {\n        var newWidth = (width / parentOffset * 100).toFixed(1) + '%';\n        headerCol[index].style.width = newWidth;\n        contentCol[index].style.width = newWidth;\n      } else {\n        headerCol[index].style.width = width + 'px';\n        contentCol[index].style.width = width + 'px';\n      }\n\n      _this.notify(events.columnWidthChanged, {\n        index: index,\n        width: width\n      });\n    };\n\n    if (perPixel >= 1) {\n      indentWidth = 30 / perPixel;\n    }\n\n    if (indentWidth < 1) {\n      indentWidth = 1;\n    }\n\n    if (this.enableColumnVirtualization || this.isAutoGen || this.columns.length === this.groupSettings.columns.length) {\n      indentWidth = 30;\n    }\n\n    while (i < this.groupSettings.columns.length) {\n      applyWidth(i, indentWidth);\n      i++;\n    }\n\n    if (this.isDetail()) {\n      applyWidth(i, indentWidth);\n      i++;\n    }\n\n    if (this.isRowDragable()) {\n      applyWidth(i, indentWidth);\n    }\n\n    this.isAutoGen = false;\n    this.getHeaderTable().querySelector('.e-emptycell').setAttribute('indentRefreshed', 'true');\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n\n\n  Grid.prototype.resetIndentWidth = function () {\n    if (ispercentageWidth(this)) {\n      this.getHeaderTable().querySelector('.e-emptycell').removeAttribute('indentRefreshed');\n      this.widthService.setWidthToColumns();\n      this.recalcIndentWidth();\n    }\n\n    if ((this.width === 'auto' || typeof this.width === 'string' && this.width.indexOf('%') !== -1) && this.getColumns().filter(function (col) {\n      return (!col.width || col.width === 'auto') && col.minWidth;\n    }).length > 0) {\n      var tgridWidth = this.widthService.getTableWidth(this.getColumns());\n      this.widthService.setMinwidthBycalculation(tgridWidth);\n    }\n\n    if (this.isFrozenGrid() && this.widthService) {\n      this.widthService.refreshFrozenScrollbar();\n    }\n\n    if (this.allowTextWrap && this.textWrapSettings.wrapMode !== 'Content') {\n      this.notify(events.refreshHandlers, {});\n    }\n  };\n  /**\n   * @hidden\n   * @returns {boolean} Returns isRowDragable\n   */\n\n\n  Grid.prototype.isRowDragable = function () {\n    return this.allowRowDragAndDrop && !this.rowDropSettings.targetID;\n  };\n  /**\n   * Changes the Grid column positions by field names.\n   *\n   * @param  {string} fromFName - Defines the origin field name.\n   * @param  {string} toFName - Defines the destination field name.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.reorderColumns = function (fromFName, toFName) {\n    if (this.reorderModule) {\n      this.reorderModule.reorderColumns(fromFName, toFName);\n    }\n  };\n  /**\n   * Changes the Grid column positions by field index. If you invoke reorderColumnByIndex multiple times,\n   * then you won't get the same results every time.\n   *\n   * @param  {number} fromIndex - Defines the origin field index.\n   * @param  {number} toIndex - Defines the destination field index.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.reorderColumnByIndex = function (fromIndex, toIndex) {\n    if (this.reorderModule) {\n      this.reorderModule.reorderColumnByIndex(fromIndex, toIndex);\n    }\n  };\n  /**\n   * Changes the Grid column positions by field index. If you invoke reorderColumnByTargetIndex multiple times,\n   * then you will get the same results every time.\n   *\n   * @param  {string} fieldName - Defines the field name.\n   * @param  {number} toIndex - Defines the destination field index.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.reorderColumnByTargetIndex = function (fieldName, toIndex) {\n    if (this.reorderModule) {\n      this.reorderModule.reorderColumnByTargetIndex(fieldName, toIndex);\n    }\n  };\n  /**\n   * Changes the Grid Row position with given indexes.\n   *\n   * @param  {number} fromIndexes - Defines the origin Indexes.\n   * @param  {number} toIndex - Defines the destination Index.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.reorderRows = function (fromIndexes, toIndex) {\n    if (this.rowDragAndDropModule) {\n      this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex);\n    }\n  };\n  /**\n   * @param {ReturnType} e - Defines the Return type\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.refreshDataSource = function (e) {\n    this.notify('refreshdataSource', e);\n  };\n  /**\n   * @param {boolean} enable -Defines the enable\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.disableRowDD = function (enable) {\n    var headerTable = this.getHeaderTable();\n    var contentTable = this.getContentTable();\n    var headerRows = headerTable.querySelectorAll('th.e-rowdragheader, th.e-mastercell');\n    var rows = this.getRows();\n    var disValue = enable ? 'none' : '';\n    setStyleAttribute(headerTable.querySelector(literals.colGroup).childNodes[0], {\n      'display': disValue\n    });\n    setStyleAttribute(contentTable.querySelector(literals.colGroup).childNodes[0], {\n      'display': disValue\n    });\n\n    for (var i = 0; i < this.getRows().length; i++) {\n      var ele = rows[i].firstElementChild;\n\n      if (enable) {\n        addClass([ele], 'e-hide');\n      } else {\n        removeClass([ele], ['e-hide']);\n      }\n    }\n\n    for (var j = 0; j < headerTable.querySelectorAll('th.e-rowdragheader, th.e-mastercell').length; j++) {\n      var ele = headerRows[j];\n\n      if (enable) {\n        addClass([ele], 'e-hide');\n      } else {\n        removeClass([ele], ['e-hide']);\n      }\n    }\n  };\n  /**\n   * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n   * > * This method ignores the hidden columns.\n   * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n   *\n   * @param  {string |string[]} fieldNames - Defines the column names.\n   * @returns {void}\n   *\n   *\n   * ```typescript\n   * <div id=\"Grid\"></div>\n   * <script>\n   * let gridObj: Grid = new Grid({\n   *     dataSource: employeeData,\n   *     columns: [\n   *         { field: 'OrderID', headerText: 'Order ID', width:100 },\n   *         { field: 'EmployeeID', headerText: 'Employee ID' }],\n   *     dataBound: () => gridObj.autoFitColumns('EmployeeID')\n   * });\n   * gridObj.appendTo('#Grid');\n   * </script>\n   * ```\n   *\n   */\n\n\n  Grid.prototype.autoFitColumns = function (fieldNames) {\n    if (this.resizeModule) {\n      this.resizeModule.autoFitColumns(fieldNames);\n    }\n  };\n  /**\n   * @param {number} x - Defines the number\n   * @param {number} y - Defines the number\n   * @param {Element} target - Defines the Element\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.createColumnchooser = function (x, y, target) {\n    if (this.columnChooserModule) {\n      this.columnChooserModule.renderColumnChooser(x, y, target);\n    }\n  };\n\n  Grid.prototype.initializeServices = function () {\n    this.serviceLocator.register('widthService', this.widthService = new ColumnWidthService(this));\n    this.serviceLocator.register('cellRendererFactory', new CellRendererFactory());\n    this.serviceLocator.register('rendererFactory', new RendererFactory());\n    this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    this.serviceLocator.register('valueFormatter', this.valueFormatterService = new ValueFormatter(this.locale));\n    this.serviceLocator.register('showHideService', this.showHider = new ShowHide(this));\n    this.serviceLocator.register('ariaService', this.ariaService = new AriaService());\n    this.serviceLocator.register('focus', this.focusModule = new FocusStrategy(this));\n  };\n\n  Grid.prototype.processModel = function () {\n    var gCols = this.groupSettings.columns;\n    var sCols = this.sortSettings.columns;\n    var flag;\n    var j;\n\n    if (this.allowGrouping) {\n      var _loop_1 = function (i, len) {\n        j = 0;\n\n        for (var sLen = sCols.length; j < sLen; j++) {\n          if (sCols[j].field === gCols[i]) {\n            flag = true;\n            break;\n          }\n        }\n\n        if (!flag) {\n          sCols.push({\n            field: gCols[i],\n            direction: 'Ascending',\n            isFromGroup: true\n          });\n        } else {\n          if (this_1.allowSorting) {\n            this_1.sortedColumns.push(sCols[j].field);\n          } else {\n            sCols[j].direction = 'Ascending';\n          }\n        }\n\n        if (!this_1.groupSettings.showGroupedColumn) {\n          var column = this_1.enableColumnVirtualization ? this_1.columns.filter(function (c) {\n            return c.field === gCols[i];\n          })[0] : this_1.getColumnByField(gCols[i]);\n\n          if (column) {\n            column.visible = false;\n          } else {\n            this_1.log('initial_action', {\n              moduleName: 'group',\n              columnName: gCols[i]\n            });\n          }\n        }\n      };\n\n      var this_1 = this;\n\n      for (var i = 0, len = gCols.length; i < len; i++) {\n        _loop_1(i, len);\n      }\n    }\n\n    if (!gCols.length) {\n      for (var i = 0; i < sCols.length; i++) {\n        this.sortedColumns.push(sCols[i].field);\n      }\n    }\n\n    this.rowTemplateFn = templateCompiler(this.rowTemplate);\n    this.detailTemplateFn = templateCompiler(this.detailTemplate);\n    this.editTemplateFn = templateCompiler(this.editSettings.template);\n    this.editHeaderTemplateFn = templateCompiler(this.editSettings.headerTemplate);\n    this.editFooterTemplateFn = templateCompiler(this.editSettings.footerTemplate);\n\n    if (!isNullOrUndefined(this.parentDetails)) {\n      var value = isNullOrUndefined(this.parentDetails.parentKeyFieldValue) ? 'undefined' : this.parentDetails.parentKeyFieldValue;\n      this.query.where(this.queryString, 'equal', value, true);\n    }\n\n    this.initForeignColumn();\n  };\n\n  Grid.prototype.initForeignColumn = function () {\n    if (this.isForeignKeyEnabled(this.getColumns())) {\n      this.notify(events.initForeignKeyColumn, this.getForeignKeyColumns());\n    }\n  };\n\n  Grid.prototype.enableVerticalRendering = function () {\n    if (this.rowRenderingMode === 'Vertical') {\n      this.element.classList.add('e-row-responsive');\n    } else {\n      this.element.classList.remove('e-row-responsive');\n    }\n  };\n\n  Grid.prototype.gridRender = function () {\n    this.updateRTL();\n\n    if (this.rowRenderingMode === 'Vertical') {\n      this.element.classList.add('e-row-responsive');\n    }\n\n    if (this.enableHover) {\n      this.element.classList.add('e-gridhover');\n    }\n\n    if (Browser.isDevice) {\n      this.element.classList.add('e-device');\n    }\n\n    if (this.rowHeight) {\n      this.element.classList.add('e-grid-min-height');\n    }\n\n    if (this.cssClass) {\n      this.element.classList.add(this.cssClass);\n    }\n\n    classList(this.element, ['e-responsive', 'e-default'], []);\n    var rendererFactory = this.serviceLocator.getService('rendererFactory');\n    this.headerModule = rendererFactory.getRenderer(RenderType.Header);\n    this.contentModule = rendererFactory.getRenderer(RenderType.Content);\n    this.printModule = new Print(this, this.scrollModule);\n    this.clipboardModule = new Clipboard(this);\n    this.renderModule.render();\n    this.eventInitializer();\n    this.createGridPopUpElement();\n    this.widthService.setWidthToColumns();\n    this.updateGridLines();\n    this.applyTextWrap();\n    this.createTooltip(); //for clip mode ellipsis\n\n    this.enableBoxSelection();\n  };\n\n  Grid.prototype.dataReady = function () {\n    this.scrollModule.setWidth();\n    this.scrollModule.setHeight();\n\n    if (this.height !== 'auto') {\n      this.scrollModule.setPadding();\n    }\n  };\n\n  Grid.prototype.updateRTL = function () {\n    if (this.enableRtl) {\n      this.element.classList.add('e-rtl');\n    } else {\n      this.element.classList.remove('e-rtl');\n    }\n  };\n\n  Grid.prototype.createGridPopUpElement = function () {\n    var popup = this.createElement('div', {\n      className: 'e-gridpopup',\n      styles: 'display:none;'\n    });\n    var content = this.createElement('div', {\n      className: literals.content,\n      attrs: {\n        tabIndex: '-1'\n      }\n    });\n    append([content, this.createElement('div', {\n      className: 'e-uptail e-tail'\n    })], popup);\n    content.appendChild(this.createElement('span'));\n    append([content, this.createElement('div', {\n      className: 'e-downtail e-tail'\n    })], popup);\n    this.element.appendChild(popup);\n  };\n\n  Grid.prototype.updateGridLines = function () {\n    classList(this.element, [], ['e-verticallines', 'e-horizontallines', 'e-hidelines', 'e-bothlines']);\n\n    switch (this.gridLines) {\n      case 'Horizontal':\n        this.element.classList.add('e-horizontallines');\n        break;\n\n      case 'Vertical':\n        this.element.classList.add('e-verticallines');\n        break;\n\n      case 'None':\n        this.element.classList.add('e-hidelines');\n        break;\n\n      case 'Both':\n        this.element.classList.add('e-bothlines');\n        break;\n    }\n\n    this.updateResizeLines();\n  };\n\n  Grid.prototype.updateResizeLines = function () {\n    if (this.allowResizing && !(this.gridLines === 'Vertical' || this.gridLines === 'Both')) {\n      this.element.classList.add('e-resize-lines');\n    } else {\n      this.element.classList.remove('e-resize-lines');\n    }\n  };\n  /**\n   * The function is used to apply text wrap\n   *\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.applyTextWrap = function () {\n    if (this.allowTextWrap) {\n      var headerRows = [].slice.call(this.element.getElementsByClassName('e-columnheader'));\n\n      switch (this.textWrapSettings.wrapMode) {\n        case 'Header':\n          wrap(this.element, false);\n          wrap(this.getContent(), false);\n          wrap(headerRows, true);\n          break;\n\n        case 'Content':\n          wrap(this.getContent(), true);\n          wrap(this.element, false);\n          wrap(headerRows, false);\n          break;\n\n        default:\n          wrap(this.element, true);\n          wrap(this.getContent(), false);\n          wrap(headerRows, false);\n      }\n\n      if (this.textWrapSettings.wrapMode !== 'Content') {\n        this.notify(events.refreshHandlers, {});\n      }\n    }\n  };\n  /**\n   * The function is used to remove text wrap\n   *\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.removeTextWrap = function () {\n    wrap(this.element, false);\n    var headerRows = [].slice.call(this.element.getElementsByClassName('e-columnheader'));\n    wrap(headerRows, false);\n    wrap(this.getContent(), false);\n\n    if (this.textWrapSettings.wrapMode !== 'Content') {\n      this.notify(events.refreshHandlers, {});\n    }\n  };\n  /**\n   * The function is used to add Tooltip to the grid cell that has ellipsiswithtooltip clip mode.\n   *\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.createTooltip = function () {\n    this.toolTipObj = new Tooltip({\n      opensOn: 'custom',\n      content: '',\n      cssClass: this.cssClass ? this.cssClass : null\n    }, this.element);\n  };\n  /** @hidden\n   * @returns {void}\n   */\n\n\n  Grid.prototype.freezeRefresh = function () {\n    this.isFreezeRefresh = true;\n\n    if (this.enableVirtualization) {\n      this.pageSettings.currentPage = 1;\n    }\n\n    this.componentRefresh();\n  };\n\n  Grid.prototype.getTooltipStatus = function (element) {\n    var headerTable = this.getHeaderTable();\n    var headerDivTag = 'e-gridheader';\n    var htable = this.createTable(headerTable, headerDivTag, 'header');\n    var ctable = this.createTable(headerTable, headerDivTag, 'content');\n    var table = element.classList.contains('e-headercell') ? htable : ctable;\n    var ele = element.classList.contains('e-headercell') ? 'th' : 'tr';\n    table.querySelector(ele).className = element.className;\n    table.querySelector(ele).innerHTML = element.innerHTML;\n    var width = table.querySelector(ele).getBoundingClientRect().width;\n    document.body.removeChild(htable);\n    document.body.removeChild(ctable);\n\n    if (width > element.getBoundingClientRect().width) {\n      return true;\n    }\n\n    return false;\n  };\n\n  Grid.prototype.mouseMoveHandler = function (e) {\n    if (this.isEllipsisTooltip()) {\n      var element = parentsUntil(e.target, 'e-ellipsistooltip');\n\n      if (this.prevElement !== element || e.type === 'mouseout') {\n        this.toolTipObj.close();\n      }\n\n      var tagName = e.target.tagName;\n      var elemNames = ['A', 'BUTTON', 'INPUT'];\n\n      if (element && e.type !== 'mouseout' && !(Browser.isDevice && elemNames.indexOf(tagName) !== -1)) {\n        if (element.getAttribute('aria-describedby')) {\n          return;\n        }\n\n        if (this.getTooltipStatus(element)) {\n          if (element.getElementsByClassName('e-headertext').length) {\n            this.toolTipObj.content = element.getElementsByClassName('e-headertext')[0].innerText;\n          } else {\n            this.toolTipObj.content = element.innerText;\n          }\n\n          this.prevElement = element;\n          var col = this.getColumns()[parseInt(element.getAttribute(literals.ariaColIndex), 10)];\n\n          if (col.disableHtmlEncode) {\n            this.toolTipObj.enableHtmlParse = false;\n          }\n\n          this.toolTipObj.open(element);\n        }\n      }\n    }\n\n    this.hoverFrozenRows(e);\n  };\n  /**\n   * @param {MouseEvent} e - Defines the mouse event\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.hoverFrozenRows = function (e) {\n    if (this.isFrozenGrid()) {\n      var row = parentsUntil(e.target, literals.row);\n\n      if ([].slice.call(this.element.getElementsByClassName('e-frozenhover')).length && e.type === 'mouseout') {\n        var rows = [].slice.call(this.element.getElementsByClassName('e-frozenhover'));\n\n        for (var i = 0; i < rows.length; i++) {\n          rows[i].classList.remove('e-frozenhover');\n        }\n      } else if (row) {\n        var rows = [].slice.call(this.element.querySelectorAll('tr[aria-rowindex=\"' + row.getAttribute(literals.ariaRowIndex) + '\"]'));\n        rows.splice(rows.indexOf(row), 1);\n\n        for (var i = 0; i < rows.length; i++) {\n          if (row.getAttribute('aria-selected') !== 'true' && rows[i]) {\n            rows[i].classList.add('e-frozenhover');\n          } else if (rows[i]) {\n            rows[i].classList.remove('e-frozenhover');\n          }\n        }\n      }\n    }\n  };\n\n  Grid.prototype.isEllipsisTooltip = function () {\n    var cols = this.getColumns();\n\n    if (this.clipMode === 'EllipsisWithTooltip') {\n      return true;\n    }\n\n    for (var i = 0; i < cols.length; i++) {\n      if (cols[i].clipMode === 'EllipsisWithTooltip') {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  Grid.prototype.scrollHandler = function () {\n    if (this.isEllipsisTooltip()) {\n      this.toolTipObj.close();\n    }\n  };\n  /**\n   * To create table for ellipsiswithtooltip\n   *\n   * @param {Element} table - Defines the table\n   * @param {string} tag - Defines the tag\n   * @param {string} type - Defines the type\n   * @returns {HTMLDivElement} Returns the HTML div ELement\n   * @hidden\n   */\n\n\n  Grid.prototype.createTable = function (table, tag, type) {\n    var myTableDiv = this.createElement('div');\n    myTableDiv.className = this.element.className;\n    myTableDiv.style.cssText = 'display: inline-block;visibility:hidden;position:absolute';\n    var mySubDiv = this.createElement('div');\n    mySubDiv.className = tag;\n    var myTable = this.createElement('table', {\n      attrs: {\n        role: 'grid'\n      }\n    });\n    myTable.className = table.className;\n    myTable.style.cssText = 'table-layout: auto;width: auto';\n    var ele = type === 'header' ? 'th' : 'td';\n    var myTr = this.createElement('tr', {\n      attrs: {\n        role: 'row'\n      }\n    });\n    var mytd = this.createElement(ele);\n    myTr.appendChild(mytd);\n    myTable.appendChild(myTr);\n    mySubDiv.appendChild(myTable);\n    myTableDiv.appendChild(mySubDiv);\n    document.body.appendChild(myTableDiv);\n    return myTableDiv;\n  };\n\n  Grid.prototype.onKeyPressed = function (e) {\n    if (e.action === 'tab' || e.action === 'shiftTab') {\n      this.toolTipObj.close();\n    }\n  };\n  /**\n   * Binding events to the element while component creation.\n   *\n   * @hidden\n   * @returns {void}\n   */\n\n\n  Grid.prototype.wireEvents = function () {\n    EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n    EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n    EventHandler.add(this.element, 'focusout', this.focusOutHandler, this);\n    EventHandler.add(this.element, 'dblclick', this.dblClickHandler, this);\n    EventHandler.add(this.element, 'keydown', this.keyPressHandler, this); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    EventHandler.add(window, 'resize', this.resetIndentWidth, this);\n\n    if (this.allowKeyboard) {\n      this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n    }\n\n    this.keyboardModule = new KeyboardEvents(this.element, {\n      keyAction: this.keyActionHandler.bind(this),\n      keyConfigs: this.keyConfigs,\n      eventName: 'keydown'\n    });\n    EventHandler.add(this.getContent().firstElementChild, 'scroll', this.scrollHandler, this);\n    EventHandler.add(this.element, 'mousemove', this.mouseMoveHandler, this);\n    EventHandler.add(this.element, 'mouseout', this.mouseMoveHandler, this);\n    EventHandler.add(this.getContent(), 'touchstart', this.tapEvent, this);\n    EventHandler.add(document.body, 'keydown', this.keyDownHandler, this);\n  };\n  /**\n   * Unbinding events from the element while component destroy.\n   *\n   * @hidden\n   * @returns {void}\n   */\n\n\n  Grid.prototype.unwireEvents = function () {\n    EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n    EventHandler.remove(this.element, 'touchend', this.mouseClickHandler);\n    EventHandler.remove(this.element, 'focusout', this.focusOutHandler);\n    EventHandler.remove(this.element, 'dblclick', this.dblClickHandler);\n    EventHandler.remove(this.getContent().firstElementChild, 'scroll', this.scrollHandler);\n    EventHandler.remove(this.element, 'mousemove', this.mouseMoveHandler);\n    EventHandler.remove(this.element, 'mouseout', this.mouseMoveHandler);\n    EventHandler.remove(this.element, 'keydown', this.keyPressHandler);\n    EventHandler.remove(this.getContent(), 'touchstart', this.tapEvent);\n    EventHandler.remove(document.body, 'keydown', this.keyDownHandler); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    EventHandler.remove(window, 'resize', this.resetIndentWidth);\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n\n\n  Grid.prototype.addListener = function () {\n    if (this.isDestroyed) {\n      return;\n    }\n\n    this.on(events.dataReady, this.dataReady, this);\n    this.on(events.contentReady, this.recalcIndentWidth, this);\n    this.on(events.headerRefreshed, this.recalcIndentWidth, this);\n    this.dataBoundFunction = this.refreshMediaCol.bind(this);\n    this.addEventListener(events.dataBound, this.dataBoundFunction);\n    this.on(events.keyPressed, this.onKeyPressed, this);\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n\n\n  Grid.prototype.removeListener = function () {\n    if (this.isDestroyed) {\n      return;\n    }\n\n    this.off(events.dataReady, this.dataReady);\n    this.off(events.contentReady, this.recalcIndentWidth);\n    this.off(events.headerRefreshed, this.recalcIndentWidth);\n    this.removeEventListener(events.dataBound, this.dataBoundFunction);\n    this.off(events.keyPressed, this.onKeyPressed);\n  };\n  /**\n   * Get current visible data of grid.\n   *\n   * @returns {Object[]} Returns the current view records\n   * @isGenericType true\n   */\n\n\n  Grid.prototype.getCurrentViewRecords = function () {\n    if (isGroupAdaptive(this)) {\n      return isNullOrUndefined(this.currentViewData.records) ? this.currentViewData : this.currentViewData.records;\n    }\n\n    if (this.groupSettings.enableLazyLoading) {\n      return this.currentViewData;\n    }\n\n    return this.allowGrouping && this.groupSettings.columns.length && this.currentViewData.length && this.currentViewData.records ? this.currentViewData.records : this.currentViewData;\n  };\n\n  Grid.prototype.mouseClickHandler = function (e) {\n    if (this.isChildGrid(e) || parentsUntil(e.target, 'e-gridpopup') && e.touches || this.element.getElementsByClassName('e-cloneproperties').length || this.checkEdit(e)) {\n      return;\n    }\n\n    if ((!this.allowRowDragAndDrop && (parentsUntil(e.target, literals.gridContent) || e.target.tagName === 'TD') || !(this.allowGrouping || this.allowReordering) && parentsUntil(e.target, 'e-gridheader')) && e.touches) {\n      return;\n    }\n\n    if (parentsUntil(e.target, 'e-gridheader') && this.allowRowDragAndDrop && !parentsUntil(e.target, 'e-filterbarcell')) {\n      e.preventDefault();\n    }\n\n    var args = this.getRowInfo(e.target);\n    var cancel = 'cancel';\n    args[cancel] = false;\n    var isDataRow = false;\n    var tr = closest(e.target, 'tr');\n\n    if (tr && tr.getAttribute('data-uid')) {\n      var rowObj = this.getRowObjectFromUID(tr.getAttribute('data-uid'));\n      isDataRow = rowObj ? rowObj.isDataRow : false;\n    }\n\n    if (isDataRow) {\n      this.trigger(events.recordClick, args);\n    }\n\n    this.notify(events.click, e);\n  };\n\n  Grid.prototype.checkEdit = function (e) {\n    var tr = parentsUntil(e.target, literals.row);\n    var isEdit = this.editSettings.mode !== 'Batch' && this.isEdit && tr && (tr.classList.contains(literals.editedRow) || tr.classList.contains(literals.addedRow));\n    return !parentsUntil(e.target, 'e-unboundcelldiv') && (isEdit || parentsUntil(e.target, literals.rowCell) && parentsUntil(e.target, literals.rowCell).classList.contains('e-editedbatchcell'));\n  };\n\n  Grid.prototype.dblClickHandler = function (e) {\n    var grid = parentsUntil(e.target, 'e-grid');\n\n    if (isNullOrUndefined(grid) || grid.id !== this.element.id || closest(e.target, '.e-unboundcelldiv')) {\n      return;\n    }\n\n    var dataRow = false;\n    var tr = closest(e.target, 'tr');\n\n    if (tr && tr.getAttribute('data-uid')) {\n      var rowObj = this.getRowObjectFromUID(tr.getAttribute('data-uid'));\n      dataRow = rowObj ? rowObj.isDataRow : false;\n    }\n\n    var args = this.getRowInfo(e.target);\n    args.target = e.target;\n\n    if (dataRow) {\n      this.trigger(events.recordDoubleClick, args);\n    }\n\n    this.notify(events.dblclick, e);\n  };\n\n  Grid.prototype.focusOutHandler = function (e) {\n    if (this.isChildGrid(e)) {\n      return;\n    }\n\n    if (!parentsUntil(e.target, 'e-grid')) {\n      this.element.querySelector('.e-gridpopup').style.display = 'None';\n    }\n\n    var filterClear = this.element.querySelector('.e-cancel:not(.e-hide)');\n\n    if (filterClear) {\n      filterClear.classList.add('e-hide');\n    }\n\n    var relatedTarget = e.relatedTarget;\n    var ariaOwns = relatedTarget ? relatedTarget.getAttribute('aria-owns') : null;\n\n    if ((!relatedTarget || !parentsUntil(relatedTarget, 'e-grid') && (!isNullOrUndefined(ariaOwns) && ariaOwns) !== e.target.getAttribute('aria-owns')) && !this.keyPress && this.isEdit && !Browser.isDevice) {\n      if (this.editSettings.mode === 'Batch' && !((parentsUntil(relatedTarget, 'e-ddl') || parentsUntil(relatedTarget, 'e-ddt')) && parentsUntil(relatedTarget, 'e-input-group'))) {\n        this.editModule.saveCell();\n        this.notify(events.editNextValCell, {});\n      }\n\n      if (this.editSettings.mode === 'Normal') {\n        this.editModule.editFormValidate();\n      }\n    }\n\n    this.keyPress = false;\n  };\n\n  Grid.prototype.isChildGrid = function (e) {\n    var gridElement = parentsUntil(e.target, 'e-grid');\n\n    if (gridElement && gridElement.id !== this.element.id || parentsUntil(e.target, 'e-unboundcelldiv') && isNullOrUndefined(gridElement)) {\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * @param {Object} persistedData - Defines the persisted data\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.mergePersistGridData = function (persistedData) {\n    var data = this.getLocalData();\n\n    if (!(isNullOrUndefined(data) || data === '') || !isNullOrUndefined(persistedData)) {\n      var dataObj = !isNullOrUndefined(persistedData) ? persistedData : JSON.parse(data);\n\n      if (this.enableVirtualization) {\n        dataObj.pageSettings.currentPage = 1;\n      }\n\n      var keys = Object.keys(dataObj);\n      this.isProtectedOnChange = true;\n\n      for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n\n        if (typeof this[key] === 'object' && !isNullOrUndefined(this[key])) {\n          if (Array.isArray(this[key]) && key === 'columns') {\n            setColumnIndex(this[key]);\n            this.mergeColumns(dataObj[key], this[key]);\n            this[key] = dataObj[key];\n          } else {\n            extend(this[key], dataObj[key]);\n          }\n        } else {\n          this[key] = dataObj[key];\n        }\n      }\n\n      this.isProtectedOnChange = false;\n    }\n  };\n\n  Grid.prototype.mergeColumns = function (storedColumn, columns) {\n    var storedColumns = storedColumn;\n\n    var _loop_2 = function (i) {\n      var localCol = columns.filter(function (tCol) {\n        return tCol.index === storedColumns[i].index;\n      })[0];\n\n      if (!isNullOrUndefined(localCol)) {\n        if (localCol.columns && localCol.columns.length) {\n          this_2.mergeColumns(storedColumns[i].columns, localCol.columns);\n          storedColumns[i] = extend(localCol, storedColumns[i], {}, true);\n        } else {\n          storedColumns[i] = extend(localCol, storedColumns[i], {}, true);\n        }\n      }\n    };\n\n    var this_2 = this;\n\n    for (var i = 0; i < storedColumns.length; i++) {\n      _loop_2(i);\n    }\n  };\n  /**\n   * @hidden\n   * @returns {boolean} Returns the isDetail\n   */\n\n\n  Grid.prototype.isDetail = function () {\n    return !isNullOrUndefined(this.detailTemplate) || !isNullOrUndefined(this.childGrid);\n  };\n\n  Grid.prototype.isCommandColumn = function (columns) {\n    var _this = this;\n\n    return columns.some(function (col) {\n      if (col.columns) {\n        return _this.isCommandColumn(col.columns);\n      }\n\n      return !!(col.commands || col.commandsTemplate);\n    });\n  };\n\n  Grid.prototype.isForeignKeyEnabled = function (columns) {\n    var _this = this;\n\n    return columns.some(function (col) {\n      if (col.columns) {\n        return _this.isForeignKeyEnabled(col.columns);\n      }\n\n      return !!(col.dataSource && col.foreignKeyValue);\n    });\n  };\n\n  Grid.prototype.keyPressHandler = function (e) {\n    var presskey = extend(e, {\n      cancel: false\n    });\n    this.trigger('keyPressed', presskey);\n\n    if (presskey.cancel === true) {\n      e.stopImmediatePropagation();\n    }\n  };\n\n  Grid.prototype.keyDownHandler = function (e) {\n    if (e.altKey) {\n      if (e.keyCode === 74) {\n        //alt j\n        if (this.keyA) {\n          //alt A J\n          this.notify(events.groupCollapse, {\n            target: e.target,\n            collapse: false\n          });\n          this.keyA = false;\n        } else {\n          if (this.focusModule && this.focusModule.currentInfo && this.focusModule.currentInfo.element) {\n            removeClass([this.focusModule.currentInfo.element, this.focusModule.currentInfo.elementToFocus], ['e-focused', 'e-focus']);\n            this.focusModule.currentInfo.element.tabIndex = -1;\n          }\n\n          if (!this.element.classList.contains('e-childgrid')) {\n            this.element.focus();\n          }\n        }\n      }\n\n      if (e.keyCode === 87) {\n        //alt w\n        var focusModule = this.focusModule;\n\n        if (focusModule) {\n          if (!this.currentViewData.length) {\n            return;\n          }\n\n          focusModule.focusContent();\n          focusModule.addOutline();\n        }\n      }\n\n      if (e.keyCode === 65) {\n        //alt A\n        this.keyA = true;\n      }\n\n      if (e.keyCode === 72 && this.keyA) {\n        //alt A H\n        this.notify(events.groupCollapse, {\n          target: e.target,\n          collapse: true\n        });\n        this.keyA = false;\n      }\n    }\n\n    if (e.keyCode === 13) {\n      this.notify(events.enterKeyHandler, e);\n    }\n  };\n\n  Grid.prototype.keyActionHandler = function (e) {\n    if (this.isChildGrid(e) || this.isEdit && e.action !== 'escape' && e.action !== 'enter' && e.action !== 'shiftEnter' && e.action !== 'tab' && e.action !== 'shiftTab') {\n      return;\n    } else {\n      this.keyPress = true;\n    }\n\n    if (this.allowKeyboard) {\n      if (e.action === 'ctrlPlusP') {\n        e.preventDefault();\n        this.print();\n      }\n\n      this.notify(events.keyPressed, e);\n    }\n  };\n  /**\n   * @param {Function[]} modules - Defines the modules\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.setInjectedModules = function (modules) {\n    this.injectedModules = modules;\n  };\n\n  Grid.prototype.updateColumnObject = function () {\n    prepareColumns(this.columns, this.enableColumnVirtualization, this);\n    setColumnIndex(this.columns);\n    this.initForeignColumn();\n    this.notify(events.autoCol, {});\n  };\n  /**\n   * Gets the foreign columns from Grid.\n   *\n   * @returns {Column[]} Returns Foreign key column\n   */\n\n\n  Grid.prototype.getForeignKeyColumns = function () {\n    return this.getColumns().filter(function (col) {\n      return col.isForeignColumn();\n    });\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns row height\n   */\n\n\n  Grid.prototype.getRowHeight = function () {\n    return this.rowHeight ? this.rowHeight : getRowHeight(this.element);\n  };\n  /**\n   * Refreshes the Grid column changes.\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.refreshColumns = function () {\n    this.setFrozenCount();\n    var fCnt = this.getContent().querySelector('.e-frozen-left-content');\n    var frCnt = this.getContent().querySelector('.e-frozen-right-content');\n    var isColFrozen = !this.frozenRightCount && !this.frozenLeftCount;\n    var isFrozen = this.getFrozenColumns() !== 0;\n\n    if (!isFrozen && (!fCnt && this.frozenLeftCount || !frCnt && this.frozenRightCount || fCnt && !this.frozenLeftCount || frCnt && !this.frozenRightCount)) {\n      this.tableIndex = 0;\n      this.tablesCount = 1;\n\n      if (this.enableColumnVirtualization) {\n        this.columnModel = [];\n        this.updateColumnModel(this.columns);\n      }\n\n      this.freezeRefresh();\n    } else if (isColFrozen && (this.getFrozenColumns() === 1 && !fCnt || this.getFrozenColumns() === 0 && fCnt)) {\n      this.tableIndex = 0;\n      this.tablesCount = 1;\n\n      if (this.enableColumnVirtualization) {\n        this.columnModel = [];\n        this.updateColumnModel(this.columns);\n      }\n\n      this.freezeRefresh();\n    } else {\n      this.isPreventScrollEvent = true;\n      this.updateColumnObject();\n      this.checkLockColumns(this.getColumns());\n      this.refresh();\n\n      if (this.isFrozenGrid()) {\n        var mTbl = this.contentModule.getMovableContent().querySelector('.' + literals.table);\n        remove(mTbl.querySelector(literals.colGroup));\n        var colGroup = this.getHeaderContent().querySelector('.' + literals.movableHeader).querySelector(literals.colGroup).cloneNode(true);\n        mTbl.insertBefore(colGroup, mTbl.querySelector(literals.tbody));\n\n        if (this.getFrozenMode() === 'Left-Right') {\n          var frTbl = this.contentModule.getFrozenRightContent().querySelector('.' + literals.table);\n          remove(frTbl.querySelector(literals.colGroup));\n          var colGrp = this.getHeaderContent().querySelector('.e-frozen-right-header').querySelector(literals.colGroup).cloneNode(true);\n          frTbl.insertBefore(colGrp, frTbl.querySelector(literals.tbody));\n        }\n      }\n    }\n\n    if (this.isFrozenGrid()) {\n      var left = this.getContent().querySelector('.e-movablescrollbar').scrollLeft;\n      this.headerModule.getMovableHeader().scrollLeft = left;\n      this.contentModule.getMovableContent().scrollLeft = left;\n    }\n  };\n  /**\n   * Export Grid data to Excel file(.xlsx).\n   *\n   * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n   * @param  {boolean} isMultipleExport - Define to enable multiple export.\n   * @param  {Workbook} workbook - Defines the Workbook if multiple export is enabled.\n   * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n   * @returns {Promise<any>} Returns the excelexport\n   */\n\n\n  Grid.prototype.excelExport = function (excelExportProperties, isMultipleExport, // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  workbook, isBlob) {\n    return this.excelExportModule ? this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, false, isBlob) : null;\n  };\n  /**\n   * Export Grid data to CSV file.\n   *\n   * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n   * @param  {boolean} isMultipleExport - Define to enable multiple export.\n   * @param  {Workbook} workbook - Defines the Workbook if multiple export is enabled.\n   * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n   * @returns {Promise<any>} Returns csv export\n   */\n\n\n  Grid.prototype.csvExport = function (excelExportProperties, // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  isMultipleExport, workbook, isBlob) {\n    return this.excelExportModule ? this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, true, isBlob) : null;\n  };\n  /**\n   * Export Grid data to PDF document.\n   *\n   * @param {pdfExportProperties} pdfExportProperties - Defines the export properties of the Grid.\n   * @param {isMultipleExport} isMultipleExport - Define to enable multiple export.\n   * @param {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n   * @param {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n   * @returns {Promise<any>} Returns pdfexport\n   */\n\n\n  Grid.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n    return this.pdfExportModule ? this.pdfExportModule.Map(this, pdfExportProperties, isMultipleExport, pdfDoc, isBlob) : null;\n  };\n  /**\n   * Groups a column by column name.\n   *\n   * @param  {string} columnName - Defines the column name to group.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.groupColumn = function (columnName) {\n    if (this.groupModule) {\n      this.groupModule.groupColumn(columnName);\n    }\n  };\n  /**\n   * Expands all the grouped rows of the Grid.\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.groupExpandAll = function () {\n    if (this.groupModule) {\n      this.groupModule.expandAll();\n    }\n  };\n  /**\n   * Collapses all the grouped rows of the Grid.\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.groupCollapseAll = function () {\n    if (this.groupModule) {\n      this.groupModule.collapseAll();\n    }\n  };\n  /**\n   * Expands or collapses grouped rows by target element.\n   *\n   * @param  {Element} target - Defines the target element of the grouped row.\n   * @returns {void}\n   */\n  // public expandCollapseRows(target: Element): void {\n  //     if (this.groupModule) {\n  //         this.groupModule.expandCollapseRows(target);\n  //     }\n  // }\n\n  /**\n   * Clears all the grouped columns of the Grid.\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.clearGrouping = function () {\n    if (this.groupModule) {\n      this.groupModule.clearGrouping();\n    }\n  };\n  /**\n   * Ungroups a column by column name.\n   *\n   * {% codeBlock src='grid/ungroupColumn/index.md' %}{% endcodeBlock %}\n   *\n   * @param  {string} columnName - Defines the column name to ungroup.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.ungroupColumn = function (columnName) {\n    if (this.groupModule) {\n      this.groupModule.ungroupColumn(columnName);\n    }\n  };\n  /**\n   * Column chooser can be displayed on screen by given position(X and Y axis).\n   *\n   * @param {number} x - Defines the X axis.\n   * @param {number} y - Defines the Y axis.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.openColumnChooser = function (x, y) {\n    if (this.columnChooserModule) {\n      this.columnChooserModule.openColumnChooser(x, y);\n    }\n  };\n\n  Grid.prototype.scrollRefresh = function () {\n    var _this = this;\n\n    var refresh = function () {\n      _this.scrollModule.refresh();\n\n      _this.off(events.contentReady, refresh);\n    };\n\n    this.on(events.contentReady, refresh, this);\n  };\n  /**\n   * Collapses a detail row with the given target.\n   *\n   * @param  {Element} target - Defines the expanded element to collapse.\n   * @returns {void}\n   */\n  // public detailCollapse(target: number | Element): void {\n  //     if (this.detailRowModule) {\n  //         this.detailRowModule.collapse(target);\n  //     }\n  // }\n\n  /**\n   * Collapses all the detail rows of the Grid.\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.detailCollapseAll = function () {\n    if (this.detailRowModule) {\n      this.detailRowModule.collapseAll();\n    }\n  };\n  /**\n   * Expands a detail row with the given target.\n   *\n   * @param  {Element} target - Defines the collapsed element to expand.\n   * @returns {void}\n   */\n  // public detailExpand(target: number | Element): void {\n  //     if (this.detailRowModule) {\n  //         this.detailRowModule.expand(target);\n  //     }\n  // }\n\n  /**\n   * Expands all the detail rows of the Grid.\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.detailExpandAll = function () {\n    if (this.detailRowModule) {\n      this.detailRowModule.expandAll();\n    }\n  };\n  /**\n   * Deselects the currently selected cells.\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.clearCellSelection = function () {\n    if (this.selectionModule) {\n      this.selectionModule.clearCellSelection();\n    }\n  };\n  /**\n   * Deselects the currently selected rows.\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.clearRowSelection = function () {\n    if (this.selectionModule) {\n      this.selectionModule.clearRowSelection();\n    }\n  };\n  /**\n   * Selects a collection of cells by row and column indexes.\n   *\n   * @param  {ISelectedCell[]} rowCellIndexes - Specifies the row and column indexes.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.selectCells = function (rowCellIndexes) {\n    if (this.selectionModule) {\n      this.selectionModule.selectCells(rowCellIndexes);\n    }\n  };\n  /**\n   * Selects a range of rows from start and end row indexes.\n   *\n   * @param  {number} startIndex - Specifies the start row index.\n   * @param  {number} endIndex - Specifies the end row index.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.selectRowsByRange = function (startIndex, endIndex) {\n    if (this.selectionModule) {\n      this.selectionModule.selectRowsByRange(startIndex, endIndex);\n    }\n  };\n  /**\n   * @hidden\n   * @returns {boolean} Returns whether context menu is open or not\n   */\n\n\n  Grid.prototype.isContextMenuOpen = function () {\n    return this.contextMenuModule && this.contextMenuModule.isOpen;\n  };\n  /**\n   * @param {Function} module - Defines the module\n   * @returns {boolean} return the injected modules\n   * @hidden\n   */\n\n\n  Grid.prototype.ensureModuleInjected = function (module) {\n    return this.getInjectedModules().indexOf(module) >= 0;\n  };\n  /**\n   * Destroys the given template reference.\n   *\n   * @param {string[]} propertyNames - Defines the collection of template name.\n   * @param {any} index - specifies the index\n   */\n  // eslint-disable-next-line\n\n\n  Grid.prototype.destroyTemplate = function (propertyNames, index) {\n    this.clearTemplate(propertyNames, index);\n  };\n  /**\n   * @param {string | string[]} type - Defines the type\n   * @param {Object} args - Defines the arguments\n   * @returns {void}\n   * @hidden\n   * @private\n   */\n\n\n  Grid.prototype.log = function (type, args) {\n    // eslint-disable-next-line\n    this.loggerModule ? this.loggerModule.log(type, args) : function () {\n      return 0;\n    }();\n  };\n  /**\n   * @param {Element} element - Defines the element\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.applyBiggerTheme = function (element) {\n    if (this.element.classList.contains('e-bigger')) {\n      element.classList.add('e-bigger');\n    }\n  };\n  /**\n   * @hidden\n   * @returns {Object} Returns the previous row data\n   */\n\n\n  Grid.prototype.getPreviousRowData = function () {\n    var previousRowData = this.getRowsObject()[this.getRows().length - 1].data;\n    return previousRowData;\n  };\n  /**\n   * Hides the scrollbar placeholder of Grid content when grid content is not overflown.\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.hideScroll = function () {\n    var content = this.getContent().querySelector('.' + literals.content);\n    var scrollBar = this.getContent().querySelector('.e-scrollbar');\n\n    if (content.scrollHeight <= content.clientHeight) {\n      this.scrollModule.removePadding();\n      content.style.overflowY = 'auto';\n    }\n\n    if (this.isFrozenGrid() && scrollBar) {\n      var mvblScrollBar = this.getContent().querySelector('.e-movablescrollbar');\n      var mvblChild = this.getContent().querySelector('.e-movablechild');\n      scrollBar.style.display = 'flex';\n\n      if (mvblScrollBar.offsetWidth >= mvblChild.offsetWidth) {\n        scrollBar.style.display = 'none';\n        this.notify(events.frozenHeight, 0);\n      }\n    }\n  };\n  /**\n   * Get row index by primary key or row data.\n   *\n   * @param  {string | Object} value - Defines the primary key value.\n   * @returns {number} Returns the index\n   */\n\n\n  Grid.prototype.getRowIndexByPrimaryKey = function (value) {\n    var pkName = this.getPrimaryKeyFieldNames()[0];\n    value = typeof value === 'object' ? value[pkName] : value;\n    var rows = this.getRowsObject();\n\n    for (var i = 0; i < rows.length; i++) {\n      if (rows[i].isDetailRow || rows[i].isCaptionRow) {\n        continue;\n      }\n\n      var pKvalue = rows[i].data[pkName];\n\n      if (pkName.split('.').length > 1) {\n        pKvalue = performComplexDataOperation(pkName, rows[i].data);\n      }\n\n      if (pKvalue === value) {\n        return rows[i].index;\n      }\n    }\n\n    return -1;\n  };\n  /**\n   * @param {string} field - Defines the field name\n   * @returns {Column} returns the column\n   * @hidden\n   */\n  // Need to have all columns while filtering with ColumnVirtualization.\n\n\n  Grid.prototype.grabColumnByFieldFromAllCols = function (field) {\n    var column;\n    this.columnModel = [];\n    this.updateColumnModel(this.columns);\n    var gCols = this.columnModel;\n\n    for (var i = 0; i < gCols.length; i++) {\n      if (field === gCols[i].field) {\n        column = gCols[i];\n      }\n    }\n\n    return column;\n  };\n  /**\n   * @param {string} uid - Defines the uid\n   * @returns {Column} returns the column\n   * @hidden\n   */\n  // Need to have all columns while filtering with ColumnVirtualization.\n\n\n  Grid.prototype.grabColumnByUidFromAllCols = function (uid) {\n    var column;\n    this.columnModel = [];\n    this.updateColumnModel(this.columns);\n    var gCols = this.columnModel;\n\n    for (var i = 0; i < gCols.length; i++) {\n      if (uid === gCols[i].uid) {\n        column = gCols[i];\n      }\n    }\n\n    return column;\n  };\n  /**\n   * Get all filtered records from the Grid and it returns array of objects for the local dataSource, returns a promise object if the Grid has remote data.\n   *\n   * @returns {Object[] | Promise<Object>} Returns the filtered records\n   */\n\n\n  Grid.prototype.getFilteredRecords = function () {\n    if (this.allowFiltering && this.filterSettings.columns.length) {\n      var query = this.renderModule.data.generateQuery(true);\n\n      if (this.dataSource && this.renderModule.data.isRemote() && this.dataSource instanceof DataManager) {\n        return this.renderModule.data.getData(this.dataSource, query);\n      } else {\n        if (this.dataSource instanceof DataManager) {\n          return this.dataSource.executeLocal(query);\n        } else {\n          return new DataManager(this.dataSource, query).executeLocal(query);\n        }\n      }\n    }\n\n    return [];\n  };\n\n  Grid.prototype.getUserAgent = function () {\n    var userAgent = Browser.userAgent.toLowerCase();\n    return /iphone|ipod|ipad/.test(userAgent);\n  };\n  /**\n   * @param {TouchEventArgs} e - Defines the TouchEventArgs\n   * @returns {void}\n   * @hidden\n   */\n  // Need to have all columns while filtering with ColumnVirtualization.\n  // eslint-disable-next-line\n\n\n  Grid.prototype.tapEvent = function (e) {\n    if (this.getUserAgent()) {\n      if (!Global.timer) {\n        Global.timer = setTimeout(function () {\n          Global.timer = null;\n        }, 300);\n      } else {\n        clearTimeout(Global.timer);\n        Global.timer = null;\n        this.dblClickHandler(e);\n        this.notify(events.doubleTap, e);\n      }\n    }\n  };\n  /**\n   * @param {string} prefix - specifies the prefix\n   * @returns {string} returns the row uid\n   * @hidden\n   */\n\n\n  Grid.prototype.getRowUid = function (prefix) {\n    return \"\" + prefix + this.rowUid++;\n  };\n  /**\n   * @hidden\n   * @returns {Element} returns the element\n   */\n\n\n  Grid.prototype.getMovableVirtualContent = function () {\n    return this.getContent().querySelector('.' + literals.movableContent);\n  };\n  /**\n   * @hidden\n   * @returns {Element} returns the element\n   */\n\n\n  Grid.prototype.getFrozenVirtualContent = function () {\n    return this.getContent().querySelector('.' + literals.frozenContent);\n  };\n  /**\n   * @hidden\n   * @returns {Element} returns the element\n   */\n\n\n  Grid.prototype.getMovableVirtualHeader = function () {\n    return this.getHeaderContent().querySelector('.' + literals.movableHeader);\n  };\n  /**\n   * @hidden\n   * @returns {Element} returns the element\n   */\n\n\n  Grid.prototype.getFrozenVirtualHeader = function () {\n    return this.getHeaderContent().querySelector('.' + literals.frozenHeader);\n  };\n  /**\n   * @param {string} uid - specifies the uid\n   * @returns {Element} returns the element\n   * @hidden\n   */\n\n\n  Grid.prototype.getRowElementByUID = function (uid) {\n    var rowEle;\n    var rows = [];\n\n    if (this.isFrozenGrid()) {\n      var fRows = [].slice.call(this.getFrozenVirtualContent().querySelector(literals.tbody).children);\n      var mRows = [].slice.call(this.getMovableVirtualContent().querySelector(literals.tbody).children);\n      var frozenRigtRows = [];\n\n      if (this.tablesCount === 3) {\n        frozenRigtRows = [].slice.call(this.getContent().querySelector('.e-frozen-right-content').querySelector(literals.tbody).children);\n      }\n\n      if (this.frozenRows) {\n        rows = [].slice.call(this.getFrozenVirtualHeader().querySelector(literals.tbody).children);\n        rows = rows.concat([].slice.call(this.getMovableVirtualHeader().querySelector(literals.tbody).children));\n\n        if (this.tablesCount === 3) {\n          var frHdr = this.getHeaderContent().querySelector('.e-frozen-right-header');\n          rows = rows.concat([].slice.call(frHdr.querySelector(literals.tbody).children)).concat(frozenRigtRows);\n        }\n\n        rows = rows.concat(fRows).concat(mRows);\n      } else {\n        rows = fRows.concat(mRows).concat(frozenRigtRows);\n      }\n    } else {\n      var cntRows = [].slice.call(this.getContent().querySelector(literals.tbody).children);\n\n      if (this.frozenRows) {\n        rows = [].slice.call(this.getHeaderContent().querySelector(literals.tbody).children);\n        rows = rows.concat(cntRows);\n      } else {\n        rows = cntRows;\n      }\n    }\n\n    for (var _i = 0, rows_2 = rows; _i < rows_2.length; _i++) {\n      var row = rows_2[_i];\n\n      if (row.getAttribute('data-uid') === uid) {\n        rowEle = row;\n        break;\n      }\n    }\n\n    return rowEle;\n  };\n  /**\n   * Gets the hidden columns from the Grid.\n   *\n   * @returns {Column[]} Returns the Column\n   */\n\n\n  Grid.prototype.getHiddenColumns = function () {\n    var cols = [];\n\n    for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n      var col = _a[_i];\n\n      if (col.visible === false) {\n        cols.push(col);\n      }\n    }\n\n    return cols;\n  };\n  /**\n   * calculatePageSizeByParentHeight\n   *\n   * @param {number | string } containerHeight - specifies the container height\n   * @returns {number} returns the page size\n   */\n\n\n  Grid.prototype.calculatePageSizeByParentHeight = function (containerHeight) {\n    if (this.allowPaging) {\n      if (this.allowTextWrap && this.textWrapSettings.wrapMode === 'Header' || !this.allowTextWrap) {\n        var pagesize = 0;\n\n        if (containerHeight.indexOf('%') !== -1) {\n          containerHeight = parseInt(containerHeight, 10) / 100 * this.element.clientHeight;\n        }\n\n        var nonContentHeight = this.getNoncontentHeight() + this.getRowHeight();\n\n        if (containerHeight > nonContentHeight) {\n          var contentHeight = 0;\n          contentHeight = containerHeight - this.getNoncontentHeight();\n          pagesize = contentHeight / this.getRowHeight();\n        }\n\n        if (pagesize > 0) {\n          return Math.floor(pagesize);\n        }\n      }\n    }\n\n    return 0;\n  };\n\n  Grid.prototype.getNoncontentHeight = function () {\n    var height = 0;\n\n    if (!isNullOrUndefined(this.getHeaderContent().clientHeight)) {\n      height += this.getHeaderContent().clientHeight;\n    }\n\n    if (this.toolbar && !isNullOrUndefined(this.element.querySelector('.e-toolbar').clientHeight)) {\n      height += this.element.querySelector('.e-toolbar').clientHeight;\n    }\n\n    if (this.allowPaging && !isNullOrUndefined(this.element.querySelector('.e-gridpager').clientHeight)) {\n      height += this.element.querySelector('.e-gridpager').clientHeight;\n    }\n\n    if (this.showColumnChooser && !isNullOrUndefined(this.element.querySelector('.e-columnheader').clientHeight)) {\n      height += this.element.querySelector('.e-columnheader').clientHeight;\n    }\n\n    if (this.allowGrouping && this.groupSettings.showDropArea && !isNullOrUndefined(this.element.querySelector('.e-groupdroparea').clientHeight)) {\n      height += this.element.querySelector('.e-groupdroparea').clientHeight;\n    }\n\n    if (this.aggregates.length > 0 && !isNullOrUndefined(this.element.querySelector('.e-summaryrow').clientHeight)) {\n      for (var i = 0; i < this.element.getElementsByClassName('e-summaryrow').length; i++) {\n        height += this.element.getElementsByClassName('e-summaryrow')[i].clientHeight;\n      }\n    }\n\n    return height;\n  };\n  /**\n   *To perform aggregate operation on a column.\n   *\n   * @param  {AggregateColumnModel} summaryCol - Pass Aggregate Column details.\n   * @param  {Object} summaryData - Pass JSON Array for which its field values to be calculated.\n   * @returns {number} returns the summary values\n   */\n\n\n  Grid.prototype.getSummaryValues = function (summaryCol, summaryData) {\n    return DataUtil.aggregates[summaryCol.type.toLowerCase()](summaryData, summaryCol.field);\n  };\n  /**\n   * Sends a Post request to export Grid to Excel file in server side.\n   *\n   * @param  {string} url - Pass Url for server side excel export action.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.serverExcelExport = function (url) {\n    this.isExcel = true;\n    this.exportGrid(url);\n  };\n  /**\n   * Sends a Post request to export Grid to Pdf file in server side.\n   *\n   * @param  {string} url - Pass Url for server side pdf export action.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.serverPdfExport = function (url) {\n    this.isExcel = false;\n    this.exportGrid(url);\n  };\n  /**\n   * Sends a Post request to export Grid to CSV file in server side.\n   *\n   * @param  {string} url - Pass Url for server side pdf export action.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.serverCsvExport = function (url) {\n    this.isExcel = true;\n    this.exportGrid(url);\n  };\n  /**\n   * @param {string} url - Defines exporting url\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.exportGrid = function (url) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    var grid = this;\n    var query = grid.getDataModule().generateQuery(true);\n    var state = new UrlAdaptor().processQuery(new DataManager({\n      url: ''\n    }), query);\n    var queries = JSON.parse(state.data); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    var gridModel = JSON.parse(this.addOnPersist(['allowGrouping', 'allowPaging', 'pageSettings', 'sortSettings', 'allowPdfExport', 'allowExcelExport', 'aggregates', 'filterSettings', 'groupSettings', 'columns', 'locale', 'searchSettings']));\n    var include = ['field', 'headerText', 'type', 'format', 'visible', 'foreignKeyValue', 'foreignKeyField', 'template', 'index', 'width', 'textAlign', 'headerTextAlign', 'columns'];\n    gridModel.filterSettings.columns = queries.where;\n    gridModel.searchSettings.fields = queries.search && queries.search[0]['fields'] || [];\n    gridModel.sortSettings.columns = queries.sorted;\n    gridModel.columns = this.setHeaderText(gridModel.columns, include);\n    var form = this.createElement('form', {\n      id: 'ExportForm',\n      styles: 'display:none;'\n    });\n    var gridInput = this.createElement('input', {\n      id: 'gridInput',\n      attrs: {\n        name: 'gridModel'\n      }\n    });\n    gridInput.value = JSON.stringify(gridModel);\n    form.method = 'POST';\n    form.action = url;\n    form.appendChild(gridInput);\n    document.body.appendChild(form);\n    form.submit();\n    form.remove();\n  };\n  /**\n   * @param {Column[]} columns - Defines array of columns\n   * @param {string[]} include - Defines array of sting\n   * @returns {Column[]} returns array of columns\n   * @hidden\n   */\n\n\n  Grid.prototype.setHeaderText = function (columns, include) {\n    for (var i = 0; i < columns.length; i++) {\n      var column = this.getColumnByUid(columns[i].uid);\n      columns[i].headerText = column.headerText;\n\n      if (!isNullOrUndefined(column.template)) {\n        columns[i].template = 'true';\n      }\n\n      if (columns[i].format) {\n        columns[i].format = getNumberFormat(this.getFormat(columns[i].format), columns[i].type, this.isExcel);\n      }\n\n      if (columns[i].columns) {\n        this.setHeaderText(columns[i].columns, include);\n      }\n\n      var keys = Object.keys(columns[i]);\n\n      for (var j = 0; j < keys.length; j++) {\n        if (include.indexOf(keys[j]) < 0) {\n          delete columns[i][keys[j]];\n        }\n      }\n    }\n\n    return columns;\n  };\n\n  Grid.prototype.getFormat = function (format) {\n    return typeof format === 'object' ? !isNullOrUndefined(format.format) ? format.format : format.skeleton : format;\n  };\n  /**\n   * @hidden\n   * @returns {boolean} returns the isCollapseStateEnabled\n   */\n\n\n  Grid.prototype.isCollapseStateEnabled = function () {\n    var isExpanded = 'isExpanded';\n    return this[isExpanded] === false;\n  };\n  /**\n   * @param {number} key - Defines the primary key value.\n   * @param {Object} rowData - Defines the rowData\n   * @returns {void}\n   */\n\n\n  Grid.prototype.updateRowValue = function (key, rowData) {\n    var args = {\n      requestType: 'save',\n      data: rowData\n    };\n    this.showSpinner();\n    this.notify(events.updateData, args);\n    this.refresh();\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n\n\n  Grid.prototype.setForeignKeyData = function () {\n    this.dataBind();\n    var colpending = this.getDataModule().getForeignKeyDataState();\n\n    if (colpending.isPending) {\n      this.getDataModule().setForeignKeyDataState({});\n      colpending.resolver();\n    } else {\n      this.getDataModule().setForeignKeyDataState({\n        isDataChanged: false\n      });\n\n      if (this.contentModule || this.headerModule) {\n        this.renderModule.render();\n      }\n    }\n  };\n  /**\n   * @param {string} field - specifies the field\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.resetFilterDlgPosition = function (field) {\n    var header = this.getColumnHeaderByField(field);\n\n    if (header) {\n      var target = header.querySelector('.e-filtermenudiv');\n      var filterDlg = this.element.querySelector('.e-filter-popup');\n\n      if (target && filterDlg) {\n        var gClient = this.element.getBoundingClientRect();\n        var fClient = target.getBoundingClientRect();\n\n        if (filterDlg) {\n          if (filterDlg.offsetWidth + fClient.right > gClient.right) {\n            filterDlg.style.left = (fClient.right - filterDlg.offsetWidth - gClient.left).toString() + 'px';\n          } else {\n            filterDlg.style.left = (fClient.right - gClient.left).toString() + 'px';\n          }\n        }\n      }\n    }\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n\n\n  Grid.prototype.renderTemplates = function () {\n    var portals = 'portals';\n    this.notify('reactTemplateRender', this[portals]);\n    this.renderReactTemplates();\n  };\n  /**\n   * Apply the changes to the Grid without refreshing the rows.\n   *\n   * @param  {BatchChanges} changes - Defines changes to be updated.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.batchUpdate = function (changes) {\n    this.processRowChanges(changes);\n  };\n  /**\n   * Apply the changes to the Grid in one batch after 50ms without refreshing the rows.\n   *\n   * @param  {BatchChanges} changes - Defines changes to be updated.\n   * @returns {void}\n   */\n\n\n  Grid.prototype.batchAsyncUpdate = function (changes) {\n    this.processBulkRowChanges(changes);\n  };\n\n  Grid.prototype.processBulkRowChanges = function (changes) {\n    var _this = this;\n\n    if (!this.dataToBeUpdated) {\n      this.dataToBeUpdated = Object.assign({\n        addedRecords: [],\n        changedRecords: [],\n        deletedRecords: []\n      }, changes);\n      setTimeout(function () {\n        _this.processRowChanges(_this.dataToBeUpdated);\n\n        _this.dataToBeUpdated = null;\n      }, this.asyncTimeOut);\n    } else {\n      var loopstring = [literals.addedRecords, literals.changedRecords, literals.deletedRecords];\n      var keyField = this.getPrimaryKeyFieldNames()[0];\n\n      for (var i = 0; i < loopstring.length; i++) {\n        if (changes[loopstring[i]]) {\n          compareChanges(this, changes, loopstring[i], keyField);\n        }\n      }\n    }\n  };\n\n  Grid.prototype.processRowChanges = function (changes) {\n    var _this = this;\n\n    var keyField = this.getPrimaryKeyFieldNames()[0];\n    changes = Object.assign({\n      addedRecords: [],\n      changedRecords: [],\n      deletedRecords: []\n    }, changes);\n    var promise = this.getDataModule().saveChanges(changes, keyField, {}, this.getDataModule().generateQuery().requiresCount());\n\n    if (this.getDataModule().isRemote()) {\n      promise.then(function () {\n        _this.setNewData();\n      });\n    } else {\n      this.setNewData();\n    }\n  };\n\n  Grid.prototype.setNewData = function () {\n    var _this = this;\n\n    var oldValues = JSON.parse(JSON.stringify(this.getCurrentViewRecords()));\n    var getData = this.getDataModule().getData({}, this.getDataModule().generateQuery().requiresCount());\n    getData.then(function (e) {\n      _this.bulkRefresh(e.result, oldValues, e.count);\n    });\n  };\n\n  Grid.prototype.deleteRowElement = function (row) {\n    var tr = this.getRowElementByUID(row.uid);\n    var index = parseInt(tr.getAttribute(literals.ariaRowIndex), 10);\n    remove(tr);\n\n    if (this.getFrozenColumns()) {\n      var mtr = this.getMovableRows()[index];\n      remove(mtr);\n    }\n  };\n\n  Grid.prototype.bulkRefresh = function (result, oldValues, count) {\n    var _this = this;\n\n    var rowObj = this.getRowsObject();\n    var keyField = this.getPrimaryKeyFieldNames()[0];\n\n    var _loop_3 = function (i) {\n      if (!result.filter(function (e) {\n        return e[keyField] === rowObj[i].data[keyField];\n      }).length) {\n        this_3.deleteRowElement(rowObj[i]);\n        rowObj.splice(i, 1);\n        i--;\n      }\n\n      out_i_1 = i;\n    };\n\n    var this_3 = this,\n        out_i_1;\n\n    for (var i = 0; i < rowObj.length; i++) {\n      _loop_3(i);\n\n      i = out_i_1;\n    }\n\n    var _loop_4 = function (i) {\n      var isRowExist;\n      oldValues.filter(function (e) {\n        if (e[keyField] === result[i][keyField]) {\n          if (e !== result[i]) {\n            _this.setRowData(result[i][keyField], result[i]);\n          }\n\n          isRowExist = true;\n        }\n      });\n\n      if (!isRowExist) {\n        this_4.renderRowElement(result[i], i);\n      }\n    };\n\n    var this_4 = this;\n\n    for (var i = 0; i < result.length; i++) {\n      _loop_4(i);\n    }\n\n    this.currentViewData = result;\n    var rows = [].slice.call(this.getContentTable().getElementsByClassName(literals.row));\n    resetRowIndex(this, this.getRowsObject(), rows);\n    setRowElements(this);\n\n    if (this.allowPaging) {\n      this.notify(events.inBoundModelChanged, {\n        module: 'pager',\n        properties: {\n          totalRecordsCount: count\n        }\n      });\n    }\n  };\n\n  Grid.prototype.renderRowElement = function (data, index) {\n    var row = new RowRenderer(this.serviceLocator, null, this);\n    var model = new RowModelGenerator(this);\n    var modelData = model.generateRows([data]);\n    var tr = row.render(modelData[0], this.getColumns());\n    var mTr;\n    var mTbody;\n    this.addRowObject(modelData[0], index);\n    var tbody = this.getContentTable().querySelector(literals.tbody);\n\n    if (tbody.querySelector('.e-emptyrow')) {\n      var emptyRow = tbody.querySelector('.e-emptyrow');\n      emptyRow.parentNode.removeChild(emptyRow);\n\n      if (this.getFrozenColumns()) {\n        var moveTbody = this.getContent().querySelector('.' + literals.movableContent).querySelector(literals.tbody);\n        moveTbody.firstElementChild.parentNode.removeChild(moveTbody.firstElementChild);\n      }\n    }\n\n    if (this.getFrozenColumns()) {\n      mTr = renderMovable(tr, this.getFrozenColumns(), this);\n\n      if (this.frozenRows && index < this.frozenRows) {\n        mTbody = this.getHeaderContent().querySelector('.' + literals.movableHeader).querySelector(literals.tbody);\n      } else {\n        mTbody = this.getContent().querySelector('.' + literals.movableContent).querySelector(literals.tbody);\n      }\n\n      mTbody.appendChild(mTr);\n\n      if (this.height === 'auto') {\n        this.notify(events.frozenHeight, {});\n      }\n    }\n\n    if (this.frozenRows && index < this.frozenRows) {\n      tbody = this.getHeaderContent().querySelector(literals.tbody);\n    } else {\n      tbody = this.getContent().querySelector(literals.tbody);\n    }\n\n    tbody = this.getContent().querySelector(literals.tbody);\n    tbody.appendChild(tr);\n  };\n\n  Grid.prototype.addRowObject = function (row, index) {\n    var frzCols = this.getFrozenColumns();\n\n    if (frzCols) {\n      var mRows = this.getMovableRowsObject();\n      var mRow = row.clone();\n      mRow.cells = mRow.cells.slice(frzCols);\n      row.cells = row.cells.slice(0, frzCols);\n      mRows.splice(index, 1, mRow);\n    }\n\n    this.getRowsObject().splice(index, 1, row);\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n\n\n  Grid.prototype.updateVisibleExpandCollapseRows = function () {\n    var rows = this.getRowsObject();\n\n    for (var i = 0, len = rows.length; i < len; i++) {\n      if ((rows[i].isDataRow || rows[i].isAggregateRow) && this.getRowElementByUID(rows[i].uid).style.display === 'none') {\n        rows[i].visible = false;\n      } else {\n        rows[i].visible = true;\n      }\n    }\n  };\n  /**\n   * @param {string | number} height - specifies the height\n   * @returns {number | string} - specifies the height number\n   * @hidden\n   */\n\n\n  Grid.prototype.getHeight = function (height) {\n    if (!Number.isInteger(height) && height.indexOf('%') !== -1) {\n      height = parseInt(height, 10) / 100 * this.element.clientHeight;\n    } else if (!Number.isInteger(height) && this.height !== 'auto') {\n      height = parseInt(height, 10);\n    } else {\n      height = this.height;\n    }\n\n    return height;\n  };\n  /**\n   * @hidden\n   * @returns {Element} - returns frozen right content\n   */\n\n\n  Grid.prototype.getFrozenRightContent = function () {\n    return this.getContent().querySelector('.e-frozen-right-content');\n  };\n  /**\n   * @hidden\n   * @returns {Element} - returns frozen right header\n   */\n\n\n  Grid.prototype.getFrozenRightHeader = function () {\n    return this.getHeaderContent().querySelector('.e-frozen-right-header');\n  };\n  /**\n   * @hidden\n   * @returns {Element} - returns movable header tbody\n   */\n\n\n  Grid.prototype.getMovableHeaderTbody = function () {\n    return this.getMovableVirtualHeader().querySelector(literals.tbody);\n  };\n  /**\n   * @hidden\n   * @returns {Element} - returns movable content tbody\n   */\n\n\n  Grid.prototype.getMovableContentTbody = function () {\n    return this.getMovableVirtualContent().querySelector(literals.tbody);\n  };\n  /**\n   * @hidden\n   * @returns {Element} - returns frozen header tbody\n   */\n\n\n  Grid.prototype.getFrozenHeaderTbody = function () {\n    return this.getFrozenVirtualHeader().querySelector(literals.tbody);\n  };\n  /**\n   * @hidden\n   * @returns {Element} - returns frozen left content tbody\n   */\n\n\n  Grid.prototype.getFrozenLeftContentTbody = function () {\n    return this.getFrozenVirtualContent().querySelector(literals.tbody);\n  };\n  /**\n   * @hidden\n   * @returns {Element} - returns frozen right header tbody\n   */\n\n\n  Grid.prototype.getFrozenRightHeaderTbody = function () {\n    return this.getFrozenRightHeader().querySelector(literals.tbody);\n  };\n  /**\n   * @returns {Element} returns frozen right content tbody\n   * @hidden\n   */\n\n\n  Grid.prototype.getFrozenRightContentTbody = function () {\n    var cnt = this.getFrozenRightContent();\n    var tbody;\n\n    if (cnt) {\n      tbody = this.getFrozenRightContent().querySelector(literals.tbody);\n    }\n\n    return tbody;\n  };\n  /**\n   * @param {boolean} isCustom - Defines custom filter dialog open\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.showResponsiveCustomFilter = function (isCustom) {\n    if (this.filterModule) {\n      this.filterModule.showCustomFilter(isCustom || this.rowRenderingMode === 'Vertical');\n    }\n  };\n  /**\n   * @param {boolean} isCustom - Defines custom sort dialog open\n   * @returns {void}\n   * @hidden\n   */\n\n\n  Grid.prototype.showResponsiveCustomSort = function (isCustom) {\n    if (this.sortModule) {\n      this.sortModule.showCustomSort(isCustom || this.rowRenderingMode === 'Vertical');\n    }\n  };\n  /**\n   * To manually show the vertical row mode filter dialog\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.showAdaptiveFilterDialog = function () {\n    if (this.enableAdaptiveUI) {\n      this.showResponsiveCustomFilter(true);\n    }\n  };\n  /**\n   * To manually show the vertical row sort filter dialog\n   *\n   * @returns {void}\n   */\n\n\n  Grid.prototype.showAdaptiveSortDialog = function () {\n    if (this.enableAdaptiveUI) {\n      this.showResponsiveCustomSort(true);\n    }\n  };\n  /**\n   * @param {boolean} isColVirtualization - Defines column virtualization\n   * @returns {Column[]} returns array of column models\n   * @hidden\n   */\n\n\n  Grid.prototype.getCurrentVisibleColumns = function (isColVirtualization) {\n    var cols = [];\n    var gridCols = isColVirtualization ? this.getColumns() : this.columnModel;\n\n    for (var _i = 0, gridCols_1 = gridCols; _i < gridCols_1.length; _i++) {\n      var col = gridCols_1[_i];\n\n      if (col.visible) {\n        cols.push(col);\n      }\n    }\n\n    return cols;\n  };\n\n  Grid.prototype.enableInfiniteAggrgate = function () {\n    if (this.enableInfiniteScrolling && this.groupSettings.columns.length && !this.groupSettings.disablePageWiseAggregates) {\n      this.setProperties({\n        groupSettings: {\n          disablePageWiseAggregates: true\n        }\n      }, true);\n    }\n  };\n\n  var Grid_1;\n\n  __decorate([Property()], Grid.prototype, \"parentDetails\", void 0);\n\n  __decorate([Property([])], Grid.prototype, \"columns\", void 0);\n\n  __decorate([Property(true)], Grid.prototype, \"enableAltRow\", void 0);\n\n  __decorate([Property(true)], Grid.prototype, \"enableHover\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"enableAutoFill\", void 0);\n\n  __decorate([Property(true)], Grid.prototype, \"allowKeyboard\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"enableStickyHeader\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowTextWrap\", void 0);\n\n  __decorate([Complex({}, TextWrapSettings)], Grid.prototype, \"textWrapSettings\", void 0);\n\n  __decorate([Complex({}, ResizeSettings)], Grid.prototype, \"resizeSettings\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowPaging\", void 0);\n\n  __decorate([Complex({}, PageSettings)], Grid.prototype, \"pageSettings\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"enableVirtualization\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"enableColumnVirtualization\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"enableInfiniteScrolling\", void 0);\n\n  __decorate([Complex({}, SearchSettings)], Grid.prototype, \"searchSettings\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowSorting\", void 0);\n\n  __decorate([Property('Ellipsis')], Grid.prototype, \"clipMode\", void 0);\n\n  __decorate([Property(true)], Grid.prototype, \"allowMultiSorting\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowExcelExport\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowPdfExport\", void 0);\n\n  __decorate([Complex({}, SortSettings)], Grid.prototype, \"sortSettings\", void 0);\n\n  __decorate([Complex({}, InfiniteScrollSettings)], Grid.prototype, \"infiniteScrollSettings\", void 0);\n\n  __decorate([Property(true)], Grid.prototype, \"allowSelection\", void 0);\n\n  __decorate([Property(-1)], Grid.prototype, \"selectedRowIndex\", void 0);\n\n  __decorate([Complex({}, SelectionSettings)], Grid.prototype, \"selectionSettings\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowFiltering\", void 0);\n\n  __decorate([Property('Horizontal')], Grid.prototype, \"rowRenderingMode\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"enableAdaptiveUI\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowReordering\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowResizing\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowRowDragAndDrop\", void 0);\n\n  __decorate([Complex({}, RowDropSettings)], Grid.prototype, \"rowDropSettings\", void 0);\n\n  __decorate([Complex({}, FilterSettings)], Grid.prototype, \"filterSettings\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"allowGrouping\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"enableImmutableMode\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"showColumnMenu\", void 0);\n\n  __decorate([Complex({}, GroupSettings)], Grid.prototype, \"groupSettings\", void 0);\n\n  __decorate([Complex({}, EditSettings)], Grid.prototype, \"editSettings\", void 0);\n\n  __decorate([Collection([], AggregateRow)], Grid.prototype, \"aggregates\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"showColumnChooser\", void 0);\n\n  __decorate([Complex({}, ColumnChooserSettings)], Grid.prototype, \"columnChooserSettings\", void 0);\n\n  __decorate([Property(false)], Grid.prototype, \"enableHeaderFocus\", void 0);\n\n  __decorate([Property('auto')], Grid.prototype, \"height\", void 0);\n\n  __decorate([Property('auto')], Grid.prototype, \"width\", void 0);\n\n  __decorate([Property('Default')], Grid.prototype, \"gridLines\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"rowTemplate\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"detailTemplate\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"childGrid\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"queryString\", void 0);\n\n  __decorate([Property('AllPages')], Grid.prototype, \"printMode\", void 0);\n\n  __decorate([Property('Expanded')], Grid.prototype, \"hierarchyPrintMode\", void 0);\n\n  __decorate([Property([])], Grid.prototype, \"dataSource\", void 0);\n\n  __decorate([Property(null)], Grid.prototype, \"rowHeight\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"query\", void 0);\n\n  __decorate([Property('USD')], Grid.prototype, \"currencyCode\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"toolbar\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"contextMenuItems\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"columnMenuItems\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"toolbarTemplate\", void 0);\n\n  __decorate([Property()], Grid.prototype, \"pagerTemplate\", void 0);\n\n  __decorate([Property(0)], Grid.prototype, \"frozenRows\", void 0);\n\n  __decorate([Property(0)], Grid.prototype, \"frozenColumns\", void 0);\n\n  __decorate([Property('')], Grid.prototype, \"cssClass\", void 0);\n\n  __decorate([Property('All')], Grid.prototype, \"columnQueryMode\", void 0);\n\n  __decorate([Property({})], Grid.prototype, \"currentAction\", void 0);\n\n  __decorate([Property('20.2.39')], Grid.prototype, \"ej2StatePersistenceVersion\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"created\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"destroyed\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"load\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowDataBound\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"queryCellInfo\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"headerCellInfo\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"actionBegin\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"actionComplete\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"actionFailure\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"dataBound\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"recordDoubleClick\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"recordClick\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowSelecting\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowSelected\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowDeselecting\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowDeselected\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"cellSelecting\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"cellSelected\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"cellDeselecting\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"cellDeselected\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnSelecting\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnSelected\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnDeselecting\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnDeselected\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnDragStart\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnDrag\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnDrop\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"printComplete\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforePrint\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"pdfQueryCellInfo\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"pdfAggregateQueryCellInfo\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"excelAggregateQueryCellInfo\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"exportDetailDataBound\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"excelQueryCellInfo\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeExcelExport\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"excelExportComplete\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforePdfExport\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"pdfExportComplete\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowDragStartHelper\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"detailDataBound\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowDragStart\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowDrag\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"rowDrop\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"toolbarClick\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeOpenColumnChooser\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeOpenAdaptiveDialog\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"batchAdd\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"batchDelete\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"batchCancel\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeBatchAdd\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeBatchDelete\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeBatchSave\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beginEdit\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"commandClick\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"cellEdit\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"cellSave\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"cellSaved\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"resizeStart\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"resizing\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"resizeStop\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"keyPressed\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeDataBound\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"contextMenuOpen\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"contextMenuClick\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnMenuOpen\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnMenuClick\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"checkBoxChange\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeCopy\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforePaste\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"beforeAutoFill\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"columnDataStateChange\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"dataStateChange\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"dataSourceChanged\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"exportGroupCaption\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"lazyLoadGroupExpand\", void 0);\n\n  __decorate([Event()], Grid.prototype, \"lazyLoadGroupCollapse\", void 0);\n\n  Grid = Grid_1 = __decorate([NotifyPropertyChanges], Grid);\n  return Grid;\n}(Component);\n\nexport { Grid };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","isNullOrUndefined","setValue","getValue","Component","ChildProperty","Browser","closest","extend","addClass","removeClass","append","remove","classList","setStyleAttribute","Property","Collection","Complex","Event","NotifyPropertyChanges","L10n","EventHandler","KeyboardEvents","DataManager","DataUtil","UrlAdaptor","createSpinner","hideSpinner","showSpinner","Tooltip","iterateArrayOrObject","prepareColumns","parentsUntil","wrap","templateCompiler","isGroupAdaptive","refreshForeignData","getRowHeight","setColumnIndex","Global","ispercentageWidth","renderMovable","getNumberFormat","setRowElements","resetRowIndex","compareChanges","getCellByColAndRowIndex","performComplexDataOperation","events","Render","RenderType","RowRenderer","CellRenderer","CellRendererFactory","ServiceLocator","ValueFormatter","RendererFactory","ColumnWidthService","AriaService","FocusStrategy","PageSettings","ColumnChooserSettings","Selection","Search","ShowHide","Scroll","Print","AggregateRow","Clipboard","RowModelGenerator","literals","HeaderCellRenderer","SortDescriptor","_super","apply","SortSettings","Predicate","InfiniteScrollSettings","FilterSettings","SelectionSettings","SearchSettings","RowDropSettings","TextWrapSettings","ResizeSettings","GroupSettings","EditSettings","Grid","options","element","_this","call","isPreventScrollEvent","inViewIndexes","keyA","frozenRightCount","frozenLeftCount","tablesCount","movableCount","visibleFrozenLeft","visibleFrozenRight","visibleMovable","frozenLeftColumns","frozenRightColumns","movableColumns","media","isFreezeRefresh","tableIndex","componentRefresh","refresh","isVirtualAdaptive","vRows","vcRows","vGroupOffsets","rowUid","currentViewData","isManualRefresh","isAutoFitColumns","enableDeepCompare","totalDataRecordsCount","disableSelectedRecords","partialSelectedRecords","lockcolPositionCount","prevPageMoving","pageTemplateChange","isAutoGen","mediaBindInstance","commandDelIndex","undefined","asyncTimeOut","isExportGrid","enableLogger","needsID","Grid_1","Inject","mergePersistGridData","getPersistData","keyEntity","ignoreOnPersist","pageSettings","filterSettings","groupSettings","searchSettings","sortSettings","columns","selectedRowIndex","scrollPosition","currentObject","_i","_a","val","temp","template","settings","assign","setProperties","isAngular","pagerTemplate","persistData","addOnPersist","requiredModules","setFrozenCount","enableInfiniteAggrgate","modules","isDestroyed","allowFiltering","push","member","args","serviceLocator","allowExcelExport","allowPdfExport","allowSorting","sortedColumns","allowPaging","allowSelection","selectionSettings","allowReordering","allowRowDragAndDrop","allowGrouping","aggregates","isDetail","toolbar","toolbarTemplate","enableVirtualization","enableColumnVirtualization","getFrozenColumns","frozenRows","isCommandColumn","editSettings","allowAdding","allowDeleting","allowEditing","extendRequiredModules","enableInfiniteScrolling","enableLazyLoading","contextMenuItems","showColumnMenu","showColumnChooser","isForeignKeyEnabled","preRender","initProperties","initializeServices","isInitial","mediaCol","isInitialLoad","allowServerDataBinding","ignoreCollectionWatch","mergeCells","isEdit","checkAllRows","isCheckBoxSelection","isPersistSelection","filterOperators","contains","endsWith","equal","greaterThan","greaterThanOrEqual","lessThan","lessThanOrEqual","notEqual","startsWith","defaultLocale","EmptyRecord","True","False","InvalidFilterMessage","GroupDropArea","UnGroup","UnGroupButton","GroupDisable","FilterbarTitle","EmptyDataSourceError","Add","Edit","Cancel","Update","Delete","Pdfexport","Excelexport","Wordexport","Csvexport","Columnchooser","Save","Item","Items","EditOperationAlert","DeleteOperationAlert","SaveButton","OKButton","CancelButton","EditFormTitle","AddFormTitle","BatchSaveConfirm","BatchSaveLostChanges","ConfirmDelete","CancelEdit","ChooseColumns","SearchColumns","Matchs","FilterButton","ClearButton","StartsWith","EndsWith","Contains","Equal","NotEqual","LessThan","LessThanOrEqual","GreaterThan","GreaterThanOrEqual","ChooseDate","EnterValue","Copy","Group","Ungroup","autoFitAll","autoFit","AutoFitAll","AutoFit","Export","FirstPage","LastPage","PreviousPage","NextPage","SortAscending","SortDescending","EditRecord","DeleteRecord","FilterMenu","SelectAll","Blanks","FilterTrue","FilterFalse","NoResult","ClearFilter","Clear","NumberFilter","TextFilter","DateFilter","DateTimeFilter","MatchCase","Between","CustomFilter","CustomFilterPlaceHolder","CustomFilterDatePlaceHolder","AND","OR","ShowRowsWhere","FilterMenuDialogARIA","ExcelFilterDialogARIA","DialogEditARIA","ColumnChooserDialogARIA","ColumnMenuDialogARIA","CustomFilterDialogARIA","SortAtoZ","SortZtoA","SortByOldest","SortByNewest","SortSmallestToLargest","SortLargestToSmallest","Sort","keyConfigs","downArrow","upArrow","rightArrow","leftArrow","shiftDown","shiftUp","shiftRight","shiftLeft","home","end","escape","ctrlHome","ctrlEnd","pageUp","pageDown","ctrlAltPageUp","ctrlAltPageDown","altPageUp","altPageDown","altDownArrow","altUpArrow","ctrlDownArrow","ctrlUpArrow","ctrlPlusA","ctrlPlusP","insert","delete","f2","enter","ctrlEnter","shiftEnter","tab","shiftTab","space","ctrlPlusC","ctrlShiftPlusH","ctrlSpace","ctrlLeftArrow","ctrlRightArrow","render","log","ariaService","setOptions","datarole","cssClass","createElement","renderModule","searchModule","scrollModule","notify","initialLoad","getDataModule","dataManager","dataSource","offline","url","trigger","load","enablePersistence","columnsPrepared","getMediaColumns","checkLockColumns","getColumns","processModel","gridRender","wireEvents","addListener","updateDefaultCursor","updateStackedFilter","initialEnd","refreshing","type","getHeaderContent","getElementsByClassName","add","gcol","getShowHideService","getService","index","hideAtMedia","visible","pushMediaColumn","col","uid","window","matchMedia","mediaQueryUpdate","bind","updateMediaColumns","getColumnIndexByUid","splice","columnIndex","e","some","mediaColumn","matches","invokedFromMedia","showHider","show","headerText","hide","refreshMediaCol","footerContent","querySelector","gridFooter","scrollHeight","height","checkboxColumn","filter","checkboxMode","rowRenderingMode","enableHover","enableAdaptiveUI","removeMediaListener","removeListener","eventInitializer","destroy","gridElement","hasGridChild","gridHeader","gridContent","unwireEvents","destroyDependentModules","isReact","isVue","destroyTemplate","toolTipObj","isIE","innerHTML","keyboardModule","focusModule","clipboardModule","printModule","getModuleName","enableBoxSelection","enableAutoFill","cellSelectionMode","setCSSClass","oldCSSClass","split","onPropertyChanged","newProp","oldProp","requireRefresh","requireGridRefresh","freezeRefresh","checkCursor","requestType","isEllipsisTooltip","close","properties","keys","indexOf","columnModel","updateColumnObject","properties_1","prop","uiUpdate","module","enable","inBoundModelChanged","currentPage","pageSize","totalRecordsCount","refreshHeader","width","headerModule","refreshUI","selectionModule","updateAutoFillPosition","rowTemplateFn","rowTemplate","detailTemplateFn","detailTemplate","oldProperties","isQueryInvokedFromData","extendedPropertyChange","modelChanged","maintainSelection","updateRTL","ej2_instances","enableRtl","dataBind","removePadding","setPadding","toolbarModule","getToolbar","contextMenuModule","getContextMenu","columnMenuModule","getColumnMenu","showFilterBarOperator","rtlUpdated","updateResizeLines","rowHeight","updateGridLines","columnMenuItems","allowTextWrap","applyTextWrap","removeTextWrap","freezeRender","case","isModeChg","pending_1","getState","getPrototypeOf","deepWatch","pKeyField","getPrimaryKeyFieldNames","props","setRowData","isPending","gResult","result","names","group","count","setState","resolver","isDataChanged","dataSourceModified","beforeRefreshOnDataChange","scrollRefresh","action","isSelectedRowIndexUpdating","selectRow","widthService","setWidthToTable","setFullScreenDialog","enableVerticalRendering","rowModeChange","addStickyListener","enableStickyHeader","fn_1","off","contentReady","on","muteOnChange","filterModule","refreshFilter","setTablesCount","frozenCols","frozenLeft","getFrozenLeftColumnsCount","frozenRight","getFrozenRightColumnsCount","getTablesCount","headerCells","slice","querySelectorAll","stdHdrCell","cols","cells","contentModule","getHeaderCells","cell","updateColumnModel","len","updateColumnLevelFrozen","updateFrozenColumns","updateLockableColumns","leftCols","rightCols","movableCols","freeze","freezeTable","concat","directFrozenCount","frozenColumns","totalFrozenCount","isFrozen","getFrozenLeftCount","isFrozenGrid","getFrozenMode","frozenName","frozenCount","lockColumn","isRefresh","inview","map","v","vLen","ensureFrozenCols","getStackedHeaderColumnByHeaderText","stackedHeader","individualColumn","field","stackedColumn","getColumnIndexesInView","getQuery","query","getLocaleConstants","setColumnIndexesInView","indexes","getVisibleColumns","getCurrentVisibleColumns","getPanel","setGridHeaderContent","setPanel","getContentTable","getTable","setGridContentTable","setTable","getContent","setGridContent","getHeaderTable","setGridHeaderTable","getFooterContent","footerElement","getFooterContentTable","firstChild","getPager","gridPager","setGridPager","getRowByIndex","getMovableRowByIndex","getFrozenRowByIndex","getFrozenDataRows","getRows","getRowElements","getFrozenRightRowByIndex","getRowInfo","ele","rowCell","row","rowObj","getRowObjectFromUID","getAttribute","rowIndex","parseInt","ariaRowIndex","rowData","data","cellIndex","ariaColIndex","isNaN","row_1","frzCols","tableName","getFreezeTableName","rows","getIndentCount","getMovableRows","getFrozenRightRows","rowsObject","column","getMovableRowElements","getFrozenRightRowElements","getDataRows","getAllDataRows","includeAdd","tbody","getFrozenLeftContentTbody","children","hdrTbody","frozenHeader","freezeRows","addMovableRows","dataRows","generateDataRows","fRows","mrows","includAdd","dRows","isCollapseStateEnabled","getMovableDataRows","getAllMovableDataRows","movableContent","movableHeader","getAllFrozenDataRows","frozenContent","getFrozenRightDataRows","getAllFrozenRightDataRows","setCellValue","value","rowIdx","rowuID","isRight","pkName","fieldIdx","getColumnIndexByField","getColumnByField","rowObjects","getFrozenRightRowsObject","selectedRow","tr","left","movable","getMovableColumnsCount","isRowDragable","frIdx","td","getCellFromIndex","Idx","childGrid","sRow","refreshTD","refreshFooterRenderer","groupAggregates","queryCellInfo","refreshReactColumnTemplateByUid","columnUid","clearTemplate","indent","getNormalizedColumnIndex","j","rowsObj","isDataRow","cellRenderer","refreshReactHeaderTemplateByUid","headerCellRenderer","rowRenderer","changes","getForeignKeyColumns","getColumnByIndex","getMovableCellFromIndex","getFrozenRightCellFromIndex","getColumnHeaderByIndex","getMovableColumnHeaderByIndex","getMovableVirtualHeader","getFrozenRightColumnHeaderByIndex","getFrozenRightHeader","getFrozenLeftColumnHeaderByIndex","getFrozenVirtualHeader","isMovable","isFrozenRight","rowObject","rows_1","getRowsObject","getMovableRowsObject","getColumnHeaderByField","getColumnHeaderByUid","parentElement","item","getColumnByUid","getStackedColumns","columns_1","getUidByColumnField","rowDropSettings","targetID","getColumnFieldNames","columnNames","getRowTemplate","getDetailTemplate","getEditTemplate","editTemplateFn","getEditHeaderTemplate","editHeaderTemplateFn","getEditFooterTemplate","editFooterTemplateFn","k","isPrimaryKey","getSelectedRows","selectedRecords","getSelectedRowIndexes","selectedRowIndexes","getSelectedRowCellIndexes","selectedRowCellIndexes","getSelectedRecords","getSelectedColumnsUid","selectedColumnsIndexes","showColumns","showBy","hideColumns","hideBy","getFrozenCount","splitFrozenCount","getVisibleFrozenLeftCount","getVisibleFrozenRightCount","getVisibleMovableCount","getFrozenRightColumns","getFrozenLeftColumns","getMovableColumns","getVisibleFrozenColumns","getVisibleFrozenColumnsCount","getVisibleFrozenCount","getFilterUIInfo","visibleFrozenColumns","cnt","goToPage","pageNo","pagerModule","updateExternalMessage","message","sortColumn","columnName","direction","isMultiSort","sortModule","clearSorting","removeSortColumn","clearGridActions","filterByColumn","fieldName","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","fields","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","rowIndexes","clearSelection","selectCell","selectCellsByRange","startIndex","endIndex","search","searchString","print","deleteRecord","fieldname","editModule","startEdit","endEdit","closeEdit","addRecord","deleteRow","editCell","saveCell","updateCell","updateRow","getBatchChanges","enableToolbarItems","items","isEnable","enableItems","copy","withHeader","recalcIndentWidth","indentWidth","offsetWidth","headerCol","colGroup","childNodes","contentCol","perPixel","parentOffset","applyWidth","newWidth","toFixed","style","columnWidthChanged","setAttribute","resetIndentWidth","removeAttribute","setWidthToColumns","minWidth","tgridWidth","getTableWidth","setMinwidthBycalculation","refreshFrozenScrollbar","textWrapSettings","wrapMode","refreshHandlers","reorderColumns","fromFName","toFName","reorderModule","reorderColumnByIndex","fromIndex","toIndex","reorderColumnByTargetIndex","reorderRows","fromIndexes","rowDragAndDropModule","refreshDataSource","disableRowDD","headerTable","contentTable","headerRows","disValue","firstElementChild","autoFitColumns","fieldNames","resizeModule","createColumnchooser","x","y","columnChooserModule","renderColumnChooser","register","localeObj","locale","valueFormatterService","gCols","sCols","flag","_loop_1","sLen","isFromGroup","this_1","showGroupedColumn","moduleName","headerTemplate","footerTemplate","parentDetails","parentKeyFieldValue","where","queryString","initForeignColumn","initForeignKeyColumn","isDevice","rendererFactory","getRenderer","Header","Content","createGridPopUpElement","createTooltip","dataReady","setWidth","setHeight","popup","className","styles","content","attrs","tabIndex","appendChild","gridLines","allowResizing","opensOn","getTooltipStatus","headerDivTag","htable","createTable","ctable","table","getBoundingClientRect","document","body","removeChild","mouseMoveHandler","prevElement","tagName","elemNames","innerText","disableHtmlEncode","enableHtmlParse","open","hoverFrozenRows","clipMode","scrollHandler","tag","myTableDiv","cssText","mySubDiv","myTable","role","myTr","mytd","onKeyPressed","mouseClickHandler","focusOutHandler","dblClickHandler","keyPressHandler","allowKeyboard","keyAction","keyActionHandler","eventName","tapEvent","keyDownHandler","headerRefreshed","dataBoundFunction","addEventListener","dataBound","keyPressed","removeEventListener","getCurrentViewRecords","records","isChildGrid","touches","checkEdit","preventDefault","cancel","recordClick","click","mode","editedRow","addedRow","grid","id","dataRow","recordDoubleClick","dblclick","display","filterClear","relatedTarget","ariaOwns","keyPress","editNextValCell","editFormValidate","persistedData","getLocalData","dataObj","JSON","parse","isProtectedOnChange","keys_1","isArray","mergeColumns","storedColumn","storedColumns","_loop_2","localCol","tCol","this_2","commands","commandsTemplate","foreignKeyValue","presskey","stopImmediatePropagation","altKey","keyCode","groupCollapse","collapse","currentInfo","elementToFocus","focus","focusContent","addOutline","enterKeyHandler","setInjectedModules","injectedModules","autoCol","isForeignColumn","refreshColumns","fCnt","frCnt","isColFrozen","mTbl","getMovableContent","cloneNode","insertBefore","frTbl","getFrozenRightContent","colGrp","scrollLeft","getMovableHeader","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","groupColumn","groupModule","groupExpandAll","expandAll","groupCollapseAll","collapseAll","clearGrouping","ungroupColumn","openColumnChooser","detailCollapseAll","detailRowModule","detailExpandAll","clearCellSelection","clearRowSelection","selectCells","rowCellIndexes","selectRowsByRange","isContextMenuOpen","isOpen","ensureModuleInjected","getInjectedModules","propertyNames","loggerModule","applyBiggerTheme","getPreviousRowData","previousRowData","hideScroll","scrollBar","clientHeight","overflowY","mvblScrollBar","mvblChild","frozenHeight","getRowIndexByPrimaryKey","isDetailRow","isCaptionRow","pKvalue","grabColumnByFieldFromAllCols","grabColumnByUidFromAllCols","getFilteredRecords","generateQuery","isRemote","getData","executeLocal","getUserAgent","userAgent","toLowerCase","test","timer","setTimeout","clearTimeout","doubleTap","getRowUid","prefix","getMovableVirtualContent","getFrozenVirtualContent","getRowElementByUID","rowEle","mRows","frozenRigtRows","frHdr","cntRows","rows_2","getHiddenColumns","calculatePageSizeByParentHeight","containerHeight","pagesize","nonContentHeight","getNoncontentHeight","contentHeight","Math","floor","showDropArea","getSummaryValues","summaryCol","summaryData","serverExcelExport","isExcel","exportGrid","serverPdfExport","serverCsvExport","state","processQuery","queries","gridModel","include","sorted","setHeaderText","form","gridInput","name","stringify","method","submit","format","getFormat","skeleton","isExpanded","updateRowValue","updateData","setForeignKeyData","colpending","getForeignKeyDataState","setForeignKeyDataState","resetFilterDlgPosition","header","filterDlg","gClient","fClient","right","toString","renderTemplates","portals","renderReactTemplates","batchUpdate","processRowChanges","batchAsyncUpdate","processBulkRowChanges","dataToBeUpdated","addedRecords","changedRecords","deletedRecords","loopstring","keyField","promise","saveChanges","requiresCount","then","setNewData","oldValues","bulkRefresh","deleteRowElement","mtr","_loop_3","this_3","out_i_1","_loop_4","isRowExist","this_4","renderRowElement","model","modelData","generateRows","mTr","mTbody","addRowObject","emptyRow","parentNode","moveTbody","mRow","clone","updateVisibleExpandCollapseRows","isAggregateRow","getHeight","Number","isInteger","getMovableHeaderTbody","getMovableContentTbody","getFrozenHeaderTbody","getFrozenRightHeaderTbody","getFrozenRightContentTbody","showResponsiveCustomFilter","isCustom","showCustomFilter","showResponsiveCustomSort","showCustomSort","showAdaptiveFilterDialog","showAdaptiveSortDialog","isColVirtualization","gridCols","gridCols_1","disablePageWiseAggregates"],"sources":["/home/morgan/Desktop/Projets/ENT4/Jwt-Auth-pdf/react-jwt-auth/react-jwt-auth/node_modules/@syncfusion/ej2-grids/src/grid/base/grid.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { Component, ChildProperty, Browser, closest, extend } from '@syncfusion/ej2-base';\nimport { addClass, removeClass, append, remove, classList, setStyleAttribute } from '@syncfusion/ej2-base';\nimport { Property, Collection, Complex, Event, NotifyPropertyChanges, L10n } from '@syncfusion/ej2-base';\nimport { EventHandler, KeyboardEvents } from '@syncfusion/ej2-base';\nimport { DataManager, DataUtil, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner, Tooltip } from '@syncfusion/ej2-popups';\nimport { iterateArrayOrObject, prepareColumns, parentsUntil, wrap, templateCompiler, isGroupAdaptive, refreshForeignData } from './util';\nimport { getRowHeight, setColumnIndex, Global, ispercentageWidth, renderMovable, getNumberFormat } from './util';\nimport { setRowElements, resetRowIndex, compareChanges, getCellByColAndRowIndex, performComplexDataOperation } from './util';\nimport * as events from '../base/constant';\nimport { Render } from '../renderer/render';\nimport { RenderType } from './enum';\nimport { RowRenderer } from '../renderer/row-renderer';\nimport { CellRenderer } from '../renderer/cell-renderer';\nimport { CellRendererFactory } from '../services/cell-render-factory';\nimport { ServiceLocator } from '../services/service-locator';\nimport { ValueFormatter } from '../services/value-formatter';\nimport { RendererFactory } from '../services/renderer-factory';\nimport { ColumnWidthService } from '../services/width-controller';\nimport { AriaService } from '../services/aria-service';\nimport { FocusStrategy } from '../services/focus-strategy';\nimport { PageSettings } from '../models/page-settings';\nimport { ColumnChooserSettings } from '../models/column-chooser-settings';\nimport { Selection } from '../actions/selection';\nimport { Search } from '../actions/search';\nimport { ShowHide } from '../actions/show-hide';\nimport { Scroll } from '../actions/scroll';\nimport { Print } from '../actions/print';\nimport { AggregateRow } from '../models/aggregate';\nimport { Clipboard } from '../actions/clipboard';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport * as literals from '../base/string-literals';\nimport { HeaderCellRenderer } from '../renderer/header-cell-renderer';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    __decorate([\n        Property(false)\n    ], SortDescriptor.prototype, \"isFromGroup\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of Grid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property(false)\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the infinite scroll behavior of Grid.\n */\nvar InfiniteScrollSettings = /** @class */ (function (_super) {\n    __extends(InfiniteScrollSettings, _super);\n    function InfiniteScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n    return InfiniteScrollSettings;\n}(ChildProperty));\nexport { InfiniteScrollSettings };\n/**\n * Configures the filtering behavior of the Grid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"enableCaseSensitivity\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"showFilterBarOperator\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n/**\n * Configures the selection behavior of the Grid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"enableSimpleMultiRowSelection\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"allowColumnSelection\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n/**\n * Configures the search behavior of the Grid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property([])\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property('')\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property(true)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreAccent\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n/**\n * Configures the row drop settings of the Grid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n/**\n * Configures the text wrap settings of the Grid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n/**\n * Configures the resize behavior of the Grid.\n */\nvar ResizeSettings = /** @class */ (function (_super) {\n    __extends(ResizeSettings, _super);\n    function ResizeSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Normal')\n    ], ResizeSettings.prototype, \"mode\", void 0);\n    return ResizeSettings;\n}(ChildProperty));\nexport { ResizeSettings };\n/**\n * Configures the group behavior of the Grid.\n */\nvar GroupSettings = /** @class */ (function (_super) {\n    __extends(GroupSettings, _super);\n    function GroupSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], GroupSettings.prototype, \"showDropArea\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupSettings.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupSettings.prototype, \"showToggleButton\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupSettings.prototype, \"showGroupedColumn\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupSettings.prototype, \"showUngroupButton\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupSettings.prototype, \"disablePageWiseAggregates\", void 0);\n    __decorate([\n        Property([])\n    ], GroupSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"captionTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupSettings.prototype, \"enableLazyLoading\", void 0);\n    return GroupSettings;\n}(ChildProperty));\nexport { GroupSettings };\n/**\n * Configures the edit behavior of the Grid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Normal')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n/**\n * Represents the Grid component.\n * ```html\n * <div id=\"grid\"></div>\n * <script>\n *  var gridObj = new Grid({ allowPaging: true });\n *  gridObj.appendTo(\"#grid\");\n * </script>\n * ```\n */\nvar Grid = /** @class */ (function (_super) {\n    __extends(Grid, _super);\n    /**\n     * Constructor for creating the component\n     *\n     * @param {GridModel} options - specifies the options\n     * @param {string | HTMLElement} element - specifies the element\n     * @hidden\n     */\n    function Grid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.isPreventScrollEvent = false;\n        _this.inViewIndexes = [];\n        _this.keyA = false;\n        _this.frozenRightCount = 0;\n        _this.frozenLeftCount = 0;\n        _this.tablesCount = 1;\n        _this.movableCount = 0;\n        _this.visibleFrozenLeft = 0;\n        _this.visibleFrozenRight = 0;\n        _this.visibleMovable = 0;\n        _this.frozenLeftColumns = [];\n        _this.frozenRightColumns = [];\n        _this.movableColumns = [];\n        _this.media = {};\n        _this.isFreezeRefresh = false;\n        /** @hidden */\n        _this.tableIndex = 0;\n        _this.componentRefresh = Component.prototype.refresh;\n        /** @hidden */\n        _this.isVirtualAdaptive = false;\n        /** @hidden */\n        _this.vRows = [];\n        /** @hidden */\n        _this.vcRows = [];\n        /** @hidden */\n        _this.vGroupOffsets = {};\n        /** @hidden */\n        _this.rowUid = 0;\n        /**\n         * Gets the currently visible records of the Grid.\n         */\n        _this.currentViewData = [];\n        /** @hidden */\n        _this.isManualRefresh = false;\n        /** @hidden */\n        _this.isAutoFitColumns = false;\n        /** @hidden */\n        _this.enableDeepCompare = false;\n        /** @hidden */\n        _this.totalDataRecordsCount = 0;\n        /** @hidden */\n        _this.disableSelectedRecords = [];\n        /** @hidden */\n        _this.partialSelectedRecords = [];\n        /** @hidden */\n        _this.lockcolPositionCount = 0;\n        /** @hidden */\n        _this.prevPageMoving = false;\n        /** @hidden */\n        _this.pageTemplateChange = false;\n        /** @hidden */\n        _this.isAutoGen = false;\n        _this.mediaBindInstance = {};\n        /** @hidden */\n        _this.commandDelIndex = undefined;\n        /** @hidden */\n        _this.asyncTimeOut = 50;\n        /** @hidden */\n        _this.isExportGrid = false;\n        // enable/disable logger for MVC & Core\n        _this.enableLogger = true;\n        _this.needsID = true;\n        Grid_1.Inject(Selection);\n        setValue('mergePersistData', _this.mergePersistGridData, _this);\n        return _this;\n    }\n    Grid_1 = Grid;\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} returns the persist data\n     */\n    Grid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'groupSettings', 'columns', 'searchSettings', 'selectedRowIndex', 'scrollPosition'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent'],\n            groupSettings: ['showDropArea', 'showToggleButton', 'showGroupedColumn', 'showUngroupButton',\n                'disablePageWiseAggregates', 'hideCaptionCount'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: [], scrollPosition: []\n        };\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        var temp = this.pageSettings.template;\n        var settings = Object.assign({ template: undefined }, this.pageSettings);\n        this.setProperties({ pageSettings: settings }, true);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (this.isAngular) {\n            delete this.groupSettings['properties']['captionTemplate'];\n        }\n        this.pageTemplateChange = !isNullOrUndefined(this.pagerTemplate);\n        var persistData = this.addOnPersist(keyEntity);\n        settings.template = temp;\n        this.setProperties({ pageSettings: settings }, true);\n        return persistData;\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     *\n     * @returns {ModuleDeclaration[]} Returns the module Declaration\n     * @hidden\n     */\n    Grid.prototype.requiredModules = function () {\n        this.setFrozenCount();\n        this.enableInfiniteAggrgate();\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        if (this.allowFiltering) {\n            modules.push({\n                member: 'filter',\n                args: [this, this.filterSettings, this.serviceLocator]\n            });\n        }\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this, this.sortSettings, this.sortedColumns, this.serviceLocator]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this, this.selectionSettings, this.serviceLocator]\n            });\n        }\n        modules.push({\n            member: 'resize',\n            args: [this]\n        });\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.allowGrouping) {\n            modules.push({\n                member: 'group',\n                args: [this, this.groupSettings, this.sortedColumns, this.serviceLocator]\n            });\n        }\n        if (this.aggregates.length) {\n            modules.push({ member: 'aggregate', args: [this, this.serviceLocator] });\n        }\n        if (this.isDetail()) {\n            modules.push({\n                member: 'detailRow',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.toolbar || this.toolbarTemplate) {\n            modules.push({\n                member: 'toolbar',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.enableVirtualization || this.enableColumnVirtualization) {\n            modules.push({\n                member: 'virtualscroll',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.getFrozenColumns() || this.frozenRows || this.frozenRightCount || this.frozenLeftCount) {\n            modules.push({ member: 'freeze', args: [this, this.serviceLocator] });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this, this.serviceLocator]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    Grid.prototype.extendRequiredModules = function (modules) {\n        if (this.enableInfiniteScrolling) {\n            modules.push({\n                member: 'infiniteScroll',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.groupSettings.enableLazyLoading) {\n            modules.push({\n                member: 'lazyLoadGroup',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'columnChooser',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.isForeignKeyEnabled(this.columns)) {\n            modules.push({ member: 'foreignKey', args: [this, this.serviceLocator] });\n        }\n        if (this.enableLogger) {\n            modules.push({ member: 'logger', args: [this] });\n        }\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     *\n     * @returns {void}\n     * @private\n     */\n    Grid.prototype.preRender = function () {\n        this.serviceLocator = new ServiceLocator;\n        this.initProperties();\n        this.initializeServices();\n    };\n    Grid.prototype.initProperties = function () {\n        this.isInitial = true;\n        this.sortedColumns = [];\n        this.inViewIndexes = [];\n        this.mediaCol = [];\n        this.isInitialLoad = false;\n        this.allowServerDataBinding = false;\n        this.ignoreCollectionWatch = true;\n        this.mergeCells = {};\n        this.isEdit = false;\n        this.checkAllRows = 'None';\n        this.isCheckBoxSelection = false;\n        this.isPersistSelection = false;\n        this.componentRefresh = Component.prototype.refresh;\n        this.filterOperators = {\n            contains: 'contains', endsWith: 'endswith', equal: 'equal', greaterThan: 'greaterthan', greaterThanOrEqual: 'greaterthanorequal',\n            lessThan: 'lessthan', lessThanOrEqual: 'lessthanorequal', notEqual: 'notequal', startsWith: 'startswith'\n        };\n        this.defaultLocale = {\n            EmptyRecord: 'No records to display',\n            True: 'true',\n            False: 'false',\n            InvalidFilterMessage: 'Invalid Filter Data',\n            GroupDropArea: 'Drag a column header here to group its column',\n            UnGroup: 'Click here to ungroup',\n            UnGroupButton: 'Click here to ungroup',\n            GroupDisable: 'Grouping is disabled for this column',\n            FilterbarTitle: '\\'s filter bar cell',\n            EmptyDataSourceError: 'DataSource must not be empty at initial load since columns are generated from dataSource in AutoGenerate Column Grid',\n            // Toolbar Items\n            Add: 'Add',\n            Edit: 'Edit',\n            Cancel: 'Cancel',\n            Update: 'Update',\n            Delete: 'Delete',\n            Print: 'Print',\n            Pdfexport: 'PDF Export',\n            Excelexport: 'Excel Export',\n            Wordexport: 'Word Export',\n            Csvexport: 'CSV Export',\n            Search: 'Search',\n            Columnchooser: 'Columns',\n            Save: 'Save',\n            Item: 'item',\n            Items: 'items',\n            EditOperationAlert: 'No records selected for edit operation',\n            DeleteOperationAlert: 'No records selected for delete operation',\n            SaveButton: 'Save',\n            OKButton: 'OK',\n            CancelButton: 'Cancel',\n            EditFormTitle: 'Details of ',\n            AddFormTitle: 'Add New Record',\n            BatchSaveConfirm: 'Are you sure you want to save changes?',\n            BatchSaveLostChanges: 'Unsaved changes will be lost. Are you sure you want to continue?',\n            ConfirmDelete: 'Are you sure you want to Delete Record?',\n            CancelEdit: 'Are you sure you want to Cancel the changes?',\n            ChooseColumns: 'Choose Column',\n            SearchColumns: 'search columns',\n            Matchs: 'No matches found',\n            FilterButton: 'Filter',\n            ClearButton: 'Clear',\n            StartsWith: 'Starts With',\n            EndsWith: 'Ends With',\n            Contains: 'Contains',\n            Equal: 'Equal',\n            NotEqual: 'Not Equal',\n            LessThan: 'Less Than',\n            LessThanOrEqual: 'Less Than Or Equal',\n            GreaterThan: 'Greater Than',\n            GreaterThanOrEqual: 'Greater Than Or Equal',\n            ChooseDate: 'Choose a Date',\n            EnterValue: 'Enter the value',\n            Copy: 'Copy',\n            Group: 'Group by this column',\n            Ungroup: 'Ungroup by this column',\n            autoFitAll: 'Autofit all columns',\n            autoFit: 'Autofit this column',\n            AutoFitAll: 'Autofit all columns',\n            AutoFit: 'Autofit this column',\n            Export: 'Export',\n            FirstPage: 'First Page',\n            LastPage: 'Last Page',\n            PreviousPage: 'Previous Page',\n            NextPage: 'Next Page',\n            SortAscending: 'Sort Ascending',\n            SortDescending: 'Sort Descending',\n            EditRecord: 'Edit Record',\n            DeleteRecord: 'Delete Record',\n            FilterMenu: 'Filter',\n            SelectAll: 'Select All',\n            Blanks: 'Blanks',\n            FilterTrue: 'True',\n            FilterFalse: 'False',\n            NoResult: 'No matches found',\n            ClearFilter: 'Clear Filter',\n            Clear: 'Clear',\n            NumberFilter: 'Number Filters',\n            TextFilter: 'Text Filters',\n            DateFilter: 'Date Filters',\n            DateTimeFilter: 'DateTime Filters',\n            MatchCase: 'Match Case',\n            Between: 'Between',\n            CustomFilter: 'Custom Filter',\n            CustomFilterPlaceHolder: 'Enter the value',\n            CustomFilterDatePlaceHolder: 'Choose a date',\n            AND: 'AND',\n            OR: 'OR',\n            ShowRowsWhere: 'Show rows where:',\n            FilterMenuDialogARIA: 'Filter menu dialog',\n            ExcelFilterDialogARIA: 'Excel filter dialog',\n            DialogEditARIA: 'Edit dialog',\n            ColumnChooserDialogARIA: 'Column chooser dialog',\n            ColumnMenuDialogARIA: 'Column menu dialog',\n            CustomFilterDialogARIA: 'Customer filter dialog',\n            SortAtoZ: 'Sort A to Z',\n            SortZtoA: 'Sort Z to A',\n            SortByOldest: 'Sort by Oldest',\n            SortByNewest: 'Sort by Newest',\n            SortSmallestToLargest: 'Sort Smallest to Largest',\n            SortLargestToSmallest: 'Sort Largest to Smallest',\n            Sort: 'Sort'\n        };\n        this.keyConfigs = {\n            downArrow: 'downarrow',\n            upArrow: 'uparrow',\n            rightArrow: 'rightarrow',\n            leftArrow: 'leftarrow',\n            shiftDown: 'shift+downarrow',\n            shiftUp: 'shift+uparrow',\n            shiftRight: 'shift+rightarrow',\n            shiftLeft: 'shift+leftarrow',\n            home: 'home',\n            end: 'end',\n            escape: 'escape',\n            ctrlHome: 'ctrl+home',\n            ctrlEnd: 'ctrl+end',\n            pageUp: 'pageup',\n            pageDown: 'pagedown',\n            ctrlAltPageUp: 'ctrl+alt+pageup',\n            ctrlAltPageDown: 'ctrl+alt+pagedown',\n            altPageUp: 'alt+pageup',\n            altPageDown: 'alt+pagedown',\n            altDownArrow: 'alt+downarrow',\n            altUpArrow: 'alt+uparrow',\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlPlusA: 'ctrl+A',\n            ctrlPlusP: 'ctrl+P',\n            insert: 'insert',\n            delete: 'delete',\n            f2: 'f2',\n            enter: 'enter',\n            ctrlEnter: 'ctrl+enter',\n            shiftEnter: 'shift+enter',\n            tab: 'tab',\n            shiftTab: 'shift+tab',\n            space: 'space',\n            ctrlPlusC: 'ctrl+C',\n            ctrlShiftPlusH: 'ctrl+shift+H',\n            ctrlSpace: 'ctrl+space',\n            ctrlLeftArrow: 'ctrl+leftarrow',\n            ctrlRightArrow: 'ctrl+rightarrow'\n        };\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     *\n     * @returns {void}\n     * @private\n     */\n    Grid.prototype.render = function () {\n        this.log(['module_missing', 'promise_enabled', 'locale_missing', 'check_datasource_columns']);\n        this.ariaService.setOptions(this.element, { datarole: 'grid' });\n        createSpinner({ target: this.element, cssClass: this.cssClass ? this.cssClass : null }, this.createElement);\n        this.renderModule = new Render(this, this.serviceLocator);\n        this.searchModule = new Search(this);\n        this.scrollModule = new Scroll(this);\n        this.notify(events.initialLoad, {});\n        if (this.getDataModule().dataManager.dataSource.offline === true || this.getDataModule().dataManager.dataSource.url === undefined) {\n            this.isVirtualAdaptive = true;\n        }\n        this.trigger(events.load);\n        prepareColumns(this.columns, this.enableColumnVirtualization, this);\n        if (this.enablePersistence) {\n            this.notify(events.columnsPrepared, {});\n        }\n        this.getMediaColumns();\n        setColumnIndex(this.columns);\n        this.checkLockColumns(this.columns);\n        this.getColumns();\n        this.processModel();\n        this.gridRender();\n        this.wireEvents();\n        this.addListener();\n        this.updateDefaultCursor();\n        this.updateStackedFilter();\n        this.showSpinner();\n        this.notify(events.initialEnd, {});\n        if (this.refreshing) {\n            this.trigger('created');\n        }\n    };\n    /**\n     * By default, grid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.showSpinner = function () {\n        if (!this.isExportGrid) {\n            showSpinner(this.element);\n        }\n    };\n    /**\n     * By default, grid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.hideSpinner = function () {\n        if (!this.isExportGrid) {\n            hideSpinner(this.element);\n        }\n    };\n    Grid.prototype.updateStackedFilter = function () {\n        if (this.allowFiltering && this.filterSettings.type === 'FilterBar' &&\n            this.getHeaderContent().getElementsByClassName('e-stackedheadercell').length) {\n            this.getHeaderContent().classList.add('e-stackedfilter');\n        }\n        else {\n            this.getHeaderContent().classList.remove('e-stackedfilter');\n        }\n    };\n    Grid.prototype.getMediaColumns = function () {\n        if (!this.enableColumnVirtualization) {\n            var gcol = this.getColumns();\n            this.getShowHideService = this.serviceLocator.getService('showHideService');\n            if (!isNullOrUndefined(gcol)) {\n                for (var index = 0; index < gcol.length; index++) {\n                    if (!isNullOrUndefined(gcol[index].hideAtMedia) && (isNullOrUndefined(gcol[index].visible) || gcol[index].visible)) {\n                        this.pushMediaColumn(gcol[index], index);\n                    }\n                }\n            }\n        }\n    };\n    Grid.prototype.pushMediaColumn = function (col, index) {\n        this.mediaCol.push(col);\n        this.media[col.uid] = window.matchMedia(col.hideAtMedia);\n        this.mediaQueryUpdate(index, this.media[col.uid]);\n        this.mediaBindInstance[index] = this.mediaQueryUpdate.bind(this, index);\n        this.media[col.uid].addListener(this.mediaBindInstance[index]);\n    };\n    /**\n     * @param {Column} col - specifies the column\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.updateMediaColumns = function (col) {\n        if (!this.enableColumnVirtualization) {\n            var index = this.getColumnIndexByUid(col.uid);\n            for (var i = 0; i < this.mediaCol.length; i++) {\n                if (col.uid === this.mediaCol[i].uid) {\n                    this.mediaCol.splice(i, 1);\n                    return;\n                }\n            }\n            this.pushMediaColumn(col, index);\n        }\n    };\n    /**\n     * @param {number} columnIndex - specifies the column index\n     * @param {MediaQueryList} e - specifies the MediaQueryList\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.mediaQueryUpdate = function (columnIndex, e) {\n        var col = this.getColumns()[columnIndex];\n        if (this.mediaCol.some(function (mediaColumn) { return mediaColumn.uid === col.uid; })) {\n            col.visible = e.matches;\n            if (this.isInitialLoad) {\n                this.invokedFromMedia = true;\n                if (col.visible) {\n                    this.showHider.show(col.headerText, 'headerText');\n                }\n                else {\n                    this.showHider.hide(col.headerText, 'headerText');\n                }\n            }\n        }\n    };\n    Grid.prototype.refreshMediaCol = function () {\n        this.isInitialLoad = true;\n        var footerContent = this.element.querySelector('.' + literals.gridFooter);\n        if (this.aggregates.length && this.element.scrollHeight > this.height && footerContent) {\n            addClass([footerContent], ['e-footerpadding']);\n        }\n        var checkboxColumn = this.getColumns().filter(function (col) { return col.type === 'checkbox'; });\n        if (checkboxColumn.length && this.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n            this.isCheckBoxSelection = false;\n        }\n        if (this.rowRenderingMode === 'Vertical') {\n            if (this.enableHover) {\n                this.setProperties({ enableAdaptiveUI: true, enableHover: false }, true);\n                removeClass([this.element], 'e-gridhover');\n            }\n        }\n        if (this.enableAdaptiveUI && this.scrollModule) {\n            this.scrollModule.refresh();\n        }\n    };\n    Grid.prototype.removeMediaListener = function () {\n        for (var i = 0; i < this.mediaCol.length; i++) {\n            this.media[this.mediaCol[i].uid].removeListener(this.mediaBindInstance[this.mediaCol[i].index]);\n        }\n    };\n    /**\n     * For internal use only - Initialize the event handler\n     *\n     * @returns {void}\n     * @private\n     */\n    Grid.prototype.eventInitializer = function () {\n        //eventInitializer\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Grid.prototype.destroy = function () {\n        var gridElement = this.element;\n        if (!gridElement) {\n            return;\n        }\n        var hasGridChild = gridElement.querySelector('.' + literals.gridHeader) &&\n            gridElement.querySelector('.' + literals.gridContent) ? true : false;\n        if (hasGridChild) {\n            this.unwireEvents();\n        }\n        this.removeListener();\n        this.removeMediaListener();\n        this.notify(events.destroy, {});\n        this.destroyDependentModules();\n        if (this.isReact || this.isVue) {\n            this.destroyTemplate(['template']);\n        }\n        if (hasGridChild) {\n            _super.prototype.destroy.call(this);\n        }\n        this.toolTipObj.destroy();\n        if (this.isReact && !Browser.isIE) {\n            this.element.innerHTML = '';\n        }\n        var modules = ['renderModule', 'headerModule', 'contentModule', 'valueFormatterService',\n            'serviceLocator', 'ariaService', 'keyboardModule', 'widthService', 'searchModule', 'showHider',\n            'scrollModule', 'printModule', 'clipboardModule', 'focusModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        classList(this.element, [], ['e-rtl', 'e-gridhover', 'e-responsive', 'e-default', 'e-device', 'e-grid-min-height']);\n        this.isFreezeRefresh = false;\n    };\n    Grid.prototype.destroyDependentModules = function () {\n        var gridElement = this.element;\n        if (!gridElement || (!gridElement.querySelector('.' + literals.gridHeader) && !gridElement.querySelector('.' + literals.gridContent))) {\n            return;\n        }\n        this.scrollModule.destroy();\n        this.keyboardModule.destroy();\n        this.focusModule.destroy();\n        this.clipboardModule.destroy();\n        this.printModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} returns the module name\n     * @private\n     */\n    Grid.prototype.getModuleName = function () {\n        return 'grid';\n    };\n    Grid.prototype.enableBoxSelection = function () {\n        if (this.enableAutoFill) {\n            this.selectionSettings.cellSelectionMode = 'BoxWithBorder';\n            this.element.classList.add('e-afenabled');\n        }\n        else {\n            this.element.classList.remove('e-afenabled');\n        }\n    };\n    Grid.prototype.setCSSClass = function (oldCSSClass) {\n        if (this.cssClass) {\n            addClass([this.element], this.cssClass.split(' '));\n        }\n        if (oldCSSClass) {\n            removeClass([this.element], oldCSSClass.split(' '));\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {GridModel} newProp - Defines new properties\n     * @param {GridModel} oldProp - Defines old properties\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var requireRefresh = false;\n        var requireGridRefresh = false;\n        var freezeRefresh = false;\n        var checkCursor;\n        var args = { requestType: 'refresh' };\n        if (this.isDestroyed) {\n            return;\n        }\n        this.log('module_missing');\n        if (this.isEllipsisTooltip()) {\n            this.toolTipObj.close();\n        }\n        var properties = Object.keys(newProp);\n        if (properties.indexOf('columns') > -1) {\n            if (this.enableColumnVirtualization) {\n                this.columnModel = [];\n            }\n            this.updateColumnObject();\n            requireGridRefresh = true;\n        }\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'allowPaging':\n                    this.notify(events.uiUpdate, { module: 'pager', enable: this.allowPaging });\n                    requireRefresh = true;\n                    break;\n                case 'pageSettings':\n                    if (this.pageTemplateChange) {\n                        this.pageTemplateChange = false;\n                        this.notify(events.inBoundModelChanged, { module: 'pager', properties: newProp.pageSettings });\n                        break;\n                    }\n                    this.notify(events.inBoundModelChanged, { module: 'pager', properties: newProp.pageSettings });\n                    if (isNullOrUndefined(newProp.pageSettings.currentPage) && isNullOrUndefined(newProp.pageSettings.pageSize)\n                        && isNullOrUndefined(newProp.pageSettings.totalRecordsCount)\n                        || !isNullOrUndefined(oldProp.pageSettings) &&\n                            ((newProp.pageSettings.currentPage !== oldProp.pageSettings.currentPage)\n                                && !this.enableColumnVirtualization && !this.enableVirtualization\n                                && this.pageSettings.totalRecordsCount <= this.pageSettings.pageSize)) {\n                        requireRefresh = true;\n                    }\n                    break;\n                case 'allowSorting':\n                    this.notify(events.uiUpdate, { module: 'sort', enable: this.allowSorting });\n                    requireRefresh = true;\n                    checkCursor = true;\n                    break;\n                case 'allowFiltering':\n                    this.updateStackedFilter();\n                    this.notify(events.uiUpdate, { module: 'filter', enable: this.allowFiltering });\n                    requireRefresh = true;\n                    if (this.filterSettings.type !== 'FilterBar') {\n                        this.refreshHeader();\n                    }\n                    break;\n                case 'height':\n                case 'width':\n                    this.notify(events.uiUpdate, { module: 'scroll', properties: { width: newProp.width, height: newProp.height } });\n                    break;\n                case 'allowReordering':\n                    this.headerModule.refreshUI();\n                    checkCursor = true;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.notify(events.uiUpdate, { module: 'rowDragAndDrop', enable: this.allowRowDragAndDrop });\n                    this.renderModule.refresh();\n                    this.headerModule.refreshUI();\n                    break;\n                case 'allowSelection':\n                    this.notify(events.uiUpdate, { module: 'selection', enable: this.allowSelection });\n                    break;\n                case 'cssClass':\n                    this.setCSSClass(oldProp.cssClass);\n                    break;\n                case 'enableAutoFill':\n                    if (this.selectionModule) {\n                        this.enableBoxSelection();\n                        this.selectionModule.updateAutoFillPosition();\n                    }\n                    break;\n                case 'rowTemplate':\n                    this.rowTemplateFn = templateCompiler(this.rowTemplate);\n                    requireRefresh = true;\n                    break;\n                case 'detailTemplate':\n                    this.detailTemplateFn = templateCompiler(this.detailTemplate);\n                    requireRefresh = true;\n                    break;\n                case 'allowGrouping':\n                    this.notify(events.uiUpdate, { module: 'group', enable: this.allowGrouping });\n                    this.headerModule.refreshUI();\n                    requireRefresh = true;\n                    checkCursor = true;\n                    break;\n                case 'enableInfiniteScrolling':\n                case 'childGrid':\n                    requireRefresh = true;\n                    break;\n                case 'toolbar':\n                    this.notify(events.uiUpdate, { module: 'toolbar' });\n                    break;\n                case 'groupSettings':\n                    this.notify(events.inBoundModelChanged, {\n                        module: 'group', properties: newProp.groupSettings,\n                        oldProperties: oldProp.groupSettings\n                    });\n                    break;\n                case 'aggregates':\n                    if (!this.aggregates.length && this.allowGrouping && this.groupSettings.columns.length) {\n                        requireRefresh = true;\n                    }\n                    this.notify(events.uiUpdate, { module: 'aggregate', properties: newProp });\n                    break;\n                case 'frozenColumns':\n                case 'frozenRows':\n                case 'enableVirtualization':\n                case 'currencyCode':\n                case 'locale':\n                    this.log('frozen_rows_columns');\n                    freezeRefresh = true;\n                    requireGridRefresh = true;\n                    break;\n                case 'query':\n                    if (!this.getDataModule().isQueryInvokedFromData) {\n                        requireRefresh = true;\n                    }\n                    this.getDataModule().isQueryInvokedFromData = false;\n                    break;\n                default:\n                    this.extendedPropertyChange(prop, newProp, requireGridRefresh);\n            }\n        }\n        if (checkCursor) {\n            this.updateDefaultCursor();\n        }\n        if (requireGridRefresh) {\n            if (freezeRefresh || this.getFrozenColumns() || this.frozenRows) {\n                this.freezeRefresh();\n            }\n            else {\n                this.refresh();\n            }\n        }\n        else if (requireRefresh) {\n            this.notify(events.modelChanged, args);\n            requireRefresh = false;\n            this.maintainSelection(newProp.selectedRowIndex);\n        }\n    };\n    Grid.prototype.extendedPropertyChange = function (prop, newProp, requireGridRefresh) {\n        switch (prop) {\n            case 'enableRtl':\n                this.updateRTL();\n                if (this.allowPaging) {\n                    this.element.querySelector('.e-gridpager').ej2_instances[0].enableRtl = newProp.enableRtl;\n                    this.element.querySelector('.e-gridpager').ej2_instances[0].dataBind();\n                }\n                if (this.height !== 'auto') {\n                    this.scrollModule.removePadding(!newProp.enableRtl);\n                    this.scrollModule.setPadding();\n                }\n                if (this.toolbar && this.toolbarModule) {\n                    this.toolbarModule.getToolbar().ej2_instances[0].enableRtl = newProp.enableRtl;\n                    this.toolbarModule.getToolbar().ej2_instances[0].dataBind();\n                }\n                if (this.contextMenuItems && this.contextMenuModule) {\n                    this.contextMenuModule.getContextMenu().ej2_instances[0].enableRtl = newProp.enableRtl;\n                    this.contextMenuModule.getContextMenu().ej2_instances[0].dataBind();\n                }\n                if (this.showColumnMenu && this.columnMenuModule) {\n                    this.columnMenuModule.getColumnMenu().ej2_instances[0].enableRtl = newProp.enableRtl;\n                    this.columnMenuModule.getColumnMenu().ej2_instances[0].dataBind();\n                }\n                if (this.filterSettings.type === 'FilterBar' && this.filterSettings.showFilterBarOperator) {\n                    this.refreshHeader();\n                }\n                this.notify(events.rtlUpdated, {});\n                break;\n            case 'enableAltRow':\n                this.renderModule.refresh();\n                break;\n            case 'allowResizing':\n                this.headerModule.refreshUI();\n                this.updateResizeLines();\n                break;\n            case 'rowHeight':\n                if (this.rowHeight) {\n                    addClass([this.element], 'e-grid-min-height');\n                }\n                else {\n                    removeClass([this.element], 'e-grid-min-height');\n                }\n                this.renderModule.refresh();\n                this.headerModule.refreshUI();\n                break;\n            case 'gridLines':\n                this.updateGridLines();\n                break;\n            case 'showColumnMenu':\n                this.headerModule.refreshUI();\n                this.notify(events.uiUpdate, { module: 'columnMenu', enable: true });\n                break;\n            case 'columnMenuItems':\n                this.notify(events.uiUpdate, { module: 'columnMenu', enable: this.columnMenuItems });\n                break;\n            case 'contextMenuItems':\n                this.notify(events.uiUpdate, { module: 'contextMenu', enable: this.contextMenuItems });\n                break;\n            case 'showColumnChooser':\n                this.notify(events.uiUpdate, { module: 'columnChooser', enable: this.showColumnChooser });\n                break;\n            case 'filterSettings':\n                this.updateStackedFilter();\n                this.notify(events.inBoundModelChanged, { module: 'filter', properties: newProp.filterSettings });\n                break;\n            case 'searchSettings':\n                this.notify(events.inBoundModelChanged, { module: 'search', properties: newProp.searchSettings });\n                break;\n            case 'sortSettings':\n                this.notify(events.inBoundModelChanged, { module: 'sort' });\n                break;\n            case 'selectionSettings':\n                this.notify(events.inBoundModelChanged, { module: 'selection', properties: newProp.selectionSettings });\n                break;\n            case 'editSettings':\n                this.notify(events.inBoundModelChanged, { module: 'edit', properties: newProp.editSettings });\n                break;\n            case 'allowTextWrap':\n            case 'textWrapSettings':\n                if (this.allowTextWrap) {\n                    this.applyTextWrap();\n                }\n                else {\n                    this.removeTextWrap();\n                }\n                this.notify(events.freezeRender, { case: 'textwrap', isModeChg: (prop === 'textWrapSettings') });\n                break;\n            case 'dataSource':\n                // eslint-disable-next-line no-case-declarations\n                var pending_1 = this.getDataModule().getState();\n                if (Object.getPrototypeOf(newProp).deepWatch) {\n                    var pKeyField = this.getPrimaryKeyFieldNames()[0];\n                    for (var i = 0, props = Object.keys(newProp.dataSource); i < props.length; i++) {\n                        this.setRowData(getValue(pKeyField, this.dataSource[props[i]]), this.dataSource[props[i]]);\n                    }\n                }\n                else if (pending_1.isPending) {\n                    var gResult = !isNullOrUndefined(this.dataSource) ? this.dataSource.result : [];\n                    var names = (pending_1.group || []);\n                    for (var i = 0; i < names.length; i++) {\n                        gResult = DataUtil.group(gResult, names[i], pending_1.aggregates || []);\n                    }\n                    this.dataSource = {\n                        result: gResult, count: this.dataSource.count,\n                        aggregates: this.dataSource.aggregates\n                    };\n                    this.getDataModule().setState({});\n                    pending_1.resolver(this.dataSource);\n                }\n                else {\n                    this.getDataModule().setState({ isDataChanged: false });\n                    this.notify(events.dataSourceModified, {});\n                    if (!requireGridRefresh) {\n                        this.renderModule.refresh();\n                        if (this.isCheckBoxSelection) {\n                            this.notify(events.beforeRefreshOnDataChange, {});\n                        }\n                    }\n                }\n                this.scrollRefresh();\n                break;\n            case 'enableHover':\n                // eslint-disable-next-line no-case-declarations\n                var action = newProp.enableHover ? addClass : removeClass;\n                action([this.element], 'e-gridhover');\n                break;\n            case 'selectedRowIndex':\n                if (!this.isSelectedRowIndexUpdating) {\n                    this.selectRow(newProp.selectedRowIndex);\n                }\n                this.isSelectedRowIndexUpdating = false;\n                break;\n            case 'resizeSettings':\n                this.widthService.setWidthToTable();\n                break;\n            case 'enableAdaptiveUI':\n                this.notify(events.setFullScreenDialog, {});\n                break;\n            case 'rowRenderingMode':\n                this.enableVerticalRendering();\n                this.notify(events.rowModeChange, {});\n                this.refresh();\n                break;\n            case 'enableStickyHeader':\n                this.scrollModule.addStickyListener(newProp.enableStickyHeader);\n                break;\n        }\n    };\n    Grid.prototype.maintainSelection = function (index) {\n        var _this = this;\n        if (index !== -1) {\n            var fn_1 = function () {\n                _this.selectRow(index);\n                _this.off(events.contentReady, fn_1);\n            };\n            this.on(events.contentReady, fn_1, this);\n        }\n    };\n    /**\n     * @param {Object} prop - Defines the property\n     * @param {boolean} muteOnChange - Defines the mute on change\n     * @returns {void}\n     * @private\n     */\n    Grid.prototype.setProperties = function (prop, muteOnChange) {\n        _super.prototype.setProperties.call(this, prop, muteOnChange);\n        var filterSettings = 'filterSettings';\n        if (prop[filterSettings] && this.filterModule && muteOnChange) {\n            this.filterModule.refreshFilter();\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.setTablesCount = function () {\n        var frozenCols = this.getFrozenColumns();\n        var frozenLeft = this.getFrozenLeftColumnsCount();\n        var frozenRight = this.getFrozenRightColumnsCount();\n        if (frozenCols && !frozenLeft && !frozenRight) {\n            this.tablesCount = 2;\n        }\n        else if (!frozenCols && (frozenLeft || frozenRight)) {\n            if ((frozenLeft && !frozenRight) || (frozenRight && !frozenLeft)) {\n                this.tablesCount = 2;\n            }\n            else if (frozenLeft && frozenRight) {\n                this.tablesCount = 3;\n            }\n        }\n    };\n    /**\n     * @hidden\n     * @returns {number} - Returns the tables count\n     */\n    Grid.prototype.getTablesCount = function () {\n        return this.tablesCount;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.updateDefaultCursor = function () {\n        var headerCells = [].slice.call(this.getHeaderContent().querySelectorAll('.e-headercell:not(.e-stackedheadercell)'));\n        var stdHdrCell = [].slice.call(this.getHeaderContent().getElementsByClassName('e-stackedheadercell'));\n        var cols = this.getColumns();\n        if (this.enableColumnVirtualization && this.getFrozenColumns()) {\n            var cells = this.contentModule.getHeaderCells();\n            headerCells = cells.length ? cells : headerCells;\n        }\n        for (var i = 0; i < headerCells.length; i++) {\n            var cell = headerCells[i];\n            if (this.allowGrouping || this.allowReordering || this.allowSorting) {\n                if (!cols[i].allowReordering || !cols[i].allowSorting || !cols[i].allowGrouping) {\n                    cell.classList.add('e-defaultcursor');\n                }\n                else {\n                    cell.classList.add('e-mousepointer');\n                }\n            }\n        }\n        for (var count = 0; count < stdHdrCell.length; count++) {\n            if (this.allowReordering) {\n                stdHdrCell[count].classList.add('e-mousepointer');\n            }\n        }\n    };\n    Grid.prototype.updateColumnModel = function (columns) {\n        for (var i = 0, len = columns.length; i < len; i++) {\n            if (columns[i].columns) {\n                this.updateColumnModel(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(columns[i]);\n            }\n        }\n        this.updateColumnLevelFrozen();\n        this.updateFrozenColumns();\n        this.updateLockableColumns();\n    };\n    Grid.prototype.updateColumnLevelFrozen = function () {\n        var cols = this.columnModel;\n        var leftCols = [];\n        var rightCols = [];\n        var movableCols = [];\n        if (this.frozenLeftCount || this.frozenRightCount) {\n            for (var i = 0, len = cols.length; i < len; i++) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var col = cols[i];\n                if (col.freeze === 'Left') {\n                    col.freezeTable = literals.frozenLeft;\n                    leftCols.push(col);\n                }\n                else if (col.freeze === 'Right') {\n                    col.freezeTable = literals.frozenRight;\n                    rightCols.push(col);\n                }\n                else {\n                    col.freezeTable = 'movable';\n                    movableCols.push(col);\n                }\n            }\n            this.columnModel = leftCols.concat(movableCols).concat(rightCols);\n        }\n    };\n    Grid.prototype.updateFrozenColumns = function () {\n        if (this.frozenLeftCount || this.frozenRightCount) {\n            return;\n        }\n        var cols = this.columnModel;\n        var directFrozenCount = this.frozenColumns;\n        var totalFrozenCount = this.getFrozenColumns();\n        var count = 0;\n        for (var i = 0, len = cols.length; i < len; i++) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var col = cols[i];\n            if (directFrozenCount) {\n                if (i < directFrozenCount) {\n                    col.freezeTable = literals.frozenLeft;\n                }\n                else {\n                    col.freezeTable = 'movable';\n                }\n            }\n            if (col.isFrozen && i >= directFrozenCount) {\n                col.freezeTable = literals.frozenLeft;\n                cols.splice(this.frozenColumns + count, 0, cols.splice(i, 1)[0]);\n                count++;\n            }\n            else if (totalFrozenCount && !directFrozenCount) {\n                col.freezeTable = 'movable';\n            }\n        }\n    };\n    Grid.prototype.getFrozenLeftCount = function () {\n        return this.getFrozenColumns() || this.getFrozenLeftColumnsCount();\n    };\n    Grid.prototype.isFrozenGrid = function () {\n        return this.getFrozenColumns() !== 0 || this.getFrozenLeftColumnsCount() !== 0 || this.getFrozenRightColumnsCount() !== 0;\n    };\n    Grid.prototype.getFrozenMode = function () {\n        return this.frozenName;\n    };\n    Grid.prototype.updateLockableColumns = function () {\n        var cols = this.columnModel;\n        var frozenCount = 0;\n        var movableCount = 0;\n        var frozenColumns = this.getFrozenColumns();\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[i].lockColumn) {\n                if (i < frozenColumns) {\n                    cols.splice(frozenCount, 0, cols.splice(i, 1)[0]);\n                    frozenCount++;\n                }\n                else {\n                    cols.splice(frozenColumns + movableCount, 0, cols.splice(i, 1)[0]);\n                    movableCount++;\n                }\n            }\n        }\n    };\n    Grid.prototype.checkLockColumns = function (cols) {\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[i].columns) {\n                this.checkLockColumns(cols[i].columns);\n            }\n            else if (cols[i].lockColumn) {\n                this.lockcolPositionCount++;\n            }\n        }\n    };\n    /**\n     * Gets the columns from the Grid.\n     *\n     * @param {boolean} isRefresh - Defines the boolean whether to refresh\n     * @returns {Column[]} - returns the column\n     */\n    Grid.prototype.getColumns = function (isRefresh) {\n        var _this = this;\n        var inview = this.inViewIndexes.map(function (v) { return v - _this.groupSettings.columns.length; }).filter(function (v) { return v > -1; });\n        var vLen = inview.length;\n        if (!this.enableColumnVirtualization || isNullOrUndefined(this.columnModel) || this.columnModel.length === 0 || isRefresh) {\n            this.columnModel = [];\n            this.updateColumnModel(this.columns);\n        }\n        var columns = vLen === 0 ? this.columnModel :\n            this.columnModel.slice(inview[0], inview[vLen - 1] + 1);\n        if (this.contentModule && this.enableColumnVirtualization && this.isFrozenGrid() && inview.length\n            && inview[0] > 0) {\n            var frozenCols = this.contentModule.ensureFrozenCols(columns);\n            columns = frozenCols;\n        }\n        return columns;\n    };\n    /**\n     * @private\n     * @param {string} stackedHeader - Defines the stacked header\n     * @param {Column[]} col - Defines the column\n     * @returns {Column} Returns the Column\n     */\n    Grid.prototype.getStackedHeaderColumnByHeaderText = function (stackedHeader, col) {\n        for (var i = 0; i < col.length; i++) {\n            var individualColumn = col[i];\n            if (individualColumn.field === stackedHeader || individualColumn.headerText === stackedHeader) {\n                this.stackedColumn = individualColumn;\n                break;\n            }\n            else if (individualColumn.columns) {\n                this.getStackedHeaderColumnByHeaderText(stackedHeader, individualColumn.columns);\n            }\n        }\n        return this.stackedColumn;\n    };\n    /**\n     * @private\n     * @returns {number[]} Returns the column indexes\n     */\n    Grid.prototype.getColumnIndexesInView = function () {\n        return this.inViewIndexes;\n    };\n    /**\n     * @private\n     * @returns {Query} - returns the query\n     */\n    Grid.prototype.getQuery = function () {\n        return this.query;\n    };\n    /**\n     * @private\n     * @returns {object} - returns the locale constants\n     */\n    Grid.prototype.getLocaleConstants = function () {\n        return this.defaultLocale;\n    };\n    /**\n     * @param {number[]} indexes - specifies the indexes\n     * @returns {void}\n     * @private\n     */\n    Grid.prototype.setColumnIndexesInView = function (indexes) {\n        this.inViewIndexes = indexes;\n    };\n    /**\n     * Gets the visible columns from the Grid.\n     *\n     * @returns {Column[]} returns the column\n     */\n    Grid.prototype.getVisibleColumns = function () {\n        return this.getCurrentVisibleColumns();\n    };\n    /**\n     * Gets the header div of the Grid.\n     *\n     * @returns {Element} - Returns the element\n     */\n    Grid.prototype.getHeaderContent = function () {\n        return this.headerModule.getPanel();\n    };\n    /**\n     * Sets the header div of the Grid to replace the old header.\n     *\n     * @param  {Element} element - Specifies the Grid header.\n     * @returns {void}\n     */\n    Grid.prototype.setGridHeaderContent = function (element) {\n        this.headerModule.setPanel(element);\n    };\n    /**\n     * Gets the content table of the Grid.\n     *\n     * @returns {Element} - Returns the element\n     */\n    Grid.prototype.getContentTable = function () {\n        return this.contentModule.getTable();\n    };\n    /**\n     * Sets the content table of the Grid to replace the old content table.\n     *\n     * @param  {Element} element - Specifies the Grid content table.\n     * @returns {void}\n     */\n    Grid.prototype.setGridContentTable = function (element) {\n        this.contentModule.setTable(element);\n    };\n    /**\n     * Gets the content div of the Grid.\n     *\n     * @returns {Element} Returns the element\n     */\n    Grid.prototype.getContent = function () {\n        return this.contentModule.getPanel();\n    };\n    /**\n     * Sets the content div of the Grid to replace the old Grid content.\n     *\n     * @param  {Element} element - Specifies the Grid content.\n     * @returns {void}\n     */\n    Grid.prototype.setGridContent = function (element) {\n        this.contentModule.setPanel(element);\n    };\n    /**\n     * Gets the header table element of the Grid.\n     *\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getHeaderTable = function () {\n        return this.headerModule.getTable();\n    };\n    /**\n     * Sets the header table of the Grid to replace the old one.\n     *\n     * @param  {Element} element - Specifies the Grid header table.\n     * @returns {void}\n     */\n    Grid.prototype.setGridHeaderTable = function (element) {\n        this.headerModule.setTable(element);\n    };\n    /**\n     * Gets the footer div of the Grid.\n     *\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getFooterContent = function () {\n        this.footerElement = this.element.getElementsByClassName(literals.gridFooter)[0];\n        return this.footerElement;\n    };\n    /**\n     * Gets the footer table element of the Grid.\n     *\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getFooterContentTable = function () {\n        this.footerElement = this.element.getElementsByClassName(literals.gridFooter)[0];\n        return this.footerElement.firstChild.firstChild;\n    };\n    /**\n     * Gets the pager of the Grid.\n     *\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getPager = function () {\n        return this.gridPager; //get element from pager\n    };\n    /**\n     * Sets the pager of the Grid to replace the old pager.\n     *\n     * @param  {Element} element - Specifies the Grid pager.\n     * @returns {void}\n     */\n    Grid.prototype.setGridPager = function (element) {\n        this.gridPager = element;\n    };\n    /**\n     * Gets a row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getRowByIndex = function (index) {\n        return this.contentModule.getRowByIndex(index);\n    };\n    /**\n     * Gets a movable tables row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getMovableRowByIndex = function (index) {\n        return this.contentModule.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets a frozen tables row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getFrozenRowByIndex = function (index) {\n        return this.getFrozenDataRows()[index];\n    };\n    /**\n     * Gets all the data rows of the Grid.\n     *\n     * @returns {Element[]} returns the element\n     */\n    Grid.prototype.getRows = function () {\n        return this.contentModule.getRowElements();\n    };\n    /**\n     * Gets a frozen right tables row element by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getFrozenRightRowByIndex = function (index) {\n        return this.contentModule.getFrozenRightRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     *\n     * @param {Element | EventTarget} target - specifies the element\n     * @returns {RowInfo} returns the row info\n     */\n    Grid.prototype.getRowInfo = function (target) {\n        var ele = target;\n        var args = { target: target };\n        if (!isNullOrUndefined(target) && isNullOrUndefined(parentsUntil(ele, 'e-detailrowcollapse')\n            && isNullOrUndefined(parentsUntil(ele, 'e-recordplusexpand')))) {\n            var cell = closest(ele, '.' + literals.rowCell);\n            if (!cell) {\n                var row = closest(ele, '.' + literals.row);\n                if (!isNullOrUndefined(row) && !row.classList.contains('e-addedrow')) {\n                    var rowObj = this.getRowObjectFromUID(row.getAttribute('data-uid'));\n                    var rowIndex = parseInt(row.getAttribute(literals.ariaRowIndex), 10);\n                    args = { row: row, rowData: rowObj.data, rowIndex: rowIndex };\n                }\n                return args;\n            }\n            var cellIndex = parseInt(cell.getAttribute(literals.ariaColIndex), 10);\n            if (!isNullOrUndefined(cell) && !isNaN(cellIndex)) {\n                var row_1 = closest(cell, '.' + literals.row);\n                var rowIndex = parseInt(row_1.getAttribute(literals.ariaRowIndex), 10);\n                var frzCols = this.getFrozenColumns();\n                var tableName = this.columnModel[cellIndex].getFreezeTableName();\n                var rows = this.contentModule.getRows();\n                var index = cellIndex + this.getIndentCount();\n                if (this.isFrozenGrid()) {\n                    if (tableName === literals.frozenLeft) {\n                        rows = this.contentModule.getRows();\n                    }\n                    else if (tableName === 'movable') {\n                        index = cellIndex - frzCols - this.frozenLeftCount;\n                        rows = this.contentModule.getMovableRows();\n                    }\n                    else if (tableName === literals.frozenRight) {\n                        index = cellIndex - (this.frozenLeftCount + this.movableCount);\n                        rows = this.contentModule.getFrozenRightRows();\n                    }\n                }\n                var rowsObject = rows.filter(function (r) { return r.uid === row_1.getAttribute('data-uid'); });\n                var rowData = {};\n                var column = void 0;\n                if (Object.keys(rowsObject).length) {\n                    rowData = rowsObject[0].data;\n                    column = rowsObject[0].cells[index].column;\n                }\n                args = { cell: cell, cellIndex: cellIndex, row: row_1, rowIndex: rowIndex, rowData: rowData, column: column, target: target };\n            }\n        }\n        return args;\n    };\n    /**\n     * Gets the Grid's movable content rows from frozen grid.\n     *\n     * @returns {Element[]} returns the element\n     */\n    Grid.prototype.getMovableRows = function () {\n        return this.contentModule.getMovableRowElements();\n    };\n    /**\n     * Gets the Grid's frozen right content rows from frozen grid.\n     *\n     * @returns {Element[]} returns the element\n     */\n    Grid.prototype.getFrozenRightRows = function () {\n        return this.contentModule.getFrozenRightRowElements();\n    };\n    /**\n     * Gets all the Grid's data rows.\n     *\n     * @returns {Element[]} returns the element\n     */\n    Grid.prototype.getDataRows = function () {\n        return this.getAllDataRows();\n    };\n    /**\n     * @param {boolean} includeAdd - specifies includeAdd\n     * @returns {Element[]} returns the element\n     * @hidden\n     */\n    Grid.prototype.getAllDataRows = function (includeAdd) {\n        if (isNullOrUndefined(this.getContentTable().querySelector(literals.tbody))) {\n            return [];\n        }\n        var tbody = this.isFrozenGrid() ? this.getFrozenLeftContentTbody()\n            : this.getContentTable().querySelector(literals.tbody);\n        var rows = [].slice.call(tbody.children);\n        if (this.frozenRows) {\n            var hdrTbody = this.isFrozenGrid() ? this.getHeaderContent().querySelector('.' + literals.frozenHeader).querySelector(literals.tbody)\n                : this.getHeaderTable().querySelector(literals.tbody);\n            var freezeRows = [].slice.call(hdrTbody.children);\n            rows = this.addMovableRows(freezeRows, rows);\n        }\n        var dataRows = this.generateDataRows(rows, includeAdd);\n        return dataRows;\n    };\n    /**\n     * @param {HTMLElement[]} fRows - Defines the frozen Rows\n     * @param {HTMLElement[]} mrows - Defines the movable Rows\n     * @returns {HTMLElement[]} Returns the element\n     * @hidden\n     */\n    Grid.prototype.addMovableRows = function (fRows, mrows) {\n        for (var i = 0, len = mrows.length; i < len; i++) {\n            fRows.push(mrows[i]);\n        }\n        return fRows;\n    };\n    Grid.prototype.generateDataRows = function (rows, includAdd) {\n        var dRows = [];\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (rows[i].classList.contains(literals.row) && (!rows[i].classList.contains('e-hiddenrow') || includAdd)) {\n                if (this.isCollapseStateEnabled()) {\n                    dRows[parseInt(rows[i].getAttribute('aria-rowindex'), 10)] = rows[i];\n                }\n                else {\n                    dRows.push(rows[i]);\n                }\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Gets all the Grid's movable table data rows.\n     *\n     * @returns {Element[]} Returns the element\n     */\n    Grid.prototype.getMovableDataRows = function () {\n        return this.getAllMovableDataRows();\n    };\n    /**\n     * @param {boolean} includeAdd Defines the include add in boolean\n     * @returns {Element[]} Returns the element\n     * @hidden\n     */\n    Grid.prototype.getAllMovableDataRows = function (includeAdd) {\n        if (!this.isFrozenGrid()) {\n            return [];\n        }\n        var rows = [].slice.call(this.getContent().querySelector('.' + literals.movableContent).querySelector(literals.tbody).children);\n        if (this.frozenRows) {\n            var freezeRows = [].slice.call(this.getHeaderContent().querySelector('.' + literals.movableHeader).querySelector(literals.tbody).children);\n            rows = this.addMovableRows(freezeRows, rows);\n        }\n        var dataRows = this.generateDataRows(rows, includeAdd);\n        return dataRows;\n    };\n    /**\n     * Gets all the Grid's frozen table data rows.\n     *\n     * @returns {Element[]} returns the element\n     */\n    Grid.prototype.getFrozenDataRows = function () {\n        return this.getAllFrozenDataRows();\n    };\n    /**\n     * @param {boolean} includeAdd Defines the include add in boolean\n     * @returns {Element[]} Returns the element\n     * @hidden\n     */\n    Grid.prototype.getAllFrozenDataRows = function (includeAdd) {\n        var rows = [].slice.call(this.getContent().querySelector('.' + literals.frozenContent).querySelector(literals.tbody).children);\n        if (this.frozenRows) {\n            var freezeRows = [].slice.call(this.getHeaderContent().querySelector('.' + literals.frozenHeader).querySelector(literals.tbody).children);\n            rows = this.addMovableRows(freezeRows, rows);\n        }\n        var dataRows = this.generateDataRows(rows, includeAdd);\n        return dataRows;\n    };\n    /**\n     * Gets all the Grid's frozen right table data rows.\n     *\n     * @returns {Element[]} Returns the Element\n     */\n    Grid.prototype.getFrozenRightDataRows = function () {\n        return this.getAllFrozenRightDataRows();\n    };\n    /**\n     * @param {boolean} includeAdd Defines the include add in boolean\n     * @returns {Element[]} Returns the element\n     * @hidden\n     */\n    Grid.prototype.getAllFrozenRightDataRows = function (includeAdd) {\n        if (this.getFrozenMode() !== 'Right' && this.getFrozenMode() !== 'Left-Right') {\n            return [];\n        }\n        var rows = [].slice.call(this.getContent().querySelector('.e-frozen-right-content').querySelector(literals.tbody).children);\n        if (this.frozenRows) {\n            var freezeRows = [].slice.call(this.getHeaderContent().querySelector('.e-frozen-right-header').querySelector(literals.tbody).children);\n            rows = this.addMovableRows(freezeRows, rows);\n        }\n        var dataRows = this.generateDataRows(rows, includeAdd);\n        return dataRows;\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     * @returns {void}\n     */\n    Grid.prototype.setCellValue = function (key, field, value) {\n        var cells = 'cells';\n        var rowData = 'data';\n        var rowIdx = 'index';\n        var rowuID = 'uid';\n        var isRight = this.getFrozenMode() === 'Right';\n        var pkName = this.getPrimaryKeyFieldNames()[0];\n        var cell = new CellRenderer(this, this.serviceLocator);\n        var fieldIdx = this.getColumnIndexByField(field);\n        var col = this.getColumnByField(field);\n        var rowObjects = col.getFreezeTableName() === 'movable' ? this.contentModule.getMovableRows() :\n            col.getFreezeTableName() === 'frozen-right' ? this.getFrozenRightRowsObject() : this.contentModule.getRows();\n        var selectedRow = rowObjects.filter(function (r) {\n            return getValue(pkName, r.data) === key;\n        })[0];\n        var tr = selectedRow ? this.element.querySelector('[data-uid=' + selectedRow[rowuID] + ']') : null;\n        if (!isNullOrUndefined(tr)) {\n            setValue(field, value, selectedRow[rowData]);\n            var left = this.getFrozenLeftColumnsCount() || this.getFrozenColumns();\n            var movable = this.getMovableColumnsCount();\n            if (this.isRowDragable() && !isRight) {\n                left++;\n            }\n            var frIdx = left + movable;\n            var td = this.getCellFromIndex(selectedRow[rowIdx], fieldIdx);\n            if (!isNullOrUndefined(td)) {\n                var Idx = col.getFreezeTableName() === 'movable' ? left : col.getFreezeTableName() === 'frozen-right' ? frIdx : 0;\n                if (this.groupSettings.columns.length) {\n                    fieldIdx = fieldIdx + this.groupSettings.columns.length;\n                }\n                if (this.childGrid || this.detailTemplate) {\n                    fieldIdx++;\n                }\n                if (this.isRowDragable() && !isRight) {\n                    fieldIdx++;\n                }\n                var sRow = selectedRow[cells][fieldIdx - Idx];\n                cell.refreshTD(td, sRow, selectedRow[rowData], { index: selectedRow[rowIdx] });\n                if (this.aggregates.length > 0) {\n                    this.notify(events.refreshFooterRenderer, {});\n                    if (this.groupSettings.columns.length > 0) {\n                        this.notify(events.groupAggregates, {});\n                    }\n                }\n                /* tslint:disable:no-string-literal */\n                if (!isNullOrUndefined(selectedRow) && !isNullOrUndefined(selectedRow['changes'])) {\n                    selectedRow['changes'][field] = value;\n                }\n                /* tslint:disable:no-string-literal */\n                this.trigger(events.queryCellInfo, {\n                    cell: td, column: col, data: selectedRow[rowData]\n                });\n            }\n        }\n        else {\n            return;\n        }\n    };\n    /**\n     * @param {string} columnUid - Defines column uid\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.refreshReactColumnTemplateByUid = function (columnUid) {\n        var _this = this;\n        if (this.isReact) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.clearTemplate(['columnTemplate'], undefined, function () {\n                var cells = 'cells';\n                var rowIdx = 'index';\n                var rows = _this.getDataRows();\n                var indent = _this.getIndentCount();\n                var cellIndex = _this.getNormalizedColumnIndex(columnUid);\n                for (var j = 0; j < rows.length; j++) {\n                    var rowsObj = _this.getRowObjectFromUID(rows[j].getAttribute('data-uid'));\n                    if (rowsObj && rowsObj.isDataRow && !isNullOrUndefined(rowsObj.index)) {\n                        var cell = rowsObj[cells][cellIndex];\n                        var cellRenderer = new CellRenderer(_this, _this.serviceLocator);\n                        var td = _this.getCellFromIndex(j, cellIndex - indent);\n                        cellRenderer.refreshTD(td, cell, rowsObj.data, { index: rowsObj[rowIdx] });\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @param {string} columnUid - Defines column uid\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.refreshReactHeaderTemplateByUid = function (columnUid) {\n        if (this.isReact) {\n            var cells = 'cells';\n            var rowsObj = this.headerModule.rows;\n            var cellIndex = this.getNormalizedColumnIndex(columnUid);\n            for (var j = 0; j < rowsObj.length; j++) {\n                var cell = rowsObj[j][cells][cellIndex];\n                if (cell && cell.column.uid === columnUid) {\n                    var headerCellRenderer = new HeaderCellRenderer(this, this.serviceLocator);\n                    var td = parentsUntil(this.element.querySelectorAll('[e-mappinguid=' + columnUid + ']')[0], 'e-templatecell');\n                    headerCellRenderer.refresh(cell, td);\n                }\n            }\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {Object} rowData - To update new data for the particular row.\n     * @returns {void}\n     */\n    Grid.prototype.setRowData = function (key, rowData) {\n        var rowuID = 'uid';\n        var rowObjects = this.contentModule.getRows();\n        var pkName = this.getPrimaryKeyFieldNames()[0];\n        var rowRenderer = new RowRenderer(this.serviceLocator, null, this);\n        if (this.groupSettings.columns.length > 0 && this.aggregates.length > 0) {\n            rowObjects = rowObjects.filter(function (row) { return row.isDataRow; });\n        }\n        var selectedRow = rowObjects.filter(function (r) {\n            return getValue(pkName, r.data) === key;\n        })[0];\n        if (!isNullOrUndefined(selectedRow) && this.element.querySelectorAll('[data-uid=' + selectedRow[rowuID] + ']').length) {\n            selectedRow.changes = rowData;\n            refreshForeignData(selectedRow, this.getForeignKeyColumns(), selectedRow.changes);\n            rowRenderer.refresh(selectedRow, this.getColumns(), true);\n            if (this.aggregates.length > 0) {\n                this.notify(events.refreshFooterRenderer, {});\n                if (this.groupSettings.columns.length > 0) {\n                    this.notify(events.groupAggregates, {});\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    Grid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        var col = this.getColumnByIndex(columnIndex);\n        return getCellByColAndRowIndex(this, col, rowIndex, columnIndex);\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    Grid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        if (this.frozenName === 'Left-Right' && columnIndex >= this.movableCount) {\n            return undefined;\n        }\n        var index = this.getFrozenColumns() || this.getFrozenLeftColumnsCount();\n        return this.getMovableDataRows()[rowIndex] &&\n            this.getMovableDataRows()[rowIndex].getElementsByClassName(literals.rowCell)[columnIndex - index];\n    };\n    /**\n     * Gets a frozen right table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    Grid.prototype.getFrozenRightCellFromIndex = function (rowIndex, columnIndex) {\n        var index = this.getFrozenLeftColumnsCount() + this.getMovableColumnsCount();\n        var rows = this.getFrozenRightDataRows();\n        return rows[rowIndex] && rows[rowIndex].getElementsByClassName(literals.rowCell)[columnIndex - index];\n    };\n    /**\n     * Gets a column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    Grid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.getHeaderTable().getElementsByClassName('e-headercell')[index];\n    };\n    /**\n     * Gets a movable column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    Grid.prototype.getMovableColumnHeaderByIndex = function (index) {\n        var left = this.getFrozenColumns() || this.getFrozenLeftColumnsCount();\n        return this.getMovableVirtualHeader().getElementsByClassName('e-headercell')[index - left];\n    };\n    /**\n     * Gets a frozen right column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    Grid.prototype.getFrozenRightColumnHeaderByIndex = function (index) {\n        var left = this.getFrozenLeftColumnsCount() + this.getMovableColumnsCount();\n        return this.getFrozenRightHeader().getElementsByClassName('e-headercell')[index - left];\n    };\n    /**\n     * Gets a frozen left column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n     */\n    Grid.prototype.getFrozenLeftColumnHeaderByIndex = function (index) {\n        return this.getFrozenVirtualHeader().getElementsByClassName('e-headercell')[index];\n    };\n    /**\n     * @param {string} uid - Defines the uid\n     * @param {boolean} isMovable - Defines isMovable\n     * @param {boolean} isFrozenRight - Defines isFrozenRight\n     * @returns {Row<Column>} Returns the row object\n     * @hidden\n     */\n    Grid.prototype.getRowObjectFromUID = function (uid, isMovable, isFrozenRight) {\n        var rows = this.contentModule.getRows();\n        var row = this.rowObject(rows, uid);\n        if (this.isFrozenGrid()) {\n            if (!row || isMovable || isFrozenRight) {\n                row = this.rowObject(this.contentModule.getMovableRows(), uid);\n                if ((!row && this.getFrozenMode() === 'Left-Right') || isFrozenRight) {\n                    row = this.rowObject(this.contentModule.getFrozenRightRows(), uid);\n                }\n                return row;\n            }\n        }\n        if (isNullOrUndefined(row) && this.enableVirtualization && this.groupSettings.columns.length > 0) {\n            row = this.rowObject(this.vRows, uid);\n            return row;\n        }\n        return row;\n    };\n    Grid.prototype.rowObject = function (rows, uid) {\n        for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n            var row = rows_1[_i];\n            if (row.uid === uid) {\n                return row;\n            }\n        }\n        return null;\n    };\n    /**\n     * @hidden\n     * @returns {Row<Column>[]} Returns the Row object\n     */\n    Grid.prototype.getRowsObject = function () {\n        return this.contentModule.getRows();\n    };\n    /**\n     * @hidden\n     * @returns {Row<Column>[]} Returns the Row object\n     */\n    Grid.prototype.getMovableRowsObject = function () {\n        var rows = [];\n        if (this.isFrozenGrid()) {\n            rows = this.contentModule.getMovableRows();\n        }\n        return rows;\n    };\n    /**\n     * @hidden\n     * @returns {Row<Column>[]} Returns the Row object\n     */\n    Grid.prototype.getFrozenRightRowsObject = function () {\n        var rows = [];\n        if (this.getFrozenMode() === 'Right' || this.getFrozenMode() === 'Left-Right') {\n            rows = this.contentModule.getFrozenRightRows();\n        }\n        return rows;\n    };\n    /**\n     * Gets a column header by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Element} - Returns the element\n     */\n    Grid.prototype.getColumnHeaderByField = function (field) {\n        var column = this.getColumnByField(field);\n        return column ? this.getColumnHeaderByUid(column.uid) : undefined;\n    };\n    /**\n     * Gets a column header by UID.\n     *\n     * @param {string} uid - Specifies the column uid.\n     * @returns {Element} - Returns the element\n     */\n    Grid.prototype.getColumnHeaderByUid = function (uid) {\n        var element = this.getHeaderContent().querySelector('[e-mappinguid=' + uid + ']');\n        return element ? element.parentElement : undefined;\n    };\n    /**\n     * @hidden\n     * @param {number} index - Defines the index\n     * @returns {Column} Returns the column\n     */\n    Grid.prototype.getColumnByIndex = function (index) {\n        var column;\n        this.getColumns().some(function (col, i) {\n            column = col;\n            return i === index;\n        });\n        return column;\n    };\n    /**\n     * Gets a Column by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Column} Returns the column\n     */\n    Grid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.getColumns(), function (item) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column index by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {number} Returns the index by field\n     */\n    Grid.prototype.getColumnIndexByField = function (field) {\n        var cols = this.getColumns();\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[i].field === field) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /**\n     * Gets a column by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {Column} Returns the column\n     */\n    Grid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.getColumns().concat(this.getStackedColumns(this.columns)), function (item) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * @param {Column[]} columns - Defines the columns\n     * @param {Column[]} stackedColumn - Defines the stacked columns\n     * @returns {Column[]} Returns the columns\n     * @hidden\n     */\n    Grid.prototype.getStackedColumns = function (columns, stackedColumn) {\n        if (stackedColumn === void 0) { stackedColumn = []; }\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n            var column = columns_1[_i];\n            if (column.columns) {\n                stackedColumn.push(column);\n                this.getStackedColumns(column.columns, stackedColumn);\n            }\n        }\n        return stackedColumn;\n    };\n    /**\n     * Gets a column index by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {number} Returns the column by index\n     */\n    Grid.prototype.getColumnIndexByUid = function (uid) {\n        var index = iterateArrayOrObject(this.getColumns(), function (item, index) {\n            if (item.uid === uid) {\n                return index;\n            }\n            return undefined;\n        })[0];\n        return !isNullOrUndefined(index) ? index : -1;\n    };\n    /**\n     * Gets UID by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {string} Returns the column by field\n     */\n    Grid.prototype.getUidByColumnField = function (field) {\n        return iterateArrayOrObject(this.getColumns(), function (item) {\n            if (item.field === field) {\n                return item.uid;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets column index by column uid value.\n     *\n     * @private\n     * @param  {string} uid - Specifies the column uid.\n     * @returns {number} Returns the column by field\n     */\n    Grid.prototype.getNormalizedColumnIndex = function (uid) {\n        var index = this.getColumnIndexByUid(uid);\n        return index + this.getIndentCount();\n    };\n    /**\n     * Gets indent cell count.\n     *\n     * @private\n     * @returns {number} Returns the indent count\n     */\n    Grid.prototype.getIndentCount = function () {\n        var index = 0;\n        if (this.allowGrouping) {\n            index += this.groupSettings.columns.length;\n        }\n        if (this.isDetail()) {\n            index++;\n        }\n        if (this.isRowDragable() && isNullOrUndefined(this.rowDropSettings.targetID)) {\n            index++;\n        }\n        /**\n         * TODO: index normalization based on the stacked header, grouping and detailTemplate\n         * and frozen should be handled here\n         */\n        return index;\n    };\n    /**\n     * Gets the collection of column fields.\n     *\n     * @returns {string[]} Returns the Field names\n     */\n    Grid.prototype.getColumnFieldNames = function () {\n        var columnNames = [];\n        var column;\n        for (var i = 0, len = this.getColumns().length; i < len; i++) {\n            column = this.getColumns()[i];\n            if (column.visible) {\n                columnNames.push(column.field);\n            }\n        }\n        return columnNames;\n    };\n    /**\n     * Gets a compiled row template.\n     *\n     * @returns {Function} Returns the row TEmplate\n     * @private\n     */\n    Grid.prototype.getRowTemplate = function () {\n        return this.rowTemplateFn;\n    };\n    /**\n     * Gets a compiled detail row template.\n     *\n     * @private\n     * @returns {Function} Returns the Detail template\n     */\n    Grid.prototype.getDetailTemplate = function () {\n        return this.detailTemplateFn;\n    };\n    /**\n     * Gets a compiled detail row template.\n     *\n     * @private\n     * @returns {Function}Returns the Edit template\n     */\n    Grid.prototype.getEditTemplate = function () {\n        return this.editTemplateFn;\n    };\n    /**\n     * Gets a compiled dialog edit header template.\n     *\n     * @private\n     * @returns {Function} returns template function\n     */\n    Grid.prototype.getEditHeaderTemplate = function () {\n        return this.editHeaderTemplateFn;\n    };\n    /**\n     * Gets a compiled dialog edit footer template.\n     *\n     * @private\n     * @returns {Function} Returns the Footer template\n     */\n    Grid.prototype.getEditFooterTemplate = function () {\n        return this.editFooterTemplateFn;\n    };\n    /**\n     * Get the names of the primary key columns of the Grid.\n     *\n     * @returns {string[]} Returns the field names\n     */\n    Grid.prototype.getPrimaryKeyFieldNames = function () {\n        var keys = [];\n        for (var k = 0; k < this.columnModel.length; k++) {\n            if (this.columnModel[k].isPrimaryKey) {\n                keys.push(this.columnModel[k].field);\n            }\n        }\n        return keys;\n    };\n    /**\n     * Refreshes the Grid header and content.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.refresh = function () {\n        if (!this.isDestroyed) {\n            this.isManualRefresh = true;\n            this.headerModule.refreshUI();\n            this.updateStackedFilter();\n            this.renderModule.refresh();\n        }\n    };\n    /**\n     * Refreshes the Grid header.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.refreshHeader = function () {\n        this.headerModule.refreshUI();\n    };\n    /**\n     * Gets the collection of selected rows.\n     *\n     * @returns {Element[]} Returns the element\n     */\n    Grid.prototype.getSelectedRows = function () {\n        return this.selectionModule ? this.selectionModule.selectedRecords : [];\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     *\n     * @returns {number[]} Returns the Selected row indexes\n     */\n    Grid.prototype.getSelectedRowIndexes = function () {\n        return this.selectionModule ? this.selectionModule.selectedRowIndexes : [];\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     *\n     * @returns {number[]} Returns the Selected row cell indexes\n     */\n    Grid.prototype.getSelectedRowCellIndexes = function () {\n        return this.selectionModule ? this.selectionModule.selectedRowCellIndexes : [];\n    };\n    /**\n     * Gets the collection of selected records.\n     *\n     * @returns {Object[]} Returns the selected records\n     * @isGenericType true\n     */\n    Grid.prototype.getSelectedRecords = function () {\n        return this.selectionModule ? this.selectionModule.getSelectedRecords() : [];\n    };\n    /**\n     * Gets the collection of selected columns uid.\n     *\n     * @returns {string[]} Returns the selected column uid\n     * @isGenericType true\n     */\n    Grid.prototype.getSelectedColumnsUid = function () {\n        var _this = this;\n        var uid = [];\n        if (this.selectionModule) {\n            this.selectionModule.selectedColumnsIndexes.filter(function (i) { return uid.push(_this.getColumns()[i].uid); });\n        }\n        return uid;\n    };\n    /**\n     * Gets the data module.\n     *\n     * @returns {Data} Returns the data\n     */\n    Grid.prototype.getDataModule = function () {\n        return this.renderModule.data;\n    };\n    /**\n     * Shows a column by its column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    Grid.prototype.showColumns = function (keys, showBy) {\n        showBy = showBy ? showBy : 'headerText';\n        this.showHider.show(keys, showBy);\n    };\n    /**\n     * Hides a column by column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    Grid.prototype.hideColumns = function (keys, hideBy) {\n        hideBy = hideBy ? hideBy : 'headerText';\n        this.showHider.hide(keys, hideBy);\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen column\n     */\n    Grid.prototype.getFrozenColumns = function () {\n        return this.frozenColumns + this.getFrozenCount(this.columns, 0, 0);\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Right column count\n     */\n    Grid.prototype.getFrozenRightColumnsCount = function () {\n        return this.frozenRightCount;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Left column\n     */\n    Grid.prototype.getFrozenLeftColumnsCount = function () {\n        return this.frozenLeftCount;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the movable column count\n     */\n    Grid.prototype.getMovableColumnsCount = function () {\n        return this.movableCount;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.setFrozenCount = function () {\n        this.frozenLeftCount = this.frozenRightCount = this.movableCount = 0;\n        this.visibleFrozenLeft = this.visibleFrozenRight = this.visibleMovable = 0;\n        this.frozenLeftColumns = [];\n        this.frozenRightColumns = [];\n        this.movableColumns = [];\n        this.splitFrozenCount(this.columns);\n        if (this.frozenColumns && (this.frozenLeftCount || this.frozenRightCount)) {\n            this.setProperties({ frozenColumns: 0 }, true);\n        }\n        this.setTablesCount();\n        if (this.frozenLeftCount && !this.frozenRightCount) {\n            this.frozenName = 'Left';\n        }\n        else if (this.frozenRightCount && !this.frozenLeftCount) {\n            this.frozenName = 'Right';\n        }\n        else if (this.frozenLeftCount && this.frozenRightCount) {\n            this.frozenName = 'Left-Right';\n        }\n        else if (this.frozenColumns && this.frozenRows) {\n            this.frozenName = 'Left';\n        }\n        else {\n            this.frozenName = undefined;\n        }\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen left count\n     */\n    Grid.prototype.getVisibleFrozenLeftCount = function () {\n        return this.visibleFrozenLeft;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen Right count\n     */\n    Grid.prototype.getVisibleFrozenRightCount = function () {\n        return this.visibleFrozenRight;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible movable count\n     */\n    Grid.prototype.getVisibleMovableCount = function () {\n        return this.visibleMovable;\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    Grid.prototype.getFrozenRightColumns = function () {\n        return this.frozenRightColumns;\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    Grid.prototype.getFrozenLeftColumns = function () {\n        return this.frozenLeftColumns;\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    Grid.prototype.getMovableColumns = function () {\n        return this.movableColumns;\n    };\n    Grid.prototype.splitFrozenCount = function (columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.splitFrozenCount(columns[i].columns);\n            }\n            else {\n                if (columns[i].freeze === 'Right') {\n                    if (columns[i].visible !== false) {\n                        this.visibleFrozenRight++;\n                    }\n                    this.frozenRightColumns.push(columns[i]);\n                    this.frozenRightCount++;\n                }\n                else if (columns[i].freeze === 'Left') {\n                    if (columns[i].visible !== false) {\n                        this.visibleFrozenLeft++;\n                    }\n                    this.frozenLeftColumns.push(columns[i]);\n                    this.frozenLeftCount++;\n                }\n                else {\n                    if (columns[i].visible !== false) {\n                        this.visibleMovable++;\n                    }\n                    this.movableColumns.push(columns[i]);\n                    this.movableCount++;\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible frozen columns count\n     */\n    Grid.prototype.getVisibleFrozenColumns = function () {\n        return this.getVisibleFrozenColumnsCount() + this.getVisibleFrozenCount(this.columns, 0);\n    };\n    /**\n     * Get the current Filter operator and field.\n     *\n     * @returns {FilterUI} Returns the filter UI\n     */\n    Grid.prototype.getFilterUIInfo = function () {\n        return this.filterModule ? this.filterModule.getFilterUIInfo() : {};\n    };\n    Grid.prototype.getVisibleFrozenColumnsCount = function () {\n        var visibleFrozenColumns = 0;\n        var columns = this.columnModel;\n        for (var i = 0; i < this.frozenColumns; i++) {\n            if (columns[i].visible) {\n                visibleFrozenColumns++;\n            }\n        }\n        if (this.frozenLeftCount || this.frozenRightCount) {\n            for (var i = 0; i < columns.length; i++) {\n                if (columns[i].visible && (columns[i].freeze === 'Left' || columns[i].freeze === 'Right')) {\n                    visibleFrozenColumns++;\n                }\n            }\n        }\n        return visibleFrozenColumns;\n    };\n    Grid.prototype.getVisibleFrozenCount = function (cols, cnt) {\n        if (!this.frozenLeftCount && !this.frozenRightCount) {\n            for (var i = 0, len = cols.length; i < len; i++) {\n                if (cols[i].columns) {\n                    cnt = this.getVisibleFrozenCount(cols[i].columns, cnt);\n                }\n                else {\n                    if (cols[i].isFrozen && cols[i].visible) {\n                        cnt++;\n                    }\n                }\n            }\n        }\n        return cnt;\n    };\n    Grid.prototype.getFrozenCount = function (cols, cnt, index) {\n        for (var i = 0, len = cols.length; i < len; i++) {\n            if (cols[i].columns) {\n                cnt = this.getFrozenCount(cols[i].columns, cnt, index);\n            }\n            else {\n                if (cols[i].isFrozen && index > this.frozenColumns - 1) {\n                    cnt++;\n                }\n                index++;\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Navigates to the specified target page.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    Grid.prototype.goToPage = function (pageNo) {\n        if (this.pagerModule) {\n            this.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    Grid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    Grid.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        if (this.sortModule) {\n            this.sortModule.sortColumn(columnName, direction, isMultiSort);\n        }\n    };\n    /**\n     * Clears all the sorted columns of the Grid.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     *\n     * @param {string} field - Defines the column field name to remove sort.\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.removeSortColumn = function (field) {\n        if (this.sortModule) {\n            this.sortModule.removeSortColumn(field);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.clearGridActions = function () {\n        this.setProperties({ sortSettings: { columns: [] } }, true);\n        this.setProperties({ filterSettings: { columns: [] } }, true);\n        this.setProperties({ searchSettings: { key: '' } }, true);\n        if (this.allowGrouping) {\n            this.setProperties({ groupSettings: { columns: [] } }, false);\n        }\n        else {\n            this.freezeRefresh();\n        }\n    };\n    /**\n     * Filters grid row by column name with the given options.\n     *\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, the grid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @returns {void}\n     */\n    Grid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        if (this.filterModule) {\n            this.filterModule.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n        }\n    };\n    /**\n     * Clears all the filtered rows of the Grid.\n     *\n     * @param {string[]} fields - Defines the Fields\n     * @returns {void}\n     */\n    Grid.prototype.clearFiltering = function (fields) {\n        if (this.filterModule) {\n            this.filterModule.clearFiltering(fields);\n        }\n    };\n    /**\n     * Removes filtered column by field name.\n     *\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        if (this.filterModule) {\n            this.filterModule.removeFilteredColsByField(field, isClearFilterBar);\n        }\n    };\n    /**\n     * Selects a row by given index.\n     *\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    Grid.prototype.selectRow = function (index, isToggle) {\n        if (this.selectionModule) {\n            this.selectionModule.selectRow(index, isToggle);\n        }\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     *\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @returns {void}\n     */\n    Grid.prototype.selectRows = function (rowIndexes) {\n        if (this.selectionModule) {\n            this.selectionModule.selectRows(rowIndexes);\n        }\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.clearSelection = function () {\n        if (this.selectionModule) {\n            this.selectionModule.clearSelection();\n        }\n    };\n    /**\n     * Selects a cell by the given index.\n     *\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    Grid.prototype.selectCell = function (cellIndex, isToggle) {\n        if (this.selectionModule) {\n            this.selectionModule.selectCell(cellIndex, isToggle);\n        }\n    };\n    /**\n     * Selects a range of cells from start and end indexes.\n     *\n     * @param  {IIndex} startIndex - Specifies the row and column's start index.\n     * @param  {IIndex} endIndex - Specifies the row and column's end index.\n     * @returns {void}\n     */\n    Grid.prototype.selectCellsByRange = function (startIndex, endIndex) {\n        this.selectionModule.selectCellsByRange(startIndex, endIndex);\n    };\n    /**\n     * Searches Grid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     *\n     * @param  {string} searchString - Defines the key.\n     * @returns {void}\n     */\n    Grid.prototype.search = function (searchString) {\n        if (this.searchModule) {\n            this.searchModule.search(searchString);\n        }\n    };\n    /**\n     * By default, prints all the pages of the Grid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     *\n     * @returns {void}\n     */\n    Grid.prototype.print = function () {\n        if (this.printModule) {\n            this.printModule.print();\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldname and data is not given then grid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     *\n     * @param {string} fieldname - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     * @returns {void}\n     */\n    Grid.prototype.deleteRecord = function (fieldname, data) {\n        if (this.editModule) {\n            this.editModule.deleteRecord(fieldname, data);\n        }\n    };\n    /**\n     * Starts edit the selected row. At least one row must be selected before invoking this method.\n     * `editSettings.allowEditing` should be true.\n     * {% codeBlock src='grid/startEdit/index.md' %}{% endcodeBlock %}\n     *\n     * @returns {void}\n     */\n    Grid.prototype.startEdit = function () {\n        if (this.editModule) {\n            this.editModule.startEdit();\n        }\n    };\n    /**\n     * If Grid is in editable state, you can save a record by invoking endEdit.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.endEdit = function () {\n        if (this.editModule) {\n            this.editModule.endEdit();\n        }\n    };\n    /**\n     * Cancels edited state.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.closeEdit = function () {\n        if (this.editModule) {\n            this.editModule.closeEdit();\n        }\n    };\n    /**\n     * Adds a new record to the Grid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     *\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added\n     * @returns {void}\n     */\n    Grid.prototype.addRecord = function (data, index) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     *\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     * @returns {void}\n     */\n    Grid.prototype.deleteRow = function (tr) {\n        if (this.editModule) {\n            this.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Changes a particular cell into edited state based on the row index and field name provided in the `batch` mode.\n     *\n     * @param {number} index - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform batch edit.\n     * @returns {void}\n     */\n    Grid.prototype.editCell = function (index, field) {\n        if (this.editModule) {\n            this.editModule.editCell(index, field);\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     *\n     * @returns {void}\n     * {% codeBlock src='grid/saveCell/index.md' %}{% endcodeBlock %}\n     */\n    Grid.prototype.saveCell = function () {\n        if (this.editModule) {\n            this.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     *\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     * @returns {void}\n     */\n    Grid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.editModule) {\n            this.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     *\n     * {% codeBlock src='grid/updateRow/index.md' %}{% endcodeBlock %}\n     *\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     * @returns {void}\n     */\n    Grid.prototype.updateRow = function (index, data) {\n        if (this.editModule) {\n            this.editModule.updateRow(index, data);\n        }\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     *\n     * @returns {Object} Returns the batch changes\n     */\n    Grid.prototype.getBatchChanges = function () {\n        if (this.editModule) {\n            return this.editModule.getBatchChanges();\n        }\n        return {};\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     */\n    Grid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.toolbarModule) {\n            this.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     *\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     * @returns {void}\n     */\n    Grid.prototype.copy = function (withHeader) {\n        if (this.clipboardModule) {\n            this.clipboardModule.copy(withHeader);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.recalcIndentWidth = function () {\n        var _this = this;\n        if (!this.getHeaderTable().querySelector('.e-emptycell')) {\n            return;\n        }\n        if ((!this.groupSettings.columns.length && !this.isDetail() && !this.isRowDragable()) ||\n            this.getHeaderTable().querySelector('.e-emptycell').getAttribute('indentRefreshed') ||\n            !this.getContentTable()) {\n            return;\n        }\n        var indentWidth = this.getHeaderTable().querySelector('.e-emptycell').parentElement.offsetWidth;\n        var headerCol = [].slice.call(this.getHeaderTable().querySelector(literals.colGroup).childNodes);\n        var contentCol = [].slice.call(this.getContentTable().querySelector(literals.colGroup).childNodes);\n        var perPixel = indentWidth / 30;\n        var i = this.getFrozenMode() === 'Right' ? this.frozenRightCount : 0;\n        var parentOffset = this.element.offsetWidth;\n        var applyWidth = function (index, width) {\n            if (ispercentageWidth(_this)) {\n                var newWidth = (width / parentOffset * 100).toFixed(1) + '%';\n                headerCol[index].style.width = newWidth;\n                contentCol[index].style.width = newWidth;\n            }\n            else {\n                headerCol[index].style.width = width + 'px';\n                contentCol[index].style.width = width + 'px';\n            }\n            _this.notify(events.columnWidthChanged, { index: index, width: width });\n        };\n        if (perPixel >= 1) {\n            indentWidth = (30 / perPixel);\n        }\n        if (indentWidth < 1) {\n            indentWidth = 1;\n        }\n        if (this.enableColumnVirtualization || this.isAutoGen || (this.columns.length === this.groupSettings.columns.length)) {\n            indentWidth = 30;\n        }\n        while (i < this.groupSettings.columns.length) {\n            applyWidth(i, indentWidth);\n            i++;\n        }\n        if (this.isDetail()) {\n            applyWidth(i, indentWidth);\n            i++;\n        }\n        if (this.isRowDragable()) {\n            applyWidth(i, indentWidth);\n        }\n        this.isAutoGen = false;\n        this.getHeaderTable().querySelector('.e-emptycell').setAttribute('indentRefreshed', 'true');\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.resetIndentWidth = function () {\n        if (ispercentageWidth(this)) {\n            this.getHeaderTable().querySelector('.e-emptycell').removeAttribute('indentRefreshed');\n            this.widthService.setWidthToColumns();\n            this.recalcIndentWidth();\n        }\n        if ((this.width === 'auto' || typeof (this.width) === 'string' && this.width.indexOf('%') !== -1)\n            && this.getColumns().filter(function (col) { return (!col.width || col.width === 'auto') && col.minWidth; }).length > 0) {\n            var tgridWidth = this.widthService.getTableWidth(this.getColumns());\n            this.widthService.setMinwidthBycalculation(tgridWidth);\n        }\n        if (this.isFrozenGrid() && this.widthService) {\n            this.widthService.refreshFrozenScrollbar();\n        }\n        if (this.allowTextWrap && this.textWrapSettings.wrapMode !== 'Content') {\n            this.notify(events.refreshHandlers, {});\n        }\n    };\n    /**\n     * @hidden\n     * @returns {boolean} Returns isRowDragable\n     */\n    Grid.prototype.isRowDragable = function () {\n        return this.allowRowDragAndDrop && !this.rowDropSettings.targetID;\n    };\n    /**\n     * Changes the Grid column positions by field names.\n     *\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @returns {void}\n     */\n    Grid.prototype.reorderColumns = function (fromFName, toFName) {\n        if (this.reorderModule) {\n            this.reorderModule.reorderColumns(fromFName, toFName);\n        }\n    };\n    /**\n     * Changes the Grid column positions by field index. If you invoke reorderColumnByIndex multiple times,\n     * then you won't get the same results every time.\n     *\n     * @param  {number} fromIndex - Defines the origin field index.\n     * @param  {number} toIndex - Defines the destination field index.\n     * @returns {void}\n     */\n    Grid.prototype.reorderColumnByIndex = function (fromIndex, toIndex) {\n        if (this.reorderModule) {\n            this.reorderModule.reorderColumnByIndex(fromIndex, toIndex);\n        }\n    };\n    /**\n     * Changes the Grid column positions by field index. If you invoke reorderColumnByTargetIndex multiple times,\n     * then you will get the same results every time.\n     *\n     * @param  {string} fieldName - Defines the field name.\n     * @param  {number} toIndex - Defines the destination field index.\n     * @returns {void}\n     */\n    Grid.prototype.reorderColumnByTargetIndex = function (fieldName, toIndex) {\n        if (this.reorderModule) {\n            this.reorderModule.reorderColumnByTargetIndex(fieldName, toIndex);\n        }\n    };\n    /**\n     * Changes the Grid Row position with given indexes.\n     *\n     * @param  {number} fromIndexes - Defines the origin Indexes.\n     * @param  {number} toIndex - Defines the destination Index.\n     * @returns {void}\n     */\n    Grid.prototype.reorderRows = function (fromIndexes, toIndex) {\n        if (this.rowDragAndDropModule) {\n            this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex);\n        }\n    };\n    /**\n     * @param {ReturnType} e - Defines the Return type\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.refreshDataSource = function (e) {\n        this.notify('refreshdataSource', e);\n    };\n    /**\n     * @param {boolean} enable -Defines the enable\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.disableRowDD = function (enable) {\n        var headerTable = this.getHeaderTable();\n        var contentTable = this.getContentTable();\n        var headerRows = headerTable.querySelectorAll('th.e-rowdragheader, th.e-mastercell');\n        var rows = this.getRows();\n        var disValue = enable ? 'none' : '';\n        setStyleAttribute(headerTable.querySelector(literals.colGroup).childNodes[0], { 'display': disValue });\n        setStyleAttribute(contentTable.querySelector(literals.colGroup).childNodes[0], { 'display': disValue });\n        for (var i = 0; i < this.getRows().length; i++) {\n            var ele = rows[i].firstElementChild;\n            if (enable) {\n                addClass([ele], 'e-hide');\n            }\n            else {\n                removeClass([ele], ['e-hide']);\n            }\n        }\n        for (var j = 0; j < headerTable.querySelectorAll('th.e-rowdragheader, th.e-mastercell').length; j++) {\n            var ele = headerRows[j];\n            if (enable) {\n                addClass([ele], 'e-hide');\n            }\n            else {\n                removeClass([ele], ['e-hide']);\n            }\n        }\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     *\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @returns {void}\n     *\n     *\n     * ```typescript\n     * <div id=\"Grid\"></div>\n     * <script>\n     * let gridObj: Grid = new Grid({\n     *     dataSource: employeeData,\n     *     columns: [\n     *         { field: 'OrderID', headerText: 'Order ID', width:100 },\n     *         { field: 'EmployeeID', headerText: 'Employee ID' }],\n     *     dataBound: () => gridObj.autoFitColumns('EmployeeID')\n     * });\n     * gridObj.appendTo('#Grid');\n     * </script>\n     * ```\n     *\n     */\n    Grid.prototype.autoFitColumns = function (fieldNames) {\n        if (this.resizeModule) {\n            this.resizeModule.autoFitColumns(fieldNames);\n        }\n    };\n    /**\n     * @param {number} x - Defines the number\n     * @param {number} y - Defines the number\n     * @param {Element} target - Defines the Element\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.createColumnchooser = function (x, y, target) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.renderColumnChooser(x, y, target);\n        }\n    };\n    Grid.prototype.initializeServices = function () {\n        this.serviceLocator.register('widthService', this.widthService = new ColumnWidthService(this));\n        this.serviceLocator.register('cellRendererFactory', new CellRendererFactory);\n        this.serviceLocator.register('rendererFactory', new RendererFactory);\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n        this.serviceLocator.register('valueFormatter', this.valueFormatterService = new ValueFormatter(this.locale));\n        this.serviceLocator.register('showHideService', this.showHider = new ShowHide(this));\n        this.serviceLocator.register('ariaService', this.ariaService = new AriaService());\n        this.serviceLocator.register('focus', this.focusModule = new FocusStrategy(this));\n    };\n    Grid.prototype.processModel = function () {\n        var gCols = this.groupSettings.columns;\n        var sCols = this.sortSettings.columns;\n        var flag;\n        var j;\n        if (this.allowGrouping) {\n            var _loop_1 = function (i, len) {\n                j = 0;\n                for (var sLen = sCols.length; j < sLen; j++) {\n                    if (sCols[j].field === gCols[i]) {\n                        flag = true;\n                        break;\n                    }\n                }\n                if (!flag) {\n                    sCols.push({ field: gCols[i], direction: 'Ascending', isFromGroup: true });\n                }\n                else {\n                    if (this_1.allowSorting) {\n                        this_1.sortedColumns.push(sCols[j].field);\n                    }\n                    else {\n                        sCols[j].direction = 'Ascending';\n                    }\n                }\n                if (!this_1.groupSettings.showGroupedColumn) {\n                    var column = this_1.enableColumnVirtualization ?\n                        this_1.columns.filter(function (c) { return c.field === gCols[i]; })[0] : this_1.getColumnByField(gCols[i]);\n                    if (column) {\n                        column.visible = false;\n                    }\n                    else {\n                        this_1.log('initial_action', { moduleName: 'group', columnName: gCols[i] });\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var i = 0, len = gCols.length; i < len; i++) {\n                _loop_1(i, len);\n            }\n        }\n        if (!gCols.length) {\n            for (var i = 0; i < sCols.length; i++) {\n                this.sortedColumns.push(sCols[i].field);\n            }\n        }\n        this.rowTemplateFn = templateCompiler(this.rowTemplate);\n        this.detailTemplateFn = templateCompiler(this.detailTemplate);\n        this.editTemplateFn = templateCompiler(this.editSettings.template);\n        this.editHeaderTemplateFn = templateCompiler(this.editSettings.headerTemplate);\n        this.editFooterTemplateFn = templateCompiler(this.editSettings.footerTemplate);\n        if (!isNullOrUndefined(this.parentDetails)) {\n            var value = isNullOrUndefined(this.parentDetails.parentKeyFieldValue) ? 'undefined' :\n                this.parentDetails.parentKeyFieldValue;\n            this.query.where(this.queryString, 'equal', value, true);\n        }\n        this.initForeignColumn();\n    };\n    Grid.prototype.initForeignColumn = function () {\n        if (this.isForeignKeyEnabled(this.getColumns())) {\n            this.notify(events.initForeignKeyColumn, this.getForeignKeyColumns());\n        }\n    };\n    Grid.prototype.enableVerticalRendering = function () {\n        if (this.rowRenderingMode === 'Vertical') {\n            this.element.classList.add('e-row-responsive');\n        }\n        else {\n            this.element.classList.remove('e-row-responsive');\n        }\n    };\n    Grid.prototype.gridRender = function () {\n        this.updateRTL();\n        if (this.rowRenderingMode === 'Vertical') {\n            this.element.classList.add('e-row-responsive');\n        }\n        if (this.enableHover) {\n            this.element.classList.add('e-gridhover');\n        }\n        if (Browser.isDevice) {\n            this.element.classList.add('e-device');\n        }\n        if (this.rowHeight) {\n            this.element.classList.add('e-grid-min-height');\n        }\n        if (this.cssClass) {\n            this.element.classList.add(this.cssClass);\n        }\n        classList(this.element, ['e-responsive', 'e-default'], []);\n        var rendererFactory = this.serviceLocator.getService('rendererFactory');\n        this.headerModule = rendererFactory.getRenderer(RenderType.Header);\n        this.contentModule = rendererFactory.getRenderer(RenderType.Content);\n        this.printModule = new Print(this, this.scrollModule);\n        this.clipboardModule = new Clipboard(this);\n        this.renderModule.render();\n        this.eventInitializer();\n        this.createGridPopUpElement();\n        this.widthService.setWidthToColumns();\n        this.updateGridLines();\n        this.applyTextWrap();\n        this.createTooltip(); //for clip mode ellipsis\n        this.enableBoxSelection();\n    };\n    Grid.prototype.dataReady = function () {\n        this.scrollModule.setWidth();\n        this.scrollModule.setHeight();\n        if (this.height !== 'auto') {\n            this.scrollModule.setPadding();\n        }\n    };\n    Grid.prototype.updateRTL = function () {\n        if (this.enableRtl) {\n            this.element.classList.add('e-rtl');\n        }\n        else {\n            this.element.classList.remove('e-rtl');\n        }\n    };\n    Grid.prototype.createGridPopUpElement = function () {\n        var popup = this.createElement('div', { className: 'e-gridpopup', styles: 'display:none;' });\n        var content = this.createElement('div', { className: literals.content, attrs: { tabIndex: '-1' } });\n        append([content, this.createElement('div', { className: 'e-uptail e-tail' })], popup);\n        content.appendChild(this.createElement('span'));\n        append([content, this.createElement('div', { className: 'e-downtail e-tail' })], popup);\n        this.element.appendChild(popup);\n    };\n    Grid.prototype.updateGridLines = function () {\n        classList(this.element, [], ['e-verticallines', 'e-horizontallines', 'e-hidelines', 'e-bothlines']);\n        switch (this.gridLines) {\n            case 'Horizontal':\n                this.element.classList.add('e-horizontallines');\n                break;\n            case 'Vertical':\n                this.element.classList.add('e-verticallines');\n                break;\n            case 'None':\n                this.element.classList.add('e-hidelines');\n                break;\n            case 'Both':\n                this.element.classList.add('e-bothlines');\n                break;\n        }\n        this.updateResizeLines();\n    };\n    Grid.prototype.updateResizeLines = function () {\n        if (this.allowResizing &&\n            !(this.gridLines === 'Vertical' || this.gridLines === 'Both')) {\n            this.element.classList.add('e-resize-lines');\n        }\n        else {\n            this.element.classList.remove('e-resize-lines');\n        }\n    };\n    /**\n     * The function is used to apply text wrap\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.applyTextWrap = function () {\n        if (this.allowTextWrap) {\n            var headerRows = [].slice.call(this.element.getElementsByClassName('e-columnheader'));\n            switch (this.textWrapSettings.wrapMode) {\n                case 'Header':\n                    wrap(this.element, false);\n                    wrap(this.getContent(), false);\n                    wrap(headerRows, true);\n                    break;\n                case 'Content':\n                    wrap(this.getContent(), true);\n                    wrap(this.element, false);\n                    wrap(headerRows, false);\n                    break;\n                default:\n                    wrap(this.element, true);\n                    wrap(this.getContent(), false);\n                    wrap(headerRows, false);\n            }\n            if (this.textWrapSettings.wrapMode !== 'Content') {\n                this.notify(events.refreshHandlers, {});\n            }\n        }\n    };\n    /**\n     * The function is used to remove text wrap\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.removeTextWrap = function () {\n        wrap(this.element, false);\n        var headerRows = [].slice.call(this.element.getElementsByClassName('e-columnheader'));\n        wrap(headerRows, false);\n        wrap(this.getContent(), false);\n        if (this.textWrapSettings.wrapMode !== 'Content') {\n            this.notify(events.refreshHandlers, {});\n        }\n    };\n    /**\n     * The function is used to add Tooltip to the grid cell that has ellipsiswithtooltip clip mode.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.createTooltip = function () {\n        this.toolTipObj = new Tooltip({\n            opensOn: 'custom',\n            content: '',\n            cssClass: this.cssClass ? this.cssClass : null\n        }, this.element);\n    };\n    /** @hidden\n     * @returns {void}\n     */\n    Grid.prototype.freezeRefresh = function () {\n        this.isFreezeRefresh = true;\n        if (this.enableVirtualization) {\n            this.pageSettings.currentPage = 1;\n        }\n        this.componentRefresh();\n    };\n    Grid.prototype.getTooltipStatus = function (element) {\n        var headerTable = this.getHeaderTable();\n        var headerDivTag = 'e-gridheader';\n        var htable = this.createTable(headerTable, headerDivTag, 'header');\n        var ctable = this.createTable(headerTable, headerDivTag, 'content');\n        var table = element.classList.contains('e-headercell') ? htable : ctable;\n        var ele = element.classList.contains('e-headercell') ? 'th' : 'tr';\n        table.querySelector(ele).className = element.className;\n        table.querySelector(ele).innerHTML = element.innerHTML;\n        var width = table.querySelector(ele).getBoundingClientRect().width;\n        document.body.removeChild(htable);\n        document.body.removeChild(ctable);\n        if (width > element.getBoundingClientRect().width) {\n            return true;\n        }\n        return false;\n    };\n    Grid.prototype.mouseMoveHandler = function (e) {\n        if (this.isEllipsisTooltip()) {\n            var element = parentsUntil(e.target, 'e-ellipsistooltip');\n            if (this.prevElement !== element || e.type === 'mouseout') {\n                this.toolTipObj.close();\n            }\n            var tagName = e.target.tagName;\n            var elemNames = ['A', 'BUTTON', 'INPUT'];\n            if (element && e.type !== 'mouseout' && !(Browser.isDevice && elemNames.indexOf(tagName) !== -1)) {\n                if (element.getAttribute('aria-describedby')) {\n                    return;\n                }\n                if (this.getTooltipStatus(element)) {\n                    if (element.getElementsByClassName('e-headertext').length) {\n                        this.toolTipObj.content = element.getElementsByClassName('e-headertext')[0].innerText;\n                    }\n                    else {\n                        this.toolTipObj.content = element.innerText;\n                    }\n                    this.prevElement = element;\n                    var col = this.getColumns()[parseInt(element.getAttribute(literals.ariaColIndex), 10)];\n                    if (col.disableHtmlEncode) {\n                        this.toolTipObj.enableHtmlParse = false;\n                    }\n                    this.toolTipObj.open(element);\n                }\n            }\n        }\n        this.hoverFrozenRows(e);\n    };\n    /**\n     * @param {MouseEvent} e - Defines the mouse event\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.hoverFrozenRows = function (e) {\n        if (this.isFrozenGrid()) {\n            var row = parentsUntil(e.target, literals.row);\n            if ([].slice.call(this.element.getElementsByClassName('e-frozenhover')).length && e.type === 'mouseout') {\n                var rows = [].slice.call(this.element.getElementsByClassName('e-frozenhover'));\n                for (var i = 0; i < rows.length; i++) {\n                    rows[i].classList.remove('e-frozenhover');\n                }\n            }\n            else if (row) {\n                var rows = [].slice.call(this.element.querySelectorAll('tr[aria-rowindex=\"' + row.getAttribute(literals.ariaRowIndex) + '\"]'));\n                rows.splice(rows.indexOf(row), 1);\n                for (var i = 0; i < rows.length; i++) {\n                    if (row.getAttribute('aria-selected') !== 'true' && rows[i]) {\n                        rows[i].classList.add('e-frozenhover');\n                    }\n                    else if (rows[i]) {\n                        rows[i].classList.remove('e-frozenhover');\n                    }\n                }\n            }\n        }\n    };\n    Grid.prototype.isEllipsisTooltip = function () {\n        var cols = this.getColumns();\n        if (this.clipMode === 'EllipsisWithTooltip') {\n            return true;\n        }\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[i].clipMode === 'EllipsisWithTooltip') {\n                return true;\n            }\n        }\n        return false;\n    };\n    Grid.prototype.scrollHandler = function () {\n        if (this.isEllipsisTooltip()) {\n            this.toolTipObj.close();\n        }\n    };\n    /**\n     * To create table for ellipsiswithtooltip\n     *\n     * @param {Element} table - Defines the table\n     * @param {string} tag - Defines the tag\n     * @param {string} type - Defines the type\n     * @returns {HTMLDivElement} Returns the HTML div ELement\n     * @hidden\n     */\n    Grid.prototype.createTable = function (table, tag, type) {\n        var myTableDiv = this.createElement('div');\n        myTableDiv.className = this.element.className;\n        myTableDiv.style.cssText = 'display: inline-block;visibility:hidden;position:absolute';\n        var mySubDiv = this.createElement('div');\n        mySubDiv.className = tag;\n        var myTable = this.createElement('table', { attrs: { role: 'grid' } });\n        myTable.className = table.className;\n        myTable.style.cssText = 'table-layout: auto;width: auto';\n        var ele = (type === 'header') ? 'th' : 'td';\n        var myTr = this.createElement('tr', { attrs: { role: 'row' } });\n        var mytd = this.createElement(ele);\n        myTr.appendChild(mytd);\n        myTable.appendChild(myTr);\n        mySubDiv.appendChild(myTable);\n        myTableDiv.appendChild(mySubDiv);\n        document.body.appendChild(myTableDiv);\n        return myTableDiv;\n    };\n    Grid.prototype.onKeyPressed = function (e) {\n        if (e.action === 'tab' || e.action === 'shiftTab') {\n            this.toolTipObj.close();\n        }\n    };\n    /**\n     * Binding events to the element while component creation.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.wireEvents = function () {\n        EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'focusout', this.focusOutHandler, this);\n        EventHandler.add(this.element, 'dblclick', this.dblClickHandler, this);\n        EventHandler.add(this.element, 'keydown', this.keyPressHandler, this);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        EventHandler.add(window, 'resize', this.resetIndentWidth, this);\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.keyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        EventHandler.add(this.getContent().firstElementChild, 'scroll', this.scrollHandler, this);\n        EventHandler.add(this.element, 'mousemove', this.mouseMoveHandler, this);\n        EventHandler.add(this.element, 'mouseout', this.mouseMoveHandler, this);\n        EventHandler.add(this.getContent(), 'touchstart', this.tapEvent, this);\n        EventHandler.add(document.body, 'keydown', this.keyDownHandler, this);\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n        EventHandler.remove(this.element, 'touchend', this.mouseClickHandler);\n        EventHandler.remove(this.element, 'focusout', this.focusOutHandler);\n        EventHandler.remove(this.element, 'dblclick', this.dblClickHandler);\n        EventHandler.remove(this.getContent().firstElementChild, 'scroll', this.scrollHandler);\n        EventHandler.remove(this.element, 'mousemove', this.mouseMoveHandler);\n        EventHandler.remove(this.element, 'mouseout', this.mouseMoveHandler);\n        EventHandler.remove(this.element, 'keydown', this.keyPressHandler);\n        EventHandler.remove(this.getContent(), 'touchstart', this.tapEvent);\n        EventHandler.remove(document.body, 'keydown', this.keyDownHandler);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        EventHandler.remove(window, 'resize', this.resetIndentWidth);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.addListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.on(events.dataReady, this.dataReady, this);\n        this.on(events.contentReady, this.recalcIndentWidth, this);\n        this.on(events.headerRefreshed, this.recalcIndentWidth, this);\n        this.dataBoundFunction = this.refreshMediaCol.bind(this);\n        this.addEventListener(events.dataBound, this.dataBoundFunction);\n        this.on(events.keyPressed, this.onKeyPressed, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off(events.dataReady, this.dataReady);\n        this.off(events.contentReady, this.recalcIndentWidth);\n        this.off(events.headerRefreshed, this.recalcIndentWidth);\n        this.removeEventListener(events.dataBound, this.dataBoundFunction);\n        this.off(events.keyPressed, this.onKeyPressed);\n    };\n    /**\n     * Get current visible data of grid.\n     *\n     * @returns {Object[]} Returns the current view records\n     * @isGenericType true\n     */\n    Grid.prototype.getCurrentViewRecords = function () {\n        if (isGroupAdaptive(this)) {\n            return isNullOrUndefined(this.currentViewData.records) ?\n                this.currentViewData : this.currentViewData.records;\n        }\n        if (this.groupSettings.enableLazyLoading) {\n            return this.currentViewData;\n        }\n        return (this.allowGrouping && this.groupSettings.columns.length && this.currentViewData.length\n            && this.currentViewData.records) ? this.currentViewData.records\n            : this.currentViewData;\n    };\n    Grid.prototype.mouseClickHandler = function (e) {\n        if (this.isChildGrid(e) || (parentsUntil(e.target, 'e-gridpopup') && e.touches) ||\n            this.element.getElementsByClassName('e-cloneproperties').length || this.checkEdit(e)) {\n            return;\n        }\n        if (((!this.allowRowDragAndDrop && (parentsUntil(e.target, literals.gridContent) ||\n            e.target.tagName === 'TD')) || (!(this.allowGrouping || this.allowReordering) &&\n            parentsUntil(e.target, 'e-gridheader'))) && e.touches) {\n            return;\n        }\n        if (parentsUntil(e.target, 'e-gridheader') && this.allowRowDragAndDrop &&\n            !(parentsUntil(e.target, 'e-filterbarcell'))) {\n            e.preventDefault();\n        }\n        var args = this.getRowInfo(e.target);\n        var cancel = 'cancel';\n        args[cancel] = false;\n        var isDataRow = false;\n        var tr = closest(e.target, 'tr');\n        if (tr && tr.getAttribute('data-uid')) {\n            var rowObj = this.getRowObjectFromUID(tr.getAttribute('data-uid'));\n            isDataRow = rowObj ? rowObj.isDataRow : false;\n        }\n        if (isDataRow) {\n            this.trigger(events.recordClick, args);\n        }\n        this.notify(events.click, e);\n    };\n    Grid.prototype.checkEdit = function (e) {\n        var tr = parentsUntil(e.target, literals.row);\n        var isEdit = this.editSettings.mode !== 'Batch' &&\n            this.isEdit && tr && (tr.classList.contains(literals.editedRow) || tr.classList.contains(literals.addedRow));\n        return !parentsUntil(e.target, 'e-unboundcelldiv') && (isEdit || (parentsUntil(e.target, literals.rowCell) &&\n            parentsUntil(e.target, literals.rowCell).classList.contains('e-editedbatchcell')));\n    };\n    Grid.prototype.dblClickHandler = function (e) {\n        var grid = parentsUntil(e.target, 'e-grid');\n        if (isNullOrUndefined(grid) || grid.id !== this.element.id || closest(e.target, '.e-unboundcelldiv')) {\n            return;\n        }\n        var dataRow = false;\n        var tr = closest(e.target, 'tr');\n        if (tr && tr.getAttribute('data-uid')) {\n            var rowObj = this.getRowObjectFromUID(tr.getAttribute('data-uid'));\n            dataRow = rowObj ? rowObj.isDataRow : false;\n        }\n        var args = this.getRowInfo(e.target);\n        args.target = e.target;\n        if (dataRow) {\n            this.trigger(events.recordDoubleClick, args);\n        }\n        this.notify(events.dblclick, e);\n    };\n    Grid.prototype.focusOutHandler = function (e) {\n        if (this.isChildGrid(e)) {\n            return;\n        }\n        if (!parentsUntil(e.target, 'e-grid')) {\n            this.element.querySelector('.e-gridpopup').style.display = 'None';\n        }\n        var filterClear = this.element.querySelector('.e-cancel:not(.e-hide)');\n        if (filterClear) {\n            filterClear.classList.add('e-hide');\n        }\n        var relatedTarget = e.relatedTarget;\n        var ariaOwns = relatedTarget ? relatedTarget.getAttribute('aria-owns') : null;\n        if ((!relatedTarget || (!parentsUntil(relatedTarget, 'e-grid') &&\n            (!isNullOrUndefined(ariaOwns) &&\n                (ariaOwns)) !== e.target.getAttribute('aria-owns')))\n            && !this.keyPress && this.isEdit && !Browser.isDevice) {\n            if (this.editSettings.mode === 'Batch' && !((parentsUntil(relatedTarget, 'e-ddl') || parentsUntil(relatedTarget, 'e-ddt')) &&\n                parentsUntil(relatedTarget, 'e-input-group'))) {\n                this.editModule.saveCell();\n                this.notify(events.editNextValCell, {});\n            }\n            if (this.editSettings.mode === 'Normal') {\n                this.editModule.editFormValidate();\n            }\n        }\n        this.keyPress = false;\n    };\n    Grid.prototype.isChildGrid = function (e) {\n        var gridElement = parentsUntil(e.target, 'e-grid');\n        if ((gridElement && gridElement.id !== this.element.id) || (parentsUntil(e.target, 'e-unboundcelldiv') &&\n            isNullOrUndefined(gridElement))) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {Object} persistedData - Defines the persisted data\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.mergePersistGridData = function (persistedData) {\n        var data = this.getLocalData();\n        if (!(isNullOrUndefined(data) || (data === '')) || !isNullOrUndefined(persistedData)) {\n            var dataObj = !isNullOrUndefined(persistedData) ? persistedData : JSON.parse(data);\n            if (this.enableVirtualization) {\n                dataObj.pageSettings.currentPage = 1;\n            }\n            var keys = Object.keys(dataObj);\n            this.isProtectedOnChange = true;\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if ((typeof this[key] === 'object') && !isNullOrUndefined(this[key])) {\n                    if (Array.isArray(this[key]) && key === 'columns') {\n                        setColumnIndex(this[key]);\n                        this.mergeColumns(dataObj[key], this[key]);\n                        this[key] = dataObj[key];\n                    }\n                    else {\n                        extend(this[key], dataObj[key]);\n                    }\n                }\n                else {\n                    this[key] = dataObj[key];\n                }\n            }\n            this.isProtectedOnChange = false;\n        }\n    };\n    Grid.prototype.mergeColumns = function (storedColumn, columns) {\n        var storedColumns = storedColumn;\n        var _loop_2 = function (i) {\n            var localCol = columns.filter(function (tCol) { return tCol.index === storedColumns[i].index; })[0];\n            if (!isNullOrUndefined(localCol)) {\n                if (localCol.columns && localCol.columns.length) {\n                    this_2.mergeColumns(storedColumns[i].columns, localCol.columns);\n                    storedColumns[i] = extend(localCol, storedColumns[i], {}, true);\n                }\n                else {\n                    storedColumns[i] = extend(localCol, storedColumns[i], {}, true);\n                }\n            }\n        };\n        var this_2 = this;\n        for (var i = 0; i < storedColumns.length; i++) {\n            _loop_2(i);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {boolean} Returns the isDetail\n     */\n    Grid.prototype.isDetail = function () {\n        return !isNullOrUndefined(this.detailTemplate) || !isNullOrUndefined(this.childGrid);\n    };\n    Grid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    Grid.prototype.isForeignKeyEnabled = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isForeignKeyEnabled(col.columns);\n            }\n            return !!(col.dataSource && col.foreignKeyValue);\n        });\n    };\n    Grid.prototype.keyPressHandler = function (e) {\n        var presskey = extend(e, { cancel: false });\n        this.trigger('keyPressed', presskey);\n        if (presskey.cancel === true) {\n            e.stopImmediatePropagation();\n        }\n    };\n    Grid.prototype.keyDownHandler = function (e) {\n        if (e.altKey) {\n            if (e.keyCode === 74) { //alt j\n                if (this.keyA) { //alt A J\n                    this.notify(events.groupCollapse, { target: e.target, collapse: false });\n                    this.keyA = false;\n                }\n                else {\n                    if (this.focusModule && this.focusModule.currentInfo && this.focusModule.currentInfo.element) {\n                        removeClass([this.focusModule.currentInfo.element, this.focusModule.currentInfo.elementToFocus], ['e-focused', 'e-focus']);\n                        this.focusModule.currentInfo.element.tabIndex = -1;\n                    }\n                    if (!this.element.classList.contains('e-childgrid')) {\n                        this.element.focus();\n                    }\n                }\n            }\n            if (e.keyCode === 87) { //alt w\n                var focusModule = this.focusModule;\n                if (focusModule) {\n                    if (!this.currentViewData.length) {\n                        return;\n                    }\n                    focusModule.focusContent();\n                    focusModule.addOutline();\n                }\n            }\n            if (e.keyCode === 65) { //alt A\n                this.keyA = true;\n            }\n            if (e.keyCode === 72 && this.keyA) { //alt A H\n                this.notify(events.groupCollapse, { target: e.target, collapse: true });\n                this.keyA = false;\n            }\n        }\n        if (e.keyCode === 13) {\n            this.notify(events.enterKeyHandler, e);\n        }\n    };\n    Grid.prototype.keyActionHandler = function (e) {\n        if (this.isChildGrid(e) ||\n            (this.isEdit && e.action !== 'escape' && e.action !== 'enter' && e.action !== 'shiftEnter'\n                && e.action !== 'tab' && e.action !== 'shiftTab')) {\n            return;\n        }\n        else {\n            this.keyPress = true;\n        }\n        if (this.allowKeyboard) {\n            if (e.action === 'ctrlPlusP') {\n                e.preventDefault();\n                this.print();\n            }\n            this.notify(events.keyPressed, e);\n        }\n    };\n    /**\n     * @param {Function[]} modules - Defines the modules\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.setInjectedModules = function (modules) {\n        this.injectedModules = modules;\n    };\n    Grid.prototype.updateColumnObject = function () {\n        prepareColumns(this.columns, this.enableColumnVirtualization, this);\n        setColumnIndex(this.columns);\n        this.initForeignColumn();\n        this.notify(events.autoCol, {});\n    };\n    /**\n     * Gets the foreign columns from Grid.\n     *\n     * @returns {Column[]} Returns Foreign key column\n     */\n    Grid.prototype.getForeignKeyColumns = function () {\n        return this.getColumns().filter(function (col) {\n            return col.isForeignColumn();\n        });\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns row height\n     */\n    Grid.prototype.getRowHeight = function () {\n        return this.rowHeight ? this.rowHeight : getRowHeight(this.element);\n    };\n    /**\n     * Refreshes the Grid column changes.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.refreshColumns = function () {\n        this.setFrozenCount();\n        var fCnt = this.getContent().querySelector('.e-frozen-left-content');\n        var frCnt = this.getContent().querySelector('.e-frozen-right-content');\n        var isColFrozen = !this.frozenRightCount && !this.frozenLeftCount;\n        var isFrozen = this.getFrozenColumns() !== 0;\n        if (!isFrozen && ((!fCnt && this.frozenLeftCount) || (!frCnt && this.frozenRightCount) || (fCnt && !this.frozenLeftCount)\n            || (frCnt && !this.frozenRightCount))) {\n            this.tableIndex = 0;\n            this.tablesCount = 1;\n            if (this.enableColumnVirtualization) {\n                this.columnModel = [];\n                this.updateColumnModel(this.columns);\n            }\n            this.freezeRefresh();\n        }\n        else if (isColFrozen && ((this.getFrozenColumns() === 1 && !fCnt) || (this.getFrozenColumns() === 0 && fCnt))) {\n            this.tableIndex = 0;\n            this.tablesCount = 1;\n            if (this.enableColumnVirtualization) {\n                this.columnModel = [];\n                this.updateColumnModel(this.columns);\n            }\n            this.freezeRefresh();\n        }\n        else {\n            this.isPreventScrollEvent = true;\n            this.updateColumnObject();\n            this.checkLockColumns(this.getColumns());\n            this.refresh();\n            if (this.isFrozenGrid()) {\n                var mTbl = this.contentModule.getMovableContent().querySelector('.' + literals.table);\n                remove(mTbl.querySelector(literals.colGroup));\n                var colGroup = ((this.getHeaderContent()\n                    .querySelector('.' + literals.movableHeader).querySelector(literals.colGroup)).cloneNode(true));\n                mTbl.insertBefore(colGroup, mTbl.querySelector(literals.tbody));\n                if (this.getFrozenMode() === 'Left-Right') {\n                    var frTbl = this.contentModule.getFrozenRightContent().querySelector('.' + literals.table);\n                    remove(frTbl.querySelector(literals.colGroup));\n                    var colGrp = ((this.getHeaderContent()\n                        .querySelector('.e-frozen-right-header').querySelector(literals.colGroup)).cloneNode(true));\n                    frTbl.insertBefore(colGrp, frTbl.querySelector(literals.tbody));\n                }\n            }\n        }\n        if (this.isFrozenGrid()) {\n            var left = this.getContent().querySelector('.e-movablescrollbar').scrollLeft;\n            this.headerModule.getMovableHeader().scrollLeft = left;\n            this.contentModule.getMovableContent().scrollLeft = left;\n        }\n    };\n    /**\n     * Export Grid data to Excel file(.xlsx).\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {Workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} Returns the excelexport\n     */\n    Grid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    workbook, isBlob) {\n        return this.excelExportModule ?\n            this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, false, isBlob) : null;\n    };\n    /**\n     * Export Grid data to CSV file.\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {Workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} Returns csv export\n     */\n    Grid.prototype.csvExport = function (excelExportProperties, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    isMultipleExport, workbook, isBlob) {\n        return this.excelExportModule ?\n            this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, true, isBlob) : null;\n    };\n    /**\n     * Export Grid data to PDF document.\n     *\n     * @param {pdfExportProperties} pdfExportProperties - Defines the export properties of the Grid.\n     * @param {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} Returns pdfexport\n     */\n    Grid.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule ? this.pdfExportModule.Map(this, pdfExportProperties, isMultipleExport, pdfDoc, isBlob) : null;\n    };\n    /**\n     * Groups a column by column name.\n     *\n     * @param  {string} columnName - Defines the column name to group.\n     * @returns {void}\n     */\n    Grid.prototype.groupColumn = function (columnName) {\n        if (this.groupModule) {\n            this.groupModule.groupColumn(columnName);\n        }\n    };\n    /**\n     * Expands all the grouped rows of the Grid.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.groupExpandAll = function () {\n        if (this.groupModule) {\n            this.groupModule.expandAll();\n        }\n    };\n    /**\n     * Collapses all the grouped rows of the Grid.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.groupCollapseAll = function () {\n        if (this.groupModule) {\n            this.groupModule.collapseAll();\n        }\n    };\n    /**\n     * Expands or collapses grouped rows by target element.\n     *\n     * @param  {Element} target - Defines the target element of the grouped row.\n     * @returns {void}\n     */\n    // public expandCollapseRows(target: Element): void {\n    //     if (this.groupModule) {\n    //         this.groupModule.expandCollapseRows(target);\n    //     }\n    // }\n    /**\n     * Clears all the grouped columns of the Grid.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.clearGrouping = function () {\n        if (this.groupModule) {\n            this.groupModule.clearGrouping();\n        }\n    };\n    /**\n     * Ungroups a column by column name.\n     *\n     * {% codeBlock src='grid/ungroupColumn/index.md' %}{% endcodeBlock %}\n     *\n     * @param  {string} columnName - Defines the column name to ungroup.\n     * @returns {void}\n     */\n    Grid.prototype.ungroupColumn = function (columnName) {\n        if (this.groupModule) {\n            this.groupModule.ungroupColumn(columnName);\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param {number} x - Defines the X axis.\n     * @param {number} y - Defines the Y axis.\n     * @returns {void}\n     */\n    Grid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    Grid.prototype.scrollRefresh = function () {\n        var _this = this;\n        var refresh = function () {\n            _this.scrollModule.refresh();\n            _this.off(events.contentReady, refresh);\n        };\n        this.on(events.contentReady, refresh, this);\n    };\n    /**\n     * Collapses a detail row with the given target.\n     *\n     * @param  {Element} target - Defines the expanded element to collapse.\n     * @returns {void}\n     */\n    // public detailCollapse(target: number | Element): void {\n    //     if (this.detailRowModule) {\n    //         this.detailRowModule.collapse(target);\n    //     }\n    // }\n    /**\n     * Collapses all the detail rows of the Grid.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.detailCollapseAll = function () {\n        if (this.detailRowModule) {\n            this.detailRowModule.collapseAll();\n        }\n    };\n    /**\n     * Expands a detail row with the given target.\n     *\n     * @param  {Element} target - Defines the collapsed element to expand.\n     * @returns {void}\n     */\n    // public detailExpand(target: number | Element): void {\n    //     if (this.detailRowModule) {\n    //         this.detailRowModule.expand(target);\n    //     }\n    // }\n    /**\n     * Expands all the detail rows of the Grid.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.detailExpandAll = function () {\n        if (this.detailRowModule) {\n            this.detailRowModule.expandAll();\n        }\n    };\n    /**\n     * Deselects the currently selected cells.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.clearCellSelection = function () {\n        if (this.selectionModule) {\n            this.selectionModule.clearCellSelection();\n        }\n    };\n    /**\n     * Deselects the currently selected rows.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.clearRowSelection = function () {\n        if (this.selectionModule) {\n            this.selectionModule.clearRowSelection();\n        }\n    };\n    /**\n     * Selects a collection of cells by row and column indexes.\n     *\n     * @param  {ISelectedCell[]} rowCellIndexes - Specifies the row and column indexes.\n     * @returns {void}\n     */\n    Grid.prototype.selectCells = function (rowCellIndexes) {\n        if (this.selectionModule) {\n            this.selectionModule.selectCells(rowCellIndexes);\n        }\n    };\n    /**\n     * Selects a range of rows from start and end row indexes.\n     *\n     * @param  {number} startIndex - Specifies the start row index.\n     * @param  {number} endIndex - Specifies the end row index.\n     * @returns {void}\n     */\n    Grid.prototype.selectRowsByRange = function (startIndex, endIndex) {\n        if (this.selectionModule) {\n            this.selectionModule.selectRowsByRange(startIndex, endIndex);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {boolean} Returns whether context menu is open or not\n     */\n    Grid.prototype.isContextMenuOpen = function () {\n        return this.contextMenuModule && this.contextMenuModule.isOpen;\n    };\n    /**\n     * @param {Function} module - Defines the module\n     * @returns {boolean} return the injected modules\n     * @hidden\n     */\n    Grid.prototype.ensureModuleInjected = function (module) {\n        return this.getInjectedModules().indexOf(module) >= 0;\n    };\n    /**\n     * Destroys the given template reference.\n     *\n     * @param {string[]} propertyNames - Defines the collection of template name.\n     * @param {any} index - specifies the index\n     */\n    // eslint-disable-next-line\n    Grid.prototype.destroyTemplate = function (propertyNames, index) {\n        this.clearTemplate(propertyNames, index);\n    };\n    /**\n     * @param {string | string[]} type - Defines the type\n     * @param {Object} args - Defines the arguments\n     * @returns {void}\n     * @hidden\n     * @private\n     */\n    Grid.prototype.log = function (type, args) {\n        // eslint-disable-next-line\n        this.loggerModule ? this.loggerModule.log(type, args) : (function () { return 0; })();\n    };\n    /**\n     * @param {Element} element - Defines the element\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.applyBiggerTheme = function (element) {\n        if (this.element.classList.contains('e-bigger')) {\n            element.classList.add('e-bigger');\n        }\n    };\n    /**\n     * @hidden\n     * @returns {Object} Returns the previous row data\n     */\n    Grid.prototype.getPreviousRowData = function () {\n        var previousRowData = this.getRowsObject()[this.getRows().length - 1].data;\n        return previousRowData;\n    };\n    /**\n     * Hides the scrollbar placeholder of Grid content when grid content is not overflown.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.hideScroll = function () {\n        var content = this.getContent().querySelector('.' + literals.content);\n        var scrollBar = this.getContent().querySelector('.e-scrollbar');\n        if (content.scrollHeight <= content.clientHeight) {\n            this.scrollModule.removePadding();\n            content.style.overflowY = 'auto';\n        }\n        if (this.isFrozenGrid() && scrollBar) {\n            var mvblScrollBar = this.getContent().querySelector('.e-movablescrollbar');\n            var mvblChild = this.getContent().querySelector('.e-movablechild');\n            scrollBar.style.display = 'flex';\n            if (mvblScrollBar.offsetWidth >= mvblChild.offsetWidth) {\n                scrollBar.style.display = 'none';\n                this.notify(events.frozenHeight, 0);\n            }\n        }\n    };\n    /**\n     * Get row index by primary key or row data.\n     *\n     * @param  {string | Object} value - Defines the primary key value.\n     * @returns {number} Returns the index\n     */\n    Grid.prototype.getRowIndexByPrimaryKey = function (value) {\n        var pkName = this.getPrimaryKeyFieldNames()[0];\n        value = typeof value === 'object' ? value[pkName] : value;\n        var rows = this.getRowsObject();\n        for (var i = 0; i < rows.length; i++) {\n            if (rows[i].isDetailRow || rows[i].isCaptionRow) {\n                continue;\n            }\n            var pKvalue = rows[i].data[pkName];\n            if (pkName.split('.').length > 1) {\n                pKvalue = performComplexDataOperation(pkName, rows[i].data);\n            }\n            if (pKvalue === value) {\n                return rows[i].index;\n            }\n        }\n        return -1;\n    };\n    /**\n     * @param {string} field - Defines the field name\n     * @returns {Column} returns the column\n     * @hidden\n     */\n    // Need to have all columns while filtering with ColumnVirtualization.\n    Grid.prototype.grabColumnByFieldFromAllCols = function (field) {\n        var column;\n        this.columnModel = [];\n        this.updateColumnModel(this.columns);\n        var gCols = this.columnModel;\n        for (var i = 0; i < gCols.length; i++) {\n            if (field === gCols[i].field) {\n                column = gCols[i];\n            }\n        }\n        return column;\n    };\n    /**\n     * @param {string} uid - Defines the uid\n     * @returns {Column} returns the column\n     * @hidden\n     */\n    // Need to have all columns while filtering with ColumnVirtualization.\n    Grid.prototype.grabColumnByUidFromAllCols = function (uid) {\n        var column;\n        this.columnModel = [];\n        this.updateColumnModel(this.columns);\n        var gCols = this.columnModel;\n        for (var i = 0; i < gCols.length; i++) {\n            if (uid === gCols[i].uid) {\n                column = gCols[i];\n            }\n        }\n        return column;\n    };\n    /**\n     * Get all filtered records from the Grid and it returns array of objects for the local dataSource, returns a promise object if the Grid has remote data.\n     *\n     * @returns {Object[] | Promise<Object>} Returns the filtered records\n     */\n    Grid.prototype.getFilteredRecords = function () {\n        if (this.allowFiltering && this.filterSettings.columns.length) {\n            var query = this.renderModule.data.generateQuery(true);\n            if (this.dataSource && this.renderModule.data.isRemote() && this.dataSource instanceof DataManager) {\n                return this.renderModule.data.getData(this.dataSource, query);\n            }\n            else {\n                if (this.dataSource instanceof DataManager) {\n                    return this.dataSource.executeLocal(query);\n                }\n                else {\n                    return new DataManager(this.dataSource, query).executeLocal(query);\n                }\n            }\n        }\n        return [];\n    };\n    Grid.prototype.getUserAgent = function () {\n        var userAgent = Browser.userAgent.toLowerCase();\n        return /iphone|ipod|ipad/.test(userAgent);\n    };\n    /**\n     * @param {TouchEventArgs} e - Defines the TouchEventArgs\n     * @returns {void}\n     * @hidden\n     */\n    // Need to have all columns while filtering with ColumnVirtualization.\n    // eslint-disable-next-line\n    Grid.prototype.tapEvent = function (e) {\n        if (this.getUserAgent()) {\n            if (!Global.timer) {\n                Global.timer = setTimeout(function () {\n                    Global.timer = null;\n                }, 300);\n            }\n            else {\n                clearTimeout(Global.timer);\n                Global.timer = null;\n                this.dblClickHandler(e);\n                this.notify(events.doubleTap, e);\n            }\n        }\n    };\n    /**\n     * @param {string} prefix - specifies the prefix\n     * @returns {string} returns the row uid\n     * @hidden\n     */\n    Grid.prototype.getRowUid = function (prefix) {\n        return \"\" + prefix + this.rowUid++;\n    };\n    /**\n     * @hidden\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getMovableVirtualContent = function () {\n        return this.getContent().querySelector('.' + literals.movableContent);\n    };\n    /**\n     * @hidden\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getFrozenVirtualContent = function () {\n        return this.getContent().querySelector('.' + literals.frozenContent);\n    };\n    /**\n     * @hidden\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getMovableVirtualHeader = function () {\n        return this.getHeaderContent().querySelector('.' + literals.movableHeader);\n    };\n    /**\n     * @hidden\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getFrozenVirtualHeader = function () {\n        return this.getHeaderContent().querySelector('.' + literals.frozenHeader);\n    };\n    /**\n     * @param {string} uid - specifies the uid\n     * @returns {Element} returns the element\n     * @hidden\n     */\n    Grid.prototype.getRowElementByUID = function (uid) {\n        var rowEle;\n        var rows = [];\n        if (this.isFrozenGrid()) {\n            var fRows = [].slice.call(this.getFrozenVirtualContent().querySelector(literals.tbody).children);\n            var mRows = [].slice.call(this.getMovableVirtualContent().querySelector(literals.tbody).children);\n            var frozenRigtRows = [];\n            if (this.tablesCount === 3) {\n                frozenRigtRows = [].slice.call(this.getContent().querySelector('.e-frozen-right-content').querySelector(literals.tbody).children);\n            }\n            if (this.frozenRows) {\n                rows = [].slice.call(this.getFrozenVirtualHeader().querySelector(literals.tbody).children);\n                rows = rows.concat([].slice.call(this.getMovableVirtualHeader().querySelector(literals.tbody).children));\n                if (this.tablesCount === 3) {\n                    var frHdr = this.getHeaderContent().querySelector('.e-frozen-right-header');\n                    rows = rows.concat([].slice.call(frHdr.querySelector(literals.tbody).children)).concat(frozenRigtRows);\n                }\n                rows = rows.concat(fRows).concat(mRows);\n            }\n            else {\n                rows = fRows.concat(mRows).concat(frozenRigtRows);\n            }\n        }\n        else {\n            var cntRows = [].slice.call(this.getContent().querySelector(literals.tbody).children);\n            if (this.frozenRows) {\n                rows = [].slice.call(this.getHeaderContent().querySelector(literals.tbody).children);\n                rows = rows.concat(cntRows);\n            }\n            else {\n                rows = cntRows;\n            }\n        }\n        for (var _i = 0, rows_2 = rows; _i < rows_2.length; _i++) {\n            var row = rows_2[_i];\n            if (row.getAttribute('data-uid') === uid) {\n                rowEle = row;\n                break;\n            }\n        }\n        return rowEle;\n    };\n    /**\n     * Gets the hidden columns from the Grid.\n     *\n     * @returns {Column[]} Returns the Column\n     */\n    Grid.prototype.getHiddenColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible === false) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * calculatePageSizeByParentHeight\n     *\n     * @param {number | string } containerHeight - specifies the container height\n     * @returns {number} returns the page size\n     */\n    Grid.prototype.calculatePageSizeByParentHeight = function (containerHeight) {\n        if (this.allowPaging) {\n            if ((this.allowTextWrap && this.textWrapSettings.wrapMode === 'Header') || (!this.allowTextWrap)) {\n                var pagesize = 0;\n                if (containerHeight.indexOf('%') !== -1) {\n                    containerHeight = parseInt(containerHeight, 10) / 100 * this.element.clientHeight;\n                }\n                var nonContentHeight = this.getNoncontentHeight() + this.getRowHeight();\n                if (containerHeight > nonContentHeight) {\n                    var contentHeight = 0;\n                    contentHeight = containerHeight - this.getNoncontentHeight();\n                    pagesize = (contentHeight / this.getRowHeight());\n                }\n                if (pagesize > 0) {\n                    return Math.floor(pagesize);\n                }\n            }\n        }\n        return 0;\n    };\n    Grid.prototype.getNoncontentHeight = function () {\n        var height = 0;\n        if (!isNullOrUndefined(this.getHeaderContent().clientHeight)) {\n            height += this.getHeaderContent().clientHeight;\n        }\n        if (this.toolbar && !isNullOrUndefined(this.element.querySelector('.e-toolbar').clientHeight)) {\n            height += this.element.querySelector('.e-toolbar').clientHeight;\n        }\n        if (this.allowPaging && !isNullOrUndefined(this.element.querySelector('.e-gridpager').clientHeight)) {\n            height += this.element.querySelector('.e-gridpager').clientHeight;\n        }\n        if (this.showColumnChooser && !isNullOrUndefined(this.element.querySelector('.e-columnheader').clientHeight)) {\n            height += this.element.querySelector('.e-columnheader').clientHeight;\n        }\n        if (this.allowGrouping && this.groupSettings.showDropArea && !isNullOrUndefined(this.element.querySelector('.e-groupdroparea').clientHeight)) {\n            height += this.element.querySelector('.e-groupdroparea').clientHeight;\n        }\n        if (this.aggregates.length > 0 && !isNullOrUndefined(this.element.querySelector('.e-summaryrow').clientHeight)) {\n            for (var i = 0; i < this.element.getElementsByClassName('e-summaryrow').length; i++) {\n                height += this.element.getElementsByClassName('e-summaryrow')[i].clientHeight;\n            }\n        }\n        return height;\n    };\n    /**\n     *To perform aggregate operation on a column.\n     *\n     * @param  {AggregateColumnModel} summaryCol - Pass Aggregate Column details.\n     * @param  {Object} summaryData - Pass JSON Array for which its field values to be calculated.\n     * @returns {number} returns the summary values\n     */\n    Grid.prototype.getSummaryValues = function (summaryCol, summaryData) {\n        return DataUtil.aggregates[summaryCol.type.toLowerCase()](summaryData, summaryCol.field);\n    };\n    /**\n     * Sends a Post request to export Grid to Excel file in server side.\n     *\n     * @param  {string} url - Pass Url for server side excel export action.\n     * @returns {void}\n     */\n    Grid.prototype.serverExcelExport = function (url) {\n        this.isExcel = true;\n        this.exportGrid(url);\n    };\n    /**\n     * Sends a Post request to export Grid to Pdf file in server side.\n     *\n     * @param  {string} url - Pass Url for server side pdf export action.\n     * @returns {void}\n     */\n    Grid.prototype.serverPdfExport = function (url) {\n        this.isExcel = false;\n        this.exportGrid(url);\n    };\n    /**\n     * Sends a Post request to export Grid to CSV file in server side.\n     *\n     * @param  {string} url - Pass Url for server side pdf export action.\n     * @returns {void}\n     */\n    Grid.prototype.serverCsvExport = function (url) {\n        this.isExcel = true;\n        this.exportGrid(url);\n    };\n    /**\n     * @param {string} url - Defines exporting url\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.exportGrid = function (url) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var grid = this;\n        var query = grid.getDataModule().generateQuery(true);\n        var state = new UrlAdaptor().processQuery(new DataManager({ url: '' }), query);\n        var queries = JSON.parse(state.data);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var gridModel = JSON.parse(this.addOnPersist(['allowGrouping', 'allowPaging', 'pageSettings', 'sortSettings', 'allowPdfExport', 'allowExcelExport', 'aggregates',\n            'filterSettings', 'groupSettings', 'columns', 'locale', 'searchSettings']));\n        var include = ['field', 'headerText', 'type', 'format', 'visible', 'foreignKeyValue', 'foreignKeyField',\n            'template', 'index', 'width', 'textAlign', 'headerTextAlign', 'columns'];\n        gridModel.filterSettings.columns = queries.where;\n        gridModel.searchSettings.fields = queries.search && queries.search[0]['fields'] || [];\n        gridModel.sortSettings.columns = queries.sorted;\n        gridModel.columns = this.setHeaderText(gridModel.columns, include);\n        var form = this.createElement('form', { id: 'ExportForm', styles: 'display:none;' });\n        var gridInput = this.createElement('input', { id: 'gridInput', attrs: { name: 'gridModel' } });\n        gridInput.value = JSON.stringify(gridModel);\n        form.method = 'POST';\n        form.action = url;\n        form.appendChild(gridInput);\n        document.body.appendChild(form);\n        form.submit();\n        form.remove();\n    };\n    /**\n     * @param {Column[]} columns - Defines array of columns\n     * @param {string[]} include - Defines array of sting\n     * @returns {Column[]} returns array of columns\n     * @hidden\n     */\n    Grid.prototype.setHeaderText = function (columns, include) {\n        for (var i = 0; i < columns.length; i++) {\n            var column = this.getColumnByUid(columns[i].uid);\n            columns[i].headerText = column.headerText;\n            if (!isNullOrUndefined(column.template)) {\n                columns[i].template = 'true';\n            }\n            if (columns[i].format) {\n                columns[i].format = getNumberFormat(this.getFormat(columns[i].format), columns[i].type, this.isExcel);\n            }\n            if (columns[i].columns) {\n                this.setHeaderText(columns[i].columns, include);\n            }\n            var keys = Object.keys(columns[i]);\n            for (var j = 0; j < keys.length; j++) {\n                if (include.indexOf(keys[j]) < 0) {\n                    delete columns[i][keys[j]];\n                }\n            }\n        }\n        return columns;\n    };\n    Grid.prototype.getFormat = function (format) {\n        return typeof (format) === 'object' ? !isNullOrUndefined(format.format) ?\n            format.format : format.skeleton : format;\n    };\n    /**\n     * @hidden\n     * @returns {boolean} returns the isCollapseStateEnabled\n     */\n    Grid.prototype.isCollapseStateEnabled = function () {\n        var isExpanded = 'isExpanded';\n        return this[isExpanded] === false;\n    };\n    /**\n     * @param {number} key - Defines the primary key value.\n     * @param {Object} rowData - Defines the rowData\n     * @returns {void}\n     */\n    Grid.prototype.updateRowValue = function (key, rowData) {\n        var args = {\n            requestType: 'save', data: rowData\n        };\n        this.showSpinner();\n        this.notify(events.updateData, args);\n        this.refresh();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.setForeignKeyData = function () {\n        this.dataBind();\n        var colpending = this.getDataModule().getForeignKeyDataState();\n        if (colpending.isPending) {\n            this.getDataModule().setForeignKeyDataState({});\n            colpending.resolver();\n        }\n        else {\n            this.getDataModule().setForeignKeyDataState({ isDataChanged: false });\n            if (this.contentModule || this.headerModule) {\n                this.renderModule.render();\n            }\n        }\n    };\n    /**\n     * @param {string} field - specifies the field\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.resetFilterDlgPosition = function (field) {\n        var header = this.getColumnHeaderByField(field);\n        if (header) {\n            var target = header.querySelector('.e-filtermenudiv');\n            var filterDlg = this.element.querySelector('.e-filter-popup');\n            if (target && filterDlg) {\n                var gClient = this.element.getBoundingClientRect();\n                var fClient = target.getBoundingClientRect();\n                if (filterDlg) {\n                    if ((filterDlg.offsetWidth + fClient.right) > gClient.right) {\n                        filterDlg.style.left = ((fClient.right - filterDlg.offsetWidth) - gClient.left).toString() + 'px';\n                    }\n                    else {\n                        filterDlg.style.left = (fClient.right - gClient.left).toString() + 'px';\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.renderTemplates = function () {\n        var portals = 'portals';\n        this.notify('reactTemplateRender', this[portals]);\n        this.renderReactTemplates();\n    };\n    /**\n     * Apply the changes to the Grid without refreshing the rows.\n     *\n     * @param  {BatchChanges} changes - Defines changes to be updated.\n     * @returns {void}\n     */\n    Grid.prototype.batchUpdate = function (changes) {\n        this.processRowChanges(changes);\n    };\n    /**\n     * Apply the changes to the Grid in one batch after 50ms without refreshing the rows.\n     *\n     * @param  {BatchChanges} changes - Defines changes to be updated.\n     * @returns {void}\n     */\n    Grid.prototype.batchAsyncUpdate = function (changes) {\n        this.processBulkRowChanges(changes);\n    };\n    Grid.prototype.processBulkRowChanges = function (changes) {\n        var _this = this;\n        if (!this.dataToBeUpdated) {\n            this.dataToBeUpdated = Object.assign({ addedRecords: [], changedRecords: [], deletedRecords: [] }, changes);\n            setTimeout(function () {\n                _this.processRowChanges(_this.dataToBeUpdated);\n                _this.dataToBeUpdated = null;\n            }, this.asyncTimeOut);\n        }\n        else {\n            var loopstring = [literals.addedRecords, literals.changedRecords, literals.deletedRecords];\n            var keyField = this.getPrimaryKeyFieldNames()[0];\n            for (var i = 0; i < loopstring.length; i++) {\n                if (changes[loopstring[i]]) {\n                    compareChanges(this, changes, loopstring[i], keyField);\n                }\n            }\n        }\n    };\n    Grid.prototype.processRowChanges = function (changes) {\n        var _this = this;\n        var keyField = this.getPrimaryKeyFieldNames()[0];\n        changes = Object.assign({ addedRecords: [], changedRecords: [], deletedRecords: [] }, changes);\n        var promise = this.getDataModule().saveChanges(changes, keyField, {}, this.getDataModule().generateQuery().requiresCount());\n        if (this.getDataModule().isRemote()) {\n            promise.then(function () {\n                _this.setNewData();\n            });\n        }\n        else {\n            this.setNewData();\n        }\n    };\n    Grid.prototype.setNewData = function () {\n        var _this = this;\n        var oldValues = JSON.parse(JSON.stringify(this.getCurrentViewRecords()));\n        var getData = this.getDataModule().getData({}, this.getDataModule().generateQuery().requiresCount());\n        getData.then(function (e) {\n            _this.bulkRefresh(e.result, oldValues, e.count);\n        });\n    };\n    Grid.prototype.deleteRowElement = function (row) {\n        var tr = this.getRowElementByUID(row.uid);\n        var index = parseInt(tr.getAttribute(literals.ariaRowIndex), 10);\n        remove(tr);\n        if (this.getFrozenColumns()) {\n            var mtr = this.getMovableRows()[index];\n            remove(mtr);\n        }\n    };\n    Grid.prototype.bulkRefresh = function (result, oldValues, count) {\n        var _this = this;\n        var rowObj = this.getRowsObject();\n        var keyField = this.getPrimaryKeyFieldNames()[0];\n        var _loop_3 = function (i) {\n            if (!result.filter(function (e) { return e[keyField] === rowObj[i].data[keyField]; }).length) {\n                this_3.deleteRowElement(rowObj[i]);\n                rowObj.splice(i, 1);\n                i--;\n            }\n            out_i_1 = i;\n        };\n        var this_3 = this, out_i_1;\n        for (var i = 0; i < rowObj.length; i++) {\n            _loop_3(i);\n            i = out_i_1;\n        }\n        var _loop_4 = function (i) {\n            var isRowExist;\n            oldValues.filter(function (e) {\n                if (e[keyField] === result[i][keyField]) {\n                    if (e !== result[i]) {\n                        _this.setRowData(result[i][keyField], result[i]);\n                    }\n                    isRowExist = true;\n                }\n            });\n            if (!isRowExist) {\n                this_4.renderRowElement(result[i], i);\n            }\n        };\n        var this_4 = this;\n        for (var i = 0; i < result.length; i++) {\n            _loop_4(i);\n        }\n        this.currentViewData = result;\n        var rows = [].slice.call(this.getContentTable().getElementsByClassName(literals.row));\n        resetRowIndex(this, this.getRowsObject(), rows);\n        setRowElements(this);\n        if (this.allowPaging) {\n            this.notify(events.inBoundModelChanged, { module: 'pager', properties: { totalRecordsCount: count } });\n        }\n    };\n    Grid.prototype.renderRowElement = function (data, index) {\n        var row = new RowRenderer(this.serviceLocator, null, this);\n        var model = new RowModelGenerator(this);\n        var modelData = model.generateRows([data]);\n        var tr = row.render(modelData[0], this.getColumns());\n        var mTr;\n        var mTbody;\n        this.addRowObject(modelData[0], index);\n        var tbody = this.getContentTable().querySelector(literals.tbody);\n        if (tbody.querySelector('.e-emptyrow')) {\n            var emptyRow = tbody.querySelector('.e-emptyrow');\n            emptyRow.parentNode.removeChild(emptyRow);\n            if (this.getFrozenColumns()) {\n                var moveTbody = this.getContent().querySelector('.' + literals.movableContent).querySelector(literals.tbody);\n                (moveTbody.firstElementChild).parentNode.removeChild(moveTbody.firstElementChild);\n            }\n        }\n        if (this.getFrozenColumns()) {\n            mTr = renderMovable(tr, this.getFrozenColumns(), this);\n            if (this.frozenRows && index < this.frozenRows) {\n                mTbody = this.getHeaderContent().querySelector('.' + literals.movableHeader).querySelector(literals.tbody);\n            }\n            else {\n                mTbody = this.getContent().querySelector('.' + literals.movableContent).querySelector(literals.tbody);\n            }\n            mTbody.appendChild(mTr);\n            if (this.height === 'auto') {\n                this.notify(events.frozenHeight, {});\n            }\n        }\n        if (this.frozenRows && index < this.frozenRows) {\n            tbody = this.getHeaderContent().querySelector(literals.tbody);\n        }\n        else {\n            tbody = this.getContent().querySelector(literals.tbody);\n        }\n        tbody = this.getContent().querySelector(literals.tbody);\n        tbody.appendChild(tr);\n    };\n    Grid.prototype.addRowObject = function (row, index) {\n        var frzCols = this.getFrozenColumns();\n        if (frzCols) {\n            var mRows = this.getMovableRowsObject();\n            var mRow = row.clone();\n            mRow.cells = mRow.cells.slice(frzCols);\n            row.cells = row.cells.slice(0, frzCols);\n            mRows.splice(index, 1, mRow);\n        }\n        this.getRowsObject().splice(index, 1, row);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.updateVisibleExpandCollapseRows = function () {\n        var rows = this.getRowsObject();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if ((rows[i].isDataRow || rows[i].isAggregateRow) && this.getRowElementByUID(rows[i].uid).style.display === 'none') {\n                rows[i].visible = false;\n            }\n            else {\n                rows[i].visible = true;\n            }\n        }\n    };\n    /**\n     * @param {string | number} height - specifies the height\n     * @returns {number | string} - specifies the height number\n     * @hidden\n     */\n    Grid.prototype.getHeight = function (height) {\n        if (!Number.isInteger(height) && height.indexOf('%') !== -1) {\n            height = parseInt(height, 10) / 100 * this.element.clientHeight;\n        }\n        else if (!Number.isInteger(height) && this.height !== 'auto') {\n            height = parseInt(height, 10);\n        }\n        else {\n            height = this.height;\n        }\n        return height;\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns frozen right content\n     */\n    Grid.prototype.getFrozenRightContent = function () {\n        return this.getContent().querySelector('.e-frozen-right-content');\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns frozen right header\n     */\n    Grid.prototype.getFrozenRightHeader = function () {\n        return this.getHeaderContent().querySelector('.e-frozen-right-header');\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns movable header tbody\n     */\n    Grid.prototype.getMovableHeaderTbody = function () {\n        return this.getMovableVirtualHeader().querySelector(literals.tbody);\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns movable content tbody\n     */\n    Grid.prototype.getMovableContentTbody = function () {\n        return this.getMovableVirtualContent().querySelector(literals.tbody);\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns frozen header tbody\n     */\n    Grid.prototype.getFrozenHeaderTbody = function () {\n        return this.getFrozenVirtualHeader().querySelector(literals.tbody);\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns frozen left content tbody\n     */\n    Grid.prototype.getFrozenLeftContentTbody = function () {\n        return this.getFrozenVirtualContent().querySelector(literals.tbody);\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns frozen right header tbody\n     */\n    Grid.prototype.getFrozenRightHeaderTbody = function () {\n        return this.getFrozenRightHeader().querySelector(literals.tbody);\n    };\n    /**\n     * @returns {Element} returns frozen right content tbody\n     * @hidden\n     */\n    Grid.prototype.getFrozenRightContentTbody = function () {\n        var cnt = this.getFrozenRightContent();\n        var tbody;\n        if (cnt) {\n            tbody = this.getFrozenRightContent().querySelector(literals.tbody);\n        }\n        return tbody;\n    };\n    /**\n     * @param {boolean} isCustom - Defines custom filter dialog open\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.showResponsiveCustomFilter = function (isCustom) {\n        if (this.filterModule) {\n            this.filterModule.showCustomFilter(isCustom || this.rowRenderingMode === 'Vertical');\n        }\n    };\n    /**\n     * @param {boolean} isCustom - Defines custom sort dialog open\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.showResponsiveCustomSort = function (isCustom) {\n        if (this.sortModule) {\n            this.sortModule.showCustomSort(isCustom || this.rowRenderingMode === 'Vertical');\n        }\n    };\n    /**\n     * To manually show the vertical row mode filter dialog\n     *\n     * @returns {void}\n     */\n    Grid.prototype.showAdaptiveFilterDialog = function () {\n        if (this.enableAdaptiveUI) {\n            this.showResponsiveCustomFilter(true);\n        }\n    };\n    /**\n     * To manually show the vertical row sort filter dialog\n     *\n     * @returns {void}\n     */\n    Grid.prototype.showAdaptiveSortDialog = function () {\n        if (this.enableAdaptiveUI) {\n            this.showResponsiveCustomSort(true);\n        }\n    };\n    /**\n     * @param {boolean} isColVirtualization - Defines column virtualization\n     * @returns {Column[]} returns array of column models\n     * @hidden\n     */\n    Grid.prototype.getCurrentVisibleColumns = function (isColVirtualization) {\n        var cols = [];\n        var gridCols = isColVirtualization ? this.getColumns() : this.columnModel;\n        for (var _i = 0, gridCols_1 = gridCols; _i < gridCols_1.length; _i++) {\n            var col = gridCols_1[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    Grid.prototype.enableInfiniteAggrgate = function () {\n        if (this.enableInfiniteScrolling && this.groupSettings.columns.length && !this.groupSettings.disablePageWiseAggregates) {\n            this.setProperties({ groupSettings: { disablePageWiseAggregates: true } }, true);\n        }\n    };\n    var Grid_1;\n    __decorate([\n        Property()\n    ], Grid.prototype, \"parentDetails\", void 0);\n    __decorate([\n        Property([])\n    ], Grid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableStickyHeader\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], Grid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Complex({}, ResizeSettings)\n    ], Grid.prototype, \"resizeSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Grid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableColumnVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableInfiniteScrolling\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], Grid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], Grid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], Grid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Complex({}, InfiniteScrollSettings)\n    ], Grid.prototype, \"infiniteScrollSettings\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Property(-1)\n    ], Grid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], Grid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Grid.prototype, \"rowRenderingMode\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableAdaptiveUI\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], Grid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], Grid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowGrouping\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Complex({}, GroupSettings)\n    ], Grid.prototype, \"groupSettings\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], Grid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], Grid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Complex({}, ColumnChooserSettings)\n    ], Grid.prototype, \"columnChooserSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableHeaderFocus\", void 0);\n    __decorate([\n        Property('auto')\n    ], Grid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], Grid.prototype, \"width\", void 0);\n    __decorate([\n        Property('Default')\n    ], Grid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"childGrid\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"queryString\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], Grid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property('Expanded')\n    ], Grid.prototype, \"hierarchyPrintMode\", void 0);\n    __decorate([\n        Property([])\n    ], Grid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property(null)\n    ], Grid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"query\", void 0);\n    __decorate([\n        Property('USD')\n    ], Grid.prototype, \"currencyCode\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(0)\n    ], Grid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], Grid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('')\n    ], Grid.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('All')\n    ], Grid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Property({})\n    ], Grid.prototype, \"currentAction\", void 0);\n    __decorate([\n        Property('20.2.39')\n    ], Grid.prototype, \"ej2StatePersistenceVersion\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"destroyed\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"recordClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnSelecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnSelected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDeselected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"pdfAggregateQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"excelAggregateQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"exportDetailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"pdfExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeOpenColumnChooser\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeOpenAdaptiveDialog\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"commandClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"keyPressed\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"checkBoxChange\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeAutoFill\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"exportGroupCaption\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"lazyLoadGroupExpand\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"lazyLoadGroupCollapse\", void 0);\n    Grid = Grid_1 = __decorate([\n        NotifyPropertyChanges\n    ], Grid);\n    return Grid;\n}(Component));\nexport { Grid };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}