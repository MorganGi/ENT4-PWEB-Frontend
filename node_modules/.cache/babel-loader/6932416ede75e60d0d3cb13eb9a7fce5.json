{"ast":null,"code":"import axios from \"axios\";\nimport api from \"./api.js\";\nimport TokenService from \"./token.service.js\";\nconst IP = \"10.21.21.2\";\nconst API_URL = `http://${IP}:8080/api/auth/`; // class AuthService {\n//   login(username, password) {\n//     return axios\n//       .post(API_URL + \"signin\", {\n//         username,\n//         password,\n//       })\n//       .then((response) => {\n//         if (response.data.accessToken) {\n//           localStorage.setItem(\"user\", JSON.stringify(response.data));\n//         }\n//         return response.data;\n//       });\n//   }\n//   logout() {\n//     localStorage.removeItem(\"user\");\n//   }\n//   register(username, email, password, roles) {\n//     return axios.post(API_URL + \"signup\", {\n//       username,\n//       email,\n//       password,\n//       roles,\n//     });\n//   }\n//   getCurrentUser() {\n//     return JSON.parse(localStorage.getItem(\"user\"));\n//   }\n// }\n// export default new AuthService();\n\nconst register = (username, email, password, roles) => {\n  return api.post(\"/auth/signup\", {\n    username,\n    email,\n    password,\n    roles\n  });\n};\n\nconst login = (username, password) => {\n  return api.post(\"/auth/signin\", {\n    username,\n    password\n  }).then(response => {\n    if (response.data.accessToken) {\n      TokenService.setUser(response.data);\n    }\n\n    return response.data;\n  });\n};\n\nconst logout = () => {\n  TokenService.removeUser();\n};\n\nconst getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem(\"user\"));\n};\n\nconst AuthService = {\n  register,\n  login,\n  logout,\n  getCurrentUser\n};\nexport default AuthService;","map":{"version":3,"names":["axios","api","TokenService","IP","API_URL","register","username","email","password","roles","post","login","then","response","data","accessToken","setUser","logout","removeUser","getCurrentUser","JSON","parse","localStorage","getItem","AuthService"],"sources":["/app/client/src/services/auth.service.js"],"sourcesContent":["import axios from \"axios\";\nimport api from \"./api.js\";\nimport TokenService from \"./token.service.js\";\n\nconst IP = \"10.21.21.2\";\nconst API_URL = `http://${IP}:8080/api/auth/`;\n\n// class AuthService {\n//   login(username, password) {\n//     return axios\n//       .post(API_URL + \"signin\", {\n//         username,\n//         password,\n//       })\n//       .then((response) => {\n//         if (response.data.accessToken) {\n//           localStorage.setItem(\"user\", JSON.stringify(response.data));\n//         }\n//         return response.data;\n//       });\n//   }\n//   logout() {\n//     localStorage.removeItem(\"user\");\n//   }\n//   register(username, email, password, roles) {\n//     return axios.post(API_URL + \"signup\", {\n//       username,\n//       email,\n//       password,\n//       roles,\n//     });\n//   }\n//   getCurrentUser() {\n//     return JSON.parse(localStorage.getItem(\"user\"));\n//   }\n// }\n// export default new AuthService();\nconst register = (username, email, password, roles) => {\n  return api.post(\"/auth/signup\", {\n    username,\n    email,\n    password,\n    roles,\n  });\n};\nconst login = (username, password) => {\n  return api\n    .post(\"/auth/signin\", {\n      username,\n      password,\n    })\n    .then((response) => {\n      if (response.data.accessToken) {\n        TokenService.setUser(response.data);\n      }\n      return response.data;\n    });\n};\nconst logout = () => {\n  TokenService.removeUser();\n};\nconst getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem(\"user\"));\n};\nconst AuthService = {\n  register,\n  login,\n  logout,\n  getCurrentUser,\n};\nexport default AuthService;\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AAEA,MAAMC,EAAE,GAAG,YAAX;AACA,MAAMC,OAAO,GAAI,UAASD,EAAG,iBAA7B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAME,QAAQ,GAAG,CAACC,QAAD,EAAWC,KAAX,EAAkBC,QAAlB,EAA4BC,KAA5B,KAAsC;EACrD,OAAOR,GAAG,CAACS,IAAJ,CAAS,cAAT,EAAyB;IAC9BJ,QAD8B;IAE9BC,KAF8B;IAG9BC,QAH8B;IAI9BC;EAJ8B,CAAzB,CAAP;AAMD,CAPD;;AAQA,MAAME,KAAK,GAAG,CAACL,QAAD,EAAWE,QAAX,KAAwB;EACpC,OAAOP,GAAG,CACPS,IADI,CACC,cADD,EACiB;IACpBJ,QADoB;IAEpBE;EAFoB,CADjB,EAKJI,IALI,CAKEC,QAAD,IAAc;IAClB,IAAIA,QAAQ,CAACC,IAAT,CAAcC,WAAlB,EAA+B;MAC7Bb,YAAY,CAACc,OAAb,CAAqBH,QAAQ,CAACC,IAA9B;IACD;;IACD,OAAOD,QAAQ,CAACC,IAAhB;EACD,CAVI,CAAP;AAWD,CAZD;;AAaA,MAAMG,MAAM,GAAG,MAAM;EACnBf,YAAY,CAACgB,UAAb;AACD,CAFD;;AAGA,MAAMC,cAAc,GAAG,MAAM;EAC3B,OAAOC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAP;AACD,CAFD;;AAGA,MAAMC,WAAW,GAAG;EAClBnB,QADkB;EAElBM,KAFkB;EAGlBM,MAHkB;EAIlBE;AAJkB,CAApB;AAMA,eAAeK,WAAf"},"metadata":{},"sourceType":"module"}