{"ast":null,"code":"import axios from \"axios\";\nimport TokenService from \"./token.service\";\nimport { IpBackend } from \"./ip.backend\";\nconst instance = axios.create({\n  baseURL: `http://${IpBackend}:8080/api`,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\ninstance.interceptors.request.use(config => {\n  const token = TokenService.getLocalAccessToken();\n\n  if (token) {\n    // config.headers[\"Authorization\"] = 'Bearer ' + token;  // for Spring Boot back-end\n    config.headers[\"x-access-token\"] = token; // for Node.js Express back-end\n  }\n\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\ninstance.interceptors.response.use(res => {\n  return res;\n}, err => {\n  const originalConfig = err.config;\n\n  if (originalConfig.url !== \"/auth/signin\" && err.response) {\n    // Access Token was expired\n    if (err.response.status === 401 && !originalConfig._retry) {\n      originalConfig._retry = true;\n\n      try {\n        const rs = instance.post(\"/auth/refreshtoken\", {\n          refreshToken: TokenService.getLocalRefreshToken()\n        });\n        const {\n          accessToken\n        } = rs.data;\n        TokenService.updateLocalAccessToken(accessToken);\n        return instance(originalConfig);\n      } catch (_error) {\n        return Promise.reject(_error);\n      }\n    }\n  }\n\n  return Promise.reject(err);\n});\nexport default instance;","map":{"version":3,"names":["axios","TokenService","IpBackend","instance","create","baseURL","headers","interceptors","request","use","config","token","getLocalAccessToken","error","Promise","reject","response","res","err","originalConfig","url","status","_retry","rs","post","refreshToken","getLocalRefreshToken","accessToken","data","updateLocalAccessToken","_error"],"sources":["/app/client/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\nimport TokenService from \"./token.service\";\nimport { IpBackend } from \"./ip.backend\";\n\nconst instance = axios.create({\n  baseURL: `http://${IpBackend}:8080/api`,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\ninstance.interceptors.request.use(\n  (config) => {\n    const token = TokenService.getLocalAccessToken();\n    if (token) {\n      // config.headers[\"Authorization\"] = 'Bearer ' + token;  // for Spring Boot back-end\n      config.headers[\"x-access-token\"] = token; // for Node.js Express back-end\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\ninstance.interceptors.response.use(\n  (res) => {\n    return res;\n  },\n  (err) => {\n    const originalConfig = err.config;\n    if (originalConfig.url !== \"/auth/signin\" && err.response) {\n      // Access Token was expired\n      if (err.response.status === 401 && !originalConfig._retry) {\n        originalConfig._retry = true;\n        try {\n          const rs = instance.post(\"/auth/refreshtoken\", {\n            refreshToken: TokenService.getLocalRefreshToken(),\n          });\n          const { accessToken } = rs.data;\n          TokenService.updateLocalAccessToken(accessToken);\n          return instance(originalConfig);\n        } catch (_error) {\n          return Promise.reject(_error);\n        }\n      }\n    }\n    return Promise.reject(err);\n  }\n);\nexport default instance;\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,SAASC,SAAT,QAA0B,cAA1B;AAEA,MAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAN,CAAa;EAC5BC,OAAO,EAAG,UAASH,SAAU,WADD;EAE5BI,OAAO,EAAE;IACP,gBAAgB;EADT;AAFmB,CAAb,CAAjB;AAMAH,QAAQ,CAACI,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CACGC,MAAD,IAAY;EACV,MAAMC,KAAK,GAAGV,YAAY,CAACW,mBAAb,EAAd;;EACA,IAAID,KAAJ,EAAW;IACT;IACAD,MAAM,CAACJ,OAAP,CAAe,gBAAf,IAAmCK,KAAnC,CAFS,CAEiC;EAC3C;;EACD,OAAOD,MAAP;AACD,CARH,EASGG,KAAD,IAAW;EACT,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CAXH;AAaAV,QAAQ,CAACI,YAAT,CAAsBS,QAAtB,CAA+BP,GAA/B,CACGQ,GAAD,IAAS;EACP,OAAOA,GAAP;AACD,CAHH,EAIGC,GAAD,IAAS;EACP,MAAMC,cAAc,GAAGD,GAAG,CAACR,MAA3B;;EACA,IAAIS,cAAc,CAACC,GAAf,KAAuB,cAAvB,IAAyCF,GAAG,CAACF,QAAjD,EAA2D;IACzD;IACA,IAAIE,GAAG,CAACF,QAAJ,CAAaK,MAAb,KAAwB,GAAxB,IAA+B,CAACF,cAAc,CAACG,MAAnD,EAA2D;MACzDH,cAAc,CAACG,MAAf,GAAwB,IAAxB;;MACA,IAAI;QACF,MAAMC,EAAE,GAAGpB,QAAQ,CAACqB,IAAT,CAAc,oBAAd,EAAoC;UAC7CC,YAAY,EAAExB,YAAY,CAACyB,oBAAb;QAD+B,CAApC,CAAX;QAGA,MAAM;UAAEC;QAAF,IAAkBJ,EAAE,CAACK,IAA3B;QACA3B,YAAY,CAAC4B,sBAAb,CAAoCF,WAApC;QACA,OAAOxB,QAAQ,CAACgB,cAAD,CAAf;MACD,CAPD,CAOE,OAAOW,MAAP,EAAe;QACf,OAAOhB,OAAO,CAACC,MAAR,CAAee,MAAf,CAAP;MACD;IACF;EACF;;EACD,OAAOhB,OAAO,CAACC,MAAR,CAAeG,GAAf,CAAP;AACD,CAvBH;AAyBA,eAAef,QAAf"},"metadata":{},"sourceType":"module"}