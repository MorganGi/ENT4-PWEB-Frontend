{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { randomId, Point } from '@syncfusion/ej2-drawings';\nimport { rotatePoint } from '@syncfusion/ej2-drawings';\nimport { Rect } from '@syncfusion/ej2-drawings';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '@syncfusion/ej2-drawings';\nimport { TextElement } from '@syncfusion/ej2-drawings';\nimport { Selector } from './selector';\nimport { findActiveElement } from './action';\nimport { cloneObject, isLineShapes } from './drawing-util';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { updatePerimeterLabel } from './connector-util';\nimport { Browser } from '@syncfusion/ej2-base';\n/**\n * Defines the interactive tools\n *\n * @hidden\n */\n\nvar ToolBase =\n/** @class */\nfunction () {\n  /**\n   * Initializes the tool\n   *\n   * @param {PdfViewer} pdfViewer - Specified the pdfviewer component.\n   * @param {PdfViewerBase} pdfViewerBase - Specified the pdfViewer base component.\n   * @param {boolean} protectChange - Set the default value as false.\n   */\n  function ToolBase(pdfViewer, pdfViewerBase, protectChange) {\n    if (protectChange === void 0) {\n      protectChange = false;\n    }\n    /**\n     * Command that is corresponding to the current action\n     */\n\n\n    this.commandHandler = null;\n    /**\n     * Sets/Gets whether the interaction is being done\n     */\n\n    this.inAction = false;\n    /**\n     * Sets/Gets the protect change\n     */\n\n    this.pdfViewerBase = null;\n    /**\n     * Sets/Gets the current element that is under mouse\n     */\n\n    /**   @private  */\n\n    this.currentElement = null;\n    /**   @private  */\n\n    this.blocked = false;\n    this.isTooltipVisible = false;\n    /** @private */\n\n    this.childTable = {};\n    /** @private */\n\n    this.helper = undefined;\n    /**\n     * Sets/Gets the previous object when mouse down\n     */\n\n    this.undoElement = {\n      annotations: []\n    };\n    this.undoParentElement = {\n      annotations: []\n    };\n    this.commandHandler = pdfViewer;\n    this.pdfViewerBase = pdfViewerBase;\n  }\n  /**\n   * @param {IElement} currentElement - Specified the current element.\n   * @returns {void}\n   */\n\n\n  ToolBase.prototype.startAction = function (currentElement) {\n    this.currentElement = currentElement;\n    this.inAction = true;\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Mouse up event arguments.\n   * @returns {void}\n   */\n\n\n  ToolBase.prototype.mouseDown = function (args) {\n    this.currentElement = args.source;\n    this.startPosition = this.currentPosition = this.prevPosition = args.position;\n    this.isTooltipVisible = true;\n    this.startAction(args.source);\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Mouse up event arguments.\n   * @returns {boolean} - Returns true or false.\n   */\n\n\n  ToolBase.prototype.mouseMove = function (args) {\n    this.currentPosition = args.position; //this.currentElement = currentElement;\n\n    this.prevPageId = this.pdfViewerBase.activeElements.activePageID;\n    return !this.blocked;\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Mouse up event arguments.\n   * @returns {void}\n   */\n\n\n  ToolBase.prototype.mouseUp = function (args) {\n    this.currentPosition = args.position; // this.currentElement = currentElement;\n\n    this.isTooltipVisible = false; //At the end\n\n    this.endAction();\n    this.helper = null;\n  };\n\n  ToolBase.prototype.endAction = function () {\n    //remove helper\n    if (this.commandHandler) {\n      this.commandHandler.tool = '';\n\n      if (this.helper) {\n        this.commandHandler.remove(this.helper);\n      }\n    }\n\n    this.commandHandler = null;\n    this.currentElement = null;\n    this.currentPosition = null;\n    this.inAction = false;\n    this.blocked = false;\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Mouse wheel event arguments.\n   * @returns {void}\n   */\n\n\n  ToolBase.prototype.mouseWheel = function (args) {\n    this.currentPosition = args.position;\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Mouse leave event arguments.\n   * @returns {void}\n   */\n\n\n  ToolBase.prototype.mouseLeave = function (args) {\n    this.mouseUp(args);\n  }; // eslint-disable-next-line\n\n\n  ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle, isMouseUp) {\n    var zoom = this.commandHandler.viewerBase.getZoomFactor();\n    var difx = this.currentPosition.x / zoom - this.startPosition.x / zoom;\n    var dify = this.currentPosition.y / zoom - this.startPosition.y / zoom;\n    var rotateAngle = shape instanceof TextElement ? angle : shape.rotateAngle;\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, -rotateAngle, 0, 0);\n    var deltaWidth = 0;\n    var deltaHeight = 0;\n    var diff;\n    var width = shape instanceof TextElement ? shape.actualSize.width : shape.wrapper.bounds.width;\n    var height = shape instanceof TextElement ? shape.actualSize.height : shape.wrapper.bounds.height; // eslint-disable-next-line\n\n    var obj = shape;\n\n    if (!shape.formFieldAnnotationType) {\n      if (!shape.annotName && !shape.shapeAnnotationType) {\n        if (shape) {\n          // eslint-disable-next-line\n          obj = shape.annotations[0];\n        }\n      }\n    } // eslint-disable-next-line\n\n\n    var annotationSettings = this.commandHandler.annotationModule ? this.commandHandler.annotationModule.findAnnotationSettings(obj) : {};\n    var annotationMaxHeight = 0;\n    var annotationMaxWidth = 0;\n    var annotationMinHeight = 0;\n    var annotationMinWidth = 0;\n\n    if (annotationSettings.minWidth || annotationSettings.maxWidth || annotationSettings.minHeight || annotationSettings.maxHeight) {\n      annotationMaxHeight = annotationSettings.maxHeight ? annotationSettings.maxHeight : 2000;\n      annotationMaxWidth = annotationSettings.maxWidth ? annotationSettings.maxWidth : 2000;\n      annotationMinHeight = annotationSettings.minHeight ? annotationSettings.minHeight : 0;\n      annotationMinWidth = annotationSettings.minWidth ? annotationSettings.minWidth : 0;\n    }\n\n    var isAnnotationSet = false;\n\n    if (annotationMinHeight || annotationMinWidth || annotationMaxHeight || annotationMaxWidth) {\n      isAnnotationSet = true;\n    }\n\n    if (isAnnotationSet && isMouseUp) {\n      // eslint-disable-next-line\n      var size = this.getPositions(corner, difx, dify);\n      var newWidth = width + size.x;\n      var newHeight = height + size.y; // eslint-disable-next-line max-len\n\n      if (newHeight > annotationMinHeight && newHeight < annotationMaxHeight && newWidth > annotationMinWidth && newWidth < annotationMaxWidth) {\n        // eslint-disable-next-line\n        difx = difx; // eslint-disable-next-line\n\n        dify = dify;\n      } else {\n        if (newHeight < annotationMinHeight || newHeight > annotationMaxHeight) {\n          if (newHeight < annotationMinHeight) {\n            dify = annotationMinHeight - height;\n          } else {\n            dify = annotationMaxHeight - height;\n          }\n        }\n\n        if (newWidth < annotationMinWidth || newWidth > annotationMaxWidth) {\n          if (newWidth < annotationMinWidth) {\n            difx = annotationMinWidth - width;\n          } else {\n            difx = annotationMaxWidth - width;\n          }\n        }\n      }\n    }\n\n    switch (corner) {\n      case 'ResizeWest':\n        diff = transformPointByMatrix(matrix, {\n          x: difx,\n          y: dify\n        });\n        difx = diff.x;\n        dify = diff.y;\n        deltaHeight = 1; // eslint-disable-next-line\n\n        difx = difx;\n        dify = 0;\n\n        if (isAnnotationSet) {\n          if (initialBounds.width - difx > annotationMaxWidth) {\n            difx = annotationMaxWidth - initialBounds.width;\n          }\n        }\n\n        deltaWidth = (initialBounds.width - difx) / width;\n        break;\n\n      case 'ResizeEast':\n        diff = transformPointByMatrix(matrix, {\n          x: difx,\n          y: dify\n        });\n        difx = diff.x;\n        dify = diff.y;\n        dify = 0;\n\n        if (isAnnotationSet) {\n          if (initialBounds.width + difx > annotationMaxWidth) {\n            difx = annotationMaxWidth - initialBounds.width;\n          }\n        }\n\n        deltaWidth = (initialBounds.width + difx) / width;\n        deltaHeight = 1;\n        break;\n\n      case 'ResizeNorth':\n        deltaWidth = 1;\n        diff = transformPointByMatrix(matrix, {\n          x: difx,\n          y: dify\n        });\n        difx = diff.x;\n        dify = diff.y;\n\n        if (isAnnotationSet) {\n          if (initialBounds.height - dify > annotationMaxHeight) {\n            dify = annotationMaxHeight - initialBounds.height;\n          }\n        }\n\n        deltaHeight = (initialBounds.height - dify) / height;\n        break;\n\n      case 'ResizeSouth':\n        deltaWidth = 1;\n        diff = transformPointByMatrix(matrix, {\n          x: difx,\n          y: dify\n        });\n        difx = diff.x;\n        dify = diff.y;\n\n        if (isAnnotationSet) {\n          if (initialBounds.height + dify > annotationMaxHeight) {\n            dify = annotationMaxHeight - initialBounds.height;\n          }\n        }\n\n        deltaHeight = (initialBounds.height + dify) / height;\n        break;\n\n      case 'ResizeNorthEast':\n        diff = transformPointByMatrix(matrix, {\n          x: difx,\n          y: dify\n        });\n        difx = diff.x;\n        dify = diff.y;\n\n        if (isAnnotationSet) {\n          if (initialBounds.width + difx > annotationMaxWidth) {\n            difx = annotationMaxWidth - initialBounds.width;\n          }\n\n          if (initialBounds.height - dify > annotationMaxHeight) {\n            dify = annotationMaxHeight - initialBounds.height;\n          }\n        }\n\n        deltaWidth = (initialBounds.width + difx) / width;\n        deltaHeight = (initialBounds.height - dify) / height;\n        break;\n\n      case 'ResizeNorthWest':\n        diff = transformPointByMatrix(matrix, {\n          x: difx,\n          y: dify\n        });\n        difx = diff.x;\n        dify = diff.y;\n\n        if (isAnnotationSet) {\n          if (initialBounds.width - difx > annotationMaxWidth) {\n            difx = annotationMaxWidth - initialBounds.width;\n          }\n\n          if (initialBounds.height - dify > annotationMaxHeight) {\n            dify = annotationMaxHeight - initialBounds.height;\n          }\n        }\n\n        deltaWidth = (initialBounds.width - difx) / width;\n        deltaHeight = (initialBounds.height - dify) / height;\n        break;\n\n      case 'ResizeSouthEast':\n        diff = transformPointByMatrix(matrix, {\n          x: difx,\n          y: dify\n        });\n        difx = diff.x;\n        dify = diff.y;\n\n        if (isAnnotationSet) {\n          if (initialBounds.width + difx > annotationMaxWidth) {\n            difx = annotationMaxWidth - initialBounds.width;\n          }\n\n          if (initialBounds.height + dify > annotationMaxHeight) {\n            dify = annotationMaxHeight - initialBounds.height;\n          }\n        }\n\n        deltaHeight = (initialBounds.height + dify) / height;\n        deltaWidth = (initialBounds.width + difx) / width;\n        break;\n\n      case 'ResizeSouthWest':\n        diff = transformPointByMatrix(matrix, {\n          x: difx,\n          y: dify\n        });\n        difx = diff.x;\n        dify = diff.y;\n\n        if (isAnnotationSet) {\n          if (initialBounds.width - difx > annotationMaxWidth) {\n            difx = annotationMaxWidth - initialBounds.width;\n          }\n\n          if (initialBounds.height + dify > annotationMaxHeight) {\n            dify = annotationMaxHeight - initialBounds.height;\n          }\n        }\n\n        deltaWidth = (initialBounds.width - difx) / width;\n        deltaHeight = (initialBounds.height + dify) / height;\n        break;\n    }\n\n    return {\n      width: deltaWidth,\n      height: deltaHeight\n    };\n  };\n\n  ToolBase.prototype.getPivot = function (corner) {\n    switch (corner) {\n      case 'ResizeWest':\n        return {\n          x: 1,\n          y: 0.5\n        };\n\n      case 'ResizeEast':\n        return {\n          x: 0,\n          y: 0.5\n        };\n\n      case 'ResizeNorth':\n        return {\n          x: 0.5,\n          y: 1\n        };\n\n      case 'ResizeSouth':\n        return {\n          x: 0.5,\n          y: 0\n        };\n\n      case 'ResizeNorthEast':\n        return {\n          x: 0,\n          y: 1\n        };\n\n      case 'ResizeNorthWest':\n        return {\n          x: 1,\n          y: 1\n        };\n\n      case 'ResizeSouthEast':\n        return {\n          x: 0,\n          y: 0\n        };\n\n      case 'ResizeSouthWest':\n        return {\n          x: 1,\n          y: 0\n        };\n    }\n\n    return {\n      x: 0.5,\n      y: 0.5\n    };\n  };\n\n  ToolBase.prototype.getPositions = function (corner, x, y) {\n    switch (corner) {\n      case 'ResizeEast':\n        return {\n          x: x,\n          y: 0\n        };\n\n      case 'ResizeSouthEast':\n        return {\n          x: x,\n          y: y\n        };\n\n      case 'ResizeSouth':\n        return {\n          x: 0,\n          y: y\n        };\n\n      case 'ResizeNorth':\n        return {\n          x: 0,\n          y: -y\n        };\n\n      case 'ResizeNorthEast':\n        return {\n          x: x,\n          y: -y\n        };\n\n      case 'ResizeNorthWest':\n        return {\n          x: -x,\n          y: -y\n        };\n\n      case 'ResizeWest':\n        return {\n          x: -x,\n          y: 0\n        };\n\n      case 'ResizeSouthWest':\n        return {\n          x: -x,\n          y: y\n        };\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  };\n\n  return ToolBase;\n}();\n\nexport { ToolBase };\n/**\n * Helps to select the objects\n *\n * @hidden\n */\n\nvar SelectTool =\n/** @class */\nfunction (_super) {\n  __extends(SelectTool, _super);\n\n  function SelectTool(commandHandler, base) {\n    return _super.call(this, commandHandler, base, true) || this; //     this.action = action;\n  }\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Mouse down event arguments.\n   * @returns {void}\n   */\n\n\n  SelectTool.prototype.mouseDown = function (args) {\n    this.inAction = true;\n    this.mouseEventHelper(args);\n\n    _super.prototype.mouseDown.call(this, args);\n  };\n\n  SelectTool.prototype.mouseEventHelper = function (args) {\n    if (this.commandHandler && this.commandHandler.annotationModule) {\n      // eslint-disable-next-line\n      this.commandHandler.annotationModule.overlappedCollections = findActiveElement(args, this.pdfViewerBase, this.commandHandler, true);\n    } // eslint-disable-next-line\n\n\n    var object = findActiveElement(args, this.pdfViewerBase, this.commandHandler); // if (!isNullOrUndefined(object) && (object as any).shapeAnnotationType != 'Path'){\n\n    var isLock = false; // eslint-disable-next-line\n\n    if (object && object.shapeAnnotationType === 'StickyNotes') {\n      // eslint-disable-next-line\n      if (object.annotationSettings && object.annotationSettings.isLock) {\n        if (this.commandHandler.annotationModule.checkAllowedInteractions('Select', object)) {\n          isLock = false;\n        } else {\n          isLock = true;\n        }\n      }\n    }\n\n    if (!isLock) {\n      // eslint-disable-next-line\n      var currentSelctor = void 0;\n\n      if (args.source && args.annotationSelectorSettings !== null) {\n        currentSelctor = args.source.annotationSelectorSettings;\n      } else {\n        currentSelctor = '';\n      }\n\n      if (this.commandHandler) {\n        var selectedObject = this.commandHandler.selectedItems;\n\n        if (selectedObject) {\n          // eslint-disable-next-line\n          var annotation = selectedObject.annotations[0]; // eslint-disable-next-line\n\n          var formField = selectedObject.formFields[0];\n          var currentAnnot = this.commandHandler.selectedItems.annotations[0];\n          var currentSource = args.source;\n\n          if (selectedObject.annotations.length && args.info && !args.info.ctrlKey // eslint-disable-next-line\n          && this.commandHandler.annotationModule && this.commandHandler.annotationModule.freeTextAnnotationModule.isInuptBoxInFocus === false) {\n            this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n          } else if (args.info && args.info.ctrlKey && (currentSource && currentSource.shapeAnnotationType === 'FreeText' || currentAnnot && currentAnnot.shapeAnnotationType === 'FreeText')) {\n            this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n          } else if (isNullOrUndefined(object) && this.commandHandler.formDesignerModule && !(currentSource && currentSource.shapeAnnotationType === 'FreeText' || currentAnnot && (currentAnnot.shapeAnnotationType === 'FreeText' || currentAnnot.shapeAnnotationType === 'Image' || currentAnnot.shapeAnnotationType === 'StickyNotes'))) {\n            this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n          }\n\n          if (object) {\n            if (!isNullOrUndefined(this.pdfViewerBase.isFreeTextSelected) && !this.pdfViewerBase.isFreeTextSelected) {\n              this.commandHandler.select([object.id], currentSelctor);\n              this.commandHandler.viewerBase.isAnnotationMouseDown = true;\n            }\n\n            this.pdfViewerBase.isFreeTextSelected = false;\n            this.commandHandler.viewerBase.isFormFieldMouseDown = true;\n          }\n\n          if (selectedObject.annotations.length === 0 && annotation && annotation.shapeAnnotationType !== 'HandWrittenSignature' && annotation.shapeAnnotationType !== 'SignatureText' && annotation.shapeAnnotationType !== 'SignatureImage' && annotation.shapeAnnotationType !== 'Path' && !annotation.formFieldAnnotationType) {\n            if (this.commandHandler.enableToolbar && Browser.isDevice && !this.commandHandler.enableDesktopMode) {\n              this.commandHandler.toolbarModule.showToolbar(true);\n            }\n\n            this.commandHandler.fireAnnotationUnSelect(annotation.annotName, annotation.pageIndex, annotation);\n          } // eslint-disable-next-line max-len\n\n\n          if (selectedObject.formFields.length === 0 && this.commandHandler.formDesignerModule && formField && formField.formFieldAnnotationType) {\n            // eslint-disable-next-line\n            var field = {\n              name: formField.name,\n              id: formField.id,\n              value: formField.value,\n              fontFamily: formField.fontFamily,\n              fontSize: formField.fontSize,\n              fontStyle: formField.fontStyle,\n              // eslint-disable-next-line\n              color: formField.color,\n              backgroundColor: formField.backgroundColor,\n              alignment: formField.alignment,\n              isReadonly: formField.isReadOnly,\n              visibility: formField.visibility,\n              // eslint-disable-next-line\n              maxLength: formField.maxLength,\n              isRequired: formField.isRequired,\n              isPrint: formField.isPrint,\n              rotation: formField.rotation,\n              tooltip: formField.tooltip,\n              // eslint-disable-next-line\n              options: formField.options,\n              isChecked: formField.isChecked,\n              isSelected: formField.isSelected\n            };\n            this.commandHandler.fireFormFieldUnselectEvent('formFieldUnselect', field, formField.pageIndex);\n          } else if (this.pdfViewerBase.currentTarget && this.pdfViewerBase.currentTarget.id && this.commandHandler.formFields && event.type === 'mousedown') {\n            for (var i = 0; i < this.commandHandler.formFields.length; i++) {\n              var formField_1 = this.commandHandler.formFields[i];\n\n              if (this.pdfViewerBase.currentTarget && this.pdfViewerBase.currentTarget.id === formField_1.id) {\n                // eslint-disable-next-line\n                var field = {\n                  value: formField_1.value,\n                  fontFamily: formField_1.fontFamily,\n                  fontSize: formField_1.fontSize,\n                  fontStyle: formField_1.fontStyle,\n                  // eslint-disable-next-line\n                  color: formField_1.color,\n                  backgroundColor: formField_1.backgroundColor,\n                  alignment: formField_1.alignment,\n                  isReadonly: formField_1.isReadonly,\n                  visibility: formField_1.visibility,\n                  // eslint-disable-next-line\n                  maxLength: formField_1.maxLength,\n                  isRequired: formField_1.isRequired,\n                  isPrint: formField_1.isPrint,\n                  rotation: formField_1.rotateAngle,\n                  tooltip: formField_1.tooltip,\n                  // eslint-disable-next-line\n                  options: formField_1.options,\n                  isChecked: formField_1.isChecked,\n                  isSelected: formField_1.isSelected\n                };\n\n                if (!object) {\n                  this.commandHandler.fireFocusOutFormField(field, formField_1.pageIndex);\n                  this.pdfViewerBase.currentTarget = null;\n                } else {\n                  if (this.pdfViewerBase.currentTarget.id != event.target.id && event.target.className != 'e-pv-text-layer') {\n                    this.commandHandler.fireFocusOutFormField(field, formField_1.pageIndex);\n                    this.pdfViewerBase.currentTarget = null;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    } // } else {\n    //     if (!isNullOrUndefined(this.commandHandler))\n    //         this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n    // }\n\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Mouse move event arguments.\n   * @returns {boolean} - Returns true or false.\n   */\n\n\n  SelectTool.prototype.mouseMove = function (args) {\n    _super.prototype.mouseMove.call(this, args); //draw selected region\n\n\n    return !this.blocked;\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Mouse up event arguments.\n   * @returns {void}\n   */\n\n\n  SelectTool.prototype.mouseUp = function (args) {\n    this.mouseEventHelper(args);\n    this.inAction = false;\n\n    _super.prototype.mouseUp.call(this, args);\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Mouse leave event arguments.\n   * @returns {void}\n   */\n\n\n  SelectTool.prototype.mouseLeave = function (args) {\n    if (this.inAction) {\n      this.mouseUp(args);\n    }\n  };\n\n  return SelectTool;\n}(ToolBase);\n\nexport { SelectTool };\n/** @hidden */\n\nvar MoveTool =\n/** @class */\nfunction (_super) {\n  __extends(MoveTool, _super);\n\n  function MoveTool(commandHandler, base) {\n    var _this = _super.call(this, commandHandler, base) || this;\n    /**   @private  */\n\n\n    _this.currentTarget = null;\n    /**   @private  */\n\n    _this.prevNode = null;\n    return _this;\n  }\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Mouse down event arguments.\n   * @returns {void}\n   */\n\n\n  MoveTool.prototype.mouseDown = function (args) {\n    _super.prototype.mouseDown.call(this, args);\n\n    this.offset = {\n      x: args.source.wrapper.offsetX,\n      y: args.source.wrapper.offsetY\n    };\n    this.startPosition = args.position;\n    var nodeMouseDown = cloneObject(args.source);\n    this.redoElement = {\n      bounds: {\n        x: nodeMouseDown.wrapper.offsetX,\n        y: nodeMouseDown.wrapper.offsetY,\n        width: nodeMouseDown.wrapper.actualSize.width,\n        height: nodeMouseDown.wrapper.actualSize.height\n      } // eslint-disable-next-line\n\n    };\n\n    if (isLineShapes(nodeMouseDown)) {\n      this.redoElement.vertexPoints = nodeMouseDown.vertexPoints;\n      this.redoElement.leaderHeight = nodeMouseDown.leaderHeight;\n    }\n\n    this.inAction = true;\n  };\n  /**\n   * @private\n   * @param {any} args - Specified the mouse event arguments.\n   * @returns {void}\n   */\n  // eslint-disable-next-line\n\n\n  MoveTool.prototype.mouseUp = function (args) {\n    if (this.commandHandler && args.source) {\n      this.checkisAnnotationMove(args);\n      var currentSelctor = args.source.annotationSelectorSettings;\n      this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n      this.commandHandler.select([args.source.id], currentSelctor); // eslint-disable-next-line max-len\n\n      if (this.pdfViewerBase.activeElements.activePageID == args.source.pageIndex) {\n        this.commandHandler.dragSelectedObjects(this.calculateMouseActionXDiff(args), this.calculateMouseActionYDiff(args), this.pdfViewerBase.activeElements.activePageID, currentSelctor, null);\n      }\n\n      if (args.source && (args.source.formFieldAnnotationType === 'Textbox' || args.source.formFieldAnnotationType === 'Checkbox' || args.source.formFieldAnnotationType === 'RadioButton' || args.source.formFieldAnnotationType === 'ListBox' || args.source.formFieldAnnotationType === 'SignatureField' || args.source.formFieldAnnotationType === 'InitialField' || args.source.formFieldAnnotationType === 'DropdownList' || args.source.formFieldAnnotationType === 'PasswordField')) {\n        this.commandHandler.formDesignerModule.updateHTMLElement(args.source);\n      }\n\n      this.commandHandler.renderSelector(this.pdfViewerBase.activeElements.activePageID, currentSelctor);\n      this.commandHandler.viewerBase.isAnnotationMouseMove = false;\n      this.commandHandler.viewerBase.isFormFieldMouseMove = false; // eslint-disable-next-line\n\n      var newShapeObject = {\n        bounds: {\n          x: args.source.wrapper.offsetX,\n          y: args.source.wrapper.offsetY,\n          width: args.source.wrapper.actualSize.width,\n          height: args.source.wrapper.actualSize.height\n        },\n        modifiedDate: args.source.modifiedDate\n      };\n\n      if (isLineShapes(args.source)) {\n        newShapeObject.vertexPoints = args.source.vertexPoints;\n        newShapeObject.leaderHeight = args.source.leaderHeight;\n      }\n\n      if (args.target && args.target.formFieldAnnotationType) {\n        var node = args.target;\n        var field = {\n          // eslint-disable-next-line\n          value: node.value,\n          fontFamily: node.fontFamily,\n          fontSize: node.fontSize,\n          fontStyle: node.fontStyle,\n          // eslint-disable-next-line\n          color: node.color,\n          backgroundColor: node.backgroundColor,\n          borderColor: node.borderColor,\n          // eslint-disable-next-line\n          thickness: node.thickness,\n          alignment: node.alignment,\n          isReadonly: node.isReadonly,\n          visibility: node.visibility,\n          // eslint-disable-next-line\n          maxLength: node.maxLength,\n          isRequired: node.isRequired,\n          isPrint: node.isPrint,\n          rotation: node.rotateAngle,\n          tooltip: node.tooltip,\n          options: node.options,\n          // eslint-disable-next-line\n          isChecked: node.isChecked,\n          isSelected: node.isSelected\n        }; // eslint-disable-next-line max-len\n\n        var currentPosition = {\n          X: args.source.wrapper.offsetX,\n          Y: args.source.wrapper.offsetY,\n          Width: args.source.wrapper.actualSize.width,\n          Height: args.source.wrapper.actualSize.height\n        }; // eslint-disable-next-line max-len\n\n        var previousPosition = {\n          X: this.offset.x,\n          Y: this.offset.y,\n          Width: args.source.wrapper.actualSize.width,\n          Height: args.source.wrapper.actualSize.height\n        };\n        this.commandHandler.fireFormFieldMoveEvent('formFieldMove', field, node.pageIndex, previousPosition, currentPosition);\n      }\n\n      if (this.commandHandler.annotation) {\n        // eslint-disable-next-line\n        this.commandHandler.annotation.addAction(this.pageIndex, null, args.source, 'Drag', '', this.redoElement, newShapeObject);\n        this.commandHandler.annotation.stampAnnotationModule.updateSessionStorage(args.source, null, 'Drag');\n        this.commandHandler.annotation.stickyNotesAnnotationModule.updateStickyNotes(args.source, null);\n      }\n    }\n\n    var shapeAnnotationType = this.commandHandler && this.commandHandler.selectedItems && this.commandHandler.selectedItems.annotations && this.commandHandler.selectedItems.annotations.length > 0 ? this.commandHandler.selectedItems.annotations[0].shapeAnnotationType : null;\n\n    if (shapeAnnotationType && shapeAnnotationType !== 'Image' && shapeAnnotationType !== 'SignatureImage') {\n      _super.prototype.mouseUp.call(this, args);\n    } else if (this.commandHandler && this.commandHandler.selectedItems && this.commandHandler.selectedItems.formFields && this.commandHandler.selectedItems.formFields.length > 0) {\n      _super.prototype.mouseUp.call(this, args);\n    }\n  };\n\n  MoveTool.prototype.calculateMouseXDiff = function () {\n    if (this.currentPosition && this.startPosition) {\n      return this.currentPosition.x - this.startPosition.x;\n    } else {\n      return 0;\n    }\n  };\n\n  MoveTool.prototype.calculateMouseYDiff = function () {\n    if (this.currentPosition && this.startPosition) {\n      return this.currentPosition.y - this.startPosition.y;\n    } else {\n      return 0;\n    }\n  };\n\n  MoveTool.prototype.calculateMouseActionXDiff = function (args) {\n    var x = this.calculateMouseXDiff() / this.commandHandler.viewerBase.getZoomFactor(); // let y: number = this.calculateMouseYDiff() / this.commandHandler.magnification.zoomFactor;\n\n    if (this.offset) {\n      var requiredX = this.offset.x + x; // let requiredY: number = this.offset.y + y;\n\n      return requiredX - args.source.wrapper.offsetX; //let diffY: number = requiredY - args.source.wrapper.offsetY;\n    } else {\n      return 0;\n    }\n  };\n\n  MoveTool.prototype.calculateMouseActionYDiff = function (args) {\n    // let x: number = this.calculateMouseXDiff() / this.commandHandler.magnification.zoomFactor;\n    var y = this.calculateMouseYDiff() / this.commandHandler.viewerBase.getZoomFactor();\n\n    if (this.offset) {\n      // let requiredX: number = this.offset.x + x;\n      var requiredY = this.offset.y + y; // let diffX: number = requiredX - args.source.wrapper.offsetX;\n\n      return requiredY - args.source.wrapper.offsetY;\n    } else {\n      return 0;\n    }\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @param {boolean} isStamp - Specified the stamp annotation or not.\n   * @param {boolean} isSkip - Specified the annotation skip or not.\n   * @returns {boolean} - Returns the true or false.\n   */\n\n\n  MoveTool.prototype.mouseMove = function (args, isStamp, isSkip) {\n    _super.prototype.mouseMove.call(this, args);\n\n    if (this.inAction) {\n      this.currentPosition = args.position;\n      this.currentTarget = args.target;\n      var currentSelctor = args.source.annotationSelectorSettings;\n      var x = this.calculateMouseXDiff() / this.commandHandler.viewerBase.getZoomFactor();\n      var y = this.calculateMouseYDiff() / this.commandHandler.viewerBase.getZoomFactor();\n      var requiredX = this.offset.x + x;\n      var requiredY = this.offset.y + y;\n      var diffX = this.calculateMouseActionXDiff(args);\n      var diffY = this.calculateMouseActionYDiff(args);\n      var selectedItem = this.commandHandler.selectedItems.annotations[0];\n      var cobject = void 0;\n\n      if (!this.helper) {\n        // eslint-disable-next-line\n        cobject = this.commandHandler.selectedItems.annotations.length > 0 ? cloneObject(this.commandHandler.selectedItems.annotations[0]) : cloneObject(this.commandHandler.selectedItems.formFields[0]);\n\n        if (cobject.wrapper) {\n          diffX = requiredX - cobject.wrapper.offsetX;\n          diffY = requiredY - cobject.wrapper.offsetY; // eslint-disable-next-line max-len\n\n          cobject.bounds = this.commandHandler.selectedItems.annotations.length > 0 ? this.commandHandler.selectedItems.annotations[0].wrapper.bounds : this.commandHandler.selectedItems.formFields[0].wrapper.bounds;\n        }\n\n        cobject.wrapper = undefined;\n        cobject.id = 'diagram_helper';\n\n        if (cobject.shapeAnnotationType === 'Stamp') {\n          cobject.strokeColor = '';\n          cobject.borderDashArray = '';\n          cobject.fillColor = 'transparent';\n          cobject.stampFillColor = 'transparent';\n          cobject.data = '';\n        } else if (cobject.shapeAnnotationType === 'FreeText') {\n          cobject.strokeColor = 'blue';\n          cobject.fillColor = 'transparent';\n          cobject.thickness = 1;\n          cobject.opacity = 1;\n          cobject.dynamicText = '';\n        } else if (cobject.shapeAnnotationType === 'SignatureText') {\n          cobject.strokeColor = 'red';\n          cobject.borderDashArray = '5,5';\n          cobject.fillColor = 'transparent';\n          cobject.thickness = 2;\n          cobject.opacity = 1;\n          cobject.data = '';\n        } else {\n          cobject.strokeColor = 'red';\n          cobject.borderDashArray = '5,5';\n          cobject.fillColor = 'transparent';\n          cobject.thickness = 2;\n          cobject.opacity = 1;\n        }\n\n        if (cobject.enableShapeLabel === true) {\n          cobject.labelContent = '';\n        }\n\n        var shapeAnnotationType = cobject.shapeAnnotationType;\n\n        if (!isStamp && shapeAnnotationType !== 'Image' && shapeAnnotationType !== 'SignatureImage') {\n          this.helper = cobject = this.commandHandler.add(cobject);\n        } else {\n          cobject = this.helper = args.source;\n        }\n\n        if (this.commandHandler.selectedItems.annotations.length > 0) {\n          this.commandHandler.selectedItems.annotations = [cobject];\n        } else {\n          this.commandHandler.selectedItems.formFields = [cobject];\n        }\n      } else {\n        diffX = requiredX - this.helper.wrapper.offsetX;\n        diffY = requiredY - this.helper.wrapper.offsetY;\n      }\n\n      if (this.helper && this.helper.shapeAnnotationType === 'Stamp') {\n        isStamp = true;\n      } // eslint-disable-next-line max-len\n\n\n      if (this.commandHandler.checkBoundaryConstraints(diffX, diffY, this.pdfViewerBase.activeElements.activePageID, this.helper.wrapper.bounds, isStamp, isSkip)) {\n        var shapeAnnotationType = this.helper.shapeAnnotationType;\n\n        if (this.helper && (shapeAnnotationType === 'Image' || shapeAnnotationType === 'SignatureImage')) {\n          this.checkisAnnotationMove(args); // eslint-disable-next-line max-len\n\n          var currentSelctor_1 = args.source.annotationSelectorSettings;\n          this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n          this.commandHandler.select([args.source.id], currentSelctor_1); // eslint-disable-next-line max-len\n\n          this.commandHandler.dragSelectedObjects(diffX, diffY, this.pdfViewerBase.activeElements.activePageID, currentSelctor_1, this.helper);\n          this.commandHandler.renderSelector(this.pdfViewerBase.activeElements.activePageID, currentSelctor_1);\n        } else {\n          this.commandHandler.dragSelectedObjects(diffX, diffY, this.pdfViewerBase.activeElements.activePageID, currentSelctor, this.helper);\n        }\n\n        this.prevNode = this.helper;\n        this.prevPosition = this.currentPosition;\n      } else {\n        this.currentPosition = this.prevPosition;\n      }\n\n      if (selectedItem && selectedItem.annotName) {\n        this.commandHandler.annotation.triggerAnnotationMove(selectedItem, true);\n      }\n    }\n\n    return true;\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {void}\n   */\n\n\n  MoveTool.prototype.mouseLeave = function (args) {\n    var currentSelctor = args.source.annotationSelectorSettings;\n    var requiredX = this.offset.x + this.calculateMouseXDiff();\n    var requiredY = this.offset.y + this.calculateMouseYDiff();\n    var diffX = requiredX - args.source.wrapper.offsetX;\n    var diffY = requiredY - args.source.wrapper.offsetY;\n    this.commandHandler.dragSelectedObjects(diffX, diffY, this.prevPageId, currentSelctor, null);\n    this.commandHandler.renderSelector(this.prevPageId, currentSelctor);\n\n    _super.prototype.mouseLeave.call(this, args);\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n\n\n  MoveTool.prototype.endAction = function () {\n    _super.prototype.endAction.call(this);\n\n    this.currentTarget = null;\n    this.prevPosition = null;\n  };\n\n  MoveTool.prototype.checkisAnnotationMove = function (args) {\n    // eslint-disable-next-line max-len\n    if (this.commandHandler.selectedItems && this.commandHandler.selectedItems.annotations && this.commandHandler.selectedItems.annotations.length > 0) {\n      if (this.commandHandler.selectedItems.annotations[0].annotName === args.source.annotName) {\n        this.commandHandler.viewerBase.isAnnotationMouseMove = true;\n      }\n    } else {\n      this.commandHandler.viewerBase.isAnnotationMouseMove = false;\n    } // eslint-disable-next-line max-len\n\n\n    if (this.commandHandler.selectedItems && this.commandHandler.selectedItems.formFields && this.commandHandler.selectedItems.formFields.length > 0) {\n      if (this.commandHandler.selectedItems.formFields[0].name === args.source.name) {\n        this.commandHandler.viewerBase.isFormFieldMouseMove = true;\n      }\n    } else {\n      this.commandHandler.viewerBase.isFormFieldMouseMove = false;\n    }\n  };\n\n  return MoveTool;\n}(ToolBase);\n\nexport { MoveTool };\n/** @hidden */\n\nvar StampTool =\n/** @class */\nfunction (_super) {\n  __extends(StampTool, _super);\n\n  function StampTool() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {any} - Returns the mouse up event.\n   */\n  // eslint-disable-next-line\n\n\n  StampTool.prototype.mouseDown = function (args) {\n    _super.prototype.mouseUp.call(this, args);\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {boolean} - Returns the true or false.\n   */\n\n\n  StampTool.prototype.mouseMove = function (args) {\n    // eslint-disable-next-line\n    var newObject;\n\n    if (!this.inAction) {\n      var pageIndex = this.pdfViewerBase.activeElements.activePageID;\n      this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID); // eslint-disable-next-line max-len\n\n      var nodeElement = this.commandHandler.annotation.stampAnnotationModule.moveStampElement(args.position.x, args.position.y, pageIndex);\n\n      if (nodeElement.shapeAnnotationType === 'SignatureText') {\n        var textWidth = this.getTextWidth(nodeElement.data, nodeElement.fontSize, nodeElement.fontFamily);\n        var widthRatio = 1;\n        if (textWidth > nodeElement.bounds.width) widthRatio = nodeElement.bounds.width / textWidth;\n        nodeElement.fontSize = this.getFontSize(Math.floor(nodeElement.fontSize * widthRatio));\n        var defaultFontSize = 32; // default font size.\n\n        nodeElement.bounds.height = nodeElement.fontSize < defaultFontSize ? nodeElement.fontSize * 2 : nodeElement.bounds.height;\n        nodeElement.thickness = 0;\n      }\n\n      newObject = this.commandHandler.add(nodeElement);\n      args.source = this.commandHandler.annotations[this.commandHandler.annotations.length - 1];\n      args.sourceWrapper = args.source.wrapper;\n      this.inAction = true; // eslint-disable-next-line\n\n      var currentSource = args.source;\n\n      if (currentSource && (currentSource.shapeAnnotationType === 'HandWrittenSignature' || currentSource.shapeAnnotationType === 'SignatureText' || currentSource.shapeAnnotationType === 'SignatureImage')) {\n        this['offset'] = {\n          x: args.source.wrapper.offsetX - args.source.wrapper.bounds.width / 2,\n          y: args.source.wrapper.offsetY - args.source.wrapper.bounds.height / 2\n        };\n      } else {\n        this['offset'] = {\n          x: args.source.wrapper.offsetX,\n          y: args.source.wrapper.offsetY\n        };\n      }\n\n      this.startPosition = args.position;\n      this.commandHandler.select([newObject.id]);\n    }\n\n    var currentSelctor = args.source.annotationSelectorSettings;\n\n    _super.prototype.mouseMove.call(this, args, true, true);\n\n    this.commandHandler.renderSelector(args.source.pageIndex, currentSelctor);\n    return this.inAction;\n  };\n\n  StampTool.prototype.getTextWidth = function (text, font, fontFamily) {\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    var fontName;\n\n    if (font) {\n      fontName = font + 'px' + ' ' + fontFamily;\n    }\n\n    context.font = fontName || getComputedStyle(document.body).font;\n    return context.measureText(text).width;\n  };\n  /**\n   * @param {number} fontSize - Font size.\n   * @returns {number} - Returns the font size.\n   */\n\n\n  StampTool.prototype.getFontSize = function (fontSize) {\n    return fontSize % 2 === 0 ? fontSize : --fontSize;\n  };\n\n  return StampTool;\n}(MoveTool);\n\nexport { StampTool };\n/**\n * Draws a node that is defined by the user\n *\n * @hidden\n */\n\nvar InkDrawingTool =\n/** @class */\nfunction (_super) {\n  __extends(InkDrawingTool, _super);\n\n  function InkDrawingTool(commandHandler, base, sourceObject) {\n    var _this = _super.call(this, commandHandler, base) || this;\n\n    _this.sourceObject = sourceObject;\n    return _this;\n  }\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {void}\n   */\n\n\n  InkDrawingTool.prototype.mouseDown = function (args) {\n    this.pdfViewerBase.disableTextSelectionMode();\n\n    _super.prototype.mouseDown.call(this, args);\n\n    this.inAction = true; // eslint-disable-next-line\n\n    var node = {\n      currentPosition: this.currentPosition,\n      prevPosition: this.prevPosition\n    };\n    this.commandHandler.annotation.inkAnnotationModule.drawInkInCanvas(node, this.pdfViewerBase.activeElements.activePageID);\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {boolean} - Returns true or false.\n   */\n\n\n  InkDrawingTool.prototype.mouseMove = function (args) {\n    _super.prototype.mouseMove.call(this, args);\n\n    if (this.inAction) {\n      // eslint-disable-next-line\n      var node = {\n        currentPosition: this.currentPosition,\n        prevPosition: this.pdfViewerBase.prevPosition\n      };\n      this.commandHandler.annotation.inkAnnotationModule.drawInkInCanvas(node, this.pdfViewerBase.activeElements.activePageID);\n    }\n\n    return this.inAction;\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {boolean} - Returns true.\n   */\n\n\n  InkDrawingTool.prototype.mouseUp = function (args) {\n    this.commandHandler.annotation.inkAnnotationModule.storePathData();\n    return true;\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {void}\n   */\n\n\n  InkDrawingTool.prototype.mouseLeave = function (args) {//this.mouseUp(args);\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n\n\n  InkDrawingTool.prototype.endAction = function () {\n    _super.prototype.endAction.call(this);\n  };\n\n  return InkDrawingTool;\n}(ToolBase);\n\nexport { InkDrawingTool };\n/**\n * Helps to edit the selected connectors\n *\n * @hidden\n */\n\nvar ConnectTool =\n/** @class */\nfunction (_super) {\n  __extends(ConnectTool, _super);\n\n  function ConnectTool(commandHandler, base, endPoint) {\n    var _this = _super.call(this, commandHandler, base, true) || this;\n\n    _this.endPoint = endPoint;\n    return _this;\n  }\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {void}\n   */\n\n\n  ConnectTool.prototype.mouseDown = function (args) {\n    this.inAction = true;\n    this.undoElement = undefined;\n\n    _super.prototype.mouseDown.call(this, args);\n\n    var oldValue;\n    var connectors;\n\n    if (args.source && args.source.annotations) {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      oldValue = {\n        x: this.prevPosition.x,\n        y: this.prevPosition.y\n      }; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n      connectors = args.source.annotations[0];\n    }\n\n    this.initialPosition = args.position;\n    this.prevSource = this.commandHandler.selectedItems.annotations[0];\n    var nodeElement = cloneObject(args.source);\n    this.redoElement = {\n      bounds: {\n        x: nodeElement.wrapper.offsetX,\n        y: nodeElement.wrapper.offsetY,\n        width: nodeElement.wrapper.actualSize.width,\n        height: nodeElement.wrapper.actualSize.height\n      } // eslint-disable-next-line\n\n    };\n\n    if (isLineShapes(nodeElement)) {\n      this.redoElement.vertexPoints = nodeElement.vertexPoints;\n      this.redoElement.leaderHeight = nodeElement.leaderHeight;\n\n      if (nodeElement.measureType === 'Distance' || nodeElement.measureType === 'Perimeter' || nodeElement.measureType === 'Area' || nodeElement.measureType === 'Volume') {\n        this.redoElement.notes = nodeElement.notes;\n      }\n    }\n\n    this.currentPosition = args.position;\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {void}\n   */\n\n\n  ConnectTool.prototype.mouseUp = function (args) {\n    if (this.commandHandler) {\n      var node = this.commandHandler.selectedItems.annotations[0];\n\n      if (node) {\n        // eslint-disable-next-line\n        var annotationSettings = this.commandHandler.annotationModule.findAnnotationSettings(node);\n        var annotationMaxHeight = 0;\n        var annotationMaxWidth = 0;\n        var annotationMinHeight = 0;\n        var annotationMinWidth = 0; // eslint-disable-next-line max-len\n\n        if (annotationSettings.minWidth || annotationSettings.maxWidth || annotationSettings.minHeight || annotationSettings.maxHeight) {\n          annotationMaxHeight = annotationSettings.maxHeight ? annotationSettings.maxHeight : 2000;\n          annotationMaxWidth = annotationSettings.maxWidth ? annotationSettings.maxWidth : 2000;\n          annotationMinHeight = annotationSettings.minHeight ? annotationSettings.minHeight : 0;\n          annotationMinWidth = annotationSettings.minWidth ? annotationSettings.minWidth : 0;\n        }\n\n        if (node.vertexPoints.length > 3) {\n          // eslint-disable-next-line\n          var sizeObject = this.commandHandler.viewerBase.checkAnnotationWidth(node.vertexPoints);\n          var width = sizeObject.width;\n          var height = sizeObject.height;\n\n          if (annotationMinHeight || annotationMinWidth || annotationMaxHeight || annotationMaxWidth) {\n            // eslint-disable-next-line max-len\n            if (height > annotationMinHeight && height < annotationMaxHeight || width > annotationMinWidth && width < annotationMaxWidth) {\n              // eslint-disable-next-line max-len\n              this.commandHandler.nodePropertyChange(this.prevSource, {\n                vertexPoints: node.vertexPoints,\n                leaderHeight: node.leaderHeight\n              });\n            }\n          } else {\n            // eslint-disable-next-line max-len\n            this.commandHandler.nodePropertyChange(this.prevSource, {\n              vertexPoints: node.vertexPoints,\n              leaderHeight: node.leaderHeight\n            });\n          }\n        } else {\n          if (annotationMinHeight || annotationMinWidth || annotationMaxHeight || annotationMaxWidth) {\n            if (node.shapeAnnotationType === 'Line' || node.shapeAnnotationType === 'Distance' || node.shapeAnnotationType === 'LineWidthArrowHead') {\n              var x = 0;\n              var y = 0;\n\n              if (node.vertexPoints[0].x > node.vertexPoints[1].x) {\n                x = node.vertexPoints[0].x - node.vertexPoints[1].x;\n              } else {\n                x = node.vertexPoints[1].x - node.vertexPoints[0].x;\n              }\n\n              if (node.vertexPoints[0].y > node.vertexPoints[1].y) {\n                y = node.vertexPoints[0].y - node.vertexPoints[1].y;\n              } else {\n                y = node.vertexPoints[1].y - node.vertexPoints[0].y;\n              }\n\n              var diff = x > y ? x : y;\n\n              if (diff < (annotationMaxHeight || annotationMaxWidth) && diff > (annotationMinHeight || annotationMinWidth)) {\n                // eslint-disable-next-line max-len\n                this.commandHandler.nodePropertyChange(this.prevSource, {\n                  vertexPoints: node.vertexPoints,\n                  leaderHeight: node.leaderHeight\n                });\n              }\n            } else {\n              // eslint-disable-next-line max-len\n              this.commandHandler.nodePropertyChange(this.prevSource, {\n                vertexPoints: node.vertexPoints,\n                leaderHeight: node.leaderHeight\n              });\n            }\n          } else {\n            // eslint-disable-next-line max-len\n            this.commandHandler.nodePropertyChange(this.prevSource, {\n              vertexPoints: node.vertexPoints,\n              leaderHeight: node.leaderHeight\n            });\n          }\n        }\n\n        var currentSelctor = args.source.annotationSelectorSettings;\n        this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n        this.commandHandler.select([this.prevSource.id], currentSelctor);\n        this.commandHandler.renderSelector(this.pdfViewerBase.activeElements.activePageID, currentSelctor); // eslint-disable-next-line\n\n        var newShapeElementObject = {\n          bounds: {\n            x: args.source.wrapper.offsetX,\n            y: args.source.wrapper.offsetY,\n            width: args.source.wrapper.actualSize.width,\n            height: args.source.wrapper.actualSize.height\n          }\n        };\n\n        if (node.measureType === 'Distance' || node.measureType === 'Perimeter' || node.measureType === 'Area' || node.measureType === 'Volume') {\n          this.commandHandler.annotation.updateCalibrateValues(this.commandHandler.selectedItems.annotations[0]);\n          newShapeElementObject.notes = args.source.notes;\n        }\n\n        if (isLineShapes(args.source)) {\n          newShapeElementObject.vertexPoints = args.source.vertexPoints;\n          newShapeElementObject.leaderHeight = args.source.leaderHeight;\n        } // eslint-disable-next-line\n\n\n        this.commandHandler.annotation.addAction(this.pageIndex, null, this.prevSource, 'Resize', '', this.redoElement, newShapeElementObject);\n      }\n    }\n\n    _super.prototype.mouseUp.call(this, args);\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {boolean} - Returns true or false.\n   */\n\n\n  ConnectTool.prototype.mouseMove = function (args) {\n    _super.prototype.mouseMove.call(this, args);\n\n    var connector;\n    this.currentPosition = args.position;\n\n    if (this.currentPosition && this.prevPosition) {\n      var diffX = this.currentPosition.x - this.prevPosition.x;\n      var diffY = this.currentPosition.y - this.prevPosition.y;\n      var newValue = void 0;\n      var oldValue = void 0;\n\n      if (args.source && args.source.annotations) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        newValue = {\n          x: this.currentPosition.x,\n          y: this.currentPosition.y\n        }; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n        oldValue = {\n          x: this.prevPosition.x,\n          y: this.prevPosition.y\n        }; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n        connector = args.source.annotations[0];\n      }\n\n      if (this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n        if (!this.helper) {\n          // eslint-disable-next-line\n          var cloneShapebject = cloneObject(this.commandHandler.selectedItems.annotations[0]);\n          cloneShapebject.id = 'diagram_helper';\n          cloneShapebject.strokeColor = 'red';\n          cloneShapebject.borderDashArray = '5,5';\n          cloneShapebject.fillColor = 'transparent';\n          cloneShapebject.thickness = 2;\n          cloneShapebject.opacity = 1;\n\n          if (cloneShapebject.enableShapeLabel === true) {\n            cloneShapebject.labelContent = '';\n          }\n\n          this.helper = cloneShapebject = this.commandHandler.add(cloneShapebject);\n          this.commandHandler.selectedItems.annotations = [cloneShapebject];\n        }\n\n        var currentSelctor = args.source.annotationSelectorSettings;\n        this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, this.helper, this.currentPosition, this.selectedSegment, args.target, null, currentSelctor);\n        this.commandHandler.renderSelector(this.pdfViewerBase.activeElements.activePageID, currentSelctor);\n      }\n    }\n\n    this.prevPosition = this.currentPosition;\n    return !this.blocked;\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {void}\n   */\n\n\n  ConnectTool.prototype.mouseLeave = function (args) {\n    this.mouseUp(args);\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n\n\n  ConnectTool.prototype.endAction = function () {\n    _super.prototype.endAction.call(this);\n\n    this.prevPosition = null;\n    this.endPoint = null;\n  };\n\n  return ConnectTool;\n}(ToolBase);\n\nexport { ConnectTool };\n/**\n * Scales the selected objects\n *\n * @hidden\n */\n\nvar ResizeTool =\n/** @class */\nfunction (_super) {\n  __extends(ResizeTool, _super);\n\n  function ResizeTool(commandHandler, base, corner) {\n    var _this = _super.call(this, commandHandler, base, true) || this;\n    /**   @private  */\n\n\n    _this.initialBounds = new Rect();\n    _this.corner = corner;\n    return _this;\n  }\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {void} - Returns true or false.\n   */\n\n\n  ResizeTool.prototype.mouseDown = function (args) {\n    _super.prototype.mouseDown.call(this, args);\n\n    this.initialBounds.x = args.source.wrapper.offsetX;\n    this.initialBounds.y = args.source.wrapper.offsetY;\n    this.initialBounds.height = args.source.wrapper.actualSize.height;\n    this.initialBounds.width = args.source.wrapper.actualSize.width;\n    this.initialPosition = args.position;\n    var node = cloneObject(args.source);\n    this.redoElement = {\n      bounds: {\n        x: node.wrapper.offsetX,\n        y: node.wrapper.offsetY,\n        width: node.wrapper.actualSize.width,\n        height: node.wrapper.actualSize.height\n      } // eslint-disable-next-line\n\n    };\n\n    if (isLineShapes(node)) {\n      this.redoElement.vertexPoints = node.vertexPoints;\n      this.redoElement.leaderHeight = node.leaderHeight;\n    }\n\n    if (node.measureType === 'Radius') {\n      this.redoElement.notes = node.notes;\n    } // eslint-disable-next-line max-len\n\n\n    this.prevSource = this.commandHandler.selectedItems.annotations.length > 0 ? this.commandHandler.selectedItems.annotations[0] : this.commandHandler.selectedItems.formFields[0];\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @param {boolean} isPreventHistory - Specified the prevent history value.\n   * @returns {boolean} - Returns true or false.\n   */\n\n\n  ResizeTool.prototype.mouseUp = function (args, isPreventHistory) {\n    var object = args.source;\n    var oldObject = cloneObject(args.source);\n\n    if (this.commandHandler && this.prevSource) {\n      this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n      this.commandHandler.viewerBase.isAnnotationSelect = true;\n      this.commandHandler.viewerBase.isFormFieldSelect = true;\n      this.commandHandler.select([this.prevSource.id], this.prevSource.annotationSelectorSettings); // eslint-disable-next-line max-len\n\n      var deltaValues = this.updateSize(this.prevSource, this.currentPosition, this.initialPosition, this.corner, this.initialBounds, null, true);\n      this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.initialPosition, this.prevSource, args.info.ctrlKey);\n\n      if (this.commandHandler.selectedItems && this.commandHandler.selectedItems.annotations && this.commandHandler.selectedItems.annotations[0] && this.commandHandler.selectedItems.annotations[0].shapeAnnotationType === 'Stamp') {\n        if (this.commandHandler.stampSettings.minHeight || this.commandHandler.stampSettings.minWidth) {\n          this.commandHandler.select([this.prevSource.id], this.prevSource.annotationSelectorSettings);\n        }\n      }\n\n      if (this.commandHandler.selectedItems.formFields.length > 0 && (this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'Textbox' || this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'Checkbox' || this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'RadioButton' || this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'InitialField' || this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'SignatureField' || this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'DropdownList' || this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'ListBox' || this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'PasswordField')) {\n        this.commandHandler.formDesignerModule.updateHTMLElement(this.commandHandler.selectedItems.formFields[0]);\n      }\n\n      this.commandHandler.renderSelector(this.prevPageId, this.prevSource.annotationSelectorSettings);\n\n      if (this.commandHandler.annotation && args.source.wrapper) {\n        // eslint-disable-next-line\n        var newObject = {\n          bounds: {\n            x: args.source.wrapper.offsetX,\n            y: args.source.wrapper.offsetY,\n            width: args.source.wrapper.actualSize.width,\n            height: args.source.wrapper.actualSize.height\n          }\n        };\n\n        if (isLineShapes(args.source)) {\n          newObject.vertexPoints = args.source.vertexPoints;\n          newObject.leaderHeight = args.source.leaderHeight;\n        }\n\n        if (this.prevSource.measureType === 'Radius') {\n          newObject.notes = args.source.notes;\n          this.commandHandler.annotation.updateCalibrateValues(this.prevSource);\n        }\n\n        if (this.prevSource.shapeAnnotationType === 'SignatureText') {\n          var boundsRatio = newObject.bounds.width / oldObject.width;\n          newObject.fontSize = this.prevSource.wrapper.children[1].style.fontSize * boundsRatio;\n\n          if (args.target != null) {\n            args.target.fontSize = newObject.fontSize; // eslint-disable-next-line\n\n            args.target.wrapper.children[1].style.fontSize = newObject.fontSize;\n            args.target.wrapper.children[1].horizontalAlignment = 'Center';\n            args.target.wrapper.children[1].verticalAlignment = 'Center';\n            args.target.wrapper.children[1].setOffsetWithRespectToBounds(0, 0, 'Absolute'); // eslint-disable-next-line\n\n            this.commandHandler.selectedItems.annotations[0].wrapper.children[1].style.fontSize = newObject.fontSize;\n            this.commandHandler.selectedItems.annotations[0].wrapper.children[1].horizontalAlignment = 'Center';\n            this.commandHandler.selectedItems.annotations[0].wrapper.children[1].verticalAlignment = 'Center';\n            this.commandHandler.selectedItems.annotations[0].wrapper.children[1].setOffsetWithRespectToBounds(0, 0, 'Absolute');\n            this.commandHandler.selectedItems.annotations[0].fontSize = newObject.fontSize;\n          }\n        }\n\n        if (this.prevSource.shapeAnnotationType === 'SignatureText' && this.commandHandler.selectedItems.annotations && this.commandHandler.selectedItems.annotations.length > 0) {\n          // eslint-disable-next-line max-len\n          this.commandHandler.nodePropertyChange(this.commandHandler.selectedItems.annotations[0], {\n            fontSize: newObject.fontSize\n          });\n        } // eslint-disable-next-line\n\n\n        this.commandHandler.annotation.addAction(this.pageIndex, null, this.prevSource, 'Resize', '', this.redoElement, newObject);\n      }\n\n      if (args.target && args.target.formFieldAnnotationType) {\n        var node = args.target; // eslint-disable-next-line\n\n        var field = {\n          value: node.value,\n          fontFamily: node.fontFamily,\n          fontSize: node.fontSize,\n          fontStyle: node.fontStyle,\n          // eslint-disable-next-line\n          color: node.color,\n          backgroundColor: node.backgroundColor,\n          alignment: node.alignment,\n          isReadonly: node.isReadonly,\n          visibility: node.visibility,\n          // eslint-disable-next-line\n          maxLength: node.maxLength,\n          isRequired: node.isRequired,\n          isPrint: node.isPrint,\n          rotation: node.rotateAngle,\n          tooltip: node.tooltip,\n          // eslint-disable-next-line\n          options: node.options,\n          isChecked: node.isChecked,\n          isSelected: node.isSelected\n        }; // eslint-disable-next-line max-len\n\n        var currentPosition = {\n          X: args.source.wrapper.offsetX,\n          Y: args.source.wrapper.offsetY,\n          Width: args.source.wrapper.actualSize.width,\n          Height: args.source.wrapper.actualSize.height\n        }; // eslint-disable-next-line max-len\n\n        var previousPosition = {\n          X: this.initialBounds.x,\n          Y: this.initialBounds.y,\n          Width: this.initialBounds.width,\n          Height: this.initialBounds.height\n        };\n        this.commandHandler.fireFormFieldResizeEvent('formFieldResize', field, node.pageIndex, previousPosition, currentPosition);\n      }\n\n      if (this.commandHandler.annotation && this.commandHandler.annotation.stampAnnotationModule) {\n        this.commandHandler.annotation.stampAnnotationModule.updateSessionStorage(args.source, this.prevSource.id, 'Resize');\n      }\n    }\n\n    _super.prototype.mouseUp.call(this, args);\n\n    return !this.blocked;\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {boolean} - Returns true or false.\n   */\n\n\n  ResizeTool.prototype.mouseMove = function (args) {\n    _super.prototype.mouseMove.call(this, args);\n\n    var object = args.source;\n    this.currentPosition = args.position;\n    var x = this.currentPosition.x - this.startPosition.x;\n    var y = this.currentPosition.y - this.startPosition.y;\n    x = x / this.commandHandler.viewerBase.getZoomFactor();\n    y = y / this.commandHandler.viewerBase.getZoomFactor(); // eslint-disable-next-line\n\n    var annotationElement = args.source; // eslint-disable-next-line\n\n    var size = this.getPoints(x, y);\n    var width = annotationElement.width + size.x;\n    var height = annotationElement.height + size.y; // eslint-disable-next-line\n\n    var obj = object;\n\n    if (object && object.annotations) {\n      // eslint-disable-next-line\n      obj = object.annotations[0];\n    } // eslint-disable-next-line\n\n\n    var annotationSettings = this.commandHandler.annotationModule ? this.commandHandler.annotationModule.findAnnotationSettings(obj) : {};\n    var annotationMaxHeight = 0;\n    var annotationMaxWidth = 0;\n    var annotationMinHeight = 0;\n    var annotationMinWidth = 0;\n\n    if (annotationSettings.minWidth || annotationSettings.maxWidth || annotationSettings.minHeight || annotationSettings.maxHeight) {\n      annotationMaxHeight = annotationSettings.maxHeight ? annotationSettings.maxHeight : 2000;\n      annotationMaxWidth = annotationSettings.maxWidth ? annotationSettings.maxWidth : 2000;\n      annotationMinHeight = annotationSettings.minHeight ? annotationSettings.minHeight : 0;\n      annotationMinWidth = annotationSettings.minWidth ? annotationSettings.minWidth : 0;\n    }\n\n    if (annotationMinHeight || annotationMinWidth || annotationMaxHeight || annotationMaxWidth) {\n      // eslint-disable-next-line max-len\n      if (height >= annotationMinHeight && height <= annotationMaxHeight && width >= annotationMinWidth && width <= annotationMaxWidth) {\n        // eslint-disable-next-line\n        x = x; // eslint-disable-next-line\n\n        y = y;\n      } else {\n        if (height < annotationMinHeight || height > annotationMaxHeight) {\n          if (height < annotationMinHeight) {\n            y = annotationMinHeight - annotationElement.height;\n          } else {\n            y = annotationMaxHeight - annotationElement.height;\n          }\n        }\n\n        if (width < annotationMinWidth || width > annotationMaxWidth) {\n          if (width < annotationMinWidth) {\n            x = annotationMinWidth - annotationElement.width;\n          } else {\n            x = annotationMaxWidth - annotationElement.width;\n          }\n        }\n      }\n    }\n\n    var changes = {\n      x: x,\n      y: y\n    };\n\n    if (this.currentElement.wrapper) {\n      changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n    }\n\n    changes = this.getChanges(changes);\n    this.commandHandler.renderSelector(this.prevPageId, this.prevSource.annotationSelectorSettings);\n\n    if (!this.helper) {\n      // eslint-disable-next-line\n      var cobject = this.commandHandler.selectedItems.annotations.length > 0 ? cloneObject(this.commandHandler.selectedItems.annotations[0]) : cloneObject(this.commandHandler.selectedItems.formFields[0]);\n      cobject.id = 'diagram_helper';\n\n      if (cobject.shapeAnnotationType === 'Stamp') {\n        cobject.strokeColor = '';\n        cobject.borderDashArray = '';\n        cobject.fillColor = 'transparent';\n        cobject.stampFillColor = 'transparent';\n        cobject.data = '';\n      } else if (cobject.shapeAnnotationType === 'FreeText') {\n        cobject.strokeColor = 'blue';\n        cobject.fillColor = 'transparent';\n        cobject.thickness = 1;\n        cobject.opacity = 1;\n        cobject.dynamicText = '';\n      } else {\n        // eslint-disable-next-line max-len\n        cobject.bounds = this.commandHandler.selectedItems.annotations.length > 0 ? this.commandHandler.selectedItems.annotations[0].wrapper.bounds : this.commandHandler.selectedItems.formFields[0].wrapper.bounds;\n        cobject.strokeColor = 'red';\n        cobject.borderDashArray = '5,5';\n        cobject.fillColor = 'transparent';\n        cobject.thickness = 2;\n        cobject.opacity = 1;\n      }\n\n      if (cobject.enableShapeLabel === true) {\n        cobject.labelContent = '';\n      }\n\n      if (cobject.shapeAnnotationType === 'SignatureText') {\n        cobject.fillColor = 'transparent';\n        cobject.thickness = 1;\n        cobject.opacity = 1;\n        cobject.data = '';\n      }\n\n      this.helper = cobject = this.commandHandler.add(cobject);\n\n      if (this.commandHandler.selectedItems.annotations.length > 0) {\n        this.commandHandler.selectedItems.annotations = [cobject];\n      } else {\n        this.commandHandler.selectedItems.formFields = [cobject];\n      }\n    }\n\n    var deltaValues = this.updateSize(this.helper, this.startPosition, this.currentPosition, this.corner, this.initialBounds); // eslint-disable-next-line max-len\n\n    this.blocked = !this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, this.helper, args.info.ctrlKey);\n    this.prevPosition = this.currentPosition;\n    return !this.blocked;\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {void}\n   */\n\n\n  ResizeTool.prototype.mouseLeave = function (args) {\n    this.mouseUp(args);\n  };\n\n  ResizeTool.prototype.getTooltipContent = function (pdfAnnotationBaseModel) {\n    return 'W:' + Math.round(pdfAnnotationBaseModel.wrapper.bounds.width) + ' ' + 'H:' + Math.round(pdfAnnotationBaseModel.wrapper.bounds.height);\n  };\n\n  ResizeTool.prototype.getChanges = function (change) {\n    switch (this.corner) {\n      case 'ResizeEast':\n        return {\n          x: change.x,\n          y: 0\n        };\n\n      case 'ResizeSouthEast':\n        return change;\n\n      case 'ResizeSouth':\n        return {\n          x: 0,\n          y: change.y\n        };\n\n      case 'ResizeNorth':\n        return {\n          x: 0,\n          y: -change.y\n        };\n\n      case 'ResizeNorthEast':\n        return {\n          x: change.x,\n          y: -change.y\n        };\n\n      case 'ResizeNorthWest':\n        return {\n          x: -change.x,\n          y: -change.y\n        };\n\n      case 'ResizeWest':\n        return {\n          x: -change.x,\n          y: 0\n        };\n\n      case 'ResizeSouthWest':\n        return {\n          x: -change.x,\n          y: change.y\n        };\n    }\n\n    return change;\n  };\n\n  ResizeTool.prototype.getPoints = function (x, y) {\n    switch (this.corner) {\n      case 'ResizeEast':\n        return {\n          x: x,\n          y: 0\n        };\n\n      case 'ResizeSouthEast':\n        return {\n          x: x,\n          y: y\n        };\n\n      case 'ResizeSouth':\n        return {\n          x: 0,\n          y: y\n        };\n\n      case 'ResizeNorth':\n        return {\n          x: 0,\n          y: -y\n        };\n\n      case 'ResizeNorthEast':\n        return {\n          x: x,\n          y: -y\n        };\n\n      case 'ResizeNorthWest':\n        return {\n          x: -x,\n          y: -y\n        };\n\n      case 'ResizeWest':\n        return {\n          x: -x,\n          y: 0\n        };\n\n      case 'ResizeSouthWest':\n        return {\n          x: -x,\n          y: y\n        };\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  };\n  /**\n   * Updates the size with delta width and delta height using scaling.\n   * Aspect ratio used to resize the width or height based on resizing the height or width.\n   *\n   * @param {number} deltaWidth - Specified the delta width.\n   * @param {number} deltaHeight - Specified the delta height.\n   * @param {string} corner - Specified the corner value.\n   * @param {PointModel} startPoint - Specified the start point of the annotation.\n   * @param {PointModel} endPoint - Specified the end point of the annotation.\n   * @param {SelectorModel | PdfAnnotationBaseModel} source - Specified the annotation object.\n   * @param {boolean} isCtrlKeyPressed - becomes true when ctrl Key is pressed.\n   * @returns {boolean} - Returns true or false.\n   */\n\n\n  ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source, isCtrlKeyPressed) {\n    // eslint-disable-next-line\n    var annotationSettings = this.commandHandler.annotationModule ? this.commandHandler.annotationModule.findAnnotationSettings(source) : {};\n    var annotationMaxHeight = 0;\n    var annotationMaxWidth = 0;\n    var annotationMinHeight = 0;\n    var annotationMinWidth = 0;\n    var x = this.currentPosition.x - this.startPosition.x;\n    var y = this.currentPosition.y - this.startPosition.y;\n    x = x / this.commandHandler.viewerBase.getZoomFactor();\n    y = y / this.commandHandler.viewerBase.getZoomFactor(); // eslint-disable-next-line\n\n    var annotationElement = source; // eslint-disable-next-line\n\n    var size = this.getPoints(x, y);\n    var width = annotationElement.bounds.width + size.x;\n    var height = annotationElement.bounds.height + size.y;\n\n    if (annotationSettings.minWidth || annotationSettings.maxWidth || annotationSettings.minHeight || annotationSettings.maxHeight) {\n      annotationMaxHeight = annotationSettings.maxHeight ? annotationSettings.maxHeight : 2000;\n      annotationMaxWidth = annotationSettings.maxWidth ? annotationSettings.maxWidth : 2000;\n      annotationMinHeight = annotationSettings.minHeight ? annotationSettings.minHeight : 0;\n      annotationMinWidth = annotationSettings.minWidth ? annotationSettings.minWidth : 0;\n    }\n\n    if (source instanceof Selector && source.annotations.length === 1 && (source.annotations[0].shapeAnnotationType === 'Perimeter' || source.annotations[0].shapeAnnotationType === 'Radius' || source.shapeAnnotationType === 'Stamp')) {\n      if (!(deltaHeight === 1 && deltaWidth === 1)) {\n        deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n      } else if (startPoint !== endPoint) {\n        deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n      } else {\n        deltaHeight = deltaWidth = 0;\n      }\n    } else if (source.shapeAnnotationType === 'Image' || source.shapeAnnotationType === 'HandWrittenSignature' || source.shapeAnnotationType === 'SignatureText' || source.shapeAnnotationType === 'SignatureImage') {\n      if (!(deltaHeight === 1 && deltaWidth === 1)) {\n        if (isCtrlKeyPressed) {\n          if (width >= annotationMaxWidth && height < annotationMaxHeight) {\n            deltaHeight = Math.max(deltaHeight, deltaWidth);\n          }\n\n          if (height >= annotationMaxHeight && width < annotationMaxWidth) {\n            deltaWidth = Math.max(deltaHeight, deltaWidth);\n          }\n\n          if (width < annotationMaxWidth && height < annotationMaxHeight) {\n            deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n          }\n        }\n      }\n\n      if (!isCtrlKeyPressed) {\n        deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n      }\n    } else {\n      if (source.shapeAnnotationType === 'Perimeter' || source.shapeAnnotationType === 'Radius' || source.shapeAnnotationType === 'Stamp') {\n        if (source.shapeAnnotationType === 'Stamp') {\n          if (!annotationMaxHeight && !deltaHeight) {\n            deltaHeight = Math.max(deltaHeight === 1 ? 0 : deltaHeight);\n          }\n\n          if (!annotationMaxWidth && !deltaWidth) {\n            deltaWidth = Math.max(deltaWidth === 1 ? 0 : deltaWidth);\n          }\n        } else {\n          if (!annotationMaxHeight || !annotationMaxWidth) {\n            if (!(deltaHeight === 1 && deltaWidth === 1)) {\n              deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n            }\n          }\n        }\n      }\n    }\n\n    this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n    return this.blocked;\n  };\n\n  return ResizeTool;\n}(ToolBase);\n\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n *\n * @hidden\n */\n\nvar NodeDrawingTool =\n/** @class */\nfunction (_super) {\n  __extends(NodeDrawingTool, _super);\n\n  function NodeDrawingTool(commandHandler, base, sourceObject) {\n    var _this = _super.call(this, commandHandler, base) || this;\n\n    _this.sourceObject = sourceObject;\n    return _this;\n  }\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {void}\n   */\n\n\n  NodeDrawingTool.prototype.mouseDown = function (args) {\n    if (!isNaN(this.pdfViewerBase.activeElements.activePageID) && event.target.className != 'e-pv-page-container') {\n      _super.prototype.mouseDown.call(this, args);\n\n      this.inAction = true;\n      var node = {\n        bounds: {\n          x: 100,\n          y: 300,\n          width: 100,\n          height: 100\n        },\n        pageIndex: 0,\n        strokeColor: 'red',\n        thickness: 3\n      };\n      node.id = randomId();\n      this.sourceObject.pageIndex = node.pageIndex = this.pdfViewerBase.activeElements.activePageID || 0;\n      this.sourceObject.enableShapeLabel = this.commandHandler.enableShapeLabel;\n      this.pdfViewerBase.updateFreeTextProperties(this.sourceObject);\n      this.isFormDesign = false; // eslint-disable-next-line\n\n      var formFieldElement = document.getElementById('FormField_helper_html_element');\n\n      if (formFieldElement) {\n        formFieldElement.remove();\n      } // eslint-disable-next-line\n\n\n      this.commandHandler.drawingObject = this.drawingObject = this.commandHandler.add(this.sourceObject || node);\n\n      if (this.drawingObject.formFieldAnnotationType === 'Textbox' || this.drawingObject.formFieldAnnotationType === 'SignatureField' || this.drawingObject.formFieldAnnotationType === 'InitialField' || this.drawingObject.formFieldAnnotationType === 'Checkbox' || this.drawingObject.formFieldAnnotationType === 'ListBox' || this.drawingObject.formFieldAnnotationType === 'RadioButton' || this.drawingObject.formFieldAnnotationType === 'DropdownList' || this.drawingObject.formFieldAnnotationType === 'PasswordField') {\n        this.inAction = false; // eslint-disable-next-line\n\n        this.drawingObject.pageNumber = this.pdfViewerBase.getActivePage(true); // eslint-disable-next-line\n\n        var bounds = this.commandHandler.formDesignerModule.updateFormFieldInitialSize(this.drawingObject.wrapper.children[0], this.drawingObject.formFieldAnnotationType);\n        var pageWidth = this.pdfViewerBase.pageContainer.firstElementChild.clientWidth - bounds.width;\n        var pageHeight = this.pdfViewerBase.pageContainer.firstElementChild.clientHeight - bounds.height; // eslint-disable-next-line\n\n        var left = this.pdfViewerBase.pageContainer.firstElementChild.offsetLeft;\n        var offsetX = void 0; // eslint-disable-next-line\n\n        if (this.currentPosition.y >= pageHeight && event.target && event.target.parentElement && event.target.parentElement.classList.contains('foreign-object')) {\n          // eslint-disable-next-line\n          var targetParentRect = event.path[3].getBoundingClientRect(); // eslint-disable-next-line\n\n          offsetX = event.clientX - targetParentRect.left;\n        } else {\n          offsetX = this.currentPosition.x - left;\n        } // eslint-disable-next-line\n\n\n        var rect = void 0;\n\n        if (this.currentPosition.x >= pageWidth && this.currentPosition.y >= pageHeight) {\n          // eslint-disable-next-line max-len\n          rect = {\n            x: pageWidth,\n            y: pageHeight,\n            width: this.drawingObject.wrapper.children[0].width,\n            height: this.drawingObject.wrapper.children[0].height\n          };\n        } else if (this.currentPosition.x >= pageWidth) {\n          // eslint-disable-next-line max-len\n          rect = {\n            x: pageWidth,\n            y: this.currentPosition.y,\n            width: this.drawingObject.wrapper.children[0].width,\n            height: this.drawingObject.wrapper.children[0].height\n          };\n        } else if (this.currentPosition.y >= pageHeight) {\n          // eslint-disable-next-line max-len\n          rect = {\n            x: offsetX,\n            y: pageHeight,\n            width: this.drawingObject.wrapper.children[0].width,\n            height: this.drawingObject.wrapper.children[0].height\n          };\n        } else {\n          // eslint-disable-next-line max-len\n          rect = {\n            x: this.currentPosition.x,\n            y: this.currentPosition.y,\n            width: this.drawingObject.wrapper.children[0].width,\n            height: this.drawingObject.wrapper.children[0].height\n          };\n        }\n\n        this.updateNodeDimension(this.drawingObject, rect);\n        this.drawingObject.bounds.x = this.drawingObject.bounds.x - this.drawingObject.bounds.width / 2;\n        this.drawingObject.bounds.y = this.drawingObject.bounds.y - this.drawingObject.bounds.height / 2;\n        this.commandHandler.formFieldCollection.push(this.drawingObject); // eslint-disable-next-line max-len\n\n        var formField = {\n          id: this.drawingObject.id,\n          name: this.drawingObject.name,\n          value: this.drawingObject.value,\n          // eslint-disable-next-line max-len\n          type: this.drawingObject.formFieldAnnotationType,\n          isReadOnly: this.drawingObject.isReadonly,\n          fontFamily: this.drawingObject.fontFamily,\n          // eslint-disable-next-line max-len\n          fontSize: this.drawingObject.fontSize,\n          fontStyle: this.drawingObject.fontStyle,\n          color: this.drawingObject.color,\n          backgroundColor: this.drawingObject.backgroundColor,\n          // eslint-disable-next-line max-len\n          alignment: this.drawingObject.alignment,\n          visibility: this.drawingObject.visibility,\n          maxLength: this.drawingObject.maxLength,\n          isRequired: this.drawingObject.isRequired,\n          // eslint-disable-next-line max-len\n          isPrint: this.drawingObject.isPrint,\n          isSelected: this.drawingObject.isSelected,\n          isChecked: this.drawingObject.isChecked,\n          tooltip: this.drawingObject.tooltip,\n          bounds: this.drawingObject.bounds,\n          thickness: this.drawingObject.thickness,\n          borderColor: this.drawingObject.borderColor,\n          signatureIndicatorSettings: this.drawingObject.signatureIndicatorSettings\n        };\n        this.commandHandler.formFieldCollections.push(formField); // eslint-disable-next-line max-len\n\n        this.commandHandler.formDesignerModule.drawHTMLContent(this.drawingObject.formFieldAnnotationType, this.drawingObject.wrapper.children[0], this.drawingObject, this.drawingObject.pageIndex, this.commandHandler);\n        this.commandHandler.select([this.commandHandler.drawingObject.id], this.commandHandler.annotationSelectorSettings);\n\n        if (this.commandHandler.annotation) {\n          this.commandHandler.annotation.addAction(this.pdfViewerBase.getActivePage(true), null, this.drawingObject, 'Addition', '', this.drawingObject, this.drawingObject);\n        }\n\n        this.endAction();\n        this.pdfViewerBase.tool = null;\n        this.pdfViewerBase.action = 'Select';\n        this.drawingObject = null;\n        this.pdfViewerBase.isMouseDown = false;\n        this.pdfViewerBase.pdfViewer.drawingObject = null;\n        this.isFormDesign = true;\n      }\n    }\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {boolean} - Returns true or false.\n   */\n\n\n  NodeDrawingTool.prototype.mouseMove = function (args) {\n    _super.prototype.mouseMove.call(this, args);\n\n    if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n      this.dragging = true;\n      var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n      this.updateNodeDimension(this.drawingObject, rect);\n\n      if (this.drawingObject.shapeAnnotationType === 'Radius') {\n        this.updateRadiusLinePosition(this.drawingObject.wrapper.children[1], this.drawingObject);\n      }\n    }\n\n    return true;\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {void}\n   */\n\n\n  NodeDrawingTool.prototype.mouseUp = function (args) {\n    if (this.drawingObject && this.dragging) {\n      this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n      this.commandHandler.select([this.drawingObject.id], this.commandHandler.annotationSelectorSettings);\n      this.commandHandler.annotation.updateCalibrateValues(this.drawingObject, true);\n\n      if (this.commandHandler && !this.isFormDesign) {\n        // eslint-disable-next-line\n        this.commandHandler.annotation.addAction(this.pageIndex, null, this.drawingObject, 'Addition', '', this.drawingObject, this.drawingObject);\n      }\n\n      this.drawingObject = null;\n      this.dragging = false;\n\n      _super.prototype.mouseUp.call(this, args);\n\n      this.inAction = false;\n    } else {\n      _super.prototype.mouseUp.call(this, args);\n    }\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n\n\n  NodeDrawingTool.prototype.endAction = function () {\n    _super.prototype.endAction.call(this);\n  };\n  /**\n   * @private\n   * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n   * @param {Rect} rect - Specified the annotation rect element.\n   * @returns {void}\n   */\n\n\n  NodeDrawingTool.prototype.updateNodeDimension = function (obj, rect) {\n    var zoom = this.commandHandler.viewerBase.getZoomFactor();\n    obj.bounds.x = rect.x / zoom + rect.width / zoom;\n    obj.bounds.y = rect.y / zoom + rect.height / zoom;\n    obj.bounds.width = rect.width / zoom;\n    obj.bounds.height = rect.height / zoom; // eslint-disable-next-line\n\n    var annotationSettings = this.commandHandler.annotationModule ? this.commandHandler.annotationModule.findAnnotationSettings(obj) : {};\n    var annotationMaxHeight = 0;\n    var annotationMaxWidth = 0;\n\n    if (annotationSettings.maxWidth || annotationSettings.maxHeight) {\n      annotationMaxHeight = annotationSettings.maxHeight ? annotationSettings.maxHeight : 2000;\n      annotationMaxWidth = annotationSettings.maxWidth ? annotationSettings.maxWidth : 2000;\n\n      if (obj.bounds.width > annotationMaxWidth) {\n        obj.bounds.width = annotationMaxWidth;\n      }\n\n      if (obj.bounds.height > annotationMaxHeight) {\n        obj.bounds.height = annotationMaxHeight;\n      }\n\n      if (obj.bounds.height <= annotationMaxHeight && obj.bounds.width <= annotationMaxWidth) {\n        this.commandHandler.nodePropertyChange(obj, {\n          bounds: obj.bounds\n        });\n      }\n    } else {\n      this.commandHandler.nodePropertyChange(obj, {\n        bounds: obj.bounds\n      });\n    }\n  };\n  /**\n   * @private\n   * @param {DrawingElement} obj - Specified the drawing element.\n   * @param {PdfAnnotationBaseModel} node - Specified the annotation object.\n   * @returns {void}\n   */\n\n\n  NodeDrawingTool.prototype.updateRadiusLinePosition = function (obj, node) {\n    var trasPoint = {\n      x: node.bounds.x + node.bounds.width / 4,\n      y: node.bounds.y\n    };\n    var center = {\n      x: node.bounds.x + node.bounds.width / 2,\n      y: node.bounds.y + node.bounds.height / 2\n    };\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, node.rotateAngle, center.x, center.y);\n    var rotatedPoint = transformPointByMatrix(matrix, trasPoint);\n    var newPoint1 = {\n      x: rotatedPoint.x,\n      y: rotatedPoint.y\n    };\n    obj.offsetX = newPoint1.x;\n    obj.offsetY = newPoint1.y;\n    obj.width = node.bounds.width / 2; // eslint-disable-next-line\n\n    var annotationSettings = this.commandHandler.annotationModule.findAnnotationSettings(node);\n    var annotationMaxWidth = 0;\n\n    if (annotationSettings.maxWidth) {\n      annotationMaxWidth = annotationSettings.maxWidth ? annotationSettings.maxWidth : 2000;\n\n      if (node.bounds.width > annotationMaxWidth) {\n        node.bounds.width = annotationMaxWidth;\n        obj.width = node.bounds.width / 2;\n      }\n    }\n\n    this.commandHandler.renderDrawing(undefined, node.pageIndex);\n  };\n\n  return NodeDrawingTool;\n}(ToolBase);\n\nexport { NodeDrawingTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n *\n * @hidden\n */\n\nvar PolygonDrawingTool =\n/** @class */\nfunction (_super) {\n  __extends(PolygonDrawingTool, _super);\n\n  function PolygonDrawingTool(commandHandler, base, action) {\n    var _this = _super.call(this, commandHandler, base) || this;\n\n    _this.action = action;\n    return _this;\n  }\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {void}\n   */\n\n\n  PolygonDrawingTool.prototype.mouseDown = function (args) {\n    _super.prototype.mouseDown.call(this, args);\n\n    this.inAction = true;\n\n    if (!this.drawingObject) {\n      this.startPoint = {\n        x: this.startPosition.x,\n        y: this.startPosition.y\n      };\n      var nodeAnnotElement = {\n        bounds: {\n          x: this.currentPosition.x,\n          y: this.currentPosition.y,\n          width: 5,\n          height: 5\n        },\n        // eslint-disable-next-line max-len\n        vertexPoints: [{\n          x: this.startPoint.x / this.pdfViewerBase.getZoomFactor(),\n          y: this.startPoint.y / this.pdfViewerBase.getZoomFactor()\n        }, {\n          x: this.currentPosition.x / this.pdfViewerBase.getZoomFactor(),\n          y: this.currentPosition.y / this.pdfViewerBase.getZoomFactor()\n        }],\n        shapeAnnotationType: 'Line',\n        fillColor: this.commandHandler.drawingObject.fillColor,\n        strokeColor: this.commandHandler.drawingObject.strokeColor,\n        pageIndex: this.pdfViewerBase.activeElements.activePageID,\n        // eslint-disable-next-line max-len\n        notes: this.commandHandler.drawingObject.notes,\n        thickness: this.commandHandler.drawingObject.thickness,\n        author: this.commandHandler.drawingObject.author,\n        subject: this.commandHandler.drawingObject.subject,\n        borderDashArray: this.commandHandler.drawingObject.borderDashArray,\n        modifiedDate: this.commandHandler.drawingObject.modifiedDate,\n        borderStyle: this.commandHandler.drawingObject.borderStyle,\n        // eslint-disable-next-line max-len\n        measureType: this.commandHandler.drawingObject.measureType,\n        enableShapeLabel: this.commandHandler.enableShapeLabel,\n        opacity: this.commandHandler.drawingObject.opacity\n      };\n      this.pdfViewerBase.updateFreeTextProperties(nodeAnnotElement); // eslint-disable-next-line\n\n      this.drawingObject = this.commandHandler.add(nodeAnnotElement);\n    } else {\n      var pt = void 0;\n      var obj = this.drawingObject;\n      pt = obj.vertexPoints[obj.vertexPoints.length - 1];\n      pt = {\n        x: pt.x,\n        y: pt.y\n      };\n      var lastPoint = this.drawingObject.vertexPoints[this.drawingObject.vertexPoints.length - 1];\n\n      if (!(lastPoint.x === pt.x && lastPoint.x === pt.y)) {\n        this.drawingObject.vertexPoints.push(pt);\n      }\n\n      this.commandHandler.nodePropertyChange(obj, {\n        vertexPoints: obj.vertexPoints\n      });\n    }\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {boolean} - Returns true or false.\n   */\n\n\n  PolygonDrawingTool.prototype.mouseMove = function (args) {\n    _super.prototype.mouseMove.call(this, args);\n\n    if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n      this.dragging = true;\n      var obj = this.drawingObject;\n\n      if (this.drawingObject && this.currentPosition) {\n        obj.vertexPoints[obj.vertexPoints.length - 1].x = this.currentPosition.x / this.pdfViewerBase.getZoomFactor();\n        obj.vertexPoints[obj.vertexPoints.length - 1].y = this.currentPosition.y / this.pdfViewerBase.getZoomFactor();\n        this.commandHandler.nodePropertyChange(obj, {\n          vertexPoints: obj.vertexPoints\n        });\n      }\n\n      if (obj.measureType === 'Perimeter') {\n        updatePerimeterLabel(obj, obj.vertexPoints, this.commandHandler.annotation.measureAnnotationModule);\n      }\n    }\n\n    return true;\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @param {boolean} isDoubleClineck - Specified the double click event or not.\n   * @param {boolean} isMouseLeave - Specified the mouse leave event or not.\n   * @returns {void}\n   */\n\n\n  PolygonDrawingTool.prototype.mouseUp = function (args, isDoubleClineck, isMouseLeave) {\n    _super.prototype.mouseMove.call(this, args); // eslint-disable-next-line\n\n\n    var currentSelector;\n\n    if (args.source && args.annotationSelectorSettings !== null) {\n      currentSelector = args.source.annotationSelectorSettings;\n    }\n\n    if (this.drawingObject) {\n      // eslint-disable-next-line max-len\n      var bounds = new Rect(this.drawingObject.vertexPoints[this.drawingObject.vertexPoints.length - 1].x - 20, this.drawingObject.vertexPoints[this.drawingObject.vertexPoints.length - 1].y - 20, 40, 40);\n      var point = {\n        x: this.drawingObject.vertexPoints[0].x,\n        y: this.drawingObject.vertexPoints[0].y\n      };\n\n      if ((bounds.containsPoint(point) || isDoubleClineck) && this.dragging) {\n        if (this.inAction) {\n          this.inAction = false;\n\n          if (this.drawingObject) {\n            if (!isMouseLeave) {\n              if (this.drawingObject.vertexPoints.length > 2) {\n                this.drawingObject.vertexPoints.splice(this.drawingObject.vertexPoints.length - 1, 1);\n              }\n            }\n\n            if (this.action === 'Polygon') {\n              if (!isMouseLeave) {\n                // eslint-disable-next-line max-len\n                this.drawingObject.vertexPoints[this.drawingObject.vertexPoints.length - 1] = this.drawingObject.vertexPoints[0];\n              } else {\n                // eslint-disable-next-line max-len\n                this.drawingObject.vertexPoints[this.drawingObject.vertexPoints.length] = this.drawingObject.vertexPoints[0];\n              }\n\n              this.commandHandler.nodePropertyChange(this.drawingObject, {\n                vertexPoints: this.drawingObject.vertexPoints\n              });\n              var cobject = cloneObject(this.drawingObject);\n              cobject.shapeAnnotationType = 'Polygon';\n              cobject.bounds.width = cobject.wrapper.actualSize.width;\n              cobject.bounds.height = cobject.wrapper.actualSize.height;\n              cobject.bounds.x = this.drawingObject.wrapper.bounds.x;\n              cobject.bounds.y = this.drawingObject.wrapper.bounds.y;\n              this.commandHandler.add(cobject);\n              this.commandHandler.remove(this.drawingObject);\n              this.commandHandler.select([cobject.id], currentSelector);\n              var drawingObject = this.commandHandler.selectedItems.annotations[0];\n\n              if (drawingObject) {\n                if (this.commandHandler.enableShapeAnnotation && (isNullOrUndefined(drawingObject.measureType) || drawingObject.measureType === '')) {\n                  // eslint-disable-next-line max-len\n                  this.commandHandler.annotation.shapeAnnotationModule.renderShapeAnnotations(drawingObject, drawingObject.pageIndex);\n                }\n\n                if (this.commandHandler.enableMeasureAnnotation && (drawingObject.measureType === 'Area' || drawingObject.measureType === 'Volume')) {\n                  if (drawingObject.measureType === 'Area') {\n                    // eslint-disable-next-line max-len\n                    drawingObject.notes = this.commandHandler.annotation.measureAnnotationModule.calculateArea(drawingObject.vertexPoints); // eslint-disable-next-line max-len\n\n                    this.commandHandler.annotation.stickyNotesAnnotationModule.addTextToComments(drawingObject.annotName, drawingObject.notes);\n                  } else if (drawingObject.measureType === 'Volume') {\n                    // eslint-disable-next-line max-len\n                    drawingObject.notes = this.commandHandler.annotation.measureAnnotationModule.calculateVolume(drawingObject.vertexPoints); // eslint-disable-next-line max-len\n\n                    this.commandHandler.annotation.stickyNotesAnnotationModule.addTextToComments(drawingObject.annotName, drawingObject.notes);\n                  }\n\n                  if (drawingObject.enableShapeLabel) {\n                    drawingObject.labelContent = drawingObject.notes; // eslint-disable-next-line max-len\n\n                    this.commandHandler.nodePropertyChange(drawingObject, {\n                      vertexPoints: drawingObject.vertexPoints,\n                      notes: drawingObject.notes\n                    });\n                  } // eslint-disable-next-line max-len\n\n\n                  this.commandHandler.annotation.measureAnnotationModule.renderMeasureShapeAnnotations(drawingObject, drawingObject.pageIndex);\n                }\n              }\n            } else {\n              if (!isMouseLeave) {\n                if (isDoubleClineck) {\n                  this.drawingObject.vertexPoints.splice(this.drawingObject.vertexPoints.length - 1, 1);\n                }\n              }\n\n              this.commandHandler.nodePropertyChange(this.drawingObject, {\n                // eslint-disable-next-line max-len\n                vertexPoints: this.drawingObject.vertexPoints,\n                sourceDecoraterShapes: this.commandHandler.drawingObject.sourceDecoraterShapes,\n                taregetDecoraterShapes: this.commandHandler.drawingObject.taregetDecoraterShapes\n              });\n              this.commandHandler.select([this.drawingObject.id], currentSelector);\n\n              if (this.commandHandler.enableMeasureAnnotation && this.drawingObject.measureType === 'Perimeter') {\n                this.commandHandler.renderDrawing(null, this.drawingObject.pageIndex); // eslint-disable-next-line max-len\n\n                this.drawingObject.notes = this.commandHandler.annotation.measureAnnotationModule.calculatePerimeter(this.drawingObject);\n\n                if (this.drawingObject.enableShapeLabel) {\n                  this.drawingObject.labelContent = this.drawingObject.notes; // eslint-disable-next-line max-len\n\n                  this.commandHandler.nodePropertyChange(this.drawingObject, {\n                    vertexPoints: this.drawingObject.vertexPoints,\n                    notes: this.drawingObject.notes\n                  });\n                } // eslint-disable-next-line max-len\n\n\n                this.commandHandler.annotation.stickyNotesAnnotationModule.addTextToComments(this.drawingObject.annotName, this.drawingObject.notes); // eslint-disable-next-line max-len\n\n                this.commandHandler.annotation.measureAnnotationModule.renderMeasureShapeAnnotations(this.drawingObject, this.drawingObject.pageIndex);\n              }\n            }\n\n            var annotationObject = this.commandHandler.selectedItems.annotations[0]; // eslint-disable-next-line\n\n            this.commandHandler.annotation.addAction(this.pageIndex, null, annotationObject, 'Addition', '', annotationObject, annotationObject);\n            this.drawingObject = null;\n          }\n        }\n\n        this.endAction();\n      } else if (this.inAction && !this.dragging) {\n        this.commandHandler.remove(this.drawingObject);\n      }\n    }\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {void}\n   */\n\n\n  PolygonDrawingTool.prototype.mouseLeave = function (args) {\n    this.mouseUp(args, true, true);\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {void}\n   */\n\n\n  PolygonDrawingTool.prototype.mouseWheel = function (args) {\n    _super.prototype.mouseWheel.call(this, args);\n\n    this.mouseMove(args);\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n\n\n  PolygonDrawingTool.prototype.endAction = function () {\n    this.inAction = false;\n    this.drawingObject = null;\n    this.commandHandler.tool = '';\n  };\n\n  return PolygonDrawingTool;\n}(ToolBase);\n\nexport { PolygonDrawingTool };\n/**\n * Helps to edit the selected connectors\n *\n * @hidden\n */\n\nvar LineTool =\n/** @class */\nfunction (_super) {\n  __extends(LineTool, _super);\n\n  function LineTool(commandHandler, base, endPoint, drawingObject) {\n    var _this = _super.call(this, commandHandler, base, true) || this;\n\n    _this.endPoint = endPoint;\n    _this.drawingObject = drawingObject;\n    return _this;\n  }\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {void}\n   */\n\n\n  LineTool.prototype.mouseDown = function (args) {\n    this.inAction = true;\n    this.undoElement = undefined;\n\n    _super.prototype.mouseDown.call(this, args);\n\n    var oldPointValue;\n    var connectorsShape;\n\n    if (args.source && args.source.annotations) {\n      oldPointValue = {\n        x: this.prevPosition.x,\n        y: this.prevPosition.y\n      };\n      connectorsShape = this.drawingObject;\n    }\n\n    this.initialPosition = args.position;\n    this.prevSource = this.drawingObject;\n    this.currentPosition = args.position;\n\n    if (!this.drawingObject) {\n      var measureModule = this.commandHandler.annotation.measureAnnotationModule;\n      var annotationNode = {\n        // eslint-disable-next-line max-len\n        vertexPoints: [{\n          x: this.startPosition.x / this.pdfViewerBase.getZoomFactor(),\n          y: this.startPosition.y / this.pdfViewerBase.getZoomFactor()\n        }, {\n          x: this.currentPosition.x / this.pdfViewerBase.getZoomFactor(),\n          y: this.currentPosition.y / this.pdfViewerBase.getZoomFactor()\n        }],\n        bounds: {\n          x: this.currentPosition.x,\n          y: this.currentPosition.y,\n          width: 5,\n          height: 5\n        },\n        sourceDecoraterShapes: this.commandHandler.drawingObject.sourceDecoraterShapes,\n        taregetDecoraterShapes: this.commandHandler.drawingObject.taregetDecoraterShapes,\n        measureType: 'Distance',\n        // eslint-disable-next-line max-len\n        fillColor: this.commandHandler.drawingObject.fillColor,\n        notes: this.commandHandler.drawingObject.notes,\n        strokeColor: this.commandHandler.drawingObject.strokeColor,\n        // eslint-disable-next-line max-len\n        opacity: this.commandHandler.drawingObject.opacity,\n        thickness: this.commandHandler.drawingObject.thickness,\n        borderDashArray: this.commandHandler.drawingObject.borderDashArray,\n        shapeAnnotationType: 'Distance',\n        pageIndex: this.pdfViewerBase.activeElements.activePageID,\n        author: this.commandHandler.drawingObject.author,\n        subject: this.commandHandler.drawingObject.subject,\n        enableShapeLabel: this.commandHandler.enableShapeLabel,\n        leaderHeight: measureModule.leaderLength\n      };\n      this.pdfViewerBase.updateFreeTextProperties(annotationNode); // eslint-disable-next-line\n\n      this.drawingObject = this.commandHandler.add(annotationNode);\n    } else if (!this.dragging) {\n      var nodeAnnot = {\n        bounds: {\n          x: this.currentPosition.x,\n          y: this.currentPosition.y,\n          width: 5,\n          height: 5\n        },\n        // eslint-disable-next-line max-len\n        vertexPoints: [{\n          x: this.startPosition.x / this.pdfViewerBase.getZoomFactor(),\n          y: this.startPosition.y / this.pdfViewerBase.getZoomFactor()\n        }, {\n          x: this.currentPosition.x / this.pdfViewerBase.getZoomFactor(),\n          y: this.currentPosition.y / this.pdfViewerBase.getZoomFactor()\n        }],\n        // eslint-disable-next-line max-len\n        shapeAnnotationType: this.drawingObject.shapeAnnotationType,\n        sourceDecoraterShapes: this.drawingObject.sourceDecoraterShapes,\n        taregetDecoraterShapes: this.drawingObject.taregetDecoraterShapes,\n        fillColor: this.drawingObject.fillColor,\n        strokeColor: this.drawingObject.strokeColor,\n        pageIndex: this.pdfViewerBase.activeElements.activePageID,\n        // eslint-disable-next-line max-len\n        opacity: this.drawingObject.opacity || 1,\n        borderDashArray: this.drawingObject.borderDashArray,\n        thickness: this.drawingObject.thickness,\n        modifiedDate: this.drawingObject.modifiedDate,\n        author: this.drawingObject.author,\n        subject: this.drawingObject.subject,\n        lineHeadEnd: this.drawingObject.lineHeadEnd,\n        lineHeadStart: this.drawingObject.lineHeadStart,\n        measureType: this.commandHandler.drawingObject.measureType,\n        enableShapeLabel: this.commandHandler.enableShapeLabel\n      };\n      this.pdfViewerBase.updateFreeTextProperties(nodeAnnot); // eslint-disable-next-line\n\n      this.drawingObject = this.commandHandler.add(nodeAnnot);\n    }\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {void}\n   */\n\n\n  LineTool.prototype.mouseUp = function (args) {\n    if (this.dragging) {\n      _super.prototype.mouseMove.call(this, args);\n\n      if (this.commandHandler) {\n        // eslint-disable-next-line\n        var currentSelector = void 0;\n\n        if (args.source && args.annotationSelectorSettings !== null) {\n          currentSelector = args.source.annotationSelectorSettings;\n        } else {\n          currentSelector = '';\n        } // eslint-disable-next-line\n\n\n        var node = this.drawingObject;\n        this.commandHandler.nodePropertyChange(node, {\n          vertexPoints: node.vertexPoints,\n          leaderHeight: node.leaderHeight\n        });\n        this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n        this.commandHandler.select([node.id], currentSelector);\n        this.commandHandler.renderSelector(this.pdfViewerBase.activeElements.activePageID, currentSelector);\n      }\n\n      if (this.endPoint && this.endPoint.indexOf('ConnectorSegmentPoint') > -1 && this.dragging) {\n        this.commandHandler.annotation.updateCalibrateValues(this.drawingObject); // eslint-disable-next-line\n\n        this.commandHandler.annotation.addAction(this.pageIndex, null, this.drawingObject, 'Addition', '', this.drawingObject, this.drawingObject);\n        this.drawingObject = null;\n        this.dragging = false;\n\n        _super.prototype.mouseUp.call(this, args);\n      }\n\n      if (this.drawingObject) {\n        this.endPoint = 'ConnectorSegmentPoint_1';\n      }\n    } else {\n      if (this.drawingObject) {\n        this.commandHandler.remove(this.drawingObject);\n      }\n    }\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {boolean} - Returns true or false.\n   */\n\n\n  LineTool.prototype.mouseMove = function (args) {\n    _super.prototype.mouseMove.call(this, args);\n\n    if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n      this.currentPosition = args.position;\n      this.dragging = true;\n\n      if (this.currentPosition && this.prevPosition) {\n        var diffX = this.currentPosition.x - this.prevPosition.x;\n        var diffY = this.currentPosition.y - this.prevPosition.y; // eslint-disable-next-line\n\n        var currentSelector = void 0;\n\n        if (args.source && args.annotationSelectorSettings !== null) {\n          currentSelector = args.source.annotationSelectorSettings;\n        } else {\n          currentSelector = '';\n        } // eslint-disable-next-line max-len\n\n\n        if (this.inAction && this.commandHandler && this.drawingObject && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n          // eslint-disable-next-line max-len\n          this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, this.drawingObject, this.currentPosition, this.selectedSegment, args.target, null, currentSelector);\n          this.commandHandler.renderSelector(this.pdfViewerBase.activeElements.activePageID, currentSelector);\n        }\n      }\n\n      this.prevPosition = this.currentPosition;\n    }\n\n    return !this.blocked;\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {void}\n   */\n\n\n  LineTool.prototype.mouseLeave = function (args) {\n    this.mouseUp(args);\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n\n\n  LineTool.prototype.endAction = function () {\n    _super.prototype.endAction.call(this);\n\n    this.prevPosition = null;\n    this.endPoint = null;\n  };\n\n  return LineTool;\n}(ToolBase);\n\nexport { LineTool };\n/**\n * Rotates the selected objects\n *\n * @hidden\n */\n\nvar RotateTool =\n/** @class */\nfunction (_super) {\n  __extends(RotateTool, _super);\n\n  function RotateTool(commandHandler, base) {\n    return _super.call(this, commandHandler, base, true) || this;\n  }\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {void}\n   */\n\n\n  RotateTool.prototype.mouseDown = function (args) {\n    var nodeMouseDown = cloneObject(args.source);\n    this.undoElement = {\n      bounds: {\n        x: nodeMouseDown.wrapper.offsetX,\n        y: nodeMouseDown.wrapper.offsetY,\n        width: nodeMouseDown.wrapper.actualSize.width,\n        height: nodeMouseDown.wrapper.actualSize.height\n      },\n      rotateAngle: nodeMouseDown.rotateAngle // eslint-disable-next-line\n\n    };\n\n    _super.prototype.mouseDown.call(this, args);\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {void}\n   */\n\n\n  RotateTool.prototype.mouseUp = function (args) {\n    var object = args.source; // eslint-disable-next-line\n\n    var newShapeObject;\n\n    if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n      // eslint-disable-next-line\n      var currentSelector = args.source.annotations[0].annotationSelectorSettings;\n      this.commandHandler.renderSelector(this.pdfViewerBase.activeElements.activePageID, currentSelector);\n      newShapeObject = {\n        bounds: {\n          x: args.source.wrapper.offsetX,\n          y: args.source.wrapper.offsetY,\n          width: args.source.wrapper.actualSize.width,\n          height: args.source.wrapper.actualSize.height\n        },\n        rotateAngle: args.source.wrapper.rotateAngle\n      };\n    } // eslint-disable-next-line\n\n\n    this.commandHandler.annotation.addAction(this.pageIndex, null, args.source, 'Rotate', '', this.undoElement, newShapeObject);\n    this.commandHandler.annotation.stampAnnotationModule.updateSessionStorage(args.source, null, 'Rotate');\n    this.commandHandler.annotation.stickyNotesAnnotationModule.updateStickyNotes(args.source, null);\n\n    _super.prototype.mouseUp.call(this, args);\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {boolean} - Returns true or false.\n   */\n\n\n  RotateTool.prototype.mouseMove = function (args) {\n    _super.prototype.mouseMove.call(this, args);\n\n    var object = args.source; // eslint-disable-next-line\n\n    var currentSelector = args.source.annotations[0].annotationSelectorSettings;\n    this.currentPosition = args.position;\n\n    if (object.wrapper) {\n      var refPoint = {\n        x: object.wrapper.offsetX,\n        y: object.wrapper.offsetY\n      };\n      var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n      angle = (angle + 360) % 360;\n      this.blocked = !this.commandHandler.rotate(angle - object.wrapper.rotateAngle, currentSelector);\n    }\n\n    return !this.blocked;\n  };\n\n  RotateTool.prototype.getTooltipContent = function (node) {\n    return Math.round(node.rotateAngle % 360).toString() + '\\xB0';\n  };\n  /**\n   * @private\n   * @param {MouseEventArgs} args - Specified the mouse event arguments.\n   * @returns {void}\n   */\n\n\n  RotateTool.prototype.mouseLeave = function (args) {\n    this.mouseUp(args);\n  };\n  /**\n   * @private\n   * @returns {void}\n   */\n\n\n  RotateTool.prototype.endAction = function () {\n    _super.prototype.endAction.call(this);\n  };\n\n  return RotateTool;\n}(ToolBase);\n\nexport { RotateTool };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","randomId","Point","rotatePoint","Rect","transformPointByMatrix","rotateMatrix","identityMatrix","TextElement","Selector","findActiveElement","cloneObject","isLineShapes","isNullOrUndefined","updatePerimeterLabel","Browser","ToolBase","pdfViewer","pdfViewerBase","protectChange","commandHandler","inAction","currentElement","blocked","isTooltipVisible","childTable","helper","undefined","undoElement","annotations","undoParentElement","startAction","mouseDown","args","source","startPosition","currentPosition","prevPosition","position","mouseMove","prevPageId","activeElements","activePageID","mouseUp","endAction","tool","remove","mouseWheel","mouseLeave","updateSize","shape","startPoint","endPoint","corner","initialBounds","angle","isMouseUp","zoom","viewerBase","getZoomFactor","difx","x","dify","y","rotateAngle","matrix","deltaWidth","deltaHeight","diff","width","actualSize","wrapper","bounds","height","obj","formFieldAnnotationType","annotName","shapeAnnotationType","annotationSettings","annotationModule","findAnnotationSettings","annotationMaxHeight","annotationMaxWidth","annotationMinHeight","annotationMinWidth","minWidth","maxWidth","minHeight","maxHeight","isAnnotationSet","size","getPositions","newWidth","newHeight","getPivot","SelectTool","_super","base","call","mouseEventHelper","overlappedCollections","object","isLock","checkAllowedInteractions","currentSelctor","annotationSelectorSettings","selectedObject","selectedItems","annotation","formField","formFields","currentAnnot","currentSource","length","info","ctrlKey","freeTextAnnotationModule","isInuptBoxInFocus","clearSelection","formDesignerModule","isFreeTextSelected","select","id","isAnnotationMouseDown","isFormFieldMouseDown","enableToolbar","isDevice","enableDesktopMode","toolbarModule","showToolbar","fireAnnotationUnSelect","pageIndex","field","name","value","fontFamily","fontSize","fontStyle","color","backgroundColor","alignment","isReadonly","isReadOnly","visibility","maxLength","isRequired","isPrint","rotation","tooltip","options","isChecked","isSelected","fireFormFieldUnselectEvent","currentTarget","event","type","i","formField_1","fireFocusOutFormField","target","className","MoveTool","_this","prevNode","offset","offsetX","offsetY","nodeMouseDown","redoElement","vertexPoints","leaderHeight","checkisAnnotationMove","dragSelectedObjects","calculateMouseActionXDiff","calculateMouseActionYDiff","updateHTMLElement","renderSelector","isAnnotationMouseMove","isFormFieldMouseMove","newShapeObject","modifiedDate","node","borderColor","thickness","X","Y","Width","Height","previousPosition","fireFormFieldMoveEvent","addAction","stampAnnotationModule","updateSessionStorage","stickyNotesAnnotationModule","updateStickyNotes","calculateMouseXDiff","calculateMouseYDiff","requiredX","requiredY","isStamp","isSkip","diffX","diffY","selectedItem","cobject","strokeColor","borderDashArray","fillColor","stampFillColor","data","opacity","dynamicText","enableShapeLabel","labelContent","add","checkBoundaryConstraints","currentSelctor_1","triggerAnnotationMove","StampTool","apply","arguments","newObject","nodeElement","moveStampElement","textWidth","getTextWidth","widthRatio","getFontSize","Math","floor","defaultFontSize","sourceWrapper","text","font","canvas","document","createElement","context","getContext","fontName","getComputedStyle","body","measureText","InkDrawingTool","sourceObject","disableTextSelectionMode","inkAnnotationModule","drawInkInCanvas","storePathData","ConnectTool","oldValue","connectors","initialPosition","prevSource","measureType","notes","sizeObject","checkAnnotationWidth","nodePropertyChange","newShapeElementObject","updateCalibrateValues","connector","newValue","cloneShapebject","dragConnectorEnds","selectedSegment","ResizeTool","isPreventHistory","oldObject","isAnnotationSelect","isFormFieldSelect","deltaValues","scaleObjects","stampSettings","boundsRatio","children","style","horizontalAlignment","verticalAlignment","setOffsetWithRespectToBounds","fireFormFieldResizeEvent","annotationElement","getPoints","changes","getChanges","getTooltipContent","pdfAnnotationBaseModel","round","change","isCtrlKeyPressed","max","scaleSelectedItems","NodeDrawingTool","isNaN","updateFreeTextProperties","isFormDesign","formFieldElement","getElementById","drawingObject","pageNumber","getActivePage","updateFormFieldInitialSize","pageWidth","pageContainer","firstElementChild","clientWidth","pageHeight","clientHeight","left","offsetLeft","parentElement","classList","contains","targetParentRect","path","getBoundingClientRect","clientX","rect","updateNodeDimension","formFieldCollection","push","signatureIndicatorSettings","formFieldCollections","drawHTMLContent","action","isMouseDown","equals","dragging","toBounds","updateRadiusLinePosition","trasPoint","center","rotatedPoint","newPoint1","renderDrawing","PolygonDrawingTool","nodeAnnotElement","author","subject","borderStyle","pt","lastPoint","measureAnnotationModule","isDoubleClineck","isMouseLeave","currentSelector","point","containsPoint","splice","enableShapeAnnotation","shapeAnnotationModule","renderShapeAnnotations","enableMeasureAnnotation","calculateArea","addTextToComments","calculateVolume","renderMeasureShapeAnnotations","sourceDecoraterShapes","taregetDecoraterShapes","calculatePerimeter","annotationObject","LineTool","oldPointValue","connectorsShape","measureModule","annotationNode","leaderLength","nodeAnnot","lineHeadEnd","lineHeadStart","indexOf","RotateTool","refPoint","findAngle","rotate","toString"],"sources":["/home/morgan/Desktop/Projets/ENT4/Jwt-Auth-pdf/react-jwt-auth/react-jwt-auth/node_modules/@syncfusion/ej2-pdfviewer/src/pdfviewer/drawing/tools.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { randomId, Point } from '@syncfusion/ej2-drawings';\nimport { rotatePoint } from '@syncfusion/ej2-drawings';\nimport { Rect } from '@syncfusion/ej2-drawings';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '@syncfusion/ej2-drawings';\nimport { TextElement } from '@syncfusion/ej2-drawings';\nimport { Selector } from './selector';\nimport { findActiveElement } from './action';\nimport { cloneObject, isLineShapes } from './drawing-util';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { updatePerimeterLabel } from './connector-util';\nimport { Browser } from '@syncfusion/ej2-base';\n/**\n * Defines the interactive tools\n *\n * @hidden\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     *\n     * @param {PdfViewer} pdfViewer - Specified the pdfviewer component.\n     * @param {PdfViewerBase} pdfViewerBase - Specified the pdfViewer base component.\n     * @param {boolean} protectChange - Set the default value as false.\n     */\n    function ToolBase(pdfViewer, pdfViewerBase, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.pdfViewerBase = null;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        /**   @private  */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /** @private */\n        this.helper = undefined;\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { annotations: [] };\n        this.undoParentElement = { annotations: [] };\n        this.commandHandler = pdfViewer;\n        this.pdfViewerBase = pdfViewerBase;\n    }\n    /**\n     * @param {IElement} currentElement - Specified the current element.\n     * @returns {void}\n     */\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Mouse up event arguments.\n     * @returns {void}\n     */\n    ToolBase.prototype.mouseDown = function (args) {\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Mouse up event arguments.\n     * @returns {boolean} - Returns true or false.\n     */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        //this.currentElement = currentElement;\n        this.prevPageId = this.pdfViewerBase.activeElements.activePageID;\n        return !this.blocked;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Mouse up event arguments.\n     * @returns {void}\n     */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        //At the end\n        this.endAction();\n        this.helper = null;\n    };\n    ToolBase.prototype.endAction = function () {\n        //remove helper\n        if (this.commandHandler) {\n            this.commandHandler.tool = '';\n            if (this.helper) {\n                this.commandHandler.remove(this.helper);\n            }\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Mouse wheel event arguments.\n     * @returns {void}\n     */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Mouse leave event arguments.\n     * @returns {void}\n     */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    // eslint-disable-next-line\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle, isMouseUp) {\n        var zoom = this.commandHandler.viewerBase.getZoomFactor();\n        var difx = this.currentPosition.x / zoom - this.startPosition.x / zoom;\n        var dify = this.currentPosition.y / zoom - this.startPosition.y / zoom;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.wrapper.bounds.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.wrapper.bounds.height;\n        // eslint-disable-next-line\n        var obj = shape;\n        if (!shape.formFieldAnnotationType) {\n            if (!shape.annotName && !shape.shapeAnnotationType) {\n                if (shape) {\n                    // eslint-disable-next-line\n                    obj = shape.annotations[0];\n                }\n            }\n        }\n        // eslint-disable-next-line\n        var annotationSettings = this.commandHandler.annotationModule ? this.commandHandler.annotationModule.findAnnotationSettings(obj) : {};\n        var annotationMaxHeight = 0;\n        var annotationMaxWidth = 0;\n        var annotationMinHeight = 0;\n        var annotationMinWidth = 0;\n        if (annotationSettings.minWidth || annotationSettings.maxWidth || annotationSettings.minHeight || annotationSettings.maxHeight) {\n            annotationMaxHeight = annotationSettings.maxHeight ? annotationSettings.maxHeight : 2000;\n            annotationMaxWidth = annotationSettings.maxWidth ? annotationSettings.maxWidth : 2000;\n            annotationMinHeight = annotationSettings.minHeight ? annotationSettings.minHeight : 0;\n            annotationMinWidth = annotationSettings.minWidth ? annotationSettings.minWidth : 0;\n        }\n        var isAnnotationSet = false;\n        if (annotationMinHeight || annotationMinWidth || annotationMaxHeight || annotationMaxWidth) {\n            isAnnotationSet = true;\n        }\n        if (isAnnotationSet && isMouseUp) {\n            // eslint-disable-next-line\n            var size = this.getPositions(corner, difx, dify);\n            var newWidth = width + size.x;\n            var newHeight = height + size.y;\n            // eslint-disable-next-line max-len\n            if ((newHeight > annotationMinHeight && newHeight < annotationMaxHeight) && (newWidth > annotationMinWidth && newWidth < annotationMaxWidth)) {\n                // eslint-disable-next-line\n                difx = difx;\n                // eslint-disable-next-line\n                dify = dify;\n            }\n            else {\n                if (newHeight < annotationMinHeight || newHeight > annotationMaxHeight) {\n                    if (newHeight < annotationMinHeight) {\n                        dify = annotationMinHeight - height;\n                    }\n                    else {\n                        dify = annotationMaxHeight - height;\n                    }\n                }\n                if (newWidth < annotationMinWidth || newWidth > annotationMaxWidth) {\n                    if (newWidth < annotationMinWidth) {\n                        difx = annotationMinWidth - width;\n                    }\n                    else {\n                        difx = annotationMaxWidth - width;\n                    }\n                }\n            }\n        }\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                // eslint-disable-next-line\n                difx = difx;\n                dify = 0;\n                if (isAnnotationSet) {\n                    if (initialBounds.width - difx > annotationMaxWidth) {\n                        difx = annotationMaxWidth - initialBounds.width;\n                    }\n                }\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = 0;\n                if (isAnnotationSet) {\n                    if (initialBounds.width + difx > annotationMaxWidth) {\n                        difx = annotationMaxWidth - initialBounds.width;\n                    }\n                }\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                if (isAnnotationSet) {\n                    if (initialBounds.height - dify > annotationMaxHeight) {\n                        dify = annotationMaxHeight - initialBounds.height;\n                    }\n                }\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                if (isAnnotationSet) {\n                    if (initialBounds.height + dify > annotationMaxHeight) {\n                        dify = annotationMaxHeight - initialBounds.height;\n                    }\n                }\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                if (isAnnotationSet) {\n                    if (initialBounds.width + difx > annotationMaxWidth) {\n                        difx = annotationMaxWidth - initialBounds.width;\n                    }\n                    if (initialBounds.height - dify > annotationMaxHeight) {\n                        dify = annotationMaxHeight - initialBounds.height;\n                    }\n                }\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                if (isAnnotationSet) {\n                    if (initialBounds.width - difx > annotationMaxWidth) {\n                        difx = annotationMaxWidth - initialBounds.width;\n                    }\n                    if (initialBounds.height - dify > annotationMaxHeight) {\n                        dify = annotationMaxHeight - initialBounds.height;\n                    }\n                }\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                if (isAnnotationSet) {\n                    if (initialBounds.width + difx > annotationMaxWidth) {\n                        difx = annotationMaxWidth - initialBounds.width;\n                    }\n                    if (initialBounds.height + dify > annotationMaxHeight) {\n                        dify = annotationMaxHeight - initialBounds.height;\n                    }\n                }\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                if (isAnnotationSet) {\n                    if (initialBounds.width - difx > annotationMaxWidth) {\n                        difx = annotationMaxWidth - initialBounds.width;\n                    }\n                    if (initialBounds.height + dify > annotationMaxHeight) {\n                        dify = annotationMaxHeight - initialBounds.height;\n                    }\n                }\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    ToolBase.prototype.getPositions = function (corner, x, y) {\n        switch (corner) {\n            case 'ResizeEast':\n                return { x: x, y: 0 };\n            case 'ResizeSouthEast':\n                return { x: x, y: y };\n            case 'ResizeSouth':\n                return { x: 0, y: y };\n            case 'ResizeNorth':\n                return { x: 0, y: -y };\n            case 'ResizeNorthEast':\n                return { x: x, y: -y };\n            case 'ResizeNorthWest':\n                return { x: -x, y: -y };\n            case 'ResizeWest':\n                return { x: -x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -x, y: y };\n        }\n        return { x: x, y: y };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n *\n * @hidden\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, base) {\n        return _super.call(this, commandHandler, base, true) || this;\n        //     this.action = action;\n    }\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Mouse down event arguments.\n     * @returns {void}\n     */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.mouseEventHelper(args);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    SelectTool.prototype.mouseEventHelper = function (args) {\n        if (this.commandHandler && this.commandHandler.annotationModule) {\n            // eslint-disable-next-line\n            this.commandHandler.annotationModule.overlappedCollections = findActiveElement(args, this.pdfViewerBase, this.commandHandler, true);\n        }\n        // eslint-disable-next-line\n        var object = findActiveElement(args, this.pdfViewerBase, this.commandHandler);\n        // if (!isNullOrUndefined(object) && (object as any).shapeAnnotationType != 'Path'){\n        var isLock = false;\n        // eslint-disable-next-line\n        if (object && object.shapeAnnotationType === 'StickyNotes') {\n            // eslint-disable-next-line\n            if (object.annotationSettings && object.annotationSettings.isLock) {\n                if (this.commandHandler.annotationModule.checkAllowedInteractions('Select', object)) {\n                    isLock = false;\n                }\n                else {\n                    isLock = true;\n                }\n            }\n        }\n        if (!isLock) {\n            // eslint-disable-next-line\n            var currentSelctor = void 0;\n            if (args.source && args.annotationSelectorSettings !== null) {\n                currentSelctor = args.source.annotationSelectorSettings;\n            }\n            else {\n                currentSelctor = '';\n            }\n            if (this.commandHandler) {\n                var selectedObject = this.commandHandler.selectedItems;\n                if (selectedObject) {\n                    // eslint-disable-next-line\n                    var annotation = selectedObject.annotations[0];\n                    // eslint-disable-next-line\n                    var formField = selectedObject.formFields[0];\n                    var currentAnnot = this.commandHandler.selectedItems.annotations[0];\n                    var currentSource = args.source;\n                    if ((selectedObject.annotations.length) && args.info && !args.info.ctrlKey\n                        // eslint-disable-next-line\n                        && this.commandHandler.annotationModule && this.commandHandler.annotationModule.freeTextAnnotationModule.isInuptBoxInFocus === false) {\n                        this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n                    }\n                    else if (args.info && args.info.ctrlKey && ((currentSource && currentSource.shapeAnnotationType === 'FreeText') || (currentAnnot && currentAnnot.shapeAnnotationType === 'FreeText'))) {\n                        this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n                    }\n                    else if (isNullOrUndefined(object) && this.commandHandler.formDesignerModule && !((currentSource && currentSource.shapeAnnotationType === 'FreeText') || (currentAnnot && (currentAnnot.shapeAnnotationType === 'FreeText' || currentAnnot.shapeAnnotationType === 'Image' || currentAnnot.shapeAnnotationType === 'StickyNotes')))) {\n                        this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n                    }\n                    if (object) {\n                        if (!isNullOrUndefined(this.pdfViewerBase.isFreeTextSelected) && !this.pdfViewerBase.isFreeTextSelected) {\n                            this.commandHandler.select([object.id], currentSelctor);\n                            this.commandHandler.viewerBase.isAnnotationMouseDown = true;\n                        }\n                        this.pdfViewerBase.isFreeTextSelected = false;\n                        this.commandHandler.viewerBase.isFormFieldMouseDown = true;\n                    }\n                    if (selectedObject.annotations.length === 0 && annotation && annotation.shapeAnnotationType !== 'HandWrittenSignature' && annotation.shapeAnnotationType !== 'SignatureText' && annotation.shapeAnnotationType !== 'SignatureImage' && annotation.shapeAnnotationType !== 'Path' && !annotation.formFieldAnnotationType) {\n                        if (this.commandHandler.enableToolbar && Browser.isDevice && !this.commandHandler.enableDesktopMode) {\n                            this.commandHandler.toolbarModule.showToolbar(true);\n                        }\n                        this.commandHandler.fireAnnotationUnSelect(annotation.annotName, annotation.pageIndex, annotation);\n                    }\n                    // eslint-disable-next-line max-len\n                    if (selectedObject.formFields.length === 0 && this.commandHandler.formDesignerModule && formField && formField.formFieldAnnotationType) {\n                        // eslint-disable-next-line\n                        var field = { name: formField.name, id: formField.id, value: formField.value, fontFamily: formField.fontFamily, fontSize: formField.fontSize, fontStyle: formField.fontStyle,\n                            // eslint-disable-next-line\n                            color: formField.color, backgroundColor: formField.backgroundColor, alignment: formField.alignment, isReadonly: formField.isReadOnly, visibility: formField.visibility,\n                            // eslint-disable-next-line\n                            maxLength: formField.maxLength, isRequired: formField.isRequired, isPrint: formField.isPrint, rotation: formField.rotation, tooltip: formField.tooltip,\n                            // eslint-disable-next-line\n                            options: formField.options, isChecked: formField.isChecked, isSelected: formField.isSelected };\n                        this.commandHandler.fireFormFieldUnselectEvent('formFieldUnselect', field, formField.pageIndex);\n                    }\n                    else if (this.pdfViewerBase.currentTarget && this.pdfViewerBase.currentTarget.id && this.commandHandler.formFields && event.type === 'mousedown') {\n                        for (var i = 0; i < this.commandHandler.formFields.length; i++) {\n                            var formField_1 = this.commandHandler.formFields[i];\n                            if (this.pdfViewerBase.currentTarget && this.pdfViewerBase.currentTarget.id === formField_1.id) {\n                                // eslint-disable-next-line\n                                var field = {\n                                    value: formField_1.value, fontFamily: formField_1.fontFamily, fontSize: formField_1.fontSize, fontStyle: formField_1.fontStyle,\n                                    // eslint-disable-next-line\n                                    color: formField_1.color, backgroundColor: formField_1.backgroundColor, alignment: formField_1.alignment, isReadonly: formField_1.isReadonly, visibility: formField_1.visibility,\n                                    // eslint-disable-next-line\n                                    maxLength: formField_1.maxLength, isRequired: formField_1.isRequired, isPrint: formField_1.isPrint, rotation: formField_1.rotateAngle, tooltip: formField_1.tooltip,\n                                    // eslint-disable-next-line\n                                    options: formField_1.options, isChecked: formField_1.isChecked, isSelected: formField_1.isSelected\n                                };\n                                if (!object) {\n                                    this.commandHandler.fireFocusOutFormField(field, formField_1.pageIndex);\n                                    this.pdfViewerBase.currentTarget = null;\n                                }\n                                else {\n                                    if (this.pdfViewerBase.currentTarget.id != event.target.id && event.target.className != 'e-pv-text-layer') {\n                                        this.commandHandler.fireFocusOutFormField(field, formField_1.pageIndex);\n                                        this.pdfViewerBase.currentTarget = null;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        // } else {\n        //     if (!isNullOrUndefined(this.commandHandler))\n        //         this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n        // }\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Mouse move event arguments.\n     * @returns {boolean} - Returns true or false.\n     */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        return !this.blocked;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Mouse up event arguments.\n     * @returns {void}\n     */\n    SelectTool.prototype.mouseUp = function (args) {\n        this.mouseEventHelper(args);\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Mouse leave event arguments.\n     * @returns {void}\n     */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/** @hidden */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, base) {\n        var _this = _super.call(this, commandHandler, base) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        /**   @private  */\n        _this.prevNode = null;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Mouse down event arguments.\n     * @returns {void}\n     */\n    MoveTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.offset = { x: args.source.wrapper.offsetX, y: args.source.wrapper.offsetY };\n        this.startPosition = args.position;\n        var nodeMouseDown = cloneObject(args.source);\n        this.redoElement = {\n            bounds: {\n                x: nodeMouseDown.wrapper.offsetX, y: nodeMouseDown.wrapper.offsetY,\n                width: nodeMouseDown.wrapper.actualSize.width, height: nodeMouseDown.wrapper.actualSize.height\n            }\n            // eslint-disable-next-line\n        };\n        if (isLineShapes(nodeMouseDown)) {\n            this.redoElement.vertexPoints = nodeMouseDown.vertexPoints;\n            this.redoElement.leaderHeight = nodeMouseDown.leaderHeight;\n        }\n        this.inAction = true;\n    };\n    /**\n     * @private\n     * @param {any} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    // eslint-disable-next-line\n    MoveTool.prototype.mouseUp = function (args) {\n        if (this.commandHandler && args.source) {\n            this.checkisAnnotationMove(args);\n            var currentSelctor = args.source.annotationSelectorSettings;\n            this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n            this.commandHandler.select([args.source.id], currentSelctor);\n            // eslint-disable-next-line max-len\n            if (this.pdfViewerBase.activeElements.activePageID == args.source.pageIndex) {\n                this.commandHandler.dragSelectedObjects(this.calculateMouseActionXDiff(args), this.calculateMouseActionYDiff(args), this.pdfViewerBase.activeElements.activePageID, currentSelctor, null);\n            }\n            if (args.source && (args.source.formFieldAnnotationType === 'Textbox' || args.source.formFieldAnnotationType === 'Checkbox'\n                || args.source.formFieldAnnotationType === 'RadioButton' || args.source.formFieldAnnotationType === 'ListBox'\n                || args.source.formFieldAnnotationType === 'SignatureField' || args.source.formFieldAnnotationType === 'InitialField' || args.source.formFieldAnnotationType === 'DropdownList'\n                || args.source.formFieldAnnotationType === 'PasswordField')) {\n                this.commandHandler.formDesignerModule.updateHTMLElement(args.source);\n            }\n            this.commandHandler.renderSelector(this.pdfViewerBase.activeElements.activePageID, currentSelctor);\n            this.commandHandler.viewerBase.isAnnotationMouseMove = false;\n            this.commandHandler.viewerBase.isFormFieldMouseMove = false;\n            // eslint-disable-next-line\n            var newShapeObject = {\n                bounds: {\n                    x: args.source.wrapper.offsetX, y: args.source.wrapper.offsetY,\n                    width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n                }, modifiedDate: args.source.modifiedDate\n            };\n            if (isLineShapes(args.source)) {\n                newShapeObject.vertexPoints = args.source.vertexPoints;\n                newShapeObject.leaderHeight = args.source.leaderHeight;\n            }\n            if (args.target && args.target.formFieldAnnotationType) {\n                var node = args.target;\n                var field = {\n                    // eslint-disable-next-line\n                    value: node.value, fontFamily: node.fontFamily, fontSize: node.fontSize, fontStyle: node.fontStyle,\n                    // eslint-disable-next-line\n                    color: node.color, backgroundColor: node.backgroundColor, borderColor: node.borderColor,\n                    // eslint-disable-next-line\n                    thickness: node.thickness, alignment: node.alignment, isReadonly: node.isReadonly, visibility: node.visibility,\n                    // eslint-disable-next-line\n                    maxLength: node.maxLength, isRequired: node.isRequired, isPrint: node.isPrint, rotation: node.rotateAngle, tooltip: node.tooltip, options: node.options,\n                    // eslint-disable-next-line\n                    isChecked: node.isChecked, isSelected: node.isSelected\n                };\n                // eslint-disable-next-line max-len\n                var currentPosition = { X: args.source.wrapper.offsetX, Y: args.source.wrapper.offsetY, Width: args.source.wrapper.actualSize.width, Height: args.source.wrapper.actualSize.height };\n                // eslint-disable-next-line max-len\n                var previousPosition = { X: this.offset.x, Y: this.offset.y, Width: args.source.wrapper.actualSize.width, Height: args.source.wrapper.actualSize.height };\n                this.commandHandler.fireFormFieldMoveEvent('formFieldMove', field, node.pageIndex, previousPosition, currentPosition);\n            }\n            if (this.commandHandler.annotation) {\n                // eslint-disable-next-line\n                this.commandHandler.annotation.addAction(this.pageIndex, null, args.source, 'Drag', '', this.redoElement, newShapeObject);\n                this.commandHandler.annotation.stampAnnotationModule.updateSessionStorage(args.source, null, 'Drag');\n                this.commandHandler.annotation.stickyNotesAnnotationModule.updateStickyNotes(args.source, null);\n            }\n        }\n        var shapeAnnotationType = this.commandHandler && this.commandHandler.selectedItems && this.commandHandler.selectedItems.annotations && this.commandHandler.selectedItems.annotations.length > 0 ? this.commandHandler.selectedItems.annotations[0].shapeAnnotationType : null;\n        if (shapeAnnotationType && shapeAnnotationType !== 'Image' && shapeAnnotationType !== 'SignatureImage') {\n            _super.prototype.mouseUp.call(this, args);\n        }\n        else if (this.commandHandler && this.commandHandler.selectedItems && this.commandHandler.selectedItems.formFields && this.commandHandler.selectedItems.formFields.length > 0) {\n            _super.prototype.mouseUp.call(this, args);\n        }\n    };\n    MoveTool.prototype.calculateMouseXDiff = function () {\n        if (this.currentPosition && this.startPosition) {\n            return this.currentPosition.x - this.startPosition.x;\n        }\n        else {\n            return 0;\n        }\n    };\n    MoveTool.prototype.calculateMouseYDiff = function () {\n        if (this.currentPosition && this.startPosition) {\n            return this.currentPosition.y - this.startPosition.y;\n        }\n        else {\n            return 0;\n        }\n    };\n    MoveTool.prototype.calculateMouseActionXDiff = function (args) {\n        var x = this.calculateMouseXDiff() / this.commandHandler.viewerBase.getZoomFactor();\n        // let y: number = this.calculateMouseYDiff() / this.commandHandler.magnification.zoomFactor;\n        if (this.offset) {\n            var requiredX = this.offset.x + x;\n            // let requiredY: number = this.offset.y + y;\n            return requiredX - args.source.wrapper.offsetX;\n            //let diffY: number = requiredY - args.source.wrapper.offsetY;\n        }\n        else {\n            return 0;\n        }\n    };\n    MoveTool.prototype.calculateMouseActionYDiff = function (args) {\n        // let x: number = this.calculateMouseXDiff() / this.commandHandler.magnification.zoomFactor;\n        var y = this.calculateMouseYDiff() / this.commandHandler.viewerBase.getZoomFactor();\n        if (this.offset) {\n            // let requiredX: number = this.offset.x + x;\n            var requiredY = this.offset.y + y;\n            // let diffX: number = requiredX - args.source.wrapper.offsetX;\n            return requiredY - args.source.wrapper.offsetY;\n        }\n        else {\n            return 0;\n        }\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @param {boolean} isStamp - Specified the stamp annotation or not.\n     * @param {boolean} isSkip - Specified the annotation skip or not.\n     * @returns {boolean} - Returns the true or false.\n     */\n    MoveTool.prototype.mouseMove = function (args, isStamp, isSkip) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.currentPosition = args.position;\n            this.currentTarget = args.target;\n            var currentSelctor = args.source.annotationSelectorSettings;\n            var x = this.calculateMouseXDiff() / this.commandHandler.viewerBase.getZoomFactor();\n            var y = this.calculateMouseYDiff() / this.commandHandler.viewerBase.getZoomFactor();\n            var requiredX = this.offset.x + x;\n            var requiredY = this.offset.y + y;\n            var diffX = this.calculateMouseActionXDiff(args);\n            var diffY = this.calculateMouseActionYDiff(args);\n            var selectedItem = this.commandHandler.selectedItems.annotations[0];\n            var cobject = void 0;\n            if (!this.helper) {\n                // eslint-disable-next-line\n                cobject = this.commandHandler.selectedItems.annotations.length > 0 ? cloneObject(this.commandHandler.selectedItems.annotations[0]) : cloneObject(this.commandHandler.selectedItems.formFields[0]);\n                if (cobject.wrapper) {\n                    diffX = requiredX - cobject.wrapper.offsetX;\n                    diffY = requiredY - cobject.wrapper.offsetY;\n                    // eslint-disable-next-line max-len\n                    cobject.bounds = this.commandHandler.selectedItems.annotations.length > 0 ? this.commandHandler.selectedItems.annotations[0].wrapper.bounds : this.commandHandler.selectedItems.formFields[0].wrapper.bounds;\n                }\n                cobject.wrapper = undefined;\n                cobject.id = 'diagram_helper';\n                if (cobject.shapeAnnotationType === 'Stamp') {\n                    cobject.strokeColor = '';\n                    cobject.borderDashArray = '';\n                    cobject.fillColor = 'transparent';\n                    cobject.stampFillColor = 'transparent';\n                    cobject.data = '';\n                }\n                else if (cobject.shapeAnnotationType === 'FreeText') {\n                    cobject.strokeColor = 'blue';\n                    cobject.fillColor = 'transparent';\n                    cobject.thickness = 1;\n                    cobject.opacity = 1;\n                    cobject.dynamicText = '';\n                }\n                else if (cobject.shapeAnnotationType === 'SignatureText') {\n                    cobject.strokeColor = 'red';\n                    cobject.borderDashArray = '5,5';\n                    cobject.fillColor = 'transparent';\n                    cobject.thickness = 2;\n                    cobject.opacity = 1;\n                    cobject.data = '';\n                }\n                else {\n                    cobject.strokeColor = 'red';\n                    cobject.borderDashArray = '5,5';\n                    cobject.fillColor = 'transparent';\n                    cobject.thickness = 2;\n                    cobject.opacity = 1;\n                }\n                if (cobject.enableShapeLabel === true) {\n                    cobject.labelContent = '';\n                }\n                var shapeAnnotationType = cobject.shapeAnnotationType;\n                if (!isStamp && shapeAnnotationType !== 'Image' && shapeAnnotationType !== 'SignatureImage') {\n                    this.helper = cobject = this.commandHandler.add(cobject);\n                }\n                else {\n                    cobject = this.helper = args.source;\n                }\n                if (this.commandHandler.selectedItems.annotations.length > 0) {\n                    this.commandHandler.selectedItems.annotations = [cobject];\n                }\n                else {\n                    this.commandHandler.selectedItems.formFields = [cobject];\n                }\n            }\n            else {\n                diffX = requiredX - this.helper.wrapper.offsetX;\n                diffY = requiredY - this.helper.wrapper.offsetY;\n            }\n            if (this.helper && this.helper.shapeAnnotationType === 'Stamp') {\n                isStamp = true;\n            }\n            // eslint-disable-next-line max-len\n            if (this.commandHandler.checkBoundaryConstraints(diffX, diffY, this.pdfViewerBase.activeElements.activePageID, this.helper.wrapper.bounds, isStamp, isSkip)) {\n                var shapeAnnotationType = this.helper.shapeAnnotationType;\n                if (this.helper && (shapeAnnotationType === 'Image' || shapeAnnotationType === 'SignatureImage')) {\n                    this.checkisAnnotationMove(args);\n                    // eslint-disable-next-line max-len\n                    var currentSelctor_1 = args.source.annotationSelectorSettings;\n                    this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n                    this.commandHandler.select([args.source.id], currentSelctor_1);\n                    // eslint-disable-next-line max-len\n                    this.commandHandler.dragSelectedObjects(diffX, diffY, this.pdfViewerBase.activeElements.activePageID, currentSelctor_1, this.helper);\n                    this.commandHandler.renderSelector(this.pdfViewerBase.activeElements.activePageID, currentSelctor_1);\n                }\n                else {\n                    this.commandHandler.dragSelectedObjects(diffX, diffY, this.pdfViewerBase.activeElements.activePageID, currentSelctor, this.helper);\n                }\n                this.prevNode = this.helper;\n                this.prevPosition = this.currentPosition;\n            }\n            else {\n                this.currentPosition = this.prevPosition;\n            }\n            if (selectedItem && selectedItem.annotName) {\n                this.commandHandler.annotation.triggerAnnotationMove(selectedItem, true);\n            }\n        }\n        return true;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    MoveTool.prototype.mouseLeave = function (args) {\n        var currentSelctor = args.source.annotationSelectorSettings;\n        var requiredX = this.offset.x + this.calculateMouseXDiff();\n        var requiredY = this.offset.y + this.calculateMouseYDiff();\n        var diffX = requiredX - args.source.wrapper.offsetX;\n        var diffY = requiredY - args.source.wrapper.offsetY;\n        this.commandHandler.dragSelectedObjects(diffX, diffY, this.prevPageId, currentSelctor, null);\n        this.commandHandler.renderSelector(this.prevPageId, currentSelctor);\n        _super.prototype.mouseLeave.call(this, args);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    MoveTool.prototype.checkisAnnotationMove = function (args) {\n        // eslint-disable-next-line max-len\n        if (this.commandHandler.selectedItems && this.commandHandler.selectedItems.annotations && this.commandHandler.selectedItems.annotations.length > 0) {\n            if (this.commandHandler.selectedItems.annotations[0].annotName === args.source.annotName) {\n                this.commandHandler.viewerBase.isAnnotationMouseMove = true;\n            }\n        }\n        else {\n            this.commandHandler.viewerBase.isAnnotationMouseMove = false;\n        }\n        // eslint-disable-next-line max-len\n        if (this.commandHandler.selectedItems && this.commandHandler.selectedItems.formFields && this.commandHandler.selectedItems.formFields.length > 0) {\n            if (this.commandHandler.selectedItems.formFields[0].name === args.source.name) {\n                this.commandHandler.viewerBase.isFormFieldMouseMove = true;\n            }\n        }\n        else {\n            this.commandHandler.viewerBase.isFormFieldMouseMove = false;\n        }\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/** @hidden */\nvar StampTool = /** @class */ (function (_super) {\n    __extends(StampTool, _super);\n    function StampTool() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {any} - Returns the mouse up event.\n     */\n    // eslint-disable-next-line\n    StampTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {boolean} - Returns the true or false.\n     */\n    StampTool.prototype.mouseMove = function (args) {\n        // eslint-disable-next-line\n        var newObject;\n        if (!this.inAction) {\n            var pageIndex = this.pdfViewerBase.activeElements.activePageID;\n            this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n            // eslint-disable-next-line max-len\n            var nodeElement = this.commandHandler.annotation.stampAnnotationModule.moveStampElement(args.position.x, args.position.y, pageIndex);\n            if (nodeElement.shapeAnnotationType === 'SignatureText') {\n                var textWidth = this.getTextWidth(nodeElement.data, nodeElement.fontSize, nodeElement.fontFamily);\n                var widthRatio = 1;\n                if (textWidth > nodeElement.bounds.width)\n                    widthRatio = nodeElement.bounds.width / textWidth;\n                nodeElement.fontSize = this.getFontSize(Math.floor((nodeElement.fontSize * widthRatio)));\n                var defaultFontSize = 32; // default font size.\n                nodeElement.bounds.height = nodeElement.fontSize < defaultFontSize ? nodeElement.fontSize * 2 : nodeElement.bounds.height;\n                nodeElement.thickness = 0;\n            }\n            newObject = this.commandHandler.add(nodeElement);\n            args.source = this.commandHandler.annotations[this.commandHandler.annotations.length - 1];\n            args.sourceWrapper = args.source.wrapper;\n            this.inAction = true;\n            // eslint-disable-next-line\n            var currentSource = args.source;\n            if (currentSource && (currentSource.shapeAnnotationType === 'HandWrittenSignature' || currentSource.shapeAnnotationType === 'SignatureText' || currentSource.shapeAnnotationType === 'SignatureImage')) {\n                this['offset'] = { x: args.source.wrapper.offsetX - (args.source.wrapper.bounds.width / 2), y: args.source.wrapper.offsetY - (args.source.wrapper.bounds.height / 2) };\n            }\n            else {\n                this['offset'] = { x: args.source.wrapper.offsetX, y: args.source.wrapper.offsetY };\n            }\n            this.startPosition = args.position;\n            this.commandHandler.select([newObject.id]);\n        }\n        var currentSelctor = args.source.annotationSelectorSettings;\n        _super.prototype.mouseMove.call(this, args, true, true);\n        this.commandHandler.renderSelector(args.source.pageIndex, currentSelctor);\n        return this.inAction;\n    };\n    StampTool.prototype.getTextWidth = function (text, font, fontFamily) {\n        var canvas = document.createElement('canvas');\n        var context = canvas.getContext('2d');\n        var fontName;\n        if (font) {\n            fontName = font + 'px' + ' ' + fontFamily;\n        }\n        context.font = fontName || getComputedStyle(document.body).font;\n        return context.measureText(text).width;\n    };\n    /**\n     * @param {number} fontSize - Font size.\n     * @returns {number} - Returns the font size.\n     */\n    StampTool.prototype.getFontSize = function (fontSize) {\n        return (fontSize % 2 === 0) ? fontSize : --fontSize;\n    };\n    return StampTool;\n}(MoveTool));\nexport { StampTool };\n/**\n * Draws a node that is defined by the user\n *\n * @hidden\n */\nvar InkDrawingTool = /** @class */ (function (_super) {\n    __extends(InkDrawingTool, _super);\n    function InkDrawingTool(commandHandler, base, sourceObject) {\n        var _this = _super.call(this, commandHandler, base) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    InkDrawingTool.prototype.mouseDown = function (args) {\n        this.pdfViewerBase.disableTextSelectionMode();\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        // eslint-disable-next-line\n        var node = { currentPosition: this.currentPosition, prevPosition: this.prevPosition };\n        this.commandHandler.annotation.inkAnnotationModule.drawInkInCanvas(node, this.pdfViewerBase.activeElements.activePageID);\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {boolean} - Returns true or false.\n     */\n    InkDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            // eslint-disable-next-line\n            var node = { currentPosition: this.currentPosition, prevPosition: this.pdfViewerBase.prevPosition };\n            this.commandHandler.annotation.inkAnnotationModule.drawInkInCanvas(node, this.pdfViewerBase.activeElements.activePageID);\n        }\n        return this.inAction;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {boolean} - Returns true.\n     */\n    InkDrawingTool.prototype.mouseUp = function (args) {\n        this.commandHandler.annotation.inkAnnotationModule.storePathData();\n        return true;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    InkDrawingTool.prototype.mouseLeave = function (args) {\n        //this.mouseUp(args);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    InkDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return InkDrawingTool;\n}(ToolBase));\nexport { InkDrawingTool };\n/**\n * Helps to edit the selected connectors\n *\n * @hidden\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, base, endPoint) {\n        var _this = _super.call(this, commandHandler, base, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    ConnectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        _super.prototype.mouseDown.call(this, args);\n        var oldValue;\n        var connectors;\n        if (args.source && args.source.annotations) {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            connectors = args.source.annotations[0];\n        }\n        this.initialPosition = args.position;\n        this.prevSource = this.commandHandler.selectedItems.annotations[0];\n        var nodeElement = cloneObject(args.source);\n        this.redoElement = {\n            bounds: {\n                x: nodeElement.wrapper.offsetX, y: nodeElement.wrapper.offsetY,\n                width: nodeElement.wrapper.actualSize.width, height: nodeElement.wrapper.actualSize.height\n            }\n            // eslint-disable-next-line\n        };\n        if (isLineShapes(nodeElement)) {\n            this.redoElement.vertexPoints = nodeElement.vertexPoints;\n            this.redoElement.leaderHeight = nodeElement.leaderHeight;\n            if (nodeElement.measureType === 'Distance' || nodeElement.measureType === 'Perimeter' || nodeElement.measureType === 'Area' || nodeElement.measureType === 'Volume') {\n                this.redoElement.notes = nodeElement.notes;\n            }\n        }\n        this.currentPosition = args.position;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    ConnectTool.prototype.mouseUp = function (args) {\n        if (this.commandHandler) {\n            var node = this.commandHandler.selectedItems.annotations[0];\n            if (node) {\n                // eslint-disable-next-line\n                var annotationSettings = this.commandHandler.annotationModule.findAnnotationSettings(node);\n                var annotationMaxHeight = 0;\n                var annotationMaxWidth = 0;\n                var annotationMinHeight = 0;\n                var annotationMinWidth = 0;\n                // eslint-disable-next-line max-len\n                if (annotationSettings.minWidth || annotationSettings.maxWidth || annotationSettings.minHeight || annotationSettings.maxHeight) {\n                    annotationMaxHeight = annotationSettings.maxHeight ? annotationSettings.maxHeight : 2000;\n                    annotationMaxWidth = annotationSettings.maxWidth ? annotationSettings.maxWidth : 2000;\n                    annotationMinHeight = annotationSettings.minHeight ? annotationSettings.minHeight : 0;\n                    annotationMinWidth = annotationSettings.minWidth ? annotationSettings.minWidth : 0;\n                }\n                if (node.vertexPoints.length > 3) {\n                    // eslint-disable-next-line\n                    var sizeObject = this.commandHandler.viewerBase.checkAnnotationWidth(node.vertexPoints);\n                    var width = sizeObject.width;\n                    var height = sizeObject.height;\n                    if (annotationMinHeight || annotationMinWidth || annotationMaxHeight || annotationMaxWidth) {\n                        // eslint-disable-next-line max-len\n                        if ((height > annotationMinHeight && height < annotationMaxHeight) || (width > annotationMinWidth && width < annotationMaxWidth)) {\n                            // eslint-disable-next-line max-len\n                            this.commandHandler.nodePropertyChange(this.prevSource, { vertexPoints: node.vertexPoints, leaderHeight: node.leaderHeight });\n                        }\n                    }\n                    else {\n                        // eslint-disable-next-line max-len\n                        this.commandHandler.nodePropertyChange(this.prevSource, { vertexPoints: node.vertexPoints, leaderHeight: node.leaderHeight });\n                    }\n                }\n                else {\n                    if (annotationMinHeight || annotationMinWidth || annotationMaxHeight || annotationMaxWidth) {\n                        if (node.shapeAnnotationType === 'Line' || node.shapeAnnotationType === 'Distance' || node.shapeAnnotationType === 'LineWidthArrowHead') {\n                            var x = 0;\n                            var y = 0;\n                            if (node.vertexPoints[0].x > node.vertexPoints[1].x) {\n                                x = node.vertexPoints[0].x - node.vertexPoints[1].x;\n                            }\n                            else {\n                                x = node.vertexPoints[1].x - node.vertexPoints[0].x;\n                            }\n                            if (node.vertexPoints[0].y > node.vertexPoints[1].y) {\n                                y = node.vertexPoints[0].y - node.vertexPoints[1].y;\n                            }\n                            else {\n                                y = node.vertexPoints[1].y - node.vertexPoints[0].y;\n                            }\n                            var diff = (x > y) ? x : y;\n                            if (diff < (annotationMaxHeight || annotationMaxWidth) && diff > (annotationMinHeight || annotationMinWidth)) {\n                                // eslint-disable-next-line max-len\n                                this.commandHandler.nodePropertyChange(this.prevSource, { vertexPoints: node.vertexPoints, leaderHeight: node.leaderHeight });\n                            }\n                        }\n                        else {\n                            // eslint-disable-next-line max-len\n                            this.commandHandler.nodePropertyChange(this.prevSource, { vertexPoints: node.vertexPoints, leaderHeight: node.leaderHeight });\n                        }\n                    }\n                    else {\n                        // eslint-disable-next-line max-len\n                        this.commandHandler.nodePropertyChange(this.prevSource, { vertexPoints: node.vertexPoints, leaderHeight: node.leaderHeight });\n                    }\n                }\n                var currentSelctor = args.source.annotationSelectorSettings;\n                this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n                this.commandHandler.select([this.prevSource.id], currentSelctor);\n                this.commandHandler.renderSelector(this.pdfViewerBase.activeElements.activePageID, currentSelctor);\n                // eslint-disable-next-line\n                var newShapeElementObject = {\n                    bounds: {\n                        x: args.source.wrapper.offsetX, y: args.source.wrapper.offsetY,\n                        width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n                    }\n                };\n                if (node.measureType === 'Distance' || node.measureType === 'Perimeter' || node.measureType === 'Area' || node.measureType === 'Volume') {\n                    this.commandHandler.annotation.updateCalibrateValues(this.commandHandler.selectedItems.annotations[0]);\n                    newShapeElementObject.notes = args.source.notes;\n                }\n                if (isLineShapes(args.source)) {\n                    newShapeElementObject.vertexPoints = args.source.vertexPoints;\n                    newShapeElementObject.leaderHeight = args.source.leaderHeight;\n                }\n                // eslint-disable-next-line\n                this.commandHandler.annotation.addAction(this.pageIndex, null, this.prevSource, 'Resize', '', this.redoElement, newShapeElementObject);\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {boolean} - Returns true or false.\n     */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var connector;\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            if (args.source && args.source.annotations) {\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                newValue = {\n                    x: this.currentPosition.x, y: this.currentPosition.y\n                };\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                oldValue = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                connector = args.source.annotations[0];\n            }\n            if (this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                if (!this.helper) {\n                    // eslint-disable-next-line\n                    var cloneShapebject = cloneObject(this.commandHandler.selectedItems.annotations[0]);\n                    cloneShapebject.id = 'diagram_helper';\n                    cloneShapebject.strokeColor = 'red';\n                    cloneShapebject.borderDashArray = '5,5';\n                    cloneShapebject.fillColor = 'transparent';\n                    cloneShapebject.thickness = 2;\n                    cloneShapebject.opacity = 1;\n                    if (cloneShapebject.enableShapeLabel === true) {\n                        cloneShapebject.labelContent = '';\n                    }\n                    this.helper = cloneShapebject = this.commandHandler.add(cloneShapebject);\n                    this.commandHandler.selectedItems.annotations = [cloneShapebject];\n                }\n                var currentSelctor = args.source.annotationSelectorSettings;\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, this.helper, this.currentPosition, this.selectedSegment, args.target, null, currentSelctor);\n                this.commandHandler.renderSelector(this.pdfViewerBase.activeElements.activePageID, currentSelctor);\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Scales the selected objects\n *\n * @hidden\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, base, corner) {\n        var _this = _super.call(this, commandHandler, base, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        _this.corner = corner;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void} - Returns true or false.\n     */\n    ResizeTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n        this.initialPosition = args.position;\n        var node = cloneObject(args.source);\n        this.redoElement = {\n            bounds: {\n                x: node.wrapper.offsetX, y: node.wrapper.offsetY,\n                width: node.wrapper.actualSize.width, height: node.wrapper.actualSize.height\n            }\n            // eslint-disable-next-line\n        };\n        if (isLineShapes(node)) {\n            this.redoElement.vertexPoints = node.vertexPoints;\n            this.redoElement.leaderHeight = node.leaderHeight;\n        }\n        if (node.measureType === 'Radius') {\n            this.redoElement.notes = node.notes;\n        }\n        // eslint-disable-next-line max-len\n        this.prevSource = this.commandHandler.selectedItems.annotations.length > 0 ? this.commandHandler.selectedItems.annotations[0] : this.commandHandler.selectedItems.formFields[0];\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @param {boolean} isPreventHistory - Specified the prevent history value.\n     * @returns {boolean} - Returns true or false.\n     */\n    ResizeTool.prototype.mouseUp = function (args, isPreventHistory) {\n        var object = args.source;\n        var oldObject = cloneObject(args.source);\n        if (this.commandHandler && this.prevSource) {\n            this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n            this.commandHandler.viewerBase.isAnnotationSelect = true;\n            this.commandHandler.viewerBase.isFormFieldSelect = true;\n            this.commandHandler.select([this.prevSource.id], this.prevSource.annotationSelectorSettings);\n            // eslint-disable-next-line max-len\n            var deltaValues = this.updateSize(this.prevSource, this.currentPosition, this.initialPosition, this.corner, this.initialBounds, null, true);\n            this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.initialPosition, this.prevSource, args.info.ctrlKey);\n            if (this.commandHandler.selectedItems && this.commandHandler.selectedItems.annotations &&\n                this.commandHandler.selectedItems.annotations[0] && this.commandHandler.selectedItems.annotations[0].shapeAnnotationType === 'Stamp') {\n                if (this.commandHandler.stampSettings.minHeight || this.commandHandler.stampSettings.minWidth) {\n                    this.commandHandler.select([this.prevSource.id], this.prevSource.annotationSelectorSettings);\n                }\n            }\n            if (this.commandHandler.selectedItems.formFields.length > 0 && (this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'Textbox' || this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'Checkbox'\n                || this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'RadioButton' || this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'InitialField' || this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'SignatureField'\n                || this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'DropdownList' || this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'ListBox' || this.commandHandler.selectedItems.formFields[0].formFieldAnnotationType === 'PasswordField')) {\n                this.commandHandler.formDesignerModule.updateHTMLElement(this.commandHandler.selectedItems.formFields[0]);\n            }\n            this.commandHandler.renderSelector(this.prevPageId, this.prevSource.annotationSelectorSettings);\n            if (this.commandHandler.annotation && args.source.wrapper) {\n                // eslint-disable-next-line\n                var newObject = {\n                    bounds: {\n                        x: args.source.wrapper.offsetX, y: args.source.wrapper.offsetY,\n                        width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n                    }\n                };\n                if (isLineShapes(args.source)) {\n                    newObject.vertexPoints = args.source.vertexPoints;\n                    newObject.leaderHeight = args.source.leaderHeight;\n                }\n                if (this.prevSource.measureType === 'Radius') {\n                    newObject.notes = args.source.notes;\n                    this.commandHandler.annotation.updateCalibrateValues(this.prevSource);\n                }\n                if (this.prevSource.shapeAnnotationType === 'SignatureText') {\n                    var boundsRatio = newObject.bounds.width / oldObject.width;\n                    newObject.fontSize = this.prevSource.wrapper.children[1].style.fontSize * boundsRatio;\n                    if (args.target != null) {\n                        args.target.fontSize = newObject.fontSize;\n                        // eslint-disable-next-line\n                        args.target.wrapper.children[1].style.fontSize = newObject.fontSize;\n                        args.target.wrapper.children[1].horizontalAlignment = 'Center';\n                        args.target.wrapper.children[1].verticalAlignment = 'Center';\n                        args.target.wrapper.children[1].setOffsetWithRespectToBounds(0, 0, 'Absolute');\n                        // eslint-disable-next-line\n                        this.commandHandler.selectedItems.annotations[0].wrapper.children[1].style.fontSize = newObject.fontSize;\n                        this.commandHandler.selectedItems.annotations[0].wrapper.children[1].horizontalAlignment = 'Center';\n                        this.commandHandler.selectedItems.annotations[0].wrapper.children[1].verticalAlignment = 'Center';\n                        this.commandHandler.selectedItems.annotations[0].wrapper.children[1].setOffsetWithRespectToBounds(0, 0, 'Absolute');\n                        this.commandHandler.selectedItems.annotations[0].fontSize = newObject.fontSize;\n                    }\n                }\n                if ((this.prevSource.shapeAnnotationType === 'SignatureText') && this.commandHandler.selectedItems.annotations && this.commandHandler.selectedItems.annotations.length > 0) {\n                    // eslint-disable-next-line max-len\n                    this.commandHandler.nodePropertyChange(this.commandHandler.selectedItems.annotations[0], { fontSize: newObject.fontSize });\n                }\n                // eslint-disable-next-line\n                this.commandHandler.annotation.addAction(this.pageIndex, null, this.prevSource, 'Resize', '', this.redoElement, newObject);\n            }\n            if (args.target && args.target.formFieldAnnotationType) {\n                var node = args.target;\n                // eslint-disable-next-line\n                var field = { value: node.value, fontFamily: node.fontFamily, fontSize: node.fontSize, fontStyle: node.fontStyle,\n                    // eslint-disable-next-line\n                    color: node.color, backgroundColor: node.backgroundColor, alignment: node.alignment, isReadonly: node.isReadonly, visibility: node.visibility,\n                    // eslint-disable-next-line\n                    maxLength: node.maxLength, isRequired: node.isRequired, isPrint: node.isPrint, rotation: node.rotateAngle, tooltip: node.tooltip,\n                    // eslint-disable-next-line\n                    options: node.options, isChecked: node.isChecked, isSelected: node.isSelected };\n                // eslint-disable-next-line max-len\n                var currentPosition = { X: args.source.wrapper.offsetX, Y: args.source.wrapper.offsetY, Width: args.source.wrapper.actualSize.width, Height: args.source.wrapper.actualSize.height };\n                // eslint-disable-next-line max-len\n                var previousPosition = { X: this.initialBounds.x, Y: this.initialBounds.y, Width: this.initialBounds.width, Height: this.initialBounds.height };\n                this.commandHandler.fireFormFieldResizeEvent('formFieldResize', field, node.pageIndex, previousPosition, currentPosition);\n            }\n            if (this.commandHandler.annotation && this.commandHandler.annotation.stampAnnotationModule) {\n                this.commandHandler.annotation.stampAnnotationModule.updateSessionStorage(args.source, this.prevSource.id, 'Resize');\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n        return !this.blocked;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {boolean} - Returns true or false.\n     */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object = args.source;\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        x = x / this.commandHandler.viewerBase.getZoomFactor();\n        y = y / this.commandHandler.viewerBase.getZoomFactor();\n        // eslint-disable-next-line\n        var annotationElement = args.source;\n        // eslint-disable-next-line\n        var size = this.getPoints(x, y);\n        var width = annotationElement.width + size.x;\n        var height = annotationElement.height + size.y;\n        // eslint-disable-next-line\n        var obj = object;\n        if (object && object.annotations) {\n            // eslint-disable-next-line\n            obj = object.annotations[0];\n        }\n        // eslint-disable-next-line\n        var annotationSettings = this.commandHandler.annotationModule ? this.commandHandler.annotationModule.findAnnotationSettings(obj) : {};\n        var annotationMaxHeight = 0;\n        var annotationMaxWidth = 0;\n        var annotationMinHeight = 0;\n        var annotationMinWidth = 0;\n        if (annotationSettings.minWidth || annotationSettings.maxWidth || annotationSettings.minHeight || annotationSettings.maxHeight) {\n            annotationMaxHeight = annotationSettings.maxHeight ? annotationSettings.maxHeight : 2000;\n            annotationMaxWidth = annotationSettings.maxWidth ? annotationSettings.maxWidth : 2000;\n            annotationMinHeight = annotationSettings.minHeight ? annotationSettings.minHeight : 0;\n            annotationMinWidth = annotationSettings.minWidth ? annotationSettings.minWidth : 0;\n        }\n        if (annotationMinHeight || annotationMinWidth || annotationMaxHeight || annotationMaxWidth) {\n            // eslint-disable-next-line max-len\n            if ((height >= annotationMinHeight && height <= annotationMaxHeight) && (width >= annotationMinWidth && width <= annotationMaxWidth)) {\n                // eslint-disable-next-line\n                x = x;\n                // eslint-disable-next-line\n                y = y;\n            }\n            else {\n                if (height < annotationMinHeight || height > annotationMaxHeight) {\n                    if (height < annotationMinHeight) {\n                        y = annotationMinHeight - annotationElement.height;\n                    }\n                    else {\n                        y = annotationMaxHeight - annotationElement.height;\n                    }\n                }\n                if (width < annotationMinWidth || width > annotationMaxWidth) {\n                    if (width < annotationMinWidth) {\n                        x = annotationMinWidth - annotationElement.width;\n                    }\n                    else {\n                        x = annotationMaxWidth - annotationElement.width;\n                    }\n                }\n            }\n        }\n        var changes = { x: x, y: y };\n        if (this.currentElement.wrapper) {\n            changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        }\n        changes = this.getChanges(changes);\n        this.commandHandler.renderSelector(this.prevPageId, this.prevSource.annotationSelectorSettings);\n        if (!this.helper) {\n            // eslint-disable-next-line\n            var cobject = this.commandHandler.selectedItems.annotations.length > 0 ? cloneObject(this.commandHandler.selectedItems.annotations[0]) : cloneObject(this.commandHandler.selectedItems.formFields[0]);\n            cobject.id = 'diagram_helper';\n            if (cobject.shapeAnnotationType === 'Stamp') {\n                cobject.strokeColor = '';\n                cobject.borderDashArray = '';\n                cobject.fillColor = 'transparent';\n                cobject.stampFillColor = 'transparent';\n                cobject.data = '';\n            }\n            else if (cobject.shapeAnnotationType === 'FreeText') {\n                cobject.strokeColor = 'blue';\n                cobject.fillColor = 'transparent';\n                cobject.thickness = 1;\n                cobject.opacity = 1;\n                cobject.dynamicText = '';\n            }\n            else {\n                // eslint-disable-next-line max-len\n                cobject.bounds = this.commandHandler.selectedItems.annotations.length > 0 ? this.commandHandler.selectedItems.annotations[0].wrapper.bounds : this.commandHandler.selectedItems.formFields[0].wrapper.bounds;\n                cobject.strokeColor = 'red';\n                cobject.borderDashArray = '5,5';\n                cobject.fillColor = 'transparent';\n                cobject.thickness = 2;\n                cobject.opacity = 1;\n            }\n            if (cobject.enableShapeLabel === true) {\n                cobject.labelContent = '';\n            }\n            if (cobject.shapeAnnotationType === 'SignatureText') {\n                cobject.fillColor = 'transparent';\n                cobject.thickness = 1;\n                cobject.opacity = 1;\n                cobject.data = '';\n            }\n            this.helper = cobject = this.commandHandler.add(cobject);\n            if (this.commandHandler.selectedItems.annotations.length > 0) {\n                this.commandHandler.selectedItems.annotations = [cobject];\n            }\n            else {\n                this.commandHandler.selectedItems.formFields = [cobject];\n            }\n        }\n        var deltaValues = this.updateSize(this.helper, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        // eslint-disable-next-line max-len\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, this.helper, args.info.ctrlKey));\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (pdfAnnotationBaseModel) {\n        return 'W:' + Math.round(pdfAnnotationBaseModel.wrapper.bounds.width) + ' ' + 'H:' + Math.round(pdfAnnotationBaseModel.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    ResizeTool.prototype.getPoints = function (x, y) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: x, y: 0 };\n            case 'ResizeSouthEast':\n                return { x: x, y: y };\n            case 'ResizeSouth':\n                return { x: 0, y: y };\n            case 'ResizeNorth':\n                return { x: 0, y: -y };\n            case 'ResizeNorthEast':\n                return { x: x, y: -y };\n            case 'ResizeNorthWest':\n                return { x: -x, y: -y };\n            case 'ResizeWest':\n                return { x: -x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -x, y: y };\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     * Aspect ratio used to resize the width or height based on resizing the height or width.\n     *\n     * @param {number} deltaWidth - Specified the delta width.\n     * @param {number} deltaHeight - Specified the delta height.\n     * @param {string} corner - Specified the corner value.\n     * @param {PointModel} startPoint - Specified the start point of the annotation.\n     * @param {PointModel} endPoint - Specified the end point of the annotation.\n     * @param {SelectorModel | PdfAnnotationBaseModel} source - Specified the annotation object.\n     * @param {boolean} isCtrlKeyPressed - becomes true when ctrl Key is pressed.\n     * @returns {boolean} - Returns true or false.\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source, isCtrlKeyPressed) {\n        // eslint-disable-next-line\n        var annotationSettings = this.commandHandler.annotationModule ? this.commandHandler.annotationModule.findAnnotationSettings(source) : {};\n        var annotationMaxHeight = 0;\n        var annotationMaxWidth = 0;\n        var annotationMinHeight = 0;\n        var annotationMinWidth = 0;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        x = x / this.commandHandler.viewerBase.getZoomFactor();\n        y = y / this.commandHandler.viewerBase.getZoomFactor();\n        // eslint-disable-next-line\n        var annotationElement = source;\n        // eslint-disable-next-line\n        var size = this.getPoints(x, y);\n        var width = annotationElement.bounds.width + size.x;\n        var height = annotationElement.bounds.height + size.y;\n        if (annotationSettings.minWidth || annotationSettings.maxWidth || annotationSettings.minHeight || annotationSettings.maxHeight) {\n            annotationMaxHeight = annotationSettings.maxHeight ? annotationSettings.maxHeight : 2000;\n            annotationMaxWidth = annotationSettings.maxWidth ? annotationSettings.maxWidth : 2000;\n            annotationMinHeight = annotationSettings.minHeight ? annotationSettings.minHeight : 0;\n            annotationMinWidth = annotationSettings.minWidth ? annotationSettings.minWidth : 0;\n        }\n        if (source instanceof Selector && source.annotations.length === 1 &&\n            (source.annotations[0].shapeAnnotationType === 'Perimeter' || source.annotations[0].shapeAnnotationType === 'Radius' || source.shapeAnnotationType === 'Stamp')) {\n            if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        else if (source.shapeAnnotationType === 'Image' || (source.shapeAnnotationType === 'HandWrittenSignature' || source.shapeAnnotationType === 'SignatureText' || source.shapeAnnotationType === 'SignatureImage')) {\n            if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                if (isCtrlKeyPressed) {\n                    if (width >= annotationMaxWidth && height < annotationMaxHeight) {\n                        deltaHeight = Math.max(deltaHeight, deltaWidth);\n                    }\n                    if (height >= annotationMaxHeight && width < annotationMaxWidth) {\n                        deltaWidth = Math.max(deltaHeight, deltaWidth);\n                    }\n                    if (width < annotationMaxWidth && height < annotationMaxHeight) {\n                        deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n                    }\n                }\n            }\n            if (!isCtrlKeyPressed) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n        }\n        else {\n            if (source.shapeAnnotationType === 'Perimeter' || source.shapeAnnotationType === 'Radius'\n                || source.shapeAnnotationType === 'Stamp') {\n                if (source.shapeAnnotationType === 'Stamp') {\n                    if (!annotationMaxHeight && !deltaHeight) {\n                        deltaHeight = Math.max(deltaHeight === 1 ? 0 : deltaHeight);\n                    }\n                    if (!annotationMaxWidth && !deltaWidth) {\n                        deltaWidth = Math.max(deltaWidth === 1 ? 0 : deltaWidth);\n                    }\n                }\n                else {\n                    if (!annotationMaxHeight || !annotationMaxWidth) {\n                        if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                            deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                        }\n                    }\n                }\n            }\n        }\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n *\n * @hidden\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, base, sourceObject) {\n        var _this = _super.call(this, commandHandler, base) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        if (!isNaN(this.pdfViewerBase.activeElements.activePageID) && event.target.className != 'e-pv-page-container') {\n            _super.prototype.mouseDown.call(this, args);\n            this.inAction = true;\n            var node = { bounds: { x: 100, y: 300, width: 100, height: 100 }, pageIndex: 0, strokeColor: 'red', thickness: 3 };\n            node.id = randomId();\n            this.sourceObject.pageIndex = node.pageIndex = this.pdfViewerBase.activeElements.activePageID || 0;\n            this.sourceObject.enableShapeLabel = this.commandHandler.enableShapeLabel;\n            this.pdfViewerBase.updateFreeTextProperties(this.sourceObject);\n            this.isFormDesign = false;\n            // eslint-disable-next-line\n            var formFieldElement = document.getElementById('FormField_helper_html_element');\n            if (formFieldElement) {\n                formFieldElement.remove();\n            }\n            // eslint-disable-next-line\n            this.commandHandler.drawingObject = this.drawingObject = this.commandHandler.add(this.sourceObject || node);\n            if (this.drawingObject.formFieldAnnotationType === 'Textbox' || this.drawingObject.formFieldAnnotationType === 'SignatureField' || this.drawingObject.formFieldAnnotationType === 'InitialField' ||\n                this.drawingObject.formFieldAnnotationType === 'Checkbox' || this.drawingObject.formFieldAnnotationType === 'ListBox' || this.drawingObject.formFieldAnnotationType === 'RadioButton' ||\n                this.drawingObject.formFieldAnnotationType === 'DropdownList' || this.drawingObject.formFieldAnnotationType === 'PasswordField') {\n                this.inAction = false;\n                // eslint-disable-next-line\n                this.drawingObject.pageNumber = this.pdfViewerBase.getActivePage(true);\n                // eslint-disable-next-line\n                var bounds = this.commandHandler.formDesignerModule.updateFormFieldInitialSize(this.drawingObject.wrapper.children[0], this.drawingObject.formFieldAnnotationType);\n                var pageWidth = this.pdfViewerBase.pageContainer.firstElementChild.clientWidth - bounds.width;\n                var pageHeight = this.pdfViewerBase.pageContainer.firstElementChild.clientHeight - bounds.height;\n                // eslint-disable-next-line\n                var left = this.pdfViewerBase.pageContainer.firstElementChild.offsetLeft;\n                var offsetX = void 0;\n                // eslint-disable-next-line\n                if (this.currentPosition.y >= pageHeight && event.target && event.target.parentElement && event.target.parentElement.classList.contains('foreign-object')) {\n                    // eslint-disable-next-line\n                    var targetParentRect = event.path[3].getBoundingClientRect();\n                    // eslint-disable-next-line\n                    offsetX = event.clientX - targetParentRect.left;\n                }\n                else {\n                    offsetX = this.currentPosition.x - left;\n                }\n                // eslint-disable-next-line\n                var rect = void 0;\n                if (this.currentPosition.x >= pageWidth && this.currentPosition.y >= pageHeight) {\n                    // eslint-disable-next-line max-len\n                    rect = { x: pageWidth, y: pageHeight, width: this.drawingObject.wrapper.children[0].width, height: this.drawingObject.wrapper.children[0].height };\n                }\n                else if (this.currentPosition.x >= pageWidth) {\n                    // eslint-disable-next-line max-len\n                    rect = { x: pageWidth, y: this.currentPosition.y, width: this.drawingObject.wrapper.children[0].width, height: this.drawingObject.wrapper.children[0].height };\n                }\n                else if (this.currentPosition.y >= pageHeight) {\n                    // eslint-disable-next-line max-len\n                    rect = { x: offsetX, y: pageHeight, width: this.drawingObject.wrapper.children[0].width, height: this.drawingObject.wrapper.children[0].height };\n                }\n                else {\n                    // eslint-disable-next-line max-len\n                    rect = { x: this.currentPosition.x, y: this.currentPosition.y, width: this.drawingObject.wrapper.children[0].width, height: this.drawingObject.wrapper.children[0].height };\n                }\n                this.updateNodeDimension(this.drawingObject, rect);\n                this.drawingObject.bounds.x = this.drawingObject.bounds.x - (this.drawingObject.bounds.width / 2);\n                this.drawingObject.bounds.y = this.drawingObject.bounds.y - (this.drawingObject.bounds.height / 2);\n                this.commandHandler.formFieldCollection.push(this.drawingObject);\n                // eslint-disable-next-line max-len\n                var formField = {\n                    id: this.drawingObject.id, name: this.drawingObject.name, value: this.drawingObject.value,\n                    // eslint-disable-next-line max-len\n                    type: this.drawingObject.formFieldAnnotationType, isReadOnly: this.drawingObject.isReadonly, fontFamily: this.drawingObject.fontFamily,\n                    // eslint-disable-next-line max-len\n                    fontSize: this.drawingObject.fontSize, fontStyle: this.drawingObject.fontStyle, color: this.drawingObject.color, backgroundColor: this.drawingObject.backgroundColor,\n                    // eslint-disable-next-line max-len\n                    alignment: this.drawingObject.alignment, visibility: this.drawingObject.visibility, maxLength: this.drawingObject.maxLength, isRequired: this.drawingObject.isRequired,\n                    // eslint-disable-next-line max-len\n                    isPrint: this.drawingObject.isPrint, isSelected: this.drawingObject.isSelected, isChecked: this.drawingObject.isChecked, tooltip: this.drawingObject.tooltip, bounds: this.drawingObject.bounds, thickness: this.drawingObject.thickness, borderColor: this.drawingObject.borderColor,\n                    signatureIndicatorSettings: this.drawingObject.signatureIndicatorSettings\n                };\n                this.commandHandler.formFieldCollections.push(formField);\n                // eslint-disable-next-line max-len\n                this.commandHandler.formDesignerModule.drawHTMLContent(this.drawingObject.formFieldAnnotationType, this.drawingObject.wrapper.children[0], this.drawingObject, this.drawingObject.pageIndex, this.commandHandler);\n                this.commandHandler.select([this.commandHandler.drawingObject.id], this.commandHandler.annotationSelectorSettings);\n                if (this.commandHandler.annotation) {\n                    this.commandHandler.annotation.addAction(this.pdfViewerBase.getActivePage(true), null, this.drawingObject, 'Addition', '', this.drawingObject, this.drawingObject);\n                }\n                this.endAction();\n                this.pdfViewerBase.tool = null;\n                this.pdfViewerBase.action = 'Select';\n                this.drawingObject = null;\n                this.pdfViewerBase.isMouseDown = false;\n                this.pdfViewerBase.pdfViewer.drawingObject = null;\n                this.isFormDesign = true;\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {boolean} - Returns true or false.\n     */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            this.dragging = true;\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.updateNodeDimension(this.drawingObject, rect);\n            if (this.drawingObject.shapeAnnotationType === 'Radius') {\n                this.updateRadiusLinePosition(this.drawingObject.wrapper.children[1], this.drawingObject);\n            }\n        }\n        return true;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingObject && this.dragging) {\n            this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n            this.commandHandler.select([this.drawingObject.id], this.commandHandler.annotationSelectorSettings);\n            this.commandHandler.annotation.updateCalibrateValues(this.drawingObject, true);\n            if (this.commandHandler && !this.isFormDesign) {\n                // eslint-disable-next-line\n                this.commandHandler.annotation.addAction(this.pageIndex, null, this.drawingObject, 'Addition', '', this.drawingObject, this.drawingObject);\n            }\n            this.drawingObject = null;\n            this.dragging = false;\n            _super.prototype.mouseUp.call(this, args);\n            this.inAction = false;\n        }\n        else {\n            _super.prototype.mouseUp.call(this, args);\n        }\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**\n     * @private\n     * @param {PdfAnnotationBaseModel} obj - Specified the annotation object.\n     * @param {Rect} rect - Specified the annotation rect element.\n     * @returns {void}\n     */\n    NodeDrawingTool.prototype.updateNodeDimension = function (obj, rect) {\n        var zoom = this.commandHandler.viewerBase.getZoomFactor();\n        obj.bounds.x = (rect.x / zoom) + rect.width / zoom;\n        obj.bounds.y = (rect.y / zoom) + rect.height / zoom;\n        obj.bounds.width = rect.width / zoom;\n        obj.bounds.height = rect.height / zoom;\n        // eslint-disable-next-line\n        var annotationSettings = this.commandHandler.annotationModule ? this.commandHandler.annotationModule.findAnnotationSettings(obj) : {};\n        var annotationMaxHeight = 0;\n        var annotationMaxWidth = 0;\n        if (annotationSettings.maxWidth || annotationSettings.maxHeight) {\n            annotationMaxHeight = annotationSettings.maxHeight ? annotationSettings.maxHeight : 2000;\n            annotationMaxWidth = annotationSettings.maxWidth ? annotationSettings.maxWidth : 2000;\n            if (obj.bounds.width > annotationMaxWidth) {\n                obj.bounds.width = annotationMaxWidth;\n            }\n            if (obj.bounds.height > annotationMaxHeight) {\n                obj.bounds.height = annotationMaxHeight;\n            }\n            if (obj.bounds.height <= annotationMaxHeight && obj.bounds.width <= annotationMaxWidth) {\n                this.commandHandler.nodePropertyChange(obj, { bounds: obj.bounds });\n            }\n        }\n        else {\n            this.commandHandler.nodePropertyChange(obj, { bounds: obj.bounds });\n        }\n    };\n    /**\n     * @private\n     * @param {DrawingElement} obj - Specified the drawing element.\n     * @param {PdfAnnotationBaseModel} node - Specified the annotation object.\n     * @returns {void}\n     */\n    NodeDrawingTool.prototype.updateRadiusLinePosition = function (obj, node) {\n        var trasPoint = { x: node.bounds.x + (node.bounds.width / 4), y: node.bounds.y };\n        var center = { x: (node.bounds.x + (node.bounds.width / 2)), y: (node.bounds.y + (node.bounds.height / 2)) };\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, node.rotateAngle, center.x, center.y);\n        var rotatedPoint = transformPointByMatrix(matrix, trasPoint);\n        var newPoint1 = { x: rotatedPoint.x, y: rotatedPoint.y };\n        obj.offsetX = newPoint1.x;\n        obj.offsetY = newPoint1.y;\n        obj.width = node.bounds.width / 2;\n        // eslint-disable-next-line\n        var annotationSettings = this.commandHandler.annotationModule.findAnnotationSettings(node);\n        var annotationMaxWidth = 0;\n        if (annotationSettings.maxWidth) {\n            annotationMaxWidth = annotationSettings.maxWidth ? annotationSettings.maxWidth : 2000;\n            if (node.bounds.width > annotationMaxWidth) {\n                node.bounds.width = annotationMaxWidth;\n                obj.width = node.bounds.width / 2;\n            }\n        }\n        this.commandHandler.renderDrawing(undefined, node.pageIndex);\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n *\n * @hidden\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler, base, action) {\n        var _this = _super.call(this, commandHandler, base) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var nodeAnnotElement = {\n                bounds: { x: this.currentPosition.x, y: this.currentPosition.y, width: 5, height: 5 },\n                // eslint-disable-next-line max-len\n                vertexPoints: [{ x: this.startPoint.x / this.pdfViewerBase.getZoomFactor(), y: this.startPoint.y / this.pdfViewerBase.getZoomFactor() }, { x: this.currentPosition.x / this.pdfViewerBase.getZoomFactor(), y: this.currentPosition.y / this.pdfViewerBase.getZoomFactor() }],\n                shapeAnnotationType: 'Line', fillColor: this.commandHandler.drawingObject.fillColor,\n                strokeColor: this.commandHandler.drawingObject.strokeColor, pageIndex: this.pdfViewerBase.activeElements.activePageID,\n                // eslint-disable-next-line max-len\n                notes: this.commandHandler.drawingObject.notes, thickness: this.commandHandler.drawingObject.thickness, author: this.commandHandler.drawingObject.author,\n                subject: this.commandHandler.drawingObject.subject, borderDashArray: this.commandHandler.drawingObject.borderDashArray,\n                modifiedDate: this.commandHandler.drawingObject.modifiedDate, borderStyle: this.commandHandler.drawingObject.borderStyle,\n                // eslint-disable-next-line max-len\n                measureType: this.commandHandler.drawingObject.measureType, enableShapeLabel: this.commandHandler.enableShapeLabel, opacity: this.commandHandler.drawingObject.opacity\n            };\n            this.pdfViewerBase.updateFreeTextProperties(nodeAnnotElement);\n            // eslint-disable-next-line\n            this.drawingObject = this.commandHandler.add(nodeAnnotElement);\n        }\n        else {\n            var pt = void 0;\n            var obj = (this.drawingObject);\n            pt = obj.vertexPoints[obj.vertexPoints.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            var lastPoint = this.drawingObject.vertexPoints[this.drawingObject.vertexPoints.length - 1];\n            if (!(lastPoint.x === pt.x && lastPoint.x === pt.y)) {\n                this.drawingObject.vertexPoints.push(pt);\n            }\n            this.commandHandler.nodePropertyChange(obj, { vertexPoints: obj.vertexPoints });\n        }\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {boolean} - Returns true or false.\n     */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            this.dragging = true;\n            var obj = (this.drawingObject);\n            if (this.drawingObject && this.currentPosition) {\n                obj.vertexPoints[obj.vertexPoints.length - 1].x = this.currentPosition.x / this.pdfViewerBase.getZoomFactor();\n                obj.vertexPoints[obj.vertexPoints.length - 1].y = this.currentPosition.y / this.pdfViewerBase.getZoomFactor();\n                this.commandHandler.nodePropertyChange(obj, { vertexPoints: obj.vertexPoints });\n            }\n            if (obj.measureType === 'Perimeter') {\n                updatePerimeterLabel(obj, obj.vertexPoints, this.commandHandler.annotation.measureAnnotationModule);\n            }\n        }\n        return true;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @param {boolean} isDoubleClineck - Specified the double click event or not.\n     * @param {boolean} isMouseLeave - Specified the mouse leave event or not.\n     * @returns {void}\n     */\n    PolygonDrawingTool.prototype.mouseUp = function (args, isDoubleClineck, isMouseLeave) {\n        _super.prototype.mouseMove.call(this, args);\n        // eslint-disable-next-line\n        var currentSelector;\n        if (args.source && args.annotationSelectorSettings !== null) {\n            currentSelector = args.source.annotationSelectorSettings;\n        }\n        if (this.drawingObject) {\n            // eslint-disable-next-line max-len\n            var bounds = new Rect(this.drawingObject.vertexPoints[this.drawingObject.vertexPoints.length - 1].x - 20, this.drawingObject.vertexPoints[this.drawingObject.vertexPoints.length - 1].y - 20, 40, 40);\n            var point = { x: this.drawingObject.vertexPoints[0].x, y: this.drawingObject.vertexPoints[0].y };\n            if ((bounds.containsPoint(point) || isDoubleClineck) && this.dragging) {\n                if (this.inAction) {\n                    this.inAction = false;\n                    if (this.drawingObject) {\n                        if (!isMouseLeave) {\n                            if (this.drawingObject.vertexPoints.length > 2) {\n                                this.drawingObject.vertexPoints.splice(this.drawingObject.vertexPoints.length - 1, 1);\n                            }\n                        }\n                        if (this.action === 'Polygon') {\n                            if (!isMouseLeave) {\n                                // eslint-disable-next-line max-len\n                                this.drawingObject.vertexPoints[this.drawingObject.vertexPoints.length - 1] = this.drawingObject.vertexPoints[0];\n                            }\n                            else {\n                                // eslint-disable-next-line max-len\n                                this.drawingObject.vertexPoints[this.drawingObject.vertexPoints.length] = this.drawingObject.vertexPoints[0];\n                            }\n                            this.commandHandler.nodePropertyChange(this.drawingObject, { vertexPoints: this.drawingObject.vertexPoints });\n                            var cobject = cloneObject(this.drawingObject);\n                            cobject.shapeAnnotationType = 'Polygon';\n                            cobject.bounds.width = cobject.wrapper.actualSize.width;\n                            cobject.bounds.height = cobject.wrapper.actualSize.height;\n                            cobject.bounds.x = this.drawingObject.wrapper.bounds.x;\n                            cobject.bounds.y = this.drawingObject.wrapper.bounds.y;\n                            this.commandHandler.add(cobject);\n                            this.commandHandler.remove(this.drawingObject);\n                            this.commandHandler.select([cobject.id], currentSelector);\n                            var drawingObject = this.commandHandler.selectedItems.annotations[0];\n                            if (drawingObject) {\n                                if (this.commandHandler.enableShapeAnnotation && (isNullOrUndefined(drawingObject.measureType) || drawingObject.measureType === '')) {\n                                    // eslint-disable-next-line max-len\n                                    this.commandHandler.annotation.shapeAnnotationModule.renderShapeAnnotations(drawingObject, drawingObject.pageIndex);\n                                }\n                                if (this.commandHandler.enableMeasureAnnotation && (drawingObject.measureType === 'Area' || drawingObject.measureType === 'Volume')) {\n                                    if (drawingObject.measureType === 'Area') {\n                                        // eslint-disable-next-line max-len\n                                        drawingObject.notes = this.commandHandler.annotation.measureAnnotationModule.calculateArea(drawingObject.vertexPoints);\n                                        // eslint-disable-next-line max-len\n                                        this.commandHandler.annotation.stickyNotesAnnotationModule.addTextToComments(drawingObject.annotName, drawingObject.notes);\n                                    }\n                                    else if (drawingObject.measureType === 'Volume') {\n                                        // eslint-disable-next-line max-len\n                                        drawingObject.notes = this.commandHandler.annotation.measureAnnotationModule.calculateVolume(drawingObject.vertexPoints);\n                                        // eslint-disable-next-line max-len\n                                        this.commandHandler.annotation.stickyNotesAnnotationModule.addTextToComments(drawingObject.annotName, drawingObject.notes);\n                                    }\n                                    if (drawingObject.enableShapeLabel) {\n                                        drawingObject.labelContent = drawingObject.notes;\n                                        // eslint-disable-next-line max-len\n                                        this.commandHandler.nodePropertyChange(drawingObject, { vertexPoints: drawingObject.vertexPoints, notes: drawingObject.notes });\n                                    }\n                                    // eslint-disable-next-line max-len\n                                    this.commandHandler.annotation.measureAnnotationModule.renderMeasureShapeAnnotations(drawingObject, drawingObject.pageIndex);\n                                }\n                            }\n                        }\n                        else {\n                            if (!isMouseLeave) {\n                                if (isDoubleClineck) {\n                                    this.drawingObject.vertexPoints.splice(this.drawingObject.vertexPoints.length - 1, 1);\n                                }\n                            }\n                            this.commandHandler.nodePropertyChange(this.drawingObject, {\n                                // eslint-disable-next-line max-len\n                                vertexPoints: this.drawingObject.vertexPoints, sourceDecoraterShapes: this.commandHandler.drawingObject.sourceDecoraterShapes,\n                                taregetDecoraterShapes: this.commandHandler.drawingObject.taregetDecoraterShapes\n                            });\n                            this.commandHandler.select([this.drawingObject.id], currentSelector);\n                            if (this.commandHandler.enableMeasureAnnotation && this.drawingObject.measureType === 'Perimeter') {\n                                this.commandHandler.renderDrawing(null, this.drawingObject.pageIndex);\n                                // eslint-disable-next-line max-len\n                                this.drawingObject.notes = this.commandHandler.annotation.measureAnnotationModule.calculatePerimeter(this.drawingObject);\n                                if (this.drawingObject.enableShapeLabel) {\n                                    this.drawingObject.labelContent = this.drawingObject.notes;\n                                    // eslint-disable-next-line max-len\n                                    this.commandHandler.nodePropertyChange(this.drawingObject, { vertexPoints: this.drawingObject.vertexPoints, notes: this.drawingObject.notes });\n                                }\n                                // eslint-disable-next-line max-len\n                                this.commandHandler.annotation.stickyNotesAnnotationModule.addTextToComments(this.drawingObject.annotName, this.drawingObject.notes);\n                                // eslint-disable-next-line max-len\n                                this.commandHandler.annotation.measureAnnotationModule.renderMeasureShapeAnnotations(this.drawingObject, this.drawingObject.pageIndex);\n                            }\n                        }\n                        var annotationObject = this.commandHandler.selectedItems.annotations[0];\n                        // eslint-disable-next-line\n                        this.commandHandler.annotation.addAction(this.pageIndex, null, annotationObject, 'Addition', '', annotationObject, annotationObject);\n                        this.drawingObject = null;\n                    }\n                }\n                this.endAction();\n            }\n            else if (this.inAction && !this.dragging) {\n                this.commandHandler.remove(this.drawingObject);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    PolygonDrawingTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args, true, true);\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n        this.commandHandler.tool = '';\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Helps to edit the selected connectors\n *\n * @hidden\n */\nvar LineTool = /** @class */ (function (_super) {\n    __extends(LineTool, _super);\n    function LineTool(commandHandler, base, endPoint, drawingObject) {\n        var _this = _super.call(this, commandHandler, base, true) || this;\n        _this.endPoint = endPoint;\n        _this.drawingObject = drawingObject;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    LineTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        _super.prototype.mouseDown.call(this, args);\n        var oldPointValue;\n        var connectorsShape;\n        if (args.source && args.source.annotations) {\n            oldPointValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            connectorsShape = this.drawingObject;\n        }\n        this.initialPosition = args.position;\n        this.prevSource = this.drawingObject;\n        this.currentPosition = args.position;\n        if (!this.drawingObject) {\n            var measureModule = this.commandHandler.annotation.measureAnnotationModule;\n            var annotationNode = {\n                // eslint-disable-next-line max-len\n                vertexPoints: [{ x: this.startPosition.x / this.pdfViewerBase.getZoomFactor(), y: this.startPosition.y / this.pdfViewerBase.getZoomFactor() }, { x: this.currentPosition.x / this.pdfViewerBase.getZoomFactor(), y: this.currentPosition.y / this.pdfViewerBase.getZoomFactor() }],\n                bounds: { x: this.currentPosition.x, y: this.currentPosition.y, width: 5, height: 5 },\n                sourceDecoraterShapes: this.commandHandler.drawingObject.sourceDecoraterShapes,\n                taregetDecoraterShapes: this.commandHandler.drawingObject.taregetDecoraterShapes, measureType: 'Distance',\n                // eslint-disable-next-line max-len\n                fillColor: this.commandHandler.drawingObject.fillColor, notes: this.commandHandler.drawingObject.notes, strokeColor: this.commandHandler.drawingObject.strokeColor,\n                // eslint-disable-next-line max-len\n                opacity: this.commandHandler.drawingObject.opacity, thickness: this.commandHandler.drawingObject.thickness, borderDashArray: this.commandHandler.drawingObject.borderDashArray,\n                shapeAnnotationType: 'Distance', pageIndex: this.pdfViewerBase.activeElements.activePageID,\n                author: this.commandHandler.drawingObject.author, subject: this.commandHandler.drawingObject.subject,\n                enableShapeLabel: this.commandHandler.enableShapeLabel, leaderHeight: measureModule.leaderLength\n            };\n            this.pdfViewerBase.updateFreeTextProperties(annotationNode);\n            // eslint-disable-next-line\n            this.drawingObject = this.commandHandler.add(annotationNode);\n        }\n        else if (!this.dragging) {\n            var nodeAnnot = {\n                bounds: { x: this.currentPosition.x, y: this.currentPosition.y, width: 5, height: 5 },\n                // eslint-disable-next-line max-len\n                vertexPoints: [{ x: this.startPosition.x / this.pdfViewerBase.getZoomFactor(), y: this.startPosition.y / this.pdfViewerBase.getZoomFactor() }, { x: this.currentPosition.x / this.pdfViewerBase.getZoomFactor(), y: this.currentPosition.y / this.pdfViewerBase.getZoomFactor() }],\n                // eslint-disable-next-line max-len\n                shapeAnnotationType: this.drawingObject.shapeAnnotationType, sourceDecoraterShapes: this.drawingObject.sourceDecoraterShapes,\n                taregetDecoraterShapes: this.drawingObject.taregetDecoraterShapes, fillColor: this.drawingObject.fillColor,\n                strokeColor: this.drawingObject.strokeColor, pageIndex: this.pdfViewerBase.activeElements.activePageID,\n                // eslint-disable-next-line max-len\n                opacity: this.drawingObject.opacity || 1, borderDashArray: this.drawingObject.borderDashArray, thickness: this.drawingObject.thickness,\n                modifiedDate: this.drawingObject.modifiedDate, author: this.drawingObject.author, subject: this.drawingObject.subject,\n                lineHeadEnd: this.drawingObject.lineHeadEnd, lineHeadStart: this.drawingObject.lineHeadStart,\n                measureType: this.commandHandler.drawingObject.measureType, enableShapeLabel: this.commandHandler.enableShapeLabel\n            };\n            this.pdfViewerBase.updateFreeTextProperties(nodeAnnot);\n            // eslint-disable-next-line\n            this.drawingObject = this.commandHandler.add(nodeAnnot);\n        }\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    LineTool.prototype.mouseUp = function (args) {\n        if (this.dragging) {\n            _super.prototype.mouseMove.call(this, args);\n            if (this.commandHandler) {\n                // eslint-disable-next-line\n                var currentSelector = void 0;\n                if (args.source && args.annotationSelectorSettings !== null) {\n                    currentSelector = args.source.annotationSelectorSettings;\n                }\n                else {\n                    currentSelector = '';\n                }\n                // eslint-disable-next-line\n                var node = this.drawingObject;\n                this.commandHandler.nodePropertyChange(node, { vertexPoints: node.vertexPoints, leaderHeight: node.leaderHeight });\n                this.commandHandler.clearSelection(this.pdfViewerBase.activeElements.activePageID);\n                this.commandHandler.select([node.id], currentSelector);\n                this.commandHandler.renderSelector(this.pdfViewerBase.activeElements.activePageID, currentSelector);\n            }\n            if (this.endPoint && this.endPoint.indexOf('ConnectorSegmentPoint') > -1 && this.dragging) {\n                this.commandHandler.annotation.updateCalibrateValues(this.drawingObject);\n                // eslint-disable-next-line\n                this.commandHandler.annotation.addAction(this.pageIndex, null, this.drawingObject, 'Addition', '', this.drawingObject, this.drawingObject);\n                this.drawingObject = null;\n                this.dragging = false;\n                _super.prototype.mouseUp.call(this, args);\n            }\n            if (this.drawingObject) {\n                this.endPoint = 'ConnectorSegmentPoint_1';\n            }\n        }\n        else {\n            if (this.drawingObject) {\n                this.commandHandler.remove(this.drawingObject);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {boolean} - Returns true or false.\n     */\n    LineTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            this.currentPosition = args.position;\n            this.dragging = true;\n            if (this.currentPosition && this.prevPosition) {\n                var diffX = this.currentPosition.x - this.prevPosition.x;\n                var diffY = this.currentPosition.y - this.prevPosition.y;\n                // eslint-disable-next-line\n                var currentSelector = void 0;\n                if (args.source && args.annotationSelectorSettings !== null) {\n                    currentSelector = args.source.annotationSelectorSettings;\n                }\n                else {\n                    currentSelector = '';\n                }\n                // eslint-disable-next-line max-len\n                if (this.inAction && this.commandHandler && this.drawingObject && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                    // eslint-disable-next-line max-len\n                    this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, this.drawingObject, this.currentPosition, this.selectedSegment, args.target, null, currentSelector);\n                    this.commandHandler.renderSelector(this.pdfViewerBase.activeElements.activePageID, currentSelector);\n                }\n            }\n            this.prevPosition = this.currentPosition;\n        }\n        return !this.blocked;\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    LineTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    LineTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return LineTool;\n}(ToolBase));\nexport { LineTool };\n/**\n * Rotates the selected objects\n *\n * @hidden\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler, base) {\n        return _super.call(this, commandHandler, base, true) || this;\n    }\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    RotateTool.prototype.mouseDown = function (args) {\n        var nodeMouseDown = cloneObject(args.source);\n        this.undoElement = {\n            bounds: {\n                x: nodeMouseDown.wrapper.offsetX, y: nodeMouseDown.wrapper.offsetY,\n                width: nodeMouseDown.wrapper.actualSize.width, height: nodeMouseDown.wrapper.actualSize.height\n            }, rotateAngle: nodeMouseDown.rotateAngle\n            // eslint-disable-next-line\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    RotateTool.prototype.mouseUp = function (args) {\n        var object = args.source;\n        // eslint-disable-next-line\n        var newShapeObject;\n        if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n            // eslint-disable-next-line\n            var currentSelector = args.source.annotations[0].annotationSelectorSettings;\n            this.commandHandler.renderSelector(this.pdfViewerBase.activeElements.activePageID, currentSelector);\n            newShapeObject = {\n                bounds: {\n                    x: args.source.wrapper.offsetX, y: args.source.wrapper.offsetY,\n                    width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n                }, rotateAngle: args.source.wrapper.rotateAngle\n            };\n        }\n        // eslint-disable-next-line\n        this.commandHandler.annotation.addAction(this.pageIndex, null, args.source, 'Rotate', '', this.undoElement, newShapeObject);\n        this.commandHandler.annotation.stampAnnotationModule.updateSessionStorage(args.source, null, 'Rotate');\n        this.commandHandler.annotation.stickyNotesAnnotationModule.updateStickyNotes(args.source, null);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {boolean} - Returns true or false.\n     */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object = args.source;\n        // eslint-disable-next-line\n        var currentSelector = args.source.annotations[0].annotationSelectorSettings;\n        this.currentPosition = args.position;\n        if (object.wrapper) {\n            var refPoint = { x: object.wrapper.offsetX, y: object.wrapper.offsetY };\n            var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n            angle = (angle + 360) % 360;\n            this.blocked = !(this.commandHandler.rotate(angle - object.wrapper.rotateAngle, currentSelector));\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    /**\n     * @private\n     * @param {MouseEventArgs} args - Specified the mouse event arguments.\n     * @returns {void}\n     */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**\n     * @private\n     * @returns {void}\n     */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}