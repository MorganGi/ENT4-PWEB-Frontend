{"ast":null,"code":"/**\n * @licstart The following is the entire license notice for the\n * JavaScript code in this page\n *\n * Copyright 2022 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * JavaScript code in this page\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define(\"pdfjs-dist/build/pdf\", [], factory);else if (typeof exports === 'object') exports[\"pdfjs-dist/build/pdf\"] = factory();else root[\"pdfjs-dist/build/pdf\"] = root.pdfjsLib = factory();\n})(this, () => {\n  return (\n    /******/\n    (() => {\n      // webpackBootstrap\n\n      /******/\n      \"use strict\";\n      /******/\n\n      var __webpack_modules__ = [\n        /* 0 */\n      ,\n      /* 1 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.VerbosityLevel = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.UNSUPPORTED_FEATURES = exports.TextRenderingMode = exports.StreamType = exports.RenderingIntentFlag = exports.PermissionFlag = exports.PasswordResponses = exports.PasswordException = exports.PageActionEventType = exports.OPS = exports.MissingPDFException = exports.InvalidPDFException = exports.ImageKind = exports.IDENTITY_MATRIX = exports.FormatError = exports.FontType = exports.FeatureTest = exports.FONT_IDENTITY_MATRIX = exports.DocumentActionEventType = exports.CMapCompressionType = exports.BaseException = exports.AnnotationType = exports.AnnotationStateModelType = exports.AnnotationReviewState = exports.AnnotationReplyType = exports.AnnotationMode = exports.AnnotationMarkedState = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.AnnotationActionEventType = exports.AbortException = void 0;\n        exports.arrayByteLength = arrayByteLength;\n        exports.arraysToBytes = arraysToBytes;\n        exports.assert = assert;\n        exports.bytesToString = bytesToString;\n        exports.createPromiseCapability = createPromiseCapability;\n        exports.createValidAbsoluteUrl = createValidAbsoluteUrl;\n        exports.escapeString = escapeString;\n        exports.getModificationDate = getModificationDate;\n        exports.getVerbosityLevel = getVerbosityLevel;\n        exports.info = info;\n        exports.isArrayBuffer = isArrayBuffer;\n        exports.isArrayEqual = isArrayEqual;\n        exports.isAscii = isAscii;\n        exports.objectFromMap = objectFromMap;\n        exports.objectSize = objectSize;\n        exports.setVerbosityLevel = setVerbosityLevel;\n        exports.shadow = shadow;\n        exports.string32 = string32;\n        exports.stringToBytes = stringToBytes;\n        exports.stringToPDFString = stringToPDFString;\n        exports.stringToUTF16BEString = stringToUTF16BEString;\n        exports.stringToUTF8String = stringToUTF8String;\n        exports.unreachable = unreachable;\n        exports.utf8StringToString = utf8StringToString;\n        exports.warn = warn;\n\n        __w_pdfjs_require__(2);\n\n        const IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\n        exports.IDENTITY_MATRIX = IDENTITY_MATRIX;\n        const FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n        exports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\n        const RenderingIntentFlag = {\n          ANY: 0x01,\n          DISPLAY: 0x02,\n          PRINT: 0x04,\n          ANNOTATIONS_FORMS: 0x10,\n          ANNOTATIONS_STORAGE: 0x20,\n          ANNOTATIONS_DISABLE: 0x40,\n          OPLIST: 0x100\n        };\n        exports.RenderingIntentFlag = RenderingIntentFlag;\n        const AnnotationMode = {\n          DISABLE: 0,\n          ENABLE: 1,\n          ENABLE_FORMS: 2,\n          ENABLE_STORAGE: 3\n        };\n        exports.AnnotationMode = AnnotationMode;\n        const PermissionFlag = {\n          PRINT: 0x04,\n          MODIFY_CONTENTS: 0x08,\n          COPY: 0x10,\n          MODIFY_ANNOTATIONS: 0x20,\n          FILL_INTERACTIVE_FORMS: 0x100,\n          COPY_FOR_ACCESSIBILITY: 0x200,\n          ASSEMBLE: 0x400,\n          PRINT_HIGH_QUALITY: 0x800\n        };\n        exports.PermissionFlag = PermissionFlag;\n        const TextRenderingMode = {\n          FILL: 0,\n          STROKE: 1,\n          FILL_STROKE: 2,\n          INVISIBLE: 3,\n          FILL_ADD_TO_PATH: 4,\n          STROKE_ADD_TO_PATH: 5,\n          FILL_STROKE_ADD_TO_PATH: 6,\n          ADD_TO_PATH: 7,\n          FILL_STROKE_MASK: 3,\n          ADD_TO_PATH_FLAG: 4\n        };\n        exports.TextRenderingMode = TextRenderingMode;\n        const ImageKind = {\n          GRAYSCALE_1BPP: 1,\n          RGB_24BPP: 2,\n          RGBA_32BPP: 3\n        };\n        exports.ImageKind = ImageKind;\n        const AnnotationType = {\n          TEXT: 1,\n          LINK: 2,\n          FREETEXT: 3,\n          LINE: 4,\n          SQUARE: 5,\n          CIRCLE: 6,\n          POLYGON: 7,\n          POLYLINE: 8,\n          HIGHLIGHT: 9,\n          UNDERLINE: 10,\n          SQUIGGLY: 11,\n          STRIKEOUT: 12,\n          STAMP: 13,\n          CARET: 14,\n          INK: 15,\n          POPUP: 16,\n          FILEATTACHMENT: 17,\n          SOUND: 18,\n          MOVIE: 19,\n          WIDGET: 20,\n          SCREEN: 21,\n          PRINTERMARK: 22,\n          TRAPNET: 23,\n          WATERMARK: 24,\n          THREED: 25,\n          REDACT: 26\n        };\n        exports.AnnotationType = AnnotationType;\n        const AnnotationStateModelType = {\n          MARKED: \"Marked\",\n          REVIEW: \"Review\"\n        };\n        exports.AnnotationStateModelType = AnnotationStateModelType;\n        const AnnotationMarkedState = {\n          MARKED: \"Marked\",\n          UNMARKED: \"Unmarked\"\n        };\n        exports.AnnotationMarkedState = AnnotationMarkedState;\n        const AnnotationReviewState = {\n          ACCEPTED: \"Accepted\",\n          REJECTED: \"Rejected\",\n          CANCELLED: \"Cancelled\",\n          COMPLETED: \"Completed\",\n          NONE: \"None\"\n        };\n        exports.AnnotationReviewState = AnnotationReviewState;\n        const AnnotationReplyType = {\n          GROUP: \"Group\",\n          REPLY: \"R\"\n        };\n        exports.AnnotationReplyType = AnnotationReplyType;\n        const AnnotationFlag = {\n          INVISIBLE: 0x01,\n          HIDDEN: 0x02,\n          PRINT: 0x04,\n          NOZOOM: 0x08,\n          NOROTATE: 0x10,\n          NOVIEW: 0x20,\n          READONLY: 0x40,\n          LOCKED: 0x80,\n          TOGGLENOVIEW: 0x100,\n          LOCKEDCONTENTS: 0x200\n        };\n        exports.AnnotationFlag = AnnotationFlag;\n        const AnnotationFieldFlag = {\n          READONLY: 0x0000001,\n          REQUIRED: 0x0000002,\n          NOEXPORT: 0x0000004,\n          MULTILINE: 0x0001000,\n          PASSWORD: 0x0002000,\n          NOTOGGLETOOFF: 0x0004000,\n          RADIO: 0x0008000,\n          PUSHBUTTON: 0x0010000,\n          COMBO: 0x0020000,\n          EDIT: 0x0040000,\n          SORT: 0x0080000,\n          FILESELECT: 0x0100000,\n          MULTISELECT: 0x0200000,\n          DONOTSPELLCHECK: 0x0400000,\n          DONOTSCROLL: 0x0800000,\n          COMB: 0x1000000,\n          RICHTEXT: 0x2000000,\n          RADIOSINUNISON: 0x2000000,\n          COMMITONSELCHANGE: 0x4000000\n        };\n        exports.AnnotationFieldFlag = AnnotationFieldFlag;\n        const AnnotationBorderStyleType = {\n          SOLID: 1,\n          DASHED: 2,\n          BEVELED: 3,\n          INSET: 4,\n          UNDERLINE: 5\n        };\n        exports.AnnotationBorderStyleType = AnnotationBorderStyleType;\n        const AnnotationActionEventType = {\n          E: \"Mouse Enter\",\n          X: \"Mouse Exit\",\n          D: \"Mouse Down\",\n          U: \"Mouse Up\",\n          Fo: \"Focus\",\n          Bl: \"Blur\",\n          PO: \"PageOpen\",\n          PC: \"PageClose\",\n          PV: \"PageVisible\",\n          PI: \"PageInvisible\",\n          K: \"Keystroke\",\n          F: \"Format\",\n          V: \"Validate\",\n          C: \"Calculate\"\n        };\n        exports.AnnotationActionEventType = AnnotationActionEventType;\n        const DocumentActionEventType = {\n          WC: \"WillClose\",\n          WS: \"WillSave\",\n          DS: \"DidSave\",\n          WP: \"WillPrint\",\n          DP: \"DidPrint\"\n        };\n        exports.DocumentActionEventType = DocumentActionEventType;\n        const PageActionEventType = {\n          O: \"PageOpen\",\n          C: \"PageClose\"\n        };\n        exports.PageActionEventType = PageActionEventType;\n        const StreamType = {\n          UNKNOWN: \"UNKNOWN\",\n          FLATE: \"FLATE\",\n          LZW: \"LZW\",\n          DCT: \"DCT\",\n          JPX: \"JPX\",\n          JBIG: \"JBIG\",\n          A85: \"A85\",\n          AHX: \"AHX\",\n          CCF: \"CCF\",\n          RLX: \"RLX\"\n        };\n        exports.StreamType = StreamType;\n        const FontType = {\n          UNKNOWN: \"UNKNOWN\",\n          TYPE1: \"TYPE1\",\n          TYPE1STANDARD: \"TYPE1STANDARD\",\n          TYPE1C: \"TYPE1C\",\n          CIDFONTTYPE0: \"CIDFONTTYPE0\",\n          CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n          TRUETYPE: \"TRUETYPE\",\n          CIDFONTTYPE2: \"CIDFONTTYPE2\",\n          TYPE3: \"TYPE3\",\n          OPENTYPE: \"OPENTYPE\",\n          TYPE0: \"TYPE0\",\n          MMTYPE1: \"MMTYPE1\"\n        };\n        exports.FontType = FontType;\n        const VerbosityLevel = {\n          ERRORS: 0,\n          WARNINGS: 1,\n          INFOS: 5\n        };\n        exports.VerbosityLevel = VerbosityLevel;\n        const CMapCompressionType = {\n          NONE: 0,\n          BINARY: 1,\n          STREAM: 2\n        };\n        exports.CMapCompressionType = CMapCompressionType;\n        const OPS = {\n          dependency: 1,\n          setLineWidth: 2,\n          setLineCap: 3,\n          setLineJoin: 4,\n          setMiterLimit: 5,\n          setDash: 6,\n          setRenderingIntent: 7,\n          setFlatness: 8,\n          setGState: 9,\n          save: 10,\n          restore: 11,\n          transform: 12,\n          moveTo: 13,\n          lineTo: 14,\n          curveTo: 15,\n          curveTo2: 16,\n          curveTo3: 17,\n          closePath: 18,\n          rectangle: 19,\n          stroke: 20,\n          closeStroke: 21,\n          fill: 22,\n          eoFill: 23,\n          fillStroke: 24,\n          eoFillStroke: 25,\n          closeFillStroke: 26,\n          closeEOFillStroke: 27,\n          endPath: 28,\n          clip: 29,\n          eoClip: 30,\n          beginText: 31,\n          endText: 32,\n          setCharSpacing: 33,\n          setWordSpacing: 34,\n          setHScale: 35,\n          setLeading: 36,\n          setFont: 37,\n          setTextRenderingMode: 38,\n          setTextRise: 39,\n          moveText: 40,\n          setLeadingMoveText: 41,\n          setTextMatrix: 42,\n          nextLine: 43,\n          showText: 44,\n          showSpacedText: 45,\n          nextLineShowText: 46,\n          nextLineSetSpacingShowText: 47,\n          setCharWidth: 48,\n          setCharWidthAndBounds: 49,\n          setStrokeColorSpace: 50,\n          setFillColorSpace: 51,\n          setStrokeColor: 52,\n          setStrokeColorN: 53,\n          setFillColor: 54,\n          setFillColorN: 55,\n          setStrokeGray: 56,\n          setFillGray: 57,\n          setStrokeRGBColor: 58,\n          setFillRGBColor: 59,\n          setStrokeCMYKColor: 60,\n          setFillCMYKColor: 61,\n          shadingFill: 62,\n          beginInlineImage: 63,\n          beginImageData: 64,\n          endInlineImage: 65,\n          paintXObject: 66,\n          markPoint: 67,\n          markPointProps: 68,\n          beginMarkedContent: 69,\n          beginMarkedContentProps: 70,\n          endMarkedContent: 71,\n          beginCompat: 72,\n          endCompat: 73,\n          paintFormXObjectBegin: 74,\n          paintFormXObjectEnd: 75,\n          beginGroup: 76,\n          endGroup: 77,\n          beginAnnotations: 78,\n          endAnnotations: 79,\n          beginAnnotation: 80,\n          endAnnotation: 81,\n          paintJpegXObject: 82,\n          paintImageMaskXObject: 83,\n          paintImageMaskXObjectGroup: 84,\n          paintImageXObject: 85,\n          paintInlineImageXObject: 86,\n          paintInlineImageXObjectGroup: 87,\n          paintImageXObjectRepeat: 88,\n          paintImageMaskXObjectRepeat: 89,\n          paintSolidColorImageMask: 90,\n          constructPath: 91\n        };\n        exports.OPS = OPS;\n        const UNSUPPORTED_FEATURES = {\n          unknown: \"unknown\",\n          forms: \"forms\",\n          javaScript: \"javaScript\",\n          signatures: \"signatures\",\n          smask: \"smask\",\n          shadingPattern: \"shadingPattern\",\n          font: \"font\",\n          errorTilingPattern: \"errorTilingPattern\",\n          errorExtGState: \"errorExtGState\",\n          errorXObject: \"errorXObject\",\n          errorFontLoadType3: \"errorFontLoadType3\",\n          errorFontState: \"errorFontState\",\n          errorFontMissing: \"errorFontMissing\",\n          errorFontTranslate: \"errorFontTranslate\",\n          errorColorSpace: \"errorColorSpace\",\n          errorOperatorList: \"errorOperatorList\",\n          errorFontToUnicode: \"errorFontToUnicode\",\n          errorFontLoadNative: \"errorFontLoadNative\",\n          errorFontBuildPath: \"errorFontBuildPath\",\n          errorFontGetPath: \"errorFontGetPath\",\n          errorMarkedContent: \"errorMarkedContent\",\n          errorContentSubStream: \"errorContentSubStream\"\n        };\n        exports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\n        const PasswordResponses = {\n          NEED_PASSWORD: 1,\n          INCORRECT_PASSWORD: 2\n        };\n        exports.PasswordResponses = PasswordResponses;\n        let verbosity = VerbosityLevel.WARNINGS;\n\n        function setVerbosityLevel(level) {\n          if (Number.isInteger(level)) {\n            verbosity = level;\n          }\n        }\n\n        function getVerbosityLevel() {\n          return verbosity;\n        }\n\n        function info(msg) {\n          if (verbosity >= VerbosityLevel.INFOS) {\n            console.log(`Info: ${msg}`);\n          }\n        }\n\n        function warn(msg) {\n          if (verbosity >= VerbosityLevel.WARNINGS) {\n            console.log(`Warning: ${msg}`);\n          }\n        }\n\n        function unreachable(msg) {\n          throw new Error(msg);\n        }\n\n        function assert(cond, msg) {\n          if (!cond) {\n            unreachable(msg);\n          }\n        }\n\n        function _isValidProtocol(url) {\n          if (!url) {\n            return false;\n          }\n\n          switch (url.protocol) {\n            case \"http:\":\n            case \"https:\":\n            case \"ftp:\":\n            case \"mailto:\":\n            case \"tel:\":\n              return true;\n\n            default:\n              return false;\n          }\n        }\n\n        function createValidAbsoluteUrl(url) {\n          let baseUrl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n          let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n          if (!url) {\n            return null;\n          }\n\n          try {\n            if (options && typeof url === \"string\") {\n              if (options.addDefaultProtocol && url.startsWith(\"www.\")) {\n                const dots = url.match(/\\./g);\n\n                if (dots && dots.length >= 2) {\n                  url = `http://${url}`;\n                }\n              }\n\n              if (options.tryConvertEncoding) {\n                try {\n                  url = stringToUTF8String(url);\n                } catch (ex) {}\n              }\n            }\n\n            const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n\n            if (_isValidProtocol(absoluteUrl)) {\n              return absoluteUrl;\n            }\n          } catch (ex) {}\n\n          return null;\n        }\n\n        function shadow(obj, prop, value) {\n          Object.defineProperty(obj, prop, {\n            value,\n            enumerable: true,\n            configurable: true,\n            writable: false\n          });\n          return value;\n        }\n\n        const BaseException = function BaseExceptionClosure() {\n          function BaseException(message, name) {\n            if (this.constructor === BaseException) {\n              unreachable(\"Cannot initialize BaseException.\");\n            }\n\n            this.message = message;\n            this.name = name;\n          }\n\n          BaseException.prototype = new Error();\n          BaseException.constructor = BaseException;\n          return BaseException;\n        }();\n\n        exports.BaseException = BaseException;\n\n        class PasswordException extends BaseException {\n          constructor(msg, code) {\n            super(msg, \"PasswordException\");\n            this.code = code;\n          }\n\n        }\n\n        exports.PasswordException = PasswordException;\n\n        class UnknownErrorException extends BaseException {\n          constructor(msg, details) {\n            super(msg, \"UnknownErrorException\");\n            this.details = details;\n          }\n\n        }\n\n        exports.UnknownErrorException = UnknownErrorException;\n\n        class InvalidPDFException extends BaseException {\n          constructor(msg) {\n            super(msg, \"InvalidPDFException\");\n          }\n\n        }\n\n        exports.InvalidPDFException = InvalidPDFException;\n\n        class MissingPDFException extends BaseException {\n          constructor(msg) {\n            super(msg, \"MissingPDFException\");\n          }\n\n        }\n\n        exports.MissingPDFException = MissingPDFException;\n\n        class UnexpectedResponseException extends BaseException {\n          constructor(msg, status) {\n            super(msg, \"UnexpectedResponseException\");\n            this.status = status;\n          }\n\n        }\n\n        exports.UnexpectedResponseException = UnexpectedResponseException;\n\n        class FormatError extends BaseException {\n          constructor(msg) {\n            super(msg, \"FormatError\");\n          }\n\n        }\n\n        exports.FormatError = FormatError;\n\n        class AbortException extends BaseException {\n          constructor(msg) {\n            super(msg, \"AbortException\");\n          }\n\n        }\n\n        exports.AbortException = AbortException;\n\n        function bytesToString(bytes) {\n          if (typeof bytes !== \"object\" || bytes === null || bytes.length === undefined) {\n            unreachable(\"Invalid argument for bytesToString\");\n          }\n\n          const length = bytes.length;\n          const MAX_ARGUMENT_COUNT = 8192;\n\n          if (length < MAX_ARGUMENT_COUNT) {\n            return String.fromCharCode.apply(null, bytes);\n          }\n\n          const strBuf = [];\n\n          for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n            const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n            const chunk = bytes.subarray(i, chunkEnd);\n            strBuf.push(String.fromCharCode.apply(null, chunk));\n          }\n\n          return strBuf.join(\"\");\n        }\n\n        function stringToBytes(str) {\n          if (typeof str !== \"string\") {\n            unreachable(\"Invalid argument for stringToBytes\");\n          }\n\n          const length = str.length;\n          const bytes = new Uint8Array(length);\n\n          for (let i = 0; i < length; ++i) {\n            bytes[i] = str.charCodeAt(i) & 0xff;\n          }\n\n          return bytes;\n        }\n\n        function arrayByteLength(arr) {\n          if (arr.length !== undefined) {\n            return arr.length;\n          }\n\n          if (arr.byteLength !== undefined) {\n            return arr.byteLength;\n          }\n\n          unreachable(\"Invalid argument for arrayByteLength\");\n        }\n\n        function arraysToBytes(arr) {\n          const length = arr.length;\n\n          if (length === 1 && arr[0] instanceof Uint8Array) {\n            return arr[0];\n          }\n\n          let resultLength = 0;\n\n          for (let i = 0; i < length; i++) {\n            resultLength += arrayByteLength(arr[i]);\n          }\n\n          let pos = 0;\n          const data = new Uint8Array(resultLength);\n\n          for (let i = 0; i < length; i++) {\n            let item = arr[i];\n\n            if (!(item instanceof Uint8Array)) {\n              if (typeof item === \"string\") {\n                item = stringToBytes(item);\n              } else {\n                item = new Uint8Array(item);\n              }\n            }\n\n            const itemLength = item.byteLength;\n            data.set(item, pos);\n            pos += itemLength;\n          }\n\n          return data;\n        }\n\n        function string32(value) {\n          return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n        }\n\n        function objectSize(obj) {\n          return Object.keys(obj).length;\n        }\n\n        function objectFromMap(map) {\n          const obj = Object.create(null);\n\n          for (const [key, value] of map) {\n            obj[key] = value;\n          }\n\n          return obj;\n        }\n\n        function isLittleEndian() {\n          const buffer8 = new Uint8Array(4);\n          buffer8[0] = 1;\n          const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n          return view32[0] === 1;\n        }\n\n        function isEvalSupported() {\n          try {\n            new Function(\"\");\n            return true;\n          } catch (e) {\n            return false;\n          }\n        }\n\n        class FeatureTest {\n          static get isLittleEndian() {\n            return shadow(this, \"isLittleEndian\", isLittleEndian());\n          }\n\n          static get isEvalSupported() {\n            return shadow(this, \"isEvalSupported\", isEvalSupported());\n          }\n\n          static get isOffscreenCanvasSupported() {\n            return shadow(this, \"isOffscreenCanvasSupported\", typeof OffscreenCanvas !== \"undefined\");\n          }\n\n        }\n\n        exports.FeatureTest = FeatureTest;\n        const hexNumbers = [...Array(256).keys()].map(n => n.toString(16).padStart(2, \"0\"));\n\n        class Util {\n          static makeHexColor(r, g, b) {\n            return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n          }\n\n          static scaleMinMax(transform, minMax) {\n            let temp;\n\n            if (transform[0]) {\n              if (transform[0] < 0) {\n                temp = minMax[0];\n                minMax[0] = minMax[1];\n                minMax[1] = temp;\n              }\n\n              minMax[0] *= transform[0];\n              minMax[1] *= transform[0];\n\n              if (transform[3] < 0) {\n                temp = minMax[2];\n                minMax[2] = minMax[3];\n                minMax[3] = temp;\n              }\n\n              minMax[2] *= transform[3];\n              minMax[3] *= transform[3];\n            } else {\n              temp = minMax[0];\n              minMax[0] = minMax[2];\n              minMax[2] = temp;\n              temp = minMax[1];\n              minMax[1] = minMax[3];\n              minMax[3] = temp;\n\n              if (transform[1] < 0) {\n                temp = minMax[2];\n                minMax[2] = minMax[3];\n                minMax[3] = temp;\n              }\n\n              minMax[2] *= transform[1];\n              minMax[3] *= transform[1];\n\n              if (transform[2] < 0) {\n                temp = minMax[0];\n                minMax[0] = minMax[1];\n                minMax[1] = temp;\n              }\n\n              minMax[0] *= transform[2];\n              minMax[1] *= transform[2];\n            }\n\n            minMax[0] += transform[4];\n            minMax[1] += transform[4];\n            minMax[2] += transform[5];\n            minMax[3] += transform[5];\n          }\n\n          static transform(m1, m2) {\n            return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n          }\n\n          static applyTransform(p, m) {\n            const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n            const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n            return [xt, yt];\n          }\n\n          static applyInverseTransform(p, m) {\n            const d = m[0] * m[3] - m[1] * m[2];\n            const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n            const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n            return [xt, yt];\n          }\n\n          static getAxialAlignedBoundingBox(r, m) {\n            const p1 = Util.applyTransform(r, m);\n            const p2 = Util.applyTransform(r.slice(2, 4), m);\n            const p3 = Util.applyTransform([r[0], r[3]], m);\n            const p4 = Util.applyTransform([r[2], r[1]], m);\n            return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n          }\n\n          static inverseTransform(m) {\n            const d = m[0] * m[3] - m[1] * m[2];\n            return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n          }\n\n          static apply3dTransform(m, v) {\n            return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];\n          }\n\n          static singularValueDecompose2dScale(m) {\n            const transpose = [m[0], m[2], m[1], m[3]];\n            const a = m[0] * transpose[0] + m[1] * transpose[2];\n            const b = m[0] * transpose[1] + m[1] * transpose[3];\n            const c = m[2] * transpose[0] + m[3] * transpose[2];\n            const d = m[2] * transpose[1] + m[3] * transpose[3];\n            const first = (a + d) / 2;\n            const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n            const sx = first + second || 1;\n            const sy = first - second || 1;\n            return [Math.sqrt(sx), Math.sqrt(sy)];\n          }\n\n          static normalizeRect(rect) {\n            const r = rect.slice(0);\n\n            if (rect[0] > rect[2]) {\n              r[0] = rect[2];\n              r[2] = rect[0];\n            }\n\n            if (rect[1] > rect[3]) {\n              r[1] = rect[3];\n              r[3] = rect[1];\n            }\n\n            return r;\n          }\n\n          static intersect(rect1, rect2) {\n            const xLow = Math.max(Math.min(rect1[0], rect1[2]), Math.min(rect2[0], rect2[2]));\n            const xHigh = Math.min(Math.max(rect1[0], rect1[2]), Math.max(rect2[0], rect2[2]));\n\n            if (xLow > xHigh) {\n              return null;\n            }\n\n            const yLow = Math.max(Math.min(rect1[1], rect1[3]), Math.min(rect2[1], rect2[3]));\n            const yHigh = Math.min(Math.max(rect1[1], rect1[3]), Math.max(rect2[1], rect2[3]));\n\n            if (yLow > yHigh) {\n              return null;\n            }\n\n            return [xLow, yLow, xHigh, yHigh];\n          }\n\n          static bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3) {\n            const tvalues = [],\n                  bounds = [[], []];\n            let a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\n            for (let i = 0; i < 2; ++i) {\n              if (i === 0) {\n                b = 6 * x0 - 12 * x1 + 6 * x2;\n                a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n                c = 3 * x1 - 3 * x0;\n              } else {\n                b = 6 * y0 - 12 * y1 + 6 * y2;\n                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n                c = 3 * y1 - 3 * y0;\n              }\n\n              if (Math.abs(a) < 1e-12) {\n                if (Math.abs(b) < 1e-12) {\n                  continue;\n                }\n\n                t = -c / b;\n\n                if (0 < t && t < 1) {\n                  tvalues.push(t);\n                }\n\n                continue;\n              }\n\n              b2ac = b * b - 4 * c * a;\n              sqrtb2ac = Math.sqrt(b2ac);\n\n              if (b2ac < 0) {\n                continue;\n              }\n\n              t1 = (-b + sqrtb2ac) / (2 * a);\n\n              if (0 < t1 && t1 < 1) {\n                tvalues.push(t1);\n              }\n\n              t2 = (-b - sqrtb2ac) / (2 * a);\n\n              if (0 < t2 && t2 < 1) {\n                tvalues.push(t2);\n              }\n            }\n\n            let j = tvalues.length,\n                mt;\n            const jlen = j;\n\n            while (j--) {\n              t = tvalues[j];\n              mt = 1 - t;\n              bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n              bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n            }\n\n            bounds[0][jlen] = x0;\n            bounds[1][jlen] = y0;\n            bounds[0][jlen + 1] = x3;\n            bounds[1][jlen + 1] = y3;\n            bounds[0].length = bounds[1].length = jlen + 2;\n            return [Math.min(...bounds[0]), Math.min(...bounds[1]), Math.max(...bounds[0]), Math.max(...bounds[1])];\n          }\n\n        }\n\n        exports.Util = Util;\n        const PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8, 0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018, 0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d, 0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac];\n\n        function stringToPDFString(str) {\n          if (str[0] >= \"\\xEF\") {\n            let encoding;\n\n            if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n              encoding = \"utf-16be\";\n            } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n              encoding = \"utf-16le\";\n            } else if (str[0] === \"\\xEF\" && str[1] === \"\\xBB\" && str[2] === \"\\xBF\") {\n              encoding = \"utf-8\";\n            }\n\n            if (encoding) {\n              try {\n                const decoder = new TextDecoder(encoding, {\n                  fatal: true\n                });\n                const buffer = stringToBytes(str);\n                return decoder.decode(buffer);\n              } catch (ex) {\n                warn(`stringToPDFString: \"${ex}\".`);\n              }\n            }\n          }\n\n          const strBuf = [];\n\n          for (let i = 0, ii = str.length; i < ii; i++) {\n            const code = PDFStringTranslateTable[str.charCodeAt(i)];\n            strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n          }\n\n          return strBuf.join(\"\");\n        }\n\n        function escapeString(str) {\n          return str.replace(/([()\\\\\\n\\r])/g, match => {\n            if (match === \"\\n\") {\n              return \"\\\\n\";\n            } else if (match === \"\\r\") {\n              return \"\\\\r\";\n            }\n\n            return `\\\\${match}`;\n          });\n        }\n\n        function isAscii(str) {\n          return /^[\\x00-\\x7F]*$/.test(str);\n        }\n\n        function stringToUTF16BEString(str) {\n          const buf = [\"\\xFE\\xFF\"];\n\n          for (let i = 0, ii = str.length; i < ii; i++) {\n            const char = str.charCodeAt(i);\n            buf.push(String.fromCharCode(char >> 8 & 0xff), String.fromCharCode(char & 0xff));\n          }\n\n          return buf.join(\"\");\n        }\n\n        function stringToUTF8String(str) {\n          return decodeURIComponent(escape(str));\n        }\n\n        function utf8StringToString(str) {\n          return unescape(encodeURIComponent(str));\n        }\n\n        function isArrayBuffer(v) {\n          return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n        }\n\n        function isArrayEqual(arr1, arr2) {\n          if (arr1.length !== arr2.length) {\n            return false;\n          }\n\n          for (let i = 0, ii = arr1.length; i < ii; i++) {\n            if (arr1[i] !== arr2[i]) {\n              return false;\n            }\n          }\n\n          return true;\n        }\n\n        function getModificationDate() {\n          let date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date();\n          const buffer = [date.getUTCFullYear().toString(), (date.getUTCMonth() + 1).toString().padStart(2, \"0\"), date.getUTCDate().toString().padStart(2, \"0\"), date.getUTCHours().toString().padStart(2, \"0\"), date.getUTCMinutes().toString().padStart(2, \"0\"), date.getUTCSeconds().toString().padStart(2, \"0\")];\n          return buffer.join(\"\");\n        }\n\n        function createPromiseCapability() {\n          const capability = Object.create(null);\n          let isSettled = false;\n          Object.defineProperty(capability, \"settled\", {\n            get() {\n              return isSettled;\n            }\n\n          });\n          capability.promise = new Promise(function (resolve, reject) {\n            capability.resolve = function (data) {\n              isSettled = true;\n              resolve(data);\n            };\n\n            capability.reject = function (reason) {\n              isSettled = true;\n              reject(reason);\n            };\n          });\n          return capability;\n        }\n        /***/\n\n      },\n      /* 2 */\n\n      /***/\n      (__unused_webpack_module, __unused_webpack_exports, __w_pdfjs_require__) => {\n        var _is_node = __w_pdfjs_require__(3);\n\n        ;\n        /***/\n      },\n      /* 3 */\n\n      /***/\n      (__unused_webpack_module, exports) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.isNodeJS = void 0;\n        const isNodeJS = typeof process === \"object\" && process + \"\" === \"[object process]\" && !process.versions.nw && !(process.versions.electron && process.type && process.type !== \"browser\");\n        exports.isNodeJS = isNodeJS;\n        /***/\n      },\n      /* 4 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.build = exports.RenderTask = exports.PDFWorkerUtil = exports.PDFWorker = exports.PDFPageProxy = exports.PDFDocumentProxy = exports.PDFDocumentLoadingTask = exports.PDFDataRangeTransport = exports.LoopbackPort = exports.DefaultStandardFontDataFactory = exports.DefaultCanvasFactory = exports.DefaultCMapReaderFactory = void 0;\n        exports.getDocument = getDocument;\n        exports.setPDFNetworkStreamFactory = setPDFNetworkStreamFactory;\n        exports.version = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _display_utils = __w_pdfjs_require__(5);\n\n        var _font_loader = __w_pdfjs_require__(7);\n\n        var _annotation_storage = __w_pdfjs_require__(8);\n\n        var _canvas = __w_pdfjs_require__(10);\n\n        var _worker_options = __w_pdfjs_require__(13);\n\n        var _is_node = __w_pdfjs_require__(3);\n\n        var _message_handler = __w_pdfjs_require__(14);\n\n        var _metadata = __w_pdfjs_require__(15);\n\n        var _optional_content_config = __w_pdfjs_require__(16);\n\n        var _transport_stream = __w_pdfjs_require__(17);\n\n        var _xfa_text = __w_pdfjs_require__(18);\n\n        const DEFAULT_RANGE_CHUNK_SIZE = 65536;\n        const RENDERING_CANCELLED_TIMEOUT = 100;\n        let DefaultCanvasFactory = _display_utils.DOMCanvasFactory;\n        exports.DefaultCanvasFactory = DefaultCanvasFactory;\n        let DefaultCMapReaderFactory = _display_utils.DOMCMapReaderFactory;\n        exports.DefaultCMapReaderFactory = DefaultCMapReaderFactory;\n        let DefaultStandardFontDataFactory = _display_utils.DOMStandardFontDataFactory;\n        exports.DefaultStandardFontDataFactory = DefaultStandardFontDataFactory;\n\n        if (_is_node.isNodeJS) {\n          const {\n            NodeCanvasFactory,\n            NodeCMapReaderFactory,\n            NodeStandardFontDataFactory\n          } = __w_pdfjs_require__(19);\n\n          exports.DefaultCanvasFactory = DefaultCanvasFactory = NodeCanvasFactory;\n          exports.DefaultCMapReaderFactory = DefaultCMapReaderFactory = NodeCMapReaderFactory;\n          exports.DefaultStandardFontDataFactory = DefaultStandardFontDataFactory = NodeStandardFontDataFactory;\n        }\n\n        let createPDFNetworkStream;\n\n        function setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n          createPDFNetworkStream = pdfNetworkStreamFactory;\n        }\n\n        function getDocument(src) {\n          const task = new PDFDocumentLoadingTask();\n          let source;\n\n          if (typeof src === \"string\" || src instanceof URL) {\n            source = {\n              url: src\n            };\n          } else if ((0, _util.isArrayBuffer)(src)) {\n            source = {\n              data: src\n            };\n          } else if (src instanceof PDFDataRangeTransport) {\n            source = {\n              range: src\n            };\n          } else {\n            if (typeof src !== \"object\") {\n              throw new Error(\"Invalid parameter in getDocument, \" + \"need either string, URL, Uint8Array, or parameter object.\");\n            }\n\n            if (!src.url && !src.data && !src.range) {\n              throw new Error(\"Invalid parameter object: need either .data, .range or .url\");\n            }\n\n            source = src;\n          }\n\n          const params = Object.create(null);\n          let rangeTransport = null,\n              worker = null;\n\n          for (const key in source) {\n            const value = source[key];\n\n            switch (key) {\n              case \"url\":\n                if (typeof window !== \"undefined\") {\n                  try {\n                    params[key] = new URL(value, window.location).href;\n                    continue;\n                  } catch (ex) {\n                    (0, _util.warn)(`Cannot create valid URL: \"${ex}\".`);\n                  }\n                } else if (typeof value === \"string\" || value instanceof URL) {\n                  params[key] = value.toString();\n                  continue;\n                }\n\n                throw new Error(\"Invalid PDF url data: \" + \"either string or URL-object is expected in the url property.\");\n\n              case \"range\":\n                rangeTransport = value;\n                continue;\n\n              case \"worker\":\n                worker = value;\n                continue;\n\n              case \"data\":\n                if (_is_node.isNodeJS && typeof Buffer !== \"undefined\" && value instanceof Buffer) {\n                  params[key] = new Uint8Array(value);\n                } else if (value instanceof Uint8Array) {\n                  break;\n                } else if (typeof value === \"string\") {\n                  params[key] = (0, _util.stringToBytes)(value);\n                } else if (typeof value === \"object\" && value !== null && !isNaN(value.length)) {\n                  params[key] = new Uint8Array(value);\n                } else if ((0, _util.isArrayBuffer)(value)) {\n                  params[key] = new Uint8Array(value);\n                } else {\n                  throw new Error(\"Invalid PDF binary data: either typed array, \" + \"string, or array-like object is expected in the data property.\");\n                }\n\n                continue;\n            }\n\n            params[key] = value;\n          }\n\n          params.CMapReaderFactory = params.CMapReaderFactory || DefaultCMapReaderFactory;\n          params.StandardFontDataFactory = params.StandardFontDataFactory || DefaultStandardFontDataFactory;\n          params.ignoreErrors = params.stopAtErrors !== true;\n          params.fontExtraProperties = params.fontExtraProperties === true;\n          params.pdfBug = params.pdfBug === true;\n          params.enableXfa = params.enableXfa === true;\n\n          if (!Number.isInteger(params.rangeChunkSize) || params.rangeChunkSize < 1) {\n            params.rangeChunkSize = DEFAULT_RANGE_CHUNK_SIZE;\n          }\n\n          if (typeof params.docBaseUrl !== \"string\" || (0, _display_utils.isDataScheme)(params.docBaseUrl)) {\n            params.docBaseUrl = null;\n          }\n\n          if (!Number.isInteger(params.maxImageSize) || params.maxImageSize < -1) {\n            params.maxImageSize = -1;\n          }\n\n          if (typeof params.cMapUrl !== \"string\") {\n            params.cMapUrl = null;\n          }\n\n          if (typeof params.standardFontDataUrl !== \"string\") {\n            params.standardFontDataUrl = null;\n          }\n\n          if (typeof params.useWorkerFetch !== \"boolean\") {\n            params.useWorkerFetch = params.CMapReaderFactory === _display_utils.DOMCMapReaderFactory && params.StandardFontDataFactory === _display_utils.DOMStandardFontDataFactory;\n          }\n\n          if (typeof params.isEvalSupported !== \"boolean\") {\n            params.isEvalSupported = true;\n          }\n\n          if (typeof params.disableFontFace !== \"boolean\") {\n            params.disableFontFace = _is_node.isNodeJS;\n          }\n\n          if (typeof params.useSystemFonts !== \"boolean\") {\n            params.useSystemFonts = !_is_node.isNodeJS && !params.disableFontFace;\n          }\n\n          if (typeof params.ownerDocument !== \"object\" || params.ownerDocument === null) {\n            params.ownerDocument = globalThis.document;\n          }\n\n          if (typeof params.disableRange !== \"boolean\") {\n            params.disableRange = false;\n          }\n\n          if (typeof params.disableStream !== \"boolean\") {\n            params.disableStream = false;\n          }\n\n          if (typeof params.disableAutoFetch !== \"boolean\") {\n            params.disableAutoFetch = false;\n          }\n\n          (0, _util.setVerbosityLevel)(params.verbosity);\n\n          if (!worker) {\n            const workerParams = {\n              verbosity: params.verbosity,\n              port: _worker_options.GlobalWorkerOptions.workerPort\n            };\n            worker = workerParams.port ? PDFWorker.fromPort(workerParams) : new PDFWorker(workerParams);\n            task._worker = worker;\n          }\n\n          const docId = task.docId;\n          worker.promise.then(function () {\n            if (task.destroyed) {\n              throw new Error(\"Loading aborted\");\n            }\n\n            const workerIdPromise = _fetchDocument(worker, params, rangeTransport, docId);\n\n            const networkStreamPromise = new Promise(function (resolve) {\n              let networkStream;\n\n              if (rangeTransport) {\n                networkStream = new _transport_stream.PDFDataTransportStream({\n                  length: params.length,\n                  initialData: params.initialData,\n                  progressiveDone: params.progressiveDone,\n                  contentDispositionFilename: params.contentDispositionFilename,\n                  disableRange: params.disableRange,\n                  disableStream: params.disableStream\n                }, rangeTransport);\n              } else if (!params.data) {\n                networkStream = createPDFNetworkStream({\n                  url: params.url,\n                  length: params.length,\n                  httpHeaders: params.httpHeaders,\n                  withCredentials: params.withCredentials,\n                  rangeChunkSize: params.rangeChunkSize,\n                  disableRange: params.disableRange,\n                  disableStream: params.disableStream\n                });\n              }\n\n              resolve(networkStream);\n            });\n            return Promise.all([workerIdPromise, networkStreamPromise]).then(function (_ref) {\n              let [workerId, networkStream] = _ref;\n\n              if (task.destroyed) {\n                throw new Error(\"Loading aborted\");\n              }\n\n              const messageHandler = new _message_handler.MessageHandler(docId, workerId, worker.port);\n              const transport = new WorkerTransport(messageHandler, task, networkStream, params);\n              task._transport = transport;\n              messageHandler.send(\"Ready\", null);\n            });\n          }).catch(task._capability.reject);\n          return task;\n        }\n\n        async function _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n          if (worker.destroyed) {\n            throw new Error(\"Worker was destroyed\");\n          }\n\n          if (pdfDataRangeTransport) {\n            source.length = pdfDataRangeTransport.length;\n            source.initialData = pdfDataRangeTransport.initialData;\n            source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n            source.contentDispositionFilename = pdfDataRangeTransport.contentDispositionFilename;\n          }\n\n          const workerId = await worker.messageHandler.sendWithPromise(\"GetDocRequest\", {\n            docId,\n            apiVersion: '2.14.305',\n            source: {\n              data: source.data,\n              url: source.url,\n              password: source.password,\n              disableAutoFetch: source.disableAutoFetch,\n              rangeChunkSize: source.rangeChunkSize,\n              length: source.length\n            },\n            maxImageSize: source.maxImageSize,\n            disableFontFace: source.disableFontFace,\n            docBaseUrl: source.docBaseUrl,\n            ignoreErrors: source.ignoreErrors,\n            isEvalSupported: source.isEvalSupported,\n            fontExtraProperties: source.fontExtraProperties,\n            enableXfa: source.enableXfa,\n            useSystemFonts: source.useSystemFonts,\n            cMapUrl: source.useWorkerFetch ? source.cMapUrl : null,\n            standardFontDataUrl: source.useWorkerFetch ? source.standardFontDataUrl : null\n          });\n\n          if (worker.destroyed) {\n            throw new Error(\"Worker was destroyed\");\n          }\n\n          return workerId;\n        }\n\n        class PDFDocumentLoadingTask {\n          static #docId = 0;\n\n          constructor() {\n            this._capability = (0, _util.createPromiseCapability)();\n            this._transport = null;\n            this._worker = null;\n            this.docId = `d${PDFDocumentLoadingTask.#docId++}`;\n            this.destroyed = false;\n            this.onPassword = null;\n            this.onProgress = null;\n            this.onUnsupportedFeature = null;\n          }\n\n          get promise() {\n            return this._capability.promise;\n          }\n\n          async destroy() {\n            this.destroyed = true;\n            await this._transport?.destroy();\n            this._transport = null;\n\n            if (this._worker) {\n              this._worker.destroy();\n\n              this._worker = null;\n            }\n          }\n\n        }\n\n        exports.PDFDocumentLoadingTask = PDFDocumentLoadingTask;\n\n        class PDFDataRangeTransport {\n          constructor(length, initialData) {\n            let progressiveDone = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            let contentDispositionFilename = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n            this.length = length;\n            this.initialData = initialData;\n            this.progressiveDone = progressiveDone;\n            this.contentDispositionFilename = contentDispositionFilename;\n            this._rangeListeners = [];\n            this._progressListeners = [];\n            this._progressiveReadListeners = [];\n            this._progressiveDoneListeners = [];\n            this._readyCapability = (0, _util.createPromiseCapability)();\n          }\n\n          addRangeListener(listener) {\n            this._rangeListeners.push(listener);\n          }\n\n          addProgressListener(listener) {\n            this._progressListeners.push(listener);\n          }\n\n          addProgressiveReadListener(listener) {\n            this._progressiveReadListeners.push(listener);\n          }\n\n          addProgressiveDoneListener(listener) {\n            this._progressiveDoneListeners.push(listener);\n          }\n\n          onDataRange(begin, chunk) {\n            for (const listener of this._rangeListeners) {\n              listener(begin, chunk);\n            }\n          }\n\n          onDataProgress(loaded, total) {\n            this._readyCapability.promise.then(() => {\n              for (const listener of this._progressListeners) {\n                listener(loaded, total);\n              }\n            });\n          }\n\n          onDataProgressiveRead(chunk) {\n            this._readyCapability.promise.then(() => {\n              for (const listener of this._progressiveReadListeners) {\n                listener(chunk);\n              }\n            });\n          }\n\n          onDataProgressiveDone() {\n            this._readyCapability.promise.then(() => {\n              for (const listener of this._progressiveDoneListeners) {\n                listener();\n              }\n            });\n          }\n\n          transportReady() {\n            this._readyCapability.resolve();\n          }\n\n          requestDataRange(begin, end) {\n            (0, _util.unreachable)(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n          }\n\n          abort() {}\n\n        }\n\n        exports.PDFDataRangeTransport = PDFDataRangeTransport;\n\n        class PDFDocumentProxy {\n          constructor(pdfInfo, transport) {\n            this._pdfInfo = pdfInfo;\n            this._transport = transport;\n            Object.defineProperty(this, \"fingerprint\", {\n              get() {\n                (0, _display_utils.deprecated)(\"`PDFDocumentProxy.fingerprint`, \" + \"please use `PDFDocumentProxy.fingerprints` instead.\");\n                return this.fingerprints[0];\n              }\n\n            });\n            Object.defineProperty(this, \"getStats\", {\n              value: async () => {\n                (0, _display_utils.deprecated)(\"`PDFDocumentProxy.getStats`, \" + \"please use the `PDFDocumentProxy.stats`-getter instead.\");\n                return this.stats || {\n                  streamTypes: {},\n                  fontTypes: {}\n                };\n              }\n            });\n          }\n\n          get annotationStorage() {\n            return this._transport.annotationStorage;\n          }\n\n          get numPages() {\n            return this._pdfInfo.numPages;\n          }\n\n          get fingerprints() {\n            return this._pdfInfo.fingerprints;\n          }\n\n          get stats() {\n            return this._transport.stats;\n          }\n\n          get isPureXfa() {\n            return !!this._transport._htmlForXfa;\n          }\n\n          get allXfaHtml() {\n            return this._transport._htmlForXfa;\n          }\n\n          getPage(pageNumber) {\n            return this._transport.getPage(pageNumber);\n          }\n\n          getPageIndex(ref) {\n            return this._transport.getPageIndex(ref);\n          }\n\n          getDestinations() {\n            return this._transport.getDestinations();\n          }\n\n          getDestination(id) {\n            return this._transport.getDestination(id);\n          }\n\n          getPageLabels() {\n            return this._transport.getPageLabels();\n          }\n\n          getPageLayout() {\n            return this._transport.getPageLayout();\n          }\n\n          getPageMode() {\n            return this._transport.getPageMode();\n          }\n\n          getViewerPreferences() {\n            return this._transport.getViewerPreferences();\n          }\n\n          getOpenAction() {\n            return this._transport.getOpenAction();\n          }\n\n          getAttachments() {\n            return this._transport.getAttachments();\n          }\n\n          getJavaScript() {\n            return this._transport.getJavaScript();\n          }\n\n          getJSActions() {\n            return this._transport.getDocJSActions();\n          }\n\n          getOutline() {\n            return this._transport.getOutline();\n          }\n\n          getOptionalContentConfig() {\n            return this._transport.getOptionalContentConfig();\n          }\n\n          getPermissions() {\n            return this._transport.getPermissions();\n          }\n\n          getMetadata() {\n            return this._transport.getMetadata();\n          }\n\n          getMarkInfo() {\n            return this._transport.getMarkInfo();\n          }\n\n          getData() {\n            return this._transport.getData();\n          }\n\n          getDownloadInfo() {\n            return this._transport.downloadInfoCapability.promise;\n          }\n\n          cleanup() {\n            let keepLoadedFonts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            return this._transport.startCleanup(keepLoadedFonts || this.isPureXfa);\n          }\n\n          destroy() {\n            return this.loadingTask.destroy();\n          }\n\n          get loadingParams() {\n            return this._transport.loadingParams;\n          }\n\n          get loadingTask() {\n            return this._transport.loadingTask;\n          }\n\n          saveDocument() {\n            if (this._transport.annotationStorage.size <= 0) {\n              (0, _display_utils.deprecated)(\"saveDocument called while `annotationStorage` is empty, \" + \"please use the getData-method instead.\");\n            }\n\n            return this._transport.saveDocument();\n          }\n\n          getFieldObjects() {\n            return this._transport.getFieldObjects();\n          }\n\n          hasJSActions() {\n            return this._transport.hasJSActions();\n          }\n\n          getCalculationOrderIds() {\n            return this._transport.getCalculationOrderIds();\n          }\n\n        }\n\n        exports.PDFDocumentProxy = PDFDocumentProxy;\n\n        class PDFPageProxy {\n          constructor(pageIndex, pageInfo, transport, ownerDocument) {\n            let pdfBug = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n            this._pageIndex = pageIndex;\n            this._pageInfo = pageInfo;\n            this._ownerDocument = ownerDocument;\n            this._transport = transport;\n            this._stats = pdfBug ? new _display_utils.StatTimer() : null;\n            this._pdfBug = pdfBug;\n            this.commonObjs = transport.commonObjs;\n            this.objs = new PDFObjects();\n            this._bitmaps = new Set();\n            this.cleanupAfterRender = false;\n            this.pendingCleanup = false;\n            this._intentStates = new Map();\n            this._annotationPromises = new Map();\n            this.destroyed = false;\n          }\n\n          get pageNumber() {\n            return this._pageIndex + 1;\n          }\n\n          get rotate() {\n            return this._pageInfo.rotate;\n          }\n\n          get ref() {\n            return this._pageInfo.ref;\n          }\n\n          get userUnit() {\n            return this._pageInfo.userUnit;\n          }\n\n          get view() {\n            return this._pageInfo.view;\n          }\n\n          getViewport() {\n            let {\n              scale,\n              rotation = this.rotate,\n              offsetX = 0,\n              offsetY = 0,\n              dontFlip = false\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            return new _display_utils.PageViewport({\n              viewBox: this.view,\n              scale,\n              rotation,\n              offsetX,\n              offsetY,\n              dontFlip\n            });\n          }\n\n          getAnnotations() {\n            let {\n              intent = \"display\"\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n            const intentArgs = this._transport.getRenderingIntent(intent);\n\n            let promise = this._annotationPromises.get(intentArgs.cacheKey);\n\n            if (!promise) {\n              promise = this._transport.getAnnotations(this._pageIndex, intentArgs.renderingIntent);\n\n              this._annotationPromises.set(intentArgs.cacheKey, promise);\n\n              promise = promise.then(annotations => {\n                for (const annotation of annotations) {\n                  if (annotation.titleObj !== undefined) {\n                    Object.defineProperty(annotation, \"title\", {\n                      get() {\n                        (0, _display_utils.deprecated)(\"`title`-property on annotation, please use `titleObj` instead.\");\n                        return annotation.titleObj.str;\n                      }\n\n                    });\n                  }\n\n                  if (annotation.contentsObj !== undefined) {\n                    Object.defineProperty(annotation, \"contents\", {\n                      get() {\n                        (0, _display_utils.deprecated)(\"`contents`-property on annotation, please use `contentsObj` instead.\");\n                        return annotation.contentsObj.str;\n                      }\n\n                    });\n                  }\n                }\n\n                return annotations;\n              });\n            }\n\n            return promise;\n          }\n\n          getJSActions() {\n            return this._jsActionsPromise ||= this._transport.getPageJSActions(this._pageIndex);\n          }\n\n          async getXfa() {\n            return this._transport._htmlForXfa?.children[this._pageIndex] || null;\n          }\n\n          render(_ref2) {\n            let {\n              canvasContext,\n              viewport,\n              intent = \"display\",\n              annotationMode = _util.AnnotationMode.ENABLE,\n              transform = null,\n              imageLayer = null,\n              canvasFactory = null,\n              background = null,\n              optionalContentConfigPromise = null,\n              annotationCanvasMap = null,\n              pageColors = null\n            } = _ref2;\n\n            if (arguments[0]?.renderInteractiveForms !== undefined) {\n              (0, _display_utils.deprecated)(\"render no longer accepts the `renderInteractiveForms`-option, \" + \"please use the `annotationMode`-option instead.\");\n\n              if (arguments[0].renderInteractiveForms === true && annotationMode === _util.AnnotationMode.ENABLE) {\n                annotationMode = _util.AnnotationMode.ENABLE_FORMS;\n              }\n            }\n\n            if (arguments[0]?.includeAnnotationStorage !== undefined) {\n              (0, _display_utils.deprecated)(\"render no longer accepts the `includeAnnotationStorage`-option, \" + \"please use the `annotationMode`-option instead.\");\n\n              if (arguments[0].includeAnnotationStorage === true && annotationMode === _util.AnnotationMode.ENABLE) {\n                annotationMode = _util.AnnotationMode.ENABLE_STORAGE;\n              }\n            }\n\n            if (this._stats) {\n              this._stats.time(\"Overall\");\n            }\n\n            const intentArgs = this._transport.getRenderingIntent(intent, annotationMode);\n\n            this.pendingCleanup = false;\n\n            if (!optionalContentConfigPromise) {\n              optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n            }\n\n            let intentState = this._intentStates.get(intentArgs.cacheKey);\n\n            if (!intentState) {\n              intentState = Object.create(null);\n\n              this._intentStates.set(intentArgs.cacheKey, intentState);\n            }\n\n            if (intentState.streamReaderCancelTimeout) {\n              clearTimeout(intentState.streamReaderCancelTimeout);\n              intentState.streamReaderCancelTimeout = null;\n            }\n\n            const canvasFactoryInstance = canvasFactory || new DefaultCanvasFactory({\n              ownerDocument: this._ownerDocument\n            });\n            const intentPrint = !!(intentArgs.renderingIntent & _util.RenderingIntentFlag.PRINT);\n\n            if (!intentState.displayReadyCapability) {\n              intentState.displayReadyCapability = (0, _util.createPromiseCapability)();\n              intentState.operatorList = {\n                fnArray: [],\n                argsArray: [],\n                lastChunk: false\n              };\n\n              if (this._stats) {\n                this._stats.time(\"Page Request\");\n              }\n\n              this._pumpOperatorList(intentArgs);\n            }\n\n            const complete = error => {\n              intentState.renderTasks.delete(internalRenderTask);\n\n              if (this.cleanupAfterRender || intentPrint) {\n                this.pendingCleanup = true;\n              }\n\n              this._tryCleanup();\n\n              if (error) {\n                internalRenderTask.capability.reject(error);\n\n                this._abortOperatorList({\n                  intentState,\n                  reason: error instanceof Error ? error : new Error(error)\n                });\n              } else {\n                internalRenderTask.capability.resolve();\n              }\n\n              if (this._stats) {\n                this._stats.timeEnd(\"Rendering\");\n\n                this._stats.timeEnd(\"Overall\");\n              }\n            };\n\n            const internalRenderTask = new InternalRenderTask({\n              callback: complete,\n              params: {\n                canvasContext,\n                viewport,\n                transform,\n                imageLayer,\n                background\n              },\n              objs: this.objs,\n              commonObjs: this.commonObjs,\n              annotationCanvasMap,\n              operatorList: intentState.operatorList,\n              pageIndex: this._pageIndex,\n              canvasFactory: canvasFactoryInstance,\n              useRequestAnimationFrame: !intentPrint,\n              pdfBug: this._pdfBug,\n              pageColors\n            });\n            (intentState.renderTasks ||= new Set()).add(internalRenderTask);\n            const renderTask = internalRenderTask.task;\n            Promise.all([intentState.displayReadyCapability.promise, optionalContentConfigPromise]).then(_ref3 => {\n              let [transparency, optionalContentConfig] = _ref3;\n\n              if (this.pendingCleanup) {\n                complete();\n                return;\n              }\n\n              if (this._stats) {\n                this._stats.time(\"Rendering\");\n              }\n\n              internalRenderTask.initializeGraphics({\n                transparency,\n                optionalContentConfig\n              });\n              internalRenderTask.operatorListChanged();\n            }).catch(complete);\n            return renderTask;\n          }\n\n          getOperatorList() {\n            let {\n              intent = \"display\",\n              annotationMode = _util.AnnotationMode.ENABLE\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n            function operatorListChanged() {\n              if (intentState.operatorList.lastChunk) {\n                intentState.opListReadCapability.resolve(intentState.operatorList);\n                intentState.renderTasks.delete(opListTask);\n              }\n            }\n\n            const intentArgs = this._transport.getRenderingIntent(intent, annotationMode, true);\n\n            let intentState = this._intentStates.get(intentArgs.cacheKey);\n\n            if (!intentState) {\n              intentState = Object.create(null);\n\n              this._intentStates.set(intentArgs.cacheKey, intentState);\n            }\n\n            let opListTask;\n\n            if (!intentState.opListReadCapability) {\n              opListTask = Object.create(null);\n              opListTask.operatorListChanged = operatorListChanged;\n              intentState.opListReadCapability = (0, _util.createPromiseCapability)();\n              (intentState.renderTasks ||= new Set()).add(opListTask);\n              intentState.operatorList = {\n                fnArray: [],\n                argsArray: [],\n                lastChunk: false\n              };\n\n              if (this._stats) {\n                this._stats.time(\"Page Request\");\n              }\n\n              this._pumpOperatorList(intentArgs);\n            }\n\n            return intentState.opListReadCapability.promise;\n          }\n\n          streamTextContent() {\n            let {\n              disableCombineTextItems = false,\n              includeMarkedContent = false\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            const TEXT_CONTENT_CHUNK_SIZE = 100;\n            return this._transport.messageHandler.sendWithStream(\"GetTextContent\", {\n              pageIndex: this._pageIndex,\n              combineTextItems: disableCombineTextItems !== true,\n              includeMarkedContent: includeMarkedContent === true\n            }, {\n              highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n\n              size(textContent) {\n                return textContent.items.length;\n              }\n\n            });\n          }\n\n          getTextContent() {\n            let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n            if (this._transport._htmlForXfa) {\n              return this.getXfa().then(xfa => {\n                return _xfa_text.XfaText.textContent(xfa);\n              });\n            }\n\n            const readableStream = this.streamTextContent(params);\n            return new Promise(function (resolve, reject) {\n              function pump() {\n                reader.read().then(function (_ref4) {\n                  let {\n                    value,\n                    done\n                  } = _ref4;\n\n                  if (done) {\n                    resolve(textContent);\n                    return;\n                  }\n\n                  Object.assign(textContent.styles, value.styles);\n                  textContent.items.push(...value.items);\n                  pump();\n                }, reject);\n              }\n\n              const reader = readableStream.getReader();\n              const textContent = {\n                items: [],\n                styles: Object.create(null)\n              };\n              pump();\n            });\n          }\n\n          getStructTree() {\n            return this._structTreePromise ||= this._transport.getStructTree(this._pageIndex);\n          }\n\n          _destroy() {\n            this.destroyed = true;\n            const waitOn = [];\n\n            for (const intentState of this._intentStates.values()) {\n              this._abortOperatorList({\n                intentState,\n                reason: new Error(\"Page was destroyed.\"),\n                force: true\n              });\n\n              if (intentState.opListReadCapability) {\n                continue;\n              }\n\n              for (const internalRenderTask of intentState.renderTasks) {\n                waitOn.push(internalRenderTask.completed);\n                internalRenderTask.cancel();\n              }\n            }\n\n            this.objs.clear();\n\n            for (const bitmap of this._bitmaps) {\n              bitmap.close();\n            }\n\n            this._bitmaps.clear();\n\n            this._annotationPromises.clear();\n\n            this._jsActionsPromise = null;\n            this._structTreePromise = null;\n            this.pendingCleanup = false;\n            return Promise.all(waitOn);\n          }\n\n          cleanup() {\n            let resetStats = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            this.pendingCleanup = true;\n            return this._tryCleanup(resetStats);\n          }\n\n          _tryCleanup() {\n            let resetStats = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            if (!this.pendingCleanup) {\n              return false;\n            }\n\n            for (const {\n              renderTasks,\n              operatorList\n            } of this._intentStates.values()) {\n              if (renderTasks.size > 0 || !operatorList.lastChunk) {\n                return false;\n              }\n            }\n\n            this._intentStates.clear();\n\n            this.objs.clear();\n\n            this._annotationPromises.clear();\n\n            this._jsActionsPromise = null;\n            this._structTreePromise = null;\n\n            if (resetStats && this._stats) {\n              this._stats = new _display_utils.StatTimer();\n            }\n\n            for (const bitmap of this._bitmaps) {\n              bitmap.close();\n            }\n\n            this._bitmaps.clear();\n\n            this.pendingCleanup = false;\n            return true;\n          }\n\n          _startRenderPage(transparency, cacheKey) {\n            const intentState = this._intentStates.get(cacheKey);\n\n            if (!intentState) {\n              return;\n            }\n\n            if (this._stats) {\n              this._stats.timeEnd(\"Page Request\");\n            }\n\n            if (intentState.displayReadyCapability) {\n              intentState.displayReadyCapability.resolve(transparency);\n            }\n          }\n\n          _renderPageChunk(operatorListChunk, intentState) {\n            for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n              intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n              intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n            }\n\n            intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n            for (const internalRenderTask of intentState.renderTasks) {\n              internalRenderTask.operatorListChanged();\n            }\n\n            if (operatorListChunk.lastChunk) {\n              this._tryCleanup();\n            }\n          }\n\n          _pumpOperatorList(_ref5) {\n            let {\n              renderingIntent,\n              cacheKey\n            } = _ref5;\n\n            const readableStream = this._transport.messageHandler.sendWithStream(\"GetOperatorList\", {\n              pageIndex: this._pageIndex,\n              intent: renderingIntent,\n              cacheKey,\n              annotationStorage: renderingIntent & _util.RenderingIntentFlag.ANNOTATIONS_STORAGE ? this._transport.annotationStorage.serializable : null\n            });\n\n            const reader = readableStream.getReader();\n\n            const intentState = this._intentStates.get(cacheKey);\n\n            intentState.streamReader = reader;\n\n            const pump = () => {\n              reader.read().then(_ref6 => {\n                let {\n                  value,\n                  done\n                } = _ref6;\n\n                if (done) {\n                  intentState.streamReader = null;\n                  return;\n                }\n\n                if (this._transport.destroyed) {\n                  return;\n                }\n\n                this._renderPageChunk(value, intentState);\n\n                pump();\n              }, reason => {\n                intentState.streamReader = null;\n\n                if (this._transport.destroyed) {\n                  return;\n                }\n\n                if (intentState.operatorList) {\n                  intentState.operatorList.lastChunk = true;\n\n                  for (const internalRenderTask of intentState.renderTasks) {\n                    internalRenderTask.operatorListChanged();\n                  }\n\n                  this._tryCleanup();\n                }\n\n                if (intentState.displayReadyCapability) {\n                  intentState.displayReadyCapability.reject(reason);\n                } else if (intentState.opListReadCapability) {\n                  intentState.opListReadCapability.reject(reason);\n                } else {\n                  throw reason;\n                }\n              });\n            };\n\n            pump();\n          }\n\n          _abortOperatorList(_ref7) {\n            let {\n              intentState,\n              reason,\n              force = false\n            } = _ref7;\n\n            if (!intentState.streamReader) {\n              return;\n            }\n\n            if (!force) {\n              if (intentState.renderTasks.size > 0) {\n                return;\n              }\n\n              if (reason instanceof _display_utils.RenderingCancelledException) {\n                intentState.streamReaderCancelTimeout = setTimeout(() => {\n                  this._abortOperatorList({\n                    intentState,\n                    reason,\n                    force: true\n                  });\n\n                  intentState.streamReaderCancelTimeout = null;\n                }, RENDERING_CANCELLED_TIMEOUT);\n                return;\n              }\n            }\n\n            intentState.streamReader.cancel(new _util.AbortException(reason.message)).catch(() => {});\n            intentState.streamReader = null;\n\n            if (this._transport.destroyed) {\n              return;\n            }\n\n            for (const [curCacheKey, curIntentState] of this._intentStates) {\n              if (curIntentState === intentState) {\n                this._intentStates.delete(curCacheKey);\n\n                break;\n              }\n            }\n\n            this.cleanup();\n          }\n\n          get stats() {\n            return this._stats;\n          }\n\n        }\n\n        exports.PDFPageProxy = PDFPageProxy;\n\n        class LoopbackPort {\n          constructor() {\n            this._listeners = [];\n            this._deferred = Promise.resolve();\n          }\n\n          postMessage(obj, transfers) {\n            const event = {\n              data: structuredClone(obj, transfers)\n            };\n\n            this._deferred.then(() => {\n              for (const listener of this._listeners) {\n                listener.call(this, event);\n              }\n            });\n          }\n\n          addEventListener(name, listener) {\n            this._listeners.push(listener);\n          }\n\n          removeEventListener(name, listener) {\n            const i = this._listeners.indexOf(listener);\n\n            this._listeners.splice(i, 1);\n          }\n\n          terminate() {\n            this._listeners.length = 0;\n          }\n\n        }\n\n        exports.LoopbackPort = LoopbackPort;\n        const PDFWorkerUtil = {\n          isWorkerDisabled: false,\n          fallbackWorkerSrc: null,\n          fakeWorkerId: 0\n        };\n        exports.PDFWorkerUtil = PDFWorkerUtil;\n        {\n          if (_is_node.isNodeJS && typeof require === \"function\") {\n            PDFWorkerUtil.isWorkerDisabled = true;\n            PDFWorkerUtil.fallbackWorkerSrc = \"./pdf.worker.js\";\n          } else if (typeof document === \"object\") {\n            const pdfjsFilePath = document?.currentScript?.src;\n\n            if (pdfjsFilePath) {\n              PDFWorkerUtil.fallbackWorkerSrc = pdfjsFilePath.replace(/(\\.(?:min\\.)?js)(\\?.*)?$/i, \".worker$1$2\");\n            }\n          }\n\n          PDFWorkerUtil.isSameOrigin = function (baseUrl, otherUrl) {\n            let base;\n\n            try {\n              base = new URL(baseUrl);\n\n              if (!base.origin || base.origin === \"null\") {\n                return false;\n              }\n            } catch (e) {\n              return false;\n            }\n\n            const other = new URL(otherUrl, base);\n            return base.origin === other.origin;\n          };\n\n          PDFWorkerUtil.createCDNWrapper = function (url) {\n            const wrapper = `importScripts(\"${url}\");`;\n            return URL.createObjectURL(new Blob([wrapper]));\n          };\n        }\n\n        class PDFWorker {\n          static #workerPorts = new WeakMap();\n\n          constructor() {\n            let {\n              name = null,\n              port = null,\n              verbosity = (0, _util.getVerbosityLevel)()\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n            if (port && PDFWorker.#workerPorts.has(port)) {\n              throw new Error(\"Cannot use more than one PDFWorker per port.\");\n            }\n\n            this.name = name;\n            this.destroyed = false;\n            this.verbosity = verbosity;\n            this._readyCapability = (0, _util.createPromiseCapability)();\n            this._port = null;\n            this._webWorker = null;\n            this._messageHandler = null;\n\n            if (port) {\n              PDFWorker.#workerPorts.set(port, this);\n\n              this._initializeFromPort(port);\n\n              return;\n            }\n\n            this._initialize();\n          }\n\n          get promise() {\n            return this._readyCapability.promise;\n          }\n\n          get port() {\n            return this._port;\n          }\n\n          get messageHandler() {\n            return this._messageHandler;\n          }\n\n          _initializeFromPort(port) {\n            this._port = port;\n            this._messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", port);\n\n            this._messageHandler.on(\"ready\", function () {});\n\n            this._readyCapability.resolve();\n          }\n\n          _initialize() {\n            if (typeof Worker !== \"undefined\" && !PDFWorkerUtil.isWorkerDisabled && !PDFWorker._mainThreadWorkerMessageHandler) {\n              let workerSrc = PDFWorker.workerSrc;\n\n              try {\n                if (!PDFWorkerUtil.isSameOrigin(window.location.href, workerSrc)) {\n                  workerSrc = PDFWorkerUtil.createCDNWrapper(new URL(workerSrc, window.location).href);\n                }\n\n                const worker = new Worker(workerSrc);\n                const messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", worker);\n\n                const terminateEarly = () => {\n                  worker.removeEventListener(\"error\", onWorkerError);\n                  messageHandler.destroy();\n                  worker.terminate();\n\n                  if (this.destroyed) {\n                    this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n                  } else {\n                    this._setupFakeWorker();\n                  }\n                };\n\n                const onWorkerError = () => {\n                  if (!this._webWorker) {\n                    terminateEarly();\n                  }\n                };\n\n                worker.addEventListener(\"error\", onWorkerError);\n                messageHandler.on(\"test\", data => {\n                  worker.removeEventListener(\"error\", onWorkerError);\n\n                  if (this.destroyed) {\n                    terminateEarly();\n                    return;\n                  }\n\n                  if (data) {\n                    this._messageHandler = messageHandler;\n                    this._port = worker;\n                    this._webWorker = worker;\n\n                    this._readyCapability.resolve();\n\n                    messageHandler.send(\"configure\", {\n                      verbosity: this.verbosity\n                    });\n                  } else {\n                    this._setupFakeWorker();\n\n                    messageHandler.destroy();\n                    worker.terminate();\n                  }\n                });\n                messageHandler.on(\"ready\", data => {\n                  worker.removeEventListener(\"error\", onWorkerError);\n\n                  if (this.destroyed) {\n                    terminateEarly();\n                    return;\n                  }\n\n                  try {\n                    sendTest();\n                  } catch (e) {\n                    this._setupFakeWorker();\n                  }\n                });\n\n                const sendTest = () => {\n                  const testObj = new Uint8Array();\n                  messageHandler.send(\"test\", testObj, [testObj.buffer]);\n                };\n\n                sendTest();\n                return;\n              } catch (e) {\n                (0, _util.info)(\"The worker has been disabled.\");\n              }\n            }\n\n            this._setupFakeWorker();\n          }\n\n          _setupFakeWorker() {\n            if (!PDFWorkerUtil.isWorkerDisabled) {\n              (0, _util.warn)(\"Setting up fake worker.\");\n              PDFWorkerUtil.isWorkerDisabled = true;\n            }\n\n            PDFWorker._setupFakeWorkerGlobal.then(WorkerMessageHandler => {\n              if (this.destroyed) {\n                this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n\n                return;\n              }\n\n              const port = new LoopbackPort();\n              this._port = port;\n              const id = `fake${PDFWorkerUtil.fakeWorkerId++}`;\n              const workerHandler = new _message_handler.MessageHandler(id + \"_worker\", id, port);\n              WorkerMessageHandler.setup(workerHandler, port);\n              const messageHandler = new _message_handler.MessageHandler(id, id + \"_worker\", port);\n              this._messageHandler = messageHandler;\n\n              this._readyCapability.resolve();\n\n              messageHandler.send(\"configure\", {\n                verbosity: this.verbosity\n              });\n            }).catch(reason => {\n              this._readyCapability.reject(new Error(`Setting up fake worker failed: \"${reason.message}\".`));\n            });\n          }\n\n          destroy() {\n            this.destroyed = true;\n\n            if (this._webWorker) {\n              this._webWorker.terminate();\n\n              this._webWorker = null;\n            }\n\n            PDFWorker.#workerPorts.delete(this._port);\n            this._port = null;\n\n            if (this._messageHandler) {\n              this._messageHandler.destroy();\n\n              this._messageHandler = null;\n            }\n          }\n\n          static fromPort(params) {\n            if (!params?.port) {\n              throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n            }\n\n            if (this.#workerPorts.has(params.port)) {\n              return this.#workerPorts.get(params.port);\n            }\n\n            return new PDFWorker(params);\n          }\n\n          static get workerSrc() {\n            if (_worker_options.GlobalWorkerOptions.workerSrc) {\n              return _worker_options.GlobalWorkerOptions.workerSrc;\n            }\n\n            if (PDFWorkerUtil.fallbackWorkerSrc !== null) {\n              if (!_is_node.isNodeJS) {\n                (0, _display_utils.deprecated)('No \"GlobalWorkerOptions.workerSrc\" specified.');\n              }\n\n              return PDFWorkerUtil.fallbackWorkerSrc;\n            }\n\n            throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n          }\n\n          static get _mainThreadWorkerMessageHandler() {\n            try {\n              return globalThis.pdfjsWorker?.WorkerMessageHandler || null;\n            } catch (ex) {\n              return null;\n            }\n          }\n\n          static get _setupFakeWorkerGlobal() {\n            const loader = async () => {\n              const mainWorkerMessageHandler = this._mainThreadWorkerMessageHandler;\n\n              if (mainWorkerMessageHandler) {\n                return mainWorkerMessageHandler;\n              }\n\n              if (_is_node.isNodeJS && typeof require === \"function\") {\n                const worker = eval(\"require\")(this.workerSrc);\n                return worker.WorkerMessageHandler;\n              }\n\n              await (0, _display_utils.loadScript)(this.workerSrc);\n              return window.pdfjsWorker.WorkerMessageHandler;\n            };\n\n            return (0, _util.shadow)(this, \"_setupFakeWorkerGlobal\", loader());\n          }\n\n        }\n\n        exports.PDFWorker = PDFWorker;\n        {\n          PDFWorker.getWorkerSrc = function () {\n            (0, _display_utils.deprecated)(\"`PDFWorker.getWorkerSrc()`, please use `PDFWorker.workerSrc` instead.\");\n            return this.workerSrc;\n          };\n        }\n\n        class WorkerTransport {\n          #docStats = null;\n          #pageCache = new Map();\n          #pagePromises = new Map();\n          #metadataPromise = null;\n\n          constructor(messageHandler, loadingTask, networkStream, params) {\n            this.messageHandler = messageHandler;\n            this.loadingTask = loadingTask;\n            this.commonObjs = new PDFObjects();\n            this.fontLoader = new _font_loader.FontLoader({\n              docId: loadingTask.docId,\n              onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n              ownerDocument: params.ownerDocument,\n              styleElement: params.styleElement\n            });\n            this._params = params;\n\n            if (!params.useWorkerFetch) {\n              this.CMapReaderFactory = new params.CMapReaderFactory({\n                baseUrl: params.cMapUrl,\n                isCompressed: params.cMapPacked\n              });\n              this.StandardFontDataFactory = new params.StandardFontDataFactory({\n                baseUrl: params.standardFontDataUrl\n              });\n            }\n\n            this.destroyed = false;\n            this.destroyCapability = null;\n            this._passwordCapability = null;\n            this._networkStream = networkStream;\n            this._fullReader = null;\n            this._lastProgress = null;\n            this.downloadInfoCapability = (0, _util.createPromiseCapability)();\n            this.setupMessageHandler();\n          }\n\n          get annotationStorage() {\n            return (0, _util.shadow)(this, \"annotationStorage\", new _annotation_storage.AnnotationStorage());\n          }\n\n          get stats() {\n            return this.#docStats;\n          }\n\n          getRenderingIntent(intent) {\n            let annotationMode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _util.AnnotationMode.ENABLE;\n            let isOpList = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            let renderingIntent = _util.RenderingIntentFlag.DISPLAY;\n            let annotationHash = \"\";\n\n            switch (intent) {\n              case \"any\":\n                renderingIntent = _util.RenderingIntentFlag.ANY;\n                break;\n\n              case \"display\":\n                break;\n\n              case \"print\":\n                renderingIntent = _util.RenderingIntentFlag.PRINT;\n                break;\n\n              default:\n                (0, _util.warn)(`getRenderingIntent - invalid intent: ${intent}`);\n            }\n\n            switch (annotationMode) {\n              case _util.AnnotationMode.DISABLE:\n                renderingIntent += _util.RenderingIntentFlag.ANNOTATIONS_DISABLE;\n                break;\n\n              case _util.AnnotationMode.ENABLE:\n                break;\n\n              case _util.AnnotationMode.ENABLE_FORMS:\n                renderingIntent += _util.RenderingIntentFlag.ANNOTATIONS_FORMS;\n                break;\n\n              case _util.AnnotationMode.ENABLE_STORAGE:\n                renderingIntent += _util.RenderingIntentFlag.ANNOTATIONS_STORAGE;\n                annotationHash = this.annotationStorage.hash;\n                break;\n\n              default:\n                (0, _util.warn)(`getRenderingIntent - invalid annotationMode: ${annotationMode}`);\n            }\n\n            if (isOpList) {\n              renderingIntent += _util.RenderingIntentFlag.OPLIST;\n            }\n\n            return {\n              renderingIntent,\n              cacheKey: `${renderingIntent}_${annotationHash}`\n            };\n          }\n\n          destroy() {\n            if (this.destroyCapability) {\n              return this.destroyCapability.promise;\n            }\n\n            this.destroyed = true;\n            this.destroyCapability = (0, _util.createPromiseCapability)();\n\n            if (this._passwordCapability) {\n              this._passwordCapability.reject(new Error(\"Worker was destroyed during onPassword callback\"));\n            }\n\n            const waitOn = [];\n\n            for (const page of this.#pageCache.values()) {\n              waitOn.push(page._destroy());\n            }\n\n            this.#pageCache.clear();\n            this.#pagePromises.clear();\n\n            if (this.hasOwnProperty(\"annotationStorage\")) {\n              this.annotationStorage.resetModified();\n            }\n\n            const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n            waitOn.push(terminated);\n            Promise.all(waitOn).then(() => {\n              this.commonObjs.clear();\n              this.fontLoader.clear();\n              this.#metadataPromise = null;\n              this._getFieldObjectsPromise = null;\n              this._hasJSActionsPromise = null;\n\n              if (this._networkStream) {\n                this._networkStream.cancelAllRequests(new _util.AbortException(\"Worker was terminated.\"));\n              }\n\n              if (this.messageHandler) {\n                this.messageHandler.destroy();\n                this.messageHandler = null;\n              }\n\n              this.destroyCapability.resolve();\n            }, this.destroyCapability.reject);\n            return this.destroyCapability.promise;\n          }\n\n          setupMessageHandler() {\n            const {\n              messageHandler,\n              loadingTask\n            } = this;\n            messageHandler.on(\"GetReader\", (data, sink) => {\n              (0, _util.assert)(this._networkStream, \"GetReader - no `IPDFStream` instance available.\");\n              this._fullReader = this._networkStream.getFullReader();\n\n              this._fullReader.onProgress = evt => {\n                this._lastProgress = {\n                  loaded: evt.loaded,\n                  total: evt.total\n                };\n              };\n\n              sink.onPull = () => {\n                this._fullReader.read().then(function (_ref8) {\n                  let {\n                    value,\n                    done\n                  } = _ref8;\n\n                  if (done) {\n                    sink.close();\n                    return;\n                  }\n\n                  (0, _util.assert)((0, _util.isArrayBuffer)(value), \"GetReader - expected an ArrayBuffer.\");\n                  sink.enqueue(new Uint8Array(value), 1, [value]);\n                }).catch(reason => {\n                  sink.error(reason);\n                });\n              };\n\n              sink.onCancel = reason => {\n                this._fullReader.cancel(reason);\n\n                sink.ready.catch(readyReason => {\n                  if (this.destroyed) {\n                    return;\n                  }\n\n                  throw readyReason;\n                });\n              };\n            });\n            messageHandler.on(\"ReaderHeadersReady\", data => {\n              const headersCapability = (0, _util.createPromiseCapability)();\n              const fullReader = this._fullReader;\n              fullReader.headersReady.then(() => {\n                if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n                  if (this._lastProgress) {\n                    loadingTask.onProgress?.(this._lastProgress);\n                  }\n\n                  fullReader.onProgress = evt => {\n                    loadingTask.onProgress?.({\n                      loaded: evt.loaded,\n                      total: evt.total\n                    });\n                  };\n                }\n\n                headersCapability.resolve({\n                  isStreamingSupported: fullReader.isStreamingSupported,\n                  isRangeSupported: fullReader.isRangeSupported,\n                  contentLength: fullReader.contentLength\n                });\n              }, headersCapability.reject);\n              return headersCapability.promise;\n            });\n            messageHandler.on(\"GetRangeReader\", (data, sink) => {\n              (0, _util.assert)(this._networkStream, \"GetRangeReader - no `IPDFStream` instance available.\");\n\n              const rangeReader = this._networkStream.getRangeReader(data.begin, data.end);\n\n              if (!rangeReader) {\n                sink.close();\n                return;\n              }\n\n              sink.onPull = () => {\n                rangeReader.read().then(function (_ref9) {\n                  let {\n                    value,\n                    done\n                  } = _ref9;\n\n                  if (done) {\n                    sink.close();\n                    return;\n                  }\n\n                  (0, _util.assert)((0, _util.isArrayBuffer)(value), \"GetRangeReader - expected an ArrayBuffer.\");\n                  sink.enqueue(new Uint8Array(value), 1, [value]);\n                }).catch(reason => {\n                  sink.error(reason);\n                });\n              };\n\n              sink.onCancel = reason => {\n                rangeReader.cancel(reason);\n                sink.ready.catch(readyReason => {\n                  if (this.destroyed) {\n                    return;\n                  }\n\n                  throw readyReason;\n                });\n              };\n            });\n            messageHandler.on(\"GetDoc\", _ref10 => {\n              let {\n                pdfInfo\n              } = _ref10;\n              this._numPages = pdfInfo.numPages;\n              this._htmlForXfa = pdfInfo.htmlForXfa;\n              delete pdfInfo.htmlForXfa;\n\n              loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n            });\n            messageHandler.on(\"DocException\", function (ex) {\n              let reason;\n\n              switch (ex.name) {\n                case \"PasswordException\":\n                  reason = new _util.PasswordException(ex.message, ex.code);\n                  break;\n\n                case \"InvalidPDFException\":\n                  reason = new _util.InvalidPDFException(ex.message);\n                  break;\n\n                case \"MissingPDFException\":\n                  reason = new _util.MissingPDFException(ex.message);\n                  break;\n\n                case \"UnexpectedResponseException\":\n                  reason = new _util.UnexpectedResponseException(ex.message, ex.status);\n                  break;\n\n                case \"UnknownErrorException\":\n                  reason = new _util.UnknownErrorException(ex.message, ex.details);\n                  break;\n\n                default:\n                  (0, _util.unreachable)(\"DocException - expected a valid Error.\");\n              }\n\n              loadingTask._capability.reject(reason);\n            });\n            messageHandler.on(\"PasswordRequest\", exception => {\n              this._passwordCapability = (0, _util.createPromiseCapability)();\n\n              if (loadingTask.onPassword) {\n                const updatePassword = password => {\n                  if (password instanceof Error) {\n                    this._passwordCapability.reject(password);\n                  } else {\n                    this._passwordCapability.resolve({\n                      password\n                    });\n                  }\n                };\n\n                try {\n                  loadingTask.onPassword(updatePassword, exception.code);\n                } catch (ex) {\n                  this._passwordCapability.reject(ex);\n                }\n              } else {\n                this._passwordCapability.reject(new _util.PasswordException(exception.message, exception.code));\n              }\n\n              return this._passwordCapability.promise;\n            });\n            messageHandler.on(\"DataLoaded\", data => {\n              loadingTask.onProgress?.({\n                loaded: data.length,\n                total: data.length\n              });\n              this.downloadInfoCapability.resolve(data);\n            });\n            messageHandler.on(\"StartRenderPage\", data => {\n              if (this.destroyed) {\n                return;\n              }\n\n              const page = this.#pageCache.get(data.pageIndex);\n\n              page._startRenderPage(data.transparency, data.cacheKey);\n            });\n            messageHandler.on(\"commonobj\", _ref11 => {\n              let [id, type, exportedData] = _ref11;\n\n              if (this.destroyed) {\n                return;\n              }\n\n              if (this.commonObjs.has(id)) {\n                return;\n              }\n\n              switch (type) {\n                case \"Font\":\n                  const params = this._params;\n\n                  if (\"error\" in exportedData) {\n                    const exportedError = exportedData.error;\n                    (0, _util.warn)(`Error during font loading: ${exportedError}`);\n                    this.commonObjs.resolve(id, exportedError);\n                    break;\n                  }\n\n                  let fontRegistry = null;\n\n                  if (params.pdfBug && globalThis.FontInspector?.enabled) {\n                    fontRegistry = {\n                      registerFont(font, url) {\n                        globalThis.FontInspector.fontAdded(font, url);\n                      }\n\n                    };\n                  }\n\n                  const font = new _font_loader.FontFaceObject(exportedData, {\n                    isEvalSupported: params.isEvalSupported,\n                    disableFontFace: params.disableFontFace,\n                    ignoreErrors: params.ignoreErrors,\n                    onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n                    fontRegistry\n                  });\n                  this.fontLoader.bind(font).catch(reason => {\n                    return messageHandler.sendWithPromise(\"FontFallback\", {\n                      id\n                    });\n                  }).finally(() => {\n                    if (!params.fontExtraProperties && font.data) {\n                      font.data = null;\n                    }\n\n                    this.commonObjs.resolve(id, font);\n                  });\n                  break;\n\n                case \"FontPath\":\n                case \"Image\":\n                  this.commonObjs.resolve(id, exportedData);\n                  break;\n\n                default:\n                  throw new Error(`Got unknown common object type ${type}`);\n              }\n            });\n            messageHandler.on(\"obj\", _ref12 => {\n              let [id, pageIndex, type, imageData] = _ref12;\n\n              if (this.destroyed) {\n                return;\n              }\n\n              const pageProxy = this.#pageCache.get(pageIndex);\n\n              if (pageProxy.objs.has(id)) {\n                return;\n              }\n\n              switch (type) {\n                case \"Image\":\n                  pageProxy.objs.resolve(id, imageData);\n                  const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n\n                  if (imageData) {\n                    let length;\n\n                    if (imageData.bitmap) {\n                      const {\n                        bitmap,\n                        width,\n                        height\n                      } = imageData;\n                      length = width * height * 4;\n\n                      pageProxy._bitmaps.add(bitmap);\n                    } else {\n                      length = imageData.data?.length || 0;\n                    }\n\n                    if (length > MAX_IMAGE_SIZE_TO_STORE) {\n                      pageProxy.cleanupAfterRender = true;\n                    }\n                  }\n\n                  break;\n\n                case \"Pattern\":\n                  pageProxy.objs.resolve(id, imageData);\n                  break;\n\n                default:\n                  throw new Error(`Got unknown object type ${type}`);\n              }\n            });\n            messageHandler.on(\"DocProgress\", data => {\n              if (this.destroyed) {\n                return;\n              }\n\n              loadingTask.onProgress?.({\n                loaded: data.loaded,\n                total: data.total\n              });\n            });\n            messageHandler.on(\"DocStats\", data => {\n              if (this.destroyed) {\n                return;\n              }\n\n              this.#docStats = Object.freeze({\n                streamTypes: Object.freeze(data.streamTypes),\n                fontTypes: Object.freeze(data.fontTypes)\n              });\n            });\n            messageHandler.on(\"UnsupportedFeature\", this._onUnsupportedFeature.bind(this));\n            messageHandler.on(\"FetchBuiltInCMap\", data => {\n              if (this.destroyed) {\n                return Promise.reject(new Error(\"Worker was destroyed.\"));\n              }\n\n              if (!this.CMapReaderFactory) {\n                return Promise.reject(new Error(\"CMapReaderFactory not initialized, see the `useWorkerFetch` parameter.\"));\n              }\n\n              return this.CMapReaderFactory.fetch(data);\n            });\n            messageHandler.on(\"FetchStandardFontData\", data => {\n              if (this.destroyed) {\n                return Promise.reject(new Error(\"Worker was destroyed.\"));\n              }\n\n              if (!this.StandardFontDataFactory) {\n                return Promise.reject(new Error(\"StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter.\"));\n              }\n\n              return this.StandardFontDataFactory.fetch(data);\n            });\n          }\n\n          _onUnsupportedFeature(_ref13) {\n            let {\n              featureId\n            } = _ref13;\n\n            if (this.destroyed) {\n              return;\n            }\n\n            this.loadingTask.onUnsupportedFeature?.(featureId);\n          }\n\n          getData() {\n            return this.messageHandler.sendWithPromise(\"GetData\", null);\n          }\n\n          getPage(pageNumber) {\n            if (!Number.isInteger(pageNumber) || pageNumber <= 0 || pageNumber > this._numPages) {\n              return Promise.reject(new Error(\"Invalid page request.\"));\n            }\n\n            const pageIndex = pageNumber - 1,\n                  cachedPromise = this.#pagePromises.get(pageIndex);\n\n            if (cachedPromise) {\n              return cachedPromise;\n            }\n\n            const promise = this.messageHandler.sendWithPromise(\"GetPage\", {\n              pageIndex\n            }).then(pageInfo => {\n              if (this.destroyed) {\n                throw new Error(\"Transport destroyed\");\n              }\n\n              const page = new PDFPageProxy(pageIndex, pageInfo, this, this._params.ownerDocument, this._params.pdfBug);\n              this.#pageCache.set(pageIndex, page);\n              return page;\n            });\n            this.#pagePromises.set(pageIndex, promise);\n            return promise;\n          }\n\n          getPageIndex(ref) {\n            if (typeof ref !== \"object\" || ref === null || !Number.isInteger(ref.num) || ref.num < 0 || !Number.isInteger(ref.gen) || ref.gen < 0) {\n              return Promise.reject(new Error(\"Invalid pageIndex request.\"));\n            }\n\n            return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n              num: ref.num,\n              gen: ref.gen\n            });\n          }\n\n          getAnnotations(pageIndex, intent) {\n            return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n              pageIndex,\n              intent\n            });\n          }\n\n          saveDocument() {\n            return this.messageHandler.sendWithPromise(\"SaveDocument\", {\n              isPureXfa: !!this._htmlForXfa,\n              numPages: this._numPages,\n              annotationStorage: this.annotationStorage.serializable,\n              filename: this._fullReader?.filename ?? null\n            }).finally(() => {\n              this.annotationStorage.resetModified();\n            });\n          }\n\n          getFieldObjects() {\n            return this._getFieldObjectsPromise ||= this.messageHandler.sendWithPromise(\"GetFieldObjects\", null);\n          }\n\n          hasJSActions() {\n            return this._hasJSActionsPromise ||= this.messageHandler.sendWithPromise(\"HasJSActions\", null);\n          }\n\n          getCalculationOrderIds() {\n            return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n          }\n\n          getDestinations() {\n            return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n          }\n\n          getDestination(id) {\n            if (typeof id !== \"string\") {\n              return Promise.reject(new Error(\"Invalid destination request.\"));\n            }\n\n            return this.messageHandler.sendWithPromise(\"GetDestination\", {\n              id\n            });\n          }\n\n          getPageLabels() {\n            return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n          }\n\n          getPageLayout() {\n            return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n          }\n\n          getPageMode() {\n            return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n          }\n\n          getViewerPreferences() {\n            return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n          }\n\n          getOpenAction() {\n            return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n          }\n\n          getAttachments() {\n            return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n          }\n\n          getJavaScript() {\n            return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n          }\n\n          getDocJSActions() {\n            return this.messageHandler.sendWithPromise(\"GetDocJSActions\", null);\n          }\n\n          getPageJSActions(pageIndex) {\n            return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n              pageIndex\n            });\n          }\n\n          getStructTree(pageIndex) {\n            return this.messageHandler.sendWithPromise(\"GetStructTree\", {\n              pageIndex\n            });\n          }\n\n          getOutline() {\n            return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n          }\n\n          getOptionalContentConfig() {\n            return this.messageHandler.sendWithPromise(\"GetOptionalContentConfig\", null).then(results => {\n              return new _optional_content_config.OptionalContentConfig(results);\n            });\n          }\n\n          getPermissions() {\n            return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n          }\n\n          getMetadata() {\n            return this.#metadataPromise ||= this.messageHandler.sendWithPromise(\"GetMetadata\", null).then(results => {\n              return {\n                info: results[0],\n                metadata: results[1] ? new _metadata.Metadata(results[1]) : null,\n                contentDispositionFilename: this._fullReader?.filename ?? null,\n                contentLength: this._fullReader?.contentLength ?? null\n              };\n            });\n          }\n\n          getMarkInfo() {\n            return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n          }\n\n          async startCleanup() {\n            let keepLoadedFonts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            await this.messageHandler.sendWithPromise(\"Cleanup\", null);\n\n            if (this.destroyed) {\n              return;\n            }\n\n            for (const page of this.#pageCache.values()) {\n              const cleanupSuccessful = page.cleanup();\n\n              if (!cleanupSuccessful) {\n                throw new Error(`startCleanup: Page ${page.pageNumber} is currently rendering.`);\n              }\n            }\n\n            this.commonObjs.clear();\n\n            if (!keepLoadedFonts) {\n              this.fontLoader.clear();\n            }\n\n            this.#metadataPromise = null;\n            this._getFieldObjectsPromise = null;\n            this._hasJSActionsPromise = null;\n          }\n\n          get loadingParams() {\n            const params = this._params;\n            return (0, _util.shadow)(this, \"loadingParams\", {\n              disableAutoFetch: params.disableAutoFetch,\n              enableXfa: params.enableXfa\n            });\n          }\n\n        }\n\n        class PDFObjects {\n          #objs = Object.create(null);\n\n          #ensureObj(objId) {\n            const obj = this.#objs[objId];\n\n            if (obj) {\n              return obj;\n            }\n\n            return this.#objs[objId] = {\n              capability: (0, _util.createPromiseCapability)(),\n              data: null\n            };\n          }\n\n          get(objId) {\n            let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n            if (callback) {\n              const obj = this.#ensureObj(objId);\n              obj.capability.promise.then(() => callback(obj.data));\n              return null;\n            }\n\n            const obj = this.#objs[objId];\n\n            if (!obj?.capability.settled) {\n              throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n            }\n\n            return obj.data;\n          }\n\n          has(objId) {\n            const obj = this.#objs[objId];\n            return obj?.capability.settled || false;\n          }\n\n          resolve(objId) {\n            let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            const obj = this.#ensureObj(objId);\n            obj.data = data;\n            obj.capability.resolve();\n          }\n\n          clear() {\n            this.#objs = Object.create(null);\n          }\n\n        }\n\n        class RenderTask {\n          constructor(internalRenderTask) {\n            this._internalRenderTask = internalRenderTask;\n            this.onContinue = null;\n          }\n\n          get promise() {\n            return this._internalRenderTask.capability.promise;\n          }\n\n          cancel() {\n            this._internalRenderTask.cancel();\n          }\n\n        }\n\n        exports.RenderTask = RenderTask;\n\n        class InternalRenderTask {\n          static #canvasInUse = new WeakSet();\n\n          constructor(_ref14) {\n            let {\n              callback,\n              params,\n              objs,\n              commonObjs,\n              annotationCanvasMap,\n              operatorList,\n              pageIndex,\n              canvasFactory,\n              useRequestAnimationFrame = false,\n              pdfBug = false,\n              pageColors = null\n            } = _ref14;\n            this.callback = callback;\n            this.params = params;\n            this.objs = objs;\n            this.commonObjs = commonObjs;\n            this.annotationCanvasMap = annotationCanvasMap;\n            this.operatorListIdx = null;\n            this.operatorList = operatorList;\n            this._pageIndex = pageIndex;\n            this.canvasFactory = canvasFactory;\n            this._pdfBug = pdfBug;\n            this.pageColors = pageColors;\n            this.running = false;\n            this.graphicsReadyCallback = null;\n            this.graphicsReady = false;\n            this._useRequestAnimationFrame = useRequestAnimationFrame === true && typeof window !== \"undefined\";\n            this.cancelled = false;\n            this.capability = (0, _util.createPromiseCapability)();\n            this.task = new RenderTask(this);\n            this._cancelBound = this.cancel.bind(this);\n            this._continueBound = this._continue.bind(this);\n            this._scheduleNextBound = this._scheduleNext.bind(this);\n            this._nextBound = this._next.bind(this);\n            this._canvas = params.canvasContext.canvas;\n          }\n\n          get completed() {\n            return this.capability.promise.catch(function () {});\n          }\n\n          initializeGraphics(_ref15) {\n            let {\n              transparency = false,\n              optionalContentConfig\n            } = _ref15;\n\n            if (this.cancelled) {\n              return;\n            }\n\n            if (this._canvas) {\n              if (InternalRenderTask.#canvasInUse.has(this._canvas)) {\n                throw new Error(\"Cannot use the same canvas during multiple render() operations. \" + \"Use different canvas or ensure previous operations were \" + \"cancelled or completed.\");\n              }\n\n              InternalRenderTask.#canvasInUse.add(this._canvas);\n            }\n\n            if (this._pdfBug && globalThis.StepperManager?.enabled) {\n              this.stepper = globalThis.StepperManager.create(this._pageIndex);\n              this.stepper.init(this.operatorList);\n              this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n            }\n\n            const {\n              canvasContext,\n              viewport,\n              transform,\n              imageLayer,\n              background\n            } = this.params;\n            this.gfx = new _canvas.CanvasGraphics(canvasContext, this.commonObjs, this.objs, this.canvasFactory, imageLayer, optionalContentConfig, this.annotationCanvasMap, this.pageColors);\n            this.gfx.beginDrawing({\n              transform,\n              viewport,\n              transparency,\n              background\n            });\n            this.operatorListIdx = 0;\n            this.graphicsReady = true;\n\n            if (this.graphicsReadyCallback) {\n              this.graphicsReadyCallback();\n            }\n          }\n\n          cancel() {\n            let error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n            this.running = false;\n            this.cancelled = true;\n\n            if (this.gfx) {\n              this.gfx.endDrawing();\n            }\n\n            if (this._canvas) {\n              InternalRenderTask.#canvasInUse.delete(this._canvas);\n            }\n\n            this.callback(error || new _display_utils.RenderingCancelledException(`Rendering cancelled, page ${this._pageIndex + 1}`, \"canvas\"));\n          }\n\n          operatorListChanged() {\n            if (!this.graphicsReady) {\n              if (!this.graphicsReadyCallback) {\n                this.graphicsReadyCallback = this._continueBound;\n              }\n\n              return;\n            }\n\n            if (this.stepper) {\n              this.stepper.updateOperatorList(this.operatorList);\n            }\n\n            if (this.running) {\n              return;\n            }\n\n            this._continue();\n          }\n\n          _continue() {\n            this.running = true;\n\n            if (this.cancelled) {\n              return;\n            }\n\n            if (this.task.onContinue) {\n              this.task.onContinue(this._scheduleNextBound);\n            } else {\n              this._scheduleNext();\n            }\n          }\n\n          _scheduleNext() {\n            if (this._useRequestAnimationFrame) {\n              window.requestAnimationFrame(() => {\n                this._nextBound().catch(this._cancelBound);\n              });\n            } else {\n              Promise.resolve().then(this._nextBound).catch(this._cancelBound);\n            }\n          }\n\n          async _next() {\n            if (this.cancelled) {\n              return;\n            }\n\n            this.operatorListIdx = this.gfx.executeOperatorList(this.operatorList, this.operatorListIdx, this._continueBound, this.stepper);\n\n            if (this.operatorListIdx === this.operatorList.argsArray.length) {\n              this.running = false;\n\n              if (this.operatorList.lastChunk) {\n                this.gfx.endDrawing();\n\n                if (this._canvas) {\n                  InternalRenderTask.#canvasInUse.delete(this._canvas);\n                }\n\n                this.callback();\n              }\n            }\n          }\n\n        }\n\n        const version = '2.14.305';\n        exports.version = version;\n        const build = 'eaaa8b4ad';\n        exports.build = build;\n        /***/\n      },\n      /* 5 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.StatTimer = exports.RenderingCancelledException = exports.PixelsPerInch = exports.PageViewport = exports.PDFDateString = exports.DOMStandardFontDataFactory = exports.DOMSVGFactory = exports.DOMCanvasFactory = exports.DOMCMapReaderFactory = void 0;\n        exports.deprecated = deprecated;\n        exports.getFilenameFromUrl = getFilenameFromUrl;\n        exports.getPdfFilenameFromUrl = getPdfFilenameFromUrl;\n        exports.getXfaPageViewport = getXfaPageViewport;\n        exports.isDataScheme = isDataScheme;\n        exports.isPdfFile = isPdfFile;\n        exports.isValidFetchUrl = isValidFetchUrl;\n        exports.loadScript = loadScript;\n\n        var _base_factory = __w_pdfjs_require__(6);\n\n        var _util = __w_pdfjs_require__(1);\n\n        const SVG_NS = \"http://www.w3.org/2000/svg\";\n\n        class PixelsPerInch {\n          static CSS = 96.0;\n          static PDF = 72.0;\n          static PDF_TO_CSS_UNITS = this.CSS / this.PDF;\n        }\n\n        exports.PixelsPerInch = PixelsPerInch;\n\n        class DOMCanvasFactory extends _base_factory.BaseCanvasFactory {\n          constructor() {\n            let {\n              ownerDocument = globalThis.document\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            super();\n            this._document = ownerDocument;\n          }\n\n          _createCanvas(width, height) {\n            const canvas = this._document.createElement(\"canvas\");\n\n            canvas.width = width;\n            canvas.height = height;\n            return canvas;\n          }\n\n        }\n\n        exports.DOMCanvasFactory = DOMCanvasFactory;\n\n        async function fetchData(url) {\n          let asTypedArray = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n          if (isValidFetchUrl(url, document.baseURI)) {\n            const response = await fetch(url);\n\n            if (!response.ok) {\n              throw new Error(response.statusText);\n            }\n\n            return asTypedArray ? new Uint8Array(await response.arrayBuffer()) : (0, _util.stringToBytes)(await response.text());\n          }\n\n          return new Promise((resolve, reject) => {\n            const request = new XMLHttpRequest();\n            request.open(\"GET\", url, true);\n\n            if (asTypedArray) {\n              request.responseType = \"arraybuffer\";\n            }\n\n            request.onreadystatechange = () => {\n              if (request.readyState !== XMLHttpRequest.DONE) {\n                return;\n              }\n\n              if (request.status === 200 || request.status === 0) {\n                let data;\n\n                if (asTypedArray && request.response) {\n                  data = new Uint8Array(request.response);\n                } else if (!asTypedArray && request.responseText) {\n                  data = (0, _util.stringToBytes)(request.responseText);\n                }\n\n                if (data) {\n                  resolve(data);\n                  return;\n                }\n              }\n\n              reject(new Error(request.statusText));\n            };\n\n            request.send(null);\n          });\n        }\n\n        class DOMCMapReaderFactory extends _base_factory.BaseCMapReaderFactory {\n          _fetchData(url, compressionType) {\n            return fetchData(url, this.isCompressed).then(data => {\n              return {\n                cMapData: data,\n                compressionType\n              };\n            });\n          }\n\n        }\n\n        exports.DOMCMapReaderFactory = DOMCMapReaderFactory;\n\n        class DOMStandardFontDataFactory extends _base_factory.BaseStandardFontDataFactory {\n          _fetchData(url) {\n            return fetchData(url, true);\n          }\n\n        }\n\n        exports.DOMStandardFontDataFactory = DOMStandardFontDataFactory;\n\n        class DOMSVGFactory extends _base_factory.BaseSVGFactory {\n          _createSVG(type) {\n            return document.createElementNS(SVG_NS, type);\n          }\n\n        }\n\n        exports.DOMSVGFactory = DOMSVGFactory;\n\n        class PageViewport {\n          constructor(_ref16) {\n            let {\n              viewBox,\n              scale,\n              rotation,\n              offsetX = 0,\n              offsetY = 0,\n              dontFlip = false\n            } = _ref16;\n            this.viewBox = viewBox;\n            this.scale = scale;\n            this.rotation = rotation;\n            this.offsetX = offsetX;\n            this.offsetY = offsetY;\n            const centerX = (viewBox[2] + viewBox[0]) / 2;\n            const centerY = (viewBox[3] + viewBox[1]) / 2;\n            let rotateA, rotateB, rotateC, rotateD;\n            rotation %= 360;\n\n            if (rotation < 0) {\n              rotation += 360;\n            }\n\n            switch (rotation) {\n              case 180:\n                rotateA = -1;\n                rotateB = 0;\n                rotateC = 0;\n                rotateD = 1;\n                break;\n\n              case 90:\n                rotateA = 0;\n                rotateB = 1;\n                rotateC = 1;\n                rotateD = 0;\n                break;\n\n              case 270:\n                rotateA = 0;\n                rotateB = -1;\n                rotateC = -1;\n                rotateD = 0;\n                break;\n\n              case 0:\n                rotateA = 1;\n                rotateB = 0;\n                rotateC = 0;\n                rotateD = -1;\n                break;\n\n              default:\n                throw new Error(\"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\");\n            }\n\n            if (dontFlip) {\n              rotateC = -rotateC;\n              rotateD = -rotateD;\n            }\n\n            let offsetCanvasX, offsetCanvasY;\n            let width, height;\n\n            if (rotateA === 0) {\n              offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n              offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n              width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n              height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n            } else {\n              offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n              offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n              width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n              height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n            }\n\n            this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n            this.width = width;\n            this.height = height;\n          }\n\n          clone() {\n            let {\n              scale = this.scale,\n              rotation = this.rotation,\n              offsetX = this.offsetX,\n              offsetY = this.offsetY,\n              dontFlip = false\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            return new PageViewport({\n              viewBox: this.viewBox.slice(),\n              scale,\n              rotation,\n              offsetX,\n              offsetY,\n              dontFlip\n            });\n          }\n\n          convertToViewportPoint(x, y) {\n            return _util.Util.applyTransform([x, y], this.transform);\n          }\n\n          convertToViewportRectangle(rect) {\n            const topLeft = _util.Util.applyTransform([rect[0], rect[1]], this.transform);\n\n            const bottomRight = _util.Util.applyTransform([rect[2], rect[3]], this.transform);\n\n            return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n          }\n\n          convertToPdfPoint(x, y) {\n            return _util.Util.applyInverseTransform([x, y], this.transform);\n          }\n\n        }\n\n        exports.PageViewport = PageViewport;\n\n        class RenderingCancelledException extends _util.BaseException {\n          constructor(msg, type) {\n            super(msg, \"RenderingCancelledException\");\n            this.type = type;\n          }\n\n        }\n\n        exports.RenderingCancelledException = RenderingCancelledException;\n\n        function isDataScheme(url) {\n          const ii = url.length;\n          let i = 0;\n\n          while (i < ii && url[i].trim() === \"\") {\n            i++;\n          }\n\n          return url.substring(i, i + 5).toLowerCase() === \"data:\";\n        }\n\n        function isPdfFile(filename) {\n          return typeof filename === \"string\" && /\\.pdf$/i.test(filename);\n        }\n\n        function getFilenameFromUrl(url) {\n          const anchor = url.indexOf(\"#\");\n          const query = url.indexOf(\"?\");\n          const end = Math.min(anchor > 0 ? anchor : url.length, query > 0 ? query : url.length);\n          return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n        }\n\n        function getPdfFilenameFromUrl(url) {\n          let defaultFilename = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"document.pdf\";\n\n          if (typeof url !== \"string\") {\n            return defaultFilename;\n          }\n\n          if (isDataScheme(url)) {\n            (0, _util.warn)('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');\n            return defaultFilename;\n          }\n\n          const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n          const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n          const splitURI = reURI.exec(url);\n          let suggestedFilename = reFilename.exec(splitURI[1]) || reFilename.exec(splitURI[2]) || reFilename.exec(splitURI[3]);\n\n          if (suggestedFilename) {\n            suggestedFilename = suggestedFilename[0];\n\n            if (suggestedFilename.includes(\"%\")) {\n              try {\n                suggestedFilename = reFilename.exec(decodeURIComponent(suggestedFilename))[0];\n              } catch (ex) {}\n            }\n          }\n\n          return suggestedFilename || defaultFilename;\n        }\n\n        class StatTimer {\n          constructor() {\n            this.started = Object.create(null);\n            this.times = [];\n          }\n\n          time(name) {\n            if (name in this.started) {\n              (0, _util.warn)(`Timer is already running for ${name}`);\n            }\n\n            this.started[name] = Date.now();\n          }\n\n          timeEnd(name) {\n            if (!(name in this.started)) {\n              (0, _util.warn)(`Timer has not been started for ${name}`);\n            }\n\n            this.times.push({\n              name,\n              start: this.started[name],\n              end: Date.now()\n            });\n            delete this.started[name];\n          }\n\n          toString() {\n            const outBuf = [];\n            let longest = 0;\n\n            for (const time of this.times) {\n              const name = time.name;\n\n              if (name.length > longest) {\n                longest = name.length;\n              }\n            }\n\n            for (const time of this.times) {\n              const duration = time.end - time.start;\n              outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n            }\n\n            return outBuf.join(\"\");\n          }\n\n        }\n\n        exports.StatTimer = StatTimer;\n\n        function isValidFetchUrl(url, baseUrl) {\n          try {\n            const {\n              protocol\n            } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n            return protocol === \"http:\" || protocol === \"https:\";\n          } catch (ex) {\n            return false;\n          }\n        }\n\n        function loadScript(src) {\n          let removeScriptElement = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n          return new Promise((resolve, reject) => {\n            const script = document.createElement(\"script\");\n            script.src = src;\n\n            script.onload = function (evt) {\n              if (removeScriptElement) {\n                script.remove();\n              }\n\n              resolve(evt);\n            };\n\n            script.onerror = function () {\n              reject(new Error(`Cannot load script at: ${script.src}`));\n            };\n\n            (document.head || document.documentElement).appendChild(script);\n          });\n        }\n\n        function deprecated(details) {\n          console.log(\"Deprecated API usage: \" + details);\n        }\n\n        let pdfDateStringRegex;\n\n        class PDFDateString {\n          static toDateObject(input) {\n            if (!input || typeof input !== \"string\") {\n              return null;\n            }\n\n            if (!pdfDateStringRegex) {\n              pdfDateStringRegex = new RegExp(\"^D:\" + \"(\\\\d{4})\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"([Z|+|-])?\" + \"(\\\\d{2})?\" + \"'?\" + \"(\\\\d{2})?\" + \"'?\");\n            }\n\n            const matches = pdfDateStringRegex.exec(input);\n\n            if (!matches) {\n              return null;\n            }\n\n            const year = parseInt(matches[1], 10);\n            let month = parseInt(matches[2], 10);\n            month = month >= 1 && month <= 12 ? month - 1 : 0;\n            let day = parseInt(matches[3], 10);\n            day = day >= 1 && day <= 31 ? day : 1;\n            let hour = parseInt(matches[4], 10);\n            hour = hour >= 0 && hour <= 23 ? hour : 0;\n            let minute = parseInt(matches[5], 10);\n            minute = minute >= 0 && minute <= 59 ? minute : 0;\n            let second = parseInt(matches[6], 10);\n            second = second >= 0 && second <= 59 ? second : 0;\n            const universalTimeRelation = matches[7] || \"Z\";\n            let offsetHour = parseInt(matches[8], 10);\n            offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n            let offsetMinute = parseInt(matches[9], 10) || 0;\n            offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n            if (universalTimeRelation === \"-\") {\n              hour += offsetHour;\n              minute += offsetMinute;\n            } else if (universalTimeRelation === \"+\") {\n              hour -= offsetHour;\n              minute -= offsetMinute;\n            }\n\n            return new Date(Date.UTC(year, month, day, hour, minute, second));\n          }\n\n        }\n\n        exports.PDFDateString = PDFDateString;\n\n        function getXfaPageViewport(xfaPage, _ref17) {\n          let {\n            scale = 1,\n            rotation = 0\n          } = _ref17;\n          const {\n            width,\n            height\n          } = xfaPage.attributes.style;\n          const viewBox = [0, 0, parseInt(width), parseInt(height)];\n          return new PageViewport({\n            viewBox,\n            scale,\n            rotation\n          });\n        }\n        /***/\n\n      },\n      /* 6 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.BaseStandardFontDataFactory = exports.BaseSVGFactory = exports.BaseCanvasFactory = exports.BaseCMapReaderFactory = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        class BaseCanvasFactory {\n          constructor() {\n            if (this.constructor === BaseCanvasFactory) {\n              (0, _util.unreachable)(\"Cannot initialize BaseCanvasFactory.\");\n            }\n          }\n\n          create(width, height) {\n            if (width <= 0 || height <= 0) {\n              throw new Error(\"Invalid canvas size\");\n            }\n\n            const canvas = this._createCanvas(width, height);\n\n            return {\n              canvas,\n              context: canvas.getContext(\"2d\")\n            };\n          }\n\n          reset(canvasAndContext, width, height) {\n            if (!canvasAndContext.canvas) {\n              throw new Error(\"Canvas is not specified\");\n            }\n\n            if (width <= 0 || height <= 0) {\n              throw new Error(\"Invalid canvas size\");\n            }\n\n            canvasAndContext.canvas.width = width;\n            canvasAndContext.canvas.height = height;\n          }\n\n          destroy(canvasAndContext) {\n            if (!canvasAndContext.canvas) {\n              throw new Error(\"Canvas is not specified\");\n            }\n\n            canvasAndContext.canvas.width = 0;\n            canvasAndContext.canvas.height = 0;\n            canvasAndContext.canvas = null;\n            canvasAndContext.context = null;\n          }\n\n          _createCanvas(width, height) {\n            (0, _util.unreachable)(\"Abstract method `_createCanvas` called.\");\n          }\n\n        }\n\n        exports.BaseCanvasFactory = BaseCanvasFactory;\n\n        class BaseCMapReaderFactory {\n          constructor(_ref18) {\n            let {\n              baseUrl = null,\n              isCompressed = false\n            } = _ref18;\n\n            if (this.constructor === BaseCMapReaderFactory) {\n              (0, _util.unreachable)(\"Cannot initialize BaseCMapReaderFactory.\");\n            }\n\n            this.baseUrl = baseUrl;\n            this.isCompressed = isCompressed;\n          }\n\n          async fetch(_ref19) {\n            let {\n              name\n            } = _ref19;\n\n            if (!this.baseUrl) {\n              throw new Error('The CMap \"baseUrl\" parameter must be specified, ensure that ' + 'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.');\n            }\n\n            if (!name) {\n              throw new Error(\"CMap name must be specified.\");\n            }\n\n            const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n            const compressionType = this.isCompressed ? _util.CMapCompressionType.BINARY : _util.CMapCompressionType.NONE;\n            return this._fetchData(url, compressionType).catch(reason => {\n              throw new Error(`Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`);\n            });\n          }\n\n          _fetchData(url, compressionType) {\n            (0, _util.unreachable)(\"Abstract method `_fetchData` called.\");\n          }\n\n        }\n\n        exports.BaseCMapReaderFactory = BaseCMapReaderFactory;\n\n        class BaseStandardFontDataFactory {\n          constructor(_ref20) {\n            let {\n              baseUrl = null\n            } = _ref20;\n\n            if (this.constructor === BaseStandardFontDataFactory) {\n              (0, _util.unreachable)(\"Cannot initialize BaseStandardFontDataFactory.\");\n            }\n\n            this.baseUrl = baseUrl;\n          }\n\n          async fetch(_ref21) {\n            let {\n              filename\n            } = _ref21;\n\n            if (!this.baseUrl) {\n              throw new Error('The standard font \"baseUrl\" parameter must be specified, ensure that ' + 'the \"standardFontDataUrl\" API parameter is provided.');\n            }\n\n            if (!filename) {\n              throw new Error(\"Font filename must be specified.\");\n            }\n\n            const url = `${this.baseUrl}${filename}`;\n            return this._fetchData(url).catch(reason => {\n              throw new Error(`Unable to load font data at: ${url}`);\n            });\n          }\n\n          _fetchData(url) {\n            (0, _util.unreachable)(\"Abstract method `_fetchData` called.\");\n          }\n\n        }\n\n        exports.BaseStandardFontDataFactory = BaseStandardFontDataFactory;\n\n        class BaseSVGFactory {\n          constructor() {\n            if (this.constructor === BaseSVGFactory) {\n              (0, _util.unreachable)(\"Cannot initialize BaseSVGFactory.\");\n            }\n          }\n\n          create(width, height) {\n            if (width <= 0 || height <= 0) {\n              throw new Error(\"Invalid SVG dimensions\");\n            }\n\n            const svg = this._createSVG(\"svg:svg\");\n\n            svg.setAttribute(\"version\", \"1.1\");\n            svg.setAttribute(\"width\", `${width}px`);\n            svg.setAttribute(\"height\", `${height}px`);\n            svg.setAttribute(\"preserveAspectRatio\", \"none\");\n            svg.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n            return svg;\n          }\n\n          createElement(type) {\n            if (typeof type !== \"string\") {\n              throw new Error(\"Invalid SVG element type\");\n            }\n\n            return this._createSVG(type);\n          }\n\n          _createSVG(type) {\n            (0, _util.unreachable)(\"Abstract method `_createSVG` called.\");\n          }\n\n        }\n\n        exports.BaseSVGFactory = BaseSVGFactory;\n        /***/\n      },\n      /* 7 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.FontLoader = exports.FontFaceObject = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        class BaseFontLoader {\n          constructor(_ref22) {\n            let {\n              docId,\n              onUnsupportedFeature,\n              ownerDocument = globalThis.document,\n              styleElement = null\n            } = _ref22;\n\n            if (this.constructor === BaseFontLoader) {\n              (0, _util.unreachable)(\"Cannot initialize BaseFontLoader.\");\n            }\n\n            this.docId = docId;\n            this._onUnsupportedFeature = onUnsupportedFeature;\n            this._document = ownerDocument;\n            this.nativeFontFaces = [];\n            this.styleElement = null;\n          }\n\n          addNativeFontFace(nativeFontFace) {\n            this.nativeFontFaces.push(nativeFontFace);\n\n            this._document.fonts.add(nativeFontFace);\n          }\n\n          insertRule(rule) {\n            let styleElement = this.styleElement;\n\n            if (!styleElement) {\n              styleElement = this.styleElement = this._document.createElement(\"style\");\n              styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n\n              this._document.documentElement.getElementsByTagName(\"head\")[0].appendChild(styleElement);\n            }\n\n            const styleSheet = styleElement.sheet;\n            styleSheet.insertRule(rule, styleSheet.cssRules.length);\n          }\n\n          clear() {\n            for (const nativeFontFace of this.nativeFontFaces) {\n              this._document.fonts.delete(nativeFontFace);\n            }\n\n            this.nativeFontFaces.length = 0;\n\n            if (this.styleElement) {\n              this.styleElement.remove();\n              this.styleElement = null;\n            }\n          }\n\n          async bind(font) {\n            if (font.attached || font.missingFile) {\n              return;\n            }\n\n            font.attached = true;\n\n            if (this.isFontLoadingAPISupported) {\n              const nativeFontFace = font.createNativeFontFace();\n\n              if (nativeFontFace) {\n                this.addNativeFontFace(nativeFontFace);\n\n                try {\n                  await nativeFontFace.loaded;\n                } catch (ex) {\n                  this._onUnsupportedFeature({\n                    featureId: _util.UNSUPPORTED_FEATURES.errorFontLoadNative\n                  });\n\n                  (0, _util.warn)(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n                  font.disableFontFace = true;\n                  throw ex;\n                }\n              }\n\n              return;\n            }\n\n            const rule = font.createFontFaceRule();\n\n            if (rule) {\n              this.insertRule(rule);\n\n              if (this.isSyncFontLoadingSupported) {\n                return;\n              }\n\n              await new Promise(resolve => {\n                const request = this._queueLoadingCallback(resolve);\n\n                this._prepareFontLoadEvent([rule], [font], request);\n              });\n            }\n          }\n\n          _queueLoadingCallback(callback) {\n            (0, _util.unreachable)(\"Abstract method `_queueLoadingCallback`.\");\n          }\n\n          get isFontLoadingAPISupported() {\n            const hasFonts = !!this._document?.fonts;\n            return (0, _util.shadow)(this, \"isFontLoadingAPISupported\", hasFonts);\n          }\n\n          get isSyncFontLoadingSupported() {\n            (0, _util.unreachable)(\"Abstract method `isSyncFontLoadingSupported`.\");\n          }\n\n          get _loadTestFont() {\n            (0, _util.unreachable)(\"Abstract method `_loadTestFont`.\");\n          }\n\n          _prepareFontLoadEvent(rules, fontsToLoad, request) {\n            (0, _util.unreachable)(\"Abstract method `_prepareFontLoadEvent`.\");\n          }\n\n        }\n\n        let FontLoader;\n        exports.FontLoader = FontLoader;\n        {\n          exports.FontLoader = FontLoader = class GenericFontLoader extends BaseFontLoader {\n            constructor(params) {\n              super(params);\n              this.loadingContext = {\n                requests: [],\n                nextRequestId: 0\n              };\n              this.loadTestFontId = 0;\n            }\n\n            get isSyncFontLoadingSupported() {\n              let supported = false;\n\n              if (typeof navigator === \"undefined\") {\n                supported = true;\n              } else {\n                const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(navigator.userAgent);\n\n                if (m?.[1] >= 14) {\n                  supported = true;\n                }\n              }\n\n              return (0, _util.shadow)(this, \"isSyncFontLoadingSupported\", supported);\n            }\n\n            _queueLoadingCallback(callback) {\n              function completeRequest() {\n                (0, _util.assert)(!request.done, \"completeRequest() cannot be called twice.\");\n                request.done = true;\n\n                while (context.requests.length > 0 && context.requests[0].done) {\n                  const otherRequest = context.requests.shift();\n                  setTimeout(otherRequest.callback, 0);\n                }\n              }\n\n              const context = this.loadingContext;\n              const request = {\n                id: `pdfjs-font-loading-${context.nextRequestId++}`,\n                done: false,\n                complete: completeRequest,\n                callback\n              };\n              context.requests.push(request);\n              return request;\n            }\n\n            get _loadTestFont() {\n              const getLoadTestFont = function () {\n                return atob(\"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" + \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" + \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" + \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" + \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" + \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" + \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" + \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" + \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" + \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" + \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" + \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" + \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" + \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" + \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" + \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" + \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\");\n              };\n\n              return (0, _util.shadow)(this, \"_loadTestFont\", getLoadTestFont());\n            }\n\n            _prepareFontLoadEvent(rules, fonts, request) {\n              function int32(data, offset) {\n                return data.charCodeAt(offset) << 24 | data.charCodeAt(offset + 1) << 16 | data.charCodeAt(offset + 2) << 8 | data.charCodeAt(offset + 3) & 0xff;\n              }\n\n              function spliceString(s, offset, remove, insert) {\n                const chunk1 = s.substring(0, offset);\n                const chunk2 = s.substring(offset + remove);\n                return chunk1 + insert + chunk2;\n              }\n\n              let i, ii;\n\n              const canvas = this._document.createElement(\"canvas\");\n\n              canvas.width = 1;\n              canvas.height = 1;\n              const ctx = canvas.getContext(\"2d\");\n              let called = 0;\n\n              function isFontReady(name, callback) {\n                called++;\n\n                if (called > 30) {\n                  (0, _util.warn)(\"Load test font never loaded.\");\n                  callback();\n                  return;\n                }\n\n                ctx.font = \"30px \" + name;\n                ctx.fillText(\".\", 0, 20);\n                const imageData = ctx.getImageData(0, 0, 1, 1);\n\n                if (imageData.data[3] > 0) {\n                  callback();\n                  return;\n                }\n\n                setTimeout(isFontReady.bind(null, name, callback));\n              }\n\n              const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n              let data = this._loadTestFont;\n              const COMMENT_OFFSET = 976;\n              data = spliceString(data, COMMENT_OFFSET, loadTestFontId.length, loadTestFontId);\n              const CFF_CHECKSUM_OFFSET = 16;\n              const XXXX_VALUE = 0x58585858;\n              let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n\n              for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n                checksum = checksum - XXXX_VALUE + int32(loadTestFontId, i) | 0;\n              }\n\n              if (i < loadTestFontId.length) {\n                checksum = checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i) | 0;\n              }\n\n              data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, (0, _util.string32)(checksum));\n              const url = `url(data:font/opentype;base64,${btoa(data)});`;\n              const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n              this.insertRule(rule);\n              const names = [];\n\n              for (const font of fonts) {\n                names.push(font.loadedName);\n              }\n\n              names.push(loadTestFontId);\n\n              const div = this._document.createElement(\"div\");\n\n              div.style.visibility = \"hidden\";\n              div.style.width = div.style.height = \"10px\";\n              div.style.position = \"absolute\";\n              div.style.top = div.style.left = \"0px\";\n\n              for (const name of names) {\n                const span = this._document.createElement(\"span\");\n\n                span.textContent = \"Hi\";\n                span.style.fontFamily = name;\n                div.appendChild(span);\n              }\n\n              this._document.body.appendChild(div);\n\n              isFontReady(loadTestFontId, () => {\n                div.remove();\n                request.complete();\n              });\n            }\n\n          };\n        }\n\n        class FontFaceObject {\n          constructor(translatedData, _ref23) {\n            let {\n              isEvalSupported = true,\n              disableFontFace = false,\n              ignoreErrors = false,\n              onUnsupportedFeature,\n              fontRegistry = null\n            } = _ref23;\n            this.compiledGlyphs = Object.create(null);\n\n            for (const i in translatedData) {\n              this[i] = translatedData[i];\n            }\n\n            this.isEvalSupported = isEvalSupported !== false;\n            this.disableFontFace = disableFontFace === true;\n            this.ignoreErrors = ignoreErrors === true;\n            this._onUnsupportedFeature = onUnsupportedFeature;\n            this.fontRegistry = fontRegistry;\n          }\n\n          createNativeFontFace() {\n            if (!this.data || this.disableFontFace) {\n              return null;\n            }\n\n            let nativeFontFace;\n\n            if (!this.cssFontInfo) {\n              nativeFontFace = new FontFace(this.loadedName, this.data, {});\n            } else {\n              const css = {\n                weight: this.cssFontInfo.fontWeight\n              };\n\n              if (this.cssFontInfo.italicAngle) {\n                css.style = `oblique ${this.cssFontInfo.italicAngle}deg`;\n              }\n\n              nativeFontFace = new FontFace(this.cssFontInfo.fontFamily, this.data, css);\n            }\n\n            if (this.fontRegistry) {\n              this.fontRegistry.registerFont(this);\n            }\n\n            return nativeFontFace;\n          }\n\n          createFontFaceRule() {\n            if (!this.data || this.disableFontFace) {\n              return null;\n            }\n\n            const data = (0, _util.bytesToString)(this.data);\n            const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n            let rule;\n\n            if (!this.cssFontInfo) {\n              rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n            } else {\n              let css = `font-weight: ${this.cssFontInfo.fontWeight};`;\n\n              if (this.cssFontInfo.italicAngle) {\n                css += `font-style: oblique ${this.cssFontInfo.italicAngle}deg;`;\n              }\n\n              rule = `@font-face {font-family:\"${this.cssFontInfo.fontFamily}\";${css}src:${url}}`;\n            }\n\n            if (this.fontRegistry) {\n              this.fontRegistry.registerFont(this, url);\n            }\n\n            return rule;\n          }\n\n          getPathGenerator(objs, character) {\n            if (this.compiledGlyphs[character] !== undefined) {\n              return this.compiledGlyphs[character];\n            }\n\n            let cmds;\n\n            try {\n              cmds = objs.get(this.loadedName + \"_path_\" + character);\n            } catch (ex) {\n              if (!this.ignoreErrors) {\n                throw ex;\n              }\n\n              this._onUnsupportedFeature({\n                featureId: _util.UNSUPPORTED_FEATURES.errorFontGetPath\n              });\n\n              (0, _util.warn)(`getPathGenerator - ignoring character: \"${ex}\".`);\n              return this.compiledGlyphs[character] = function (c, size) {};\n            }\n\n            if (this.isEvalSupported && _util.FeatureTest.isEvalSupported) {\n              const jsBuf = [];\n\n              for (const current of cmds) {\n                const args = current.args !== undefined ? current.args.join(\",\") : \"\";\n                jsBuf.push(\"c.\", current.cmd, \"(\", args, \");\\n\");\n              }\n\n              return this.compiledGlyphs[character] = new Function(\"c\", \"size\", jsBuf.join(\"\"));\n            }\n\n            return this.compiledGlyphs[character] = function (c, size) {\n              for (const current of cmds) {\n                if (current.cmd === \"scale\") {\n                  current.args = [size, -size];\n                }\n\n                c[current.cmd].apply(c, current.args);\n              }\n            };\n          }\n\n        }\n\n        exports.FontFaceObject = FontFaceObject;\n        /***/\n      },\n      /* 8 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.AnnotationStorage = void 0;\n\n        var _murmurhash = __w_pdfjs_require__(9);\n\n        var _util = __w_pdfjs_require__(1);\n\n        class AnnotationStorage {\n          constructor() {\n            this._storage = new Map();\n            this._modified = false;\n            this.onSetModified = null;\n            this.onResetModified = null;\n          }\n\n          getValue(key, defaultValue) {\n            const value = this._storage.get(key);\n\n            if (value === undefined) {\n              return defaultValue;\n            }\n\n            return Object.assign(defaultValue, value);\n          }\n\n          getRawValue(key) {\n            return this._storage.get(key);\n          }\n\n          setValue(key, value) {\n            const obj = this._storage.get(key);\n\n            let modified = false;\n\n            if (obj !== undefined) {\n              for (const [entry, val] of Object.entries(value)) {\n                if (obj[entry] !== val) {\n                  modified = true;\n                  obj[entry] = val;\n                }\n              }\n            } else {\n              modified = true;\n\n              this._storage.set(key, value);\n            }\n\n            if (modified) {\n              this._setModified();\n            }\n          }\n\n          getAll() {\n            return this._storage.size > 0 ? (0, _util.objectFromMap)(this._storage) : null;\n          }\n\n          get size() {\n            return this._storage.size;\n          }\n\n          _setModified() {\n            if (!this._modified) {\n              this._modified = true;\n\n              if (typeof this.onSetModified === \"function\") {\n                this.onSetModified();\n              }\n            }\n          }\n\n          resetModified() {\n            if (this._modified) {\n              this._modified = false;\n\n              if (typeof this.onResetModified === \"function\") {\n                this.onResetModified();\n              }\n            }\n          }\n\n          get serializable() {\n            return this._storage.size > 0 ? this._storage : null;\n          }\n\n          get hash() {\n            const hash = new _murmurhash.MurmurHash3_64();\n\n            for (const [key, value] of this._storage) {\n              hash.update(`${key}:${JSON.stringify(value)}`);\n            }\n\n            return hash.hexdigest();\n          }\n\n        }\n\n        exports.AnnotationStorage = AnnotationStorage;\n        /***/\n      },\n      /* 9 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.MurmurHash3_64 = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        const SEED = 0xc3d2e1f0;\n        const MASK_HIGH = 0xffff0000;\n        const MASK_LOW = 0xffff;\n\n        class MurmurHash3_64 {\n          constructor(seed) {\n            this.h1 = seed ? seed & 0xffffffff : SEED;\n            this.h2 = seed ? seed & 0xffffffff : SEED;\n          }\n\n          update(input) {\n            let data, length;\n\n            if (typeof input === \"string\") {\n              data = new Uint8Array(input.length * 2);\n              length = 0;\n\n              for (let i = 0, ii = input.length; i < ii; i++) {\n                const code = input.charCodeAt(i);\n\n                if (code <= 0xff) {\n                  data[length++] = code;\n                } else {\n                  data[length++] = code >>> 8;\n                  data[length++] = code & 0xff;\n                }\n              }\n            } else if ((0, _util.isArrayBuffer)(input)) {\n              data = input.slice();\n              length = data.byteLength;\n            } else {\n              throw new Error(\"Wrong data format in MurmurHash3_64_update. \" + \"Input must be a string or array.\");\n            }\n\n            const blockCounts = length >> 2;\n            const tailLength = length - blockCounts * 4;\n            const dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n            let k1 = 0,\n                k2 = 0;\n            let h1 = this.h1,\n                h2 = this.h2;\n            const C1 = 0xcc9e2d51,\n                  C2 = 0x1b873593;\n            const C1_LOW = C1 & MASK_LOW,\n                  C2_LOW = C2 & MASK_LOW;\n\n            for (let i = 0; i < blockCounts; i++) {\n              if (i & 1) {\n                k1 = dataUint32[i];\n                k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n                k1 = k1 << 15 | k1 >>> 17;\n                k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n                h1 ^= k1;\n                h1 = h1 << 13 | h1 >>> 19;\n                h1 = h1 * 5 + 0xe6546b64;\n              } else {\n                k2 = dataUint32[i];\n                k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n                k2 = k2 << 15 | k2 >>> 17;\n                k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n                h2 ^= k2;\n                h2 = h2 << 13 | h2 >>> 19;\n                h2 = h2 * 5 + 0xe6546b64;\n              }\n            }\n\n            k1 = 0;\n\n            switch (tailLength) {\n              case 3:\n                k1 ^= data[blockCounts * 4 + 2] << 16;\n\n              case 2:\n                k1 ^= data[blockCounts * 4 + 1] << 8;\n\n              case 1:\n                k1 ^= data[blockCounts * 4];\n                k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n                k1 = k1 << 15 | k1 >>> 17;\n                k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n\n                if (blockCounts & 1) {\n                  h1 ^= k1;\n                } else {\n                  h2 ^= k1;\n                }\n\n            }\n\n            this.h1 = h1;\n            this.h2 = h2;\n          }\n\n          hexdigest() {\n            let h1 = this.h1,\n                h2 = this.h2;\n            h1 ^= h2 >>> 1;\n            h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n            h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n            h1 ^= h2 >>> 1;\n            h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n            h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n            h1 ^= h2 >>> 1;\n            const hex1 = (h1 >>> 0).toString(16),\n                  hex2 = (h2 >>> 0).toString(16);\n            return hex1.padStart(8, \"0\") + hex2.padStart(8, \"0\");\n          }\n\n        }\n\n        exports.MurmurHash3_64 = MurmurHash3_64;\n        /***/\n      },\n      /* 10 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.CanvasGraphics = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _pattern_helper = __w_pdfjs_require__(11);\n\n        var _image_utils = __w_pdfjs_require__(12);\n\n        var _is_node = __w_pdfjs_require__(3);\n\n        var _display_utils = __w_pdfjs_require__(5);\n\n        const MIN_FONT_SIZE = 16;\n        const MAX_FONT_SIZE = 100;\n        const MAX_GROUP_SIZE = 4096;\n        const EXECUTION_TIME = 15;\n        const EXECUTION_STEPS = 10;\n        const COMPILE_TYPE3_GLYPHS = true;\n        const MAX_SIZE_TO_COMPILE = 1000;\n        const FULL_CHUNK_HEIGHT = 16;\n        const LINEWIDTH_SCALE_FACTOR = 1.000001;\n\n        function mirrorContextOperations(ctx, destCtx) {\n          if (ctx._removeMirroring) {\n            throw new Error(\"Context is already forwarding operations.\");\n          }\n\n          ctx.__originalSave = ctx.save;\n          ctx.__originalRestore = ctx.restore;\n          ctx.__originalRotate = ctx.rotate;\n          ctx.__originalScale = ctx.scale;\n          ctx.__originalTranslate = ctx.translate;\n          ctx.__originalTransform = ctx.transform;\n          ctx.__originalSetTransform = ctx.setTransform;\n          ctx.__originalResetTransform = ctx.resetTransform;\n          ctx.__originalClip = ctx.clip;\n          ctx.__originalMoveTo = ctx.moveTo;\n          ctx.__originalLineTo = ctx.lineTo;\n          ctx.__originalBezierCurveTo = ctx.bezierCurveTo;\n          ctx.__originalRect = ctx.rect;\n          ctx.__originalClosePath = ctx.closePath;\n          ctx.__originalBeginPath = ctx.beginPath;\n\n          ctx._removeMirroring = () => {\n            ctx.save = ctx.__originalSave;\n            ctx.restore = ctx.__originalRestore;\n            ctx.rotate = ctx.__originalRotate;\n            ctx.scale = ctx.__originalScale;\n            ctx.translate = ctx.__originalTranslate;\n            ctx.transform = ctx.__originalTransform;\n            ctx.setTransform = ctx.__originalSetTransform;\n            ctx.resetTransform = ctx.__originalResetTransform;\n            ctx.clip = ctx.__originalClip;\n            ctx.moveTo = ctx.__originalMoveTo;\n            ctx.lineTo = ctx.__originalLineTo;\n            ctx.bezierCurveTo = ctx.__originalBezierCurveTo;\n            ctx.rect = ctx.__originalRect;\n            ctx.closePath = ctx.__originalClosePath;\n            ctx.beginPath = ctx.__originalBeginPath;\n            delete ctx._removeMirroring;\n          };\n\n          ctx.save = function ctxSave() {\n            destCtx.save();\n\n            this.__originalSave();\n          };\n\n          ctx.restore = function ctxRestore() {\n            destCtx.restore();\n\n            this.__originalRestore();\n          };\n\n          ctx.translate = function ctxTranslate(x, y) {\n            destCtx.translate(x, y);\n\n            this.__originalTranslate(x, y);\n          };\n\n          ctx.scale = function ctxScale(x, y) {\n            destCtx.scale(x, y);\n\n            this.__originalScale(x, y);\n          };\n\n          ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n            destCtx.transform(a, b, c, d, e, f);\n\n            this.__originalTransform(a, b, c, d, e, f);\n          };\n\n          ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n            destCtx.setTransform(a, b, c, d, e, f);\n\n            this.__originalSetTransform(a, b, c, d, e, f);\n          };\n\n          ctx.resetTransform = function ctxResetTransform() {\n            destCtx.resetTransform();\n\n            this.__originalResetTransform();\n          };\n\n          ctx.rotate = function ctxRotate(angle) {\n            destCtx.rotate(angle);\n\n            this.__originalRotate(angle);\n          };\n\n          ctx.clip = function ctxRotate(rule) {\n            destCtx.clip(rule);\n\n            this.__originalClip(rule);\n          };\n\n          ctx.moveTo = function (x, y) {\n            destCtx.moveTo(x, y);\n\n            this.__originalMoveTo(x, y);\n          };\n\n          ctx.lineTo = function (x, y) {\n            destCtx.lineTo(x, y);\n\n            this.__originalLineTo(x, y);\n          };\n\n          ctx.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\n            destCtx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n\n            this.__originalBezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n          };\n\n          ctx.rect = function (x, y, width, height) {\n            destCtx.rect(x, y, width, height);\n\n            this.__originalRect(x, y, width, height);\n          };\n\n          ctx.closePath = function () {\n            destCtx.closePath();\n\n            this.__originalClosePath();\n          };\n\n          ctx.beginPath = function () {\n            destCtx.beginPath();\n\n            this.__originalBeginPath();\n          };\n        }\n\n        function addContextCurrentTransform(ctx) {\n          if (ctx._transformStack) {\n            ctx._transformStack = [];\n          }\n\n          if (ctx.mozCurrentTransform) {\n            return;\n          }\n\n          ctx._originalSave = ctx.save;\n          ctx._originalRestore = ctx.restore;\n          ctx._originalRotate = ctx.rotate;\n          ctx._originalScale = ctx.scale;\n          ctx._originalTranslate = ctx.translate;\n          ctx._originalTransform = ctx.transform;\n          ctx._originalSetTransform = ctx.setTransform;\n          ctx._originalResetTransform = ctx.resetTransform;\n          ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n          ctx._transformStack = [];\n\n          try {\n            const desc = Object.getOwnPropertyDescriptor(Object.getPrototypeOf(ctx), \"lineWidth\");\n            ctx._setLineWidth = desc.set;\n            ctx._getLineWidth = desc.get;\n            Object.defineProperty(ctx, \"lineWidth\", {\n              set: function setLineWidth(width) {\n                this._setLineWidth(width * LINEWIDTH_SCALE_FACTOR);\n              },\n              get: function getLineWidth() {\n                return this._getLineWidth();\n              }\n            });\n          } catch (_) {}\n\n          Object.defineProperty(ctx, \"mozCurrentTransform\", {\n            get: function getCurrentTransform() {\n              return this._transformMatrix;\n            }\n          });\n          Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n            get: function getCurrentTransformInverse() {\n              const [a, b, c, d, e, f] = this._transformMatrix;\n              const ad_bc = a * d - b * c;\n              const bc_ad = b * c - a * d;\n              return [d / ad_bc, b / bc_ad, c / bc_ad, a / ad_bc, (d * e - c * f) / bc_ad, (b * e - a * f) / ad_bc];\n            }\n          });\n\n          ctx.save = function ctxSave() {\n            const old = this._transformMatrix;\n\n            this._transformStack.push(old);\n\n            this._transformMatrix = old.slice(0, 6);\n\n            this._originalSave();\n          };\n\n          ctx.restore = function ctxRestore() {\n            if (this._transformStack.length === 0) {\n              (0, _util.warn)(\"Tried to restore a ctx when the stack was already empty.\");\n            }\n\n            const prev = this._transformStack.pop();\n\n            if (prev) {\n              this._transformMatrix = prev;\n\n              this._originalRestore();\n            }\n          };\n\n          ctx.translate = function ctxTranslate(x, y) {\n            const m = this._transformMatrix;\n            m[4] = m[0] * x + m[2] * y + m[4];\n            m[5] = m[1] * x + m[3] * y + m[5];\n\n            this._originalTranslate(x, y);\n          };\n\n          ctx.scale = function ctxScale(x, y) {\n            const m = this._transformMatrix;\n            m[0] *= x;\n            m[1] *= x;\n            m[2] *= y;\n            m[3] *= y;\n\n            this._originalScale(x, y);\n          };\n\n          ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n            const m = this._transformMatrix;\n            this._transformMatrix = [m[0] * a + m[2] * b, m[1] * a + m[3] * b, m[0] * c + m[2] * d, m[1] * c + m[3] * d, m[0] * e + m[2] * f + m[4], m[1] * e + m[3] * f + m[5]];\n\n            ctx._originalTransform(a, b, c, d, e, f);\n          };\n\n          ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n            this._transformMatrix = [a, b, c, d, e, f];\n\n            ctx._originalSetTransform(a, b, c, d, e, f);\n          };\n\n          ctx.resetTransform = function ctxResetTransform() {\n            this._transformMatrix = [1, 0, 0, 1, 0, 0];\n\n            ctx._originalResetTransform();\n          };\n\n          ctx.rotate = function ctxRotate(angle) {\n            const cosValue = Math.cos(angle);\n            const sinValue = Math.sin(angle);\n            const m = this._transformMatrix;\n            this._transformMatrix = [m[0] * cosValue + m[2] * sinValue, m[1] * cosValue + m[3] * sinValue, m[0] * -sinValue + m[2] * cosValue, m[1] * -sinValue + m[3] * cosValue, m[4], m[5]];\n\n            this._originalRotate(angle);\n          };\n        }\n\n        class CachedCanvases {\n          constructor(canvasFactory) {\n            this.canvasFactory = canvasFactory;\n            this.cache = Object.create(null);\n          }\n\n          getCanvas(id, width, height, trackTransform) {\n            let canvasEntry;\n\n            if (this.cache[id] !== undefined) {\n              canvasEntry = this.cache[id];\n              this.canvasFactory.reset(canvasEntry, width, height);\n              canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n            } else {\n              canvasEntry = this.canvasFactory.create(width, height);\n              this.cache[id] = canvasEntry;\n            }\n\n            if (trackTransform) {\n              addContextCurrentTransform(canvasEntry.context);\n            }\n\n            return canvasEntry;\n          }\n\n          delete(id) {\n            delete this.cache[id];\n          }\n\n          clear() {\n            for (const id in this.cache) {\n              const canvasEntry = this.cache[id];\n              this.canvasFactory.destroy(canvasEntry);\n              delete this.cache[id];\n            }\n          }\n\n        }\n\n        function drawImageAtIntegerCoords(ctx, srcImg, srcX, srcY, srcW, srcH, destX, destY, destW, destH) {\n          const [a, b, c, d, tx, ty] = ctx.mozCurrentTransform;\n\n          if (b === 0 && c === 0) {\n            const tlX = destX * a + tx;\n            const rTlX = Math.round(tlX);\n            const tlY = destY * d + ty;\n            const rTlY = Math.round(tlY);\n            const brX = (destX + destW) * a + tx;\n            const rWidth = Math.abs(Math.round(brX) - rTlX) || 1;\n            const brY = (destY + destH) * d + ty;\n            const rHeight = Math.abs(Math.round(brY) - rTlY) || 1;\n            ctx.setTransform(Math.sign(a), 0, 0, Math.sign(d), rTlX, rTlY);\n            ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, 0, 0, rWidth, rHeight);\n            ctx.setTransform(a, b, c, d, tx, ty);\n            return [rWidth, rHeight];\n          }\n\n          if (a === 0 && d === 0) {\n            const tlX = destY * c + tx;\n            const rTlX = Math.round(tlX);\n            const tlY = destX * b + ty;\n            const rTlY = Math.round(tlY);\n            const brX = (destY + destH) * c + tx;\n            const rWidth = Math.abs(Math.round(brX) - rTlX) || 1;\n            const brY = (destX + destW) * b + ty;\n            const rHeight = Math.abs(Math.round(brY) - rTlY) || 1;\n            ctx.setTransform(0, Math.sign(b), Math.sign(c), 0, rTlX, rTlY);\n            ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, 0, 0, rHeight, rWidth);\n            ctx.setTransform(a, b, c, d, tx, ty);\n            return [rHeight, rWidth];\n          }\n\n          ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, destX, destY, destW, destH);\n          const scaleX = Math.hypot(a, b);\n          const scaleY = Math.hypot(c, d);\n          return [scaleX * destW, scaleY * destH];\n        }\n\n        function compileType3Glyph(imgData) {\n          const {\n            width,\n            height\n          } = imgData;\n\n          if (!COMPILE_TYPE3_GLYPHS || width > MAX_SIZE_TO_COMPILE || height > MAX_SIZE_TO_COMPILE) {\n            return null;\n          }\n\n          const POINT_TO_PROCESS_LIMIT = 1000;\n          const POINT_TYPES = new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n          const width1 = width + 1;\n          let points = new Uint8Array(width1 * (height + 1));\n          let i, j, j0;\n          const lineSize = width + 7 & ~7;\n          let data = new Uint8Array(lineSize * height),\n              pos = 0;\n\n          for (const elem of imgData.data) {\n            let mask = 128;\n\n            while (mask > 0) {\n              data[pos++] = elem & mask ? 0 : 255;\n              mask >>= 1;\n            }\n          }\n\n          let count = 0;\n          pos = 0;\n\n          if (data[pos] !== 0) {\n            points[0] = 1;\n            ++count;\n          }\n\n          for (j = 1; j < width; j++) {\n            if (data[pos] !== data[pos + 1]) {\n              points[j] = data[pos] ? 2 : 1;\n              ++count;\n            }\n\n            pos++;\n          }\n\n          if (data[pos] !== 0) {\n            points[j] = 2;\n            ++count;\n          }\n\n          for (i = 1; i < height; i++) {\n            pos = i * lineSize;\n            j0 = i * width1;\n\n            if (data[pos - lineSize] !== data[pos]) {\n              points[j0] = data[pos] ? 1 : 8;\n              ++count;\n            }\n\n            let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n\n            for (j = 1; j < width; j++) {\n              sum = (sum >> 2) + (data[pos + 1] ? 4 : 0) + (data[pos - lineSize + 1] ? 8 : 0);\n\n              if (POINT_TYPES[sum]) {\n                points[j0 + j] = POINT_TYPES[sum];\n                ++count;\n              }\n\n              pos++;\n            }\n\n            if (data[pos - lineSize] !== data[pos]) {\n              points[j0 + j] = data[pos] ? 2 : 4;\n              ++count;\n            }\n\n            if (count > POINT_TO_PROCESS_LIMIT) {\n              return null;\n            }\n          }\n\n          pos = lineSize * (height - 1);\n          j0 = i * width1;\n\n          if (data[pos] !== 0) {\n            points[j0] = 8;\n            ++count;\n          }\n\n          for (j = 1; j < width; j++) {\n            if (data[pos] !== data[pos + 1]) {\n              points[j0 + j] = data[pos] ? 4 : 8;\n              ++count;\n            }\n\n            pos++;\n          }\n\n          if (data[pos] !== 0) {\n            points[j0 + j] = 4;\n            ++count;\n          }\n\n          if (count > POINT_TO_PROCESS_LIMIT) {\n            return null;\n          }\n\n          const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n          let path, outlines, coords;\n\n          if (!_is_node.isNodeJS) {\n            path = new Path2D();\n          } else {\n            outlines = [];\n          }\n\n          for (i = 0; count && i <= height; i++) {\n            let p = i * width1;\n            const end = p + width;\n\n            while (p < end && !points[p]) {\n              p++;\n            }\n\n            if (p === end) {\n              continue;\n            }\n\n            if (path) {\n              path.moveTo(p % width1, i);\n            } else {\n              coords = [p % width1, i];\n            }\n\n            const p0 = p;\n            let type = points[p];\n\n            do {\n              const step = steps[type];\n\n              do {\n                p += step;\n              } while (!points[p]);\n\n              const pp = points[p];\n\n              if (pp !== 5 && pp !== 10) {\n                type = pp;\n                points[p] = 0;\n              } else {\n                type = pp & 0x33 * type >> 4;\n                points[p] &= type >> 2 | type << 2;\n              }\n\n              if (path) {\n                path.lineTo(p % width1, p / width1 | 0);\n              } else {\n                coords.push(p % width1, p / width1 | 0);\n              }\n\n              if (!points[p]) {\n                --count;\n              }\n            } while (p0 !== p);\n\n            if (!path) {\n              outlines.push(coords);\n            }\n\n            --i;\n          }\n\n          data = null;\n          points = null;\n\n          const drawOutline = function (c) {\n            c.save();\n            c.scale(1 / width, -1 / height);\n            c.translate(0, -height);\n\n            if (path) {\n              c.fill(path);\n            } else {\n              c.beginPath();\n\n              for (const o of outlines) {\n                c.moveTo(o[0], o[1]);\n\n                for (let l = 2, ll = o.length; l < ll; l += 2) {\n                  c.lineTo(o[l], o[l + 1]);\n                }\n              }\n\n              c.fill();\n            }\n\n            c.beginPath();\n            c.restore();\n          };\n\n          return drawOutline;\n        }\n\n        class CanvasExtraState {\n          constructor(width, height) {\n            this.alphaIsShape = false;\n            this.fontSize = 0;\n            this.fontSizeScale = 1;\n            this.textMatrix = _util.IDENTITY_MATRIX;\n            this.textMatrixScale = 1;\n            this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n            this.leading = 0;\n            this.x = 0;\n            this.y = 0;\n            this.lineX = 0;\n            this.lineY = 0;\n            this.charSpacing = 0;\n            this.wordSpacing = 0;\n            this.textHScale = 1;\n            this.textRenderingMode = _util.TextRenderingMode.FILL;\n            this.textRise = 0;\n            this.fillColor = \"#000000\";\n            this.strokeColor = \"#000000\";\n            this.patternFill = false;\n            this.fillAlpha = 1;\n            this.strokeAlpha = 1;\n            this.lineWidth = 1;\n            this.activeSMask = null;\n            this.transferMaps = null;\n            this.startNewPathAndClipBox([0, 0, width, height]);\n          }\n\n          clone() {\n            const clone = Object.create(this);\n            clone.clipBox = this.clipBox.slice();\n            return clone;\n          }\n\n          setCurrentPoint(x, y) {\n            this.x = x;\n            this.y = y;\n          }\n\n          updatePathMinMax(transform, x, y) {\n            [x, y] = _util.Util.applyTransform([x, y], transform);\n            this.minX = Math.min(this.minX, x);\n            this.minY = Math.min(this.minY, y);\n            this.maxX = Math.max(this.maxX, x);\n            this.maxY = Math.max(this.maxY, y);\n          }\n\n          updateRectMinMax(transform, rect) {\n            const p1 = _util.Util.applyTransform(rect, transform);\n\n            const p2 = _util.Util.applyTransform(rect.slice(2), transform);\n\n            this.minX = Math.min(this.minX, p1[0], p2[0]);\n            this.minY = Math.min(this.minY, p1[1], p2[1]);\n            this.maxX = Math.max(this.maxX, p1[0], p2[0]);\n            this.maxY = Math.max(this.maxY, p1[1], p2[1]);\n          }\n\n          updateScalingPathMinMax(transform, minMax) {\n            _util.Util.scaleMinMax(transform, minMax);\n\n            this.minX = Math.min(this.minX, minMax[0]);\n            this.maxX = Math.max(this.maxX, minMax[1]);\n            this.minY = Math.min(this.minY, minMax[2]);\n            this.maxY = Math.max(this.maxY, minMax[3]);\n          }\n\n          updateCurvePathMinMax(transform, x0, y0, x1, y1, x2, y2, x3, y3, minMax) {\n            const box = _util.Util.bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3);\n\n            if (minMax) {\n              minMax[0] = Math.min(minMax[0], box[0], box[2]);\n              minMax[1] = Math.max(minMax[1], box[0], box[2]);\n              minMax[2] = Math.min(minMax[2], box[1], box[3]);\n              minMax[3] = Math.max(minMax[3], box[1], box[3]);\n              return;\n            }\n\n            this.updateRectMinMax(transform, box);\n          }\n\n          getPathBoundingBox() {\n            let pathType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _pattern_helper.PathType.FILL;\n            let transform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            const box = [this.minX, this.minY, this.maxX, this.maxY];\n\n            if (pathType === _pattern_helper.PathType.STROKE) {\n              if (!transform) {\n                (0, _util.unreachable)(\"Stroke bounding box must include transform.\");\n              }\n\n              const scale = _util.Util.singularValueDecompose2dScale(transform);\n\n              const xStrokePad = scale[0] * this.lineWidth / 2;\n              const yStrokePad = scale[1] * this.lineWidth / 2;\n              box[0] -= xStrokePad;\n              box[1] -= yStrokePad;\n              box[2] += xStrokePad;\n              box[3] += yStrokePad;\n            }\n\n            return box;\n          }\n\n          updateClipFromPath() {\n            const intersect = _util.Util.intersect(this.clipBox, this.getPathBoundingBox());\n\n            this.startNewPathAndClipBox(intersect || [0, 0, 0, 0]);\n          }\n\n          isEmptyClip() {\n            return this.minX === Infinity;\n          }\n\n          startNewPathAndClipBox(box) {\n            this.clipBox = box;\n            this.minX = Infinity;\n            this.minY = Infinity;\n            this.maxX = 0;\n            this.maxY = 0;\n          }\n\n          getClippedPathBoundingBox() {\n            let pathType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _pattern_helper.PathType.FILL;\n            let transform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            return _util.Util.intersect(this.clipBox, this.getPathBoundingBox(pathType, transform));\n          }\n\n        }\n\n        function putBinaryImageData(ctx, imgData) {\n          let transferMaps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n          if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n            ctx.putImageData(imgData, 0, 0);\n            return;\n          }\n\n          const height = imgData.height,\n                width = imgData.width;\n          const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n          const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n          const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n          const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n          let srcPos = 0,\n              destPos;\n          const src = imgData.data;\n          const dest = chunkImgData.data;\n          let i, j, thisChunkHeight, elemsInThisChunk;\n          let transferMapRed, transferMapGreen, transferMapBlue, transferMapGray;\n\n          if (transferMaps) {\n            switch (transferMaps.length) {\n              case 1:\n                transferMapRed = transferMaps[0];\n                transferMapGreen = transferMaps[0];\n                transferMapBlue = transferMaps[0];\n                transferMapGray = transferMaps[0];\n                break;\n\n              case 4:\n                transferMapRed = transferMaps[0];\n                transferMapGreen = transferMaps[1];\n                transferMapBlue = transferMaps[2];\n                transferMapGray = transferMaps[3];\n                break;\n            }\n          }\n\n          if (imgData.kind === _util.ImageKind.GRAYSCALE_1BPP) {\n            const srcLength = src.byteLength;\n            const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n            const dest32DataLength = dest32.length;\n            const fullSrcDiff = width + 7 >> 3;\n            let white = 0xffffffff;\n            let black = _util.FeatureTest.isLittleEndian ? 0xff000000 : 0x000000ff;\n\n            if (transferMapGray) {\n              if (transferMapGray[0] === 0xff && transferMapGray[0xff] === 0) {\n                [white, black] = [black, white];\n              }\n            }\n\n            for (i = 0; i < totalChunks; i++) {\n              thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n              destPos = 0;\n\n              for (j = 0; j < thisChunkHeight; j++) {\n                const srcDiff = srcLength - srcPos;\n                let k = 0;\n                const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n                const kEndUnrolled = kEnd & ~7;\n                let mask = 0;\n                let srcByte = 0;\n\n                for (; k < kEndUnrolled; k += 8) {\n                  srcByte = src[srcPos++];\n                  dest32[destPos++] = srcByte & 128 ? white : black;\n                  dest32[destPos++] = srcByte & 64 ? white : black;\n                  dest32[destPos++] = srcByte & 32 ? white : black;\n                  dest32[destPos++] = srcByte & 16 ? white : black;\n                  dest32[destPos++] = srcByte & 8 ? white : black;\n                  dest32[destPos++] = srcByte & 4 ? white : black;\n                  dest32[destPos++] = srcByte & 2 ? white : black;\n                  dest32[destPos++] = srcByte & 1 ? white : black;\n                }\n\n                for (; k < kEnd; k++) {\n                  if (mask === 0) {\n                    srcByte = src[srcPos++];\n                    mask = 128;\n                  }\n\n                  dest32[destPos++] = srcByte & mask ? white : black;\n                  mask >>= 1;\n                }\n              }\n\n              while (destPos < dest32DataLength) {\n                dest32[destPos++] = 0;\n              }\n\n              ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n            }\n          } else if (imgData.kind === _util.ImageKind.RGBA_32BPP) {\n            const hasTransferMaps = !!(transferMapRed || transferMapGreen || transferMapBlue);\n            j = 0;\n            elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n\n            for (i = 0; i < fullChunks; i++) {\n              dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n              srcPos += elemsInThisChunk;\n\n              if (hasTransferMaps) {\n                for (let k = 0; k < elemsInThisChunk; k += 4) {\n                  if (transferMapRed) {\n                    dest[k + 0] = transferMapRed[dest[k + 0]];\n                  }\n\n                  if (transferMapGreen) {\n                    dest[k + 1] = transferMapGreen[dest[k + 1]];\n                  }\n\n                  if (transferMapBlue) {\n                    dest[k + 2] = transferMapBlue[dest[k + 2]];\n                  }\n                }\n              }\n\n              ctx.putImageData(chunkImgData, 0, j);\n              j += FULL_CHUNK_HEIGHT;\n            }\n\n            if (i < totalChunks) {\n              elemsInThisChunk = width * partialChunkHeight * 4;\n              dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n\n              if (hasTransferMaps) {\n                for (let k = 0; k < elemsInThisChunk; k += 4) {\n                  if (transferMapRed) {\n                    dest[k + 0] = transferMapRed[dest[k + 0]];\n                  }\n\n                  if (transferMapGreen) {\n                    dest[k + 1] = transferMapGreen[dest[k + 1]];\n                  }\n\n                  if (transferMapBlue) {\n                    dest[k + 2] = transferMapBlue[dest[k + 2]];\n                  }\n                }\n              }\n\n              ctx.putImageData(chunkImgData, 0, j);\n            }\n          } else if (imgData.kind === _util.ImageKind.RGB_24BPP) {\n            const hasTransferMaps = !!(transferMapRed || transferMapGreen || transferMapBlue);\n            thisChunkHeight = FULL_CHUNK_HEIGHT;\n            elemsInThisChunk = width * thisChunkHeight;\n\n            for (i = 0; i < totalChunks; i++) {\n              if (i >= fullChunks) {\n                thisChunkHeight = partialChunkHeight;\n                elemsInThisChunk = width * thisChunkHeight;\n              }\n\n              destPos = 0;\n\n              for (j = elemsInThisChunk; j--;) {\n                dest[destPos++] = src[srcPos++];\n                dest[destPos++] = src[srcPos++];\n                dest[destPos++] = src[srcPos++];\n                dest[destPos++] = 255;\n              }\n\n              if (hasTransferMaps) {\n                for (let k = 0; k < destPos; k += 4) {\n                  if (transferMapRed) {\n                    dest[k + 0] = transferMapRed[dest[k + 0]];\n                  }\n\n                  if (transferMapGreen) {\n                    dest[k + 1] = transferMapGreen[dest[k + 1]];\n                  }\n\n                  if (transferMapBlue) {\n                    dest[k + 2] = transferMapBlue[dest[k + 2]];\n                  }\n                }\n              }\n\n              ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n            }\n          } else {\n            throw new Error(`bad image kind: ${imgData.kind}`);\n          }\n        }\n\n        function putBinaryImageMask(ctx, imgData) {\n          if (imgData.bitmap) {\n            ctx.drawImage(imgData.bitmap, 0, 0);\n            return;\n          }\n\n          const height = imgData.height,\n                width = imgData.width;\n          const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n          const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n          const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n          const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n          let srcPos = 0;\n          const src = imgData.data;\n          const dest = chunkImgData.data;\n\n          for (let i = 0; i < totalChunks; i++) {\n            const thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n            ({\n              srcPos\n            } = (0, _image_utils.applyMaskImageData)({\n              src,\n              srcPos,\n              dest,\n              width,\n              height: thisChunkHeight\n            }));\n            ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n          }\n        }\n\n        function copyCtxState(sourceCtx, destCtx) {\n          const properties = [\"strokeStyle\", \"fillStyle\", \"fillRule\", \"globalAlpha\", \"lineWidth\", \"lineCap\", \"lineJoin\", \"miterLimit\", \"globalCompositeOperation\", \"font\"];\n\n          for (let i = 0, ii = properties.length; i < ii; i++) {\n            const property = properties[i];\n\n            if (sourceCtx[property] !== undefined) {\n              destCtx[property] = sourceCtx[property];\n            }\n          }\n\n          if (sourceCtx.setLineDash !== undefined) {\n            destCtx.setLineDash(sourceCtx.getLineDash());\n            destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n          }\n        }\n\n        function resetCtxToDefault(ctx, foregroundColor) {\n          ctx.strokeStyle = ctx.fillStyle = foregroundColor || \"#000000\";\n          ctx.fillRule = \"nonzero\";\n          ctx.globalAlpha = 1;\n          ctx.lineWidth = 1;\n          ctx.lineCap = \"butt\";\n          ctx.lineJoin = \"miter\";\n          ctx.miterLimit = 10;\n          ctx.globalCompositeOperation = \"source-over\";\n          ctx.font = \"10px sans-serif\";\n\n          if (ctx.setLineDash !== undefined) {\n            ctx.setLineDash([]);\n            ctx.lineDashOffset = 0;\n          }\n        }\n\n        function composeSMaskBackdrop(bytes, r0, g0, b0) {\n          const length = bytes.length;\n\n          for (let i = 3; i < length; i += 4) {\n            const alpha = bytes[i];\n\n            if (alpha === 0) {\n              bytes[i - 3] = r0;\n              bytes[i - 2] = g0;\n              bytes[i - 1] = b0;\n            } else if (alpha < 255) {\n              const alpha_ = 255 - alpha;\n              bytes[i - 3] = bytes[i - 3] * alpha + r0 * alpha_ >> 8;\n              bytes[i - 2] = bytes[i - 2] * alpha + g0 * alpha_ >> 8;\n              bytes[i - 1] = bytes[i - 1] * alpha + b0 * alpha_ >> 8;\n            }\n          }\n        }\n\n        function composeSMaskAlpha(maskData, layerData, transferMap) {\n          const length = maskData.length;\n          const scale = 1 / 255;\n\n          for (let i = 3; i < length; i += 4) {\n            const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n            layerData[i] = layerData[i] * alpha * scale | 0;\n          }\n        }\n\n        function composeSMaskLuminosity(maskData, layerData, transferMap) {\n          const length = maskData.length;\n\n          for (let i = 3; i < length; i += 4) {\n            const y = maskData[i - 3] * 77 + maskData[i - 2] * 152 + maskData[i - 1] * 28;\n            layerData[i] = transferMap ? layerData[i] * transferMap[y >> 8] >> 8 : layerData[i] * y >> 16;\n          }\n        }\n\n        function genericComposeSMask(maskCtx, layerCtx, width, height, subtype, backdrop, transferMap, layerOffsetX, layerOffsetY, maskOffsetX, maskOffsetY) {\n          const hasBackdrop = !!backdrop;\n          const r0 = hasBackdrop ? backdrop[0] : 0;\n          const g0 = hasBackdrop ? backdrop[1] : 0;\n          const b0 = hasBackdrop ? backdrop[2] : 0;\n          let composeFn;\n\n          if (subtype === \"Luminosity\") {\n            composeFn = composeSMaskLuminosity;\n          } else {\n            composeFn = composeSMaskAlpha;\n          }\n\n          const PIXELS_TO_PROCESS = 1048576;\n          const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n\n          for (let row = 0; row < height; row += chunkSize) {\n            const chunkHeight = Math.min(chunkSize, height - row);\n            const maskData = maskCtx.getImageData(layerOffsetX - maskOffsetX, row + (layerOffsetY - maskOffsetY), width, chunkHeight);\n            const layerData = layerCtx.getImageData(layerOffsetX, row + layerOffsetY, width, chunkHeight);\n\n            if (hasBackdrop) {\n              composeSMaskBackdrop(maskData.data, r0, g0, b0);\n            }\n\n            composeFn(maskData.data, layerData.data, transferMap);\n            layerCtx.putImageData(layerData, layerOffsetX, row + layerOffsetY);\n          }\n        }\n\n        function composeSMask(ctx, smask, layerCtx, layerBox) {\n          const layerOffsetX = layerBox[0];\n          const layerOffsetY = layerBox[1];\n          const layerWidth = layerBox[2] - layerOffsetX;\n          const layerHeight = layerBox[3] - layerOffsetY;\n\n          if (layerWidth === 0 || layerHeight === 0) {\n            return;\n          }\n\n          genericComposeSMask(smask.context, layerCtx, layerWidth, layerHeight, smask.subtype, smask.backdrop, smask.transferMap, layerOffsetX, layerOffsetY, smask.offsetX, smask.offsetY);\n          ctx.save();\n          ctx.globalAlpha = 1;\n          ctx.globalCompositeOperation = \"source-over\";\n          ctx.setTransform(1, 0, 0, 1, 0, 0);\n          ctx.drawImage(layerCtx.canvas, 0, 0);\n          ctx.restore();\n        }\n\n        function getImageSmoothingEnabled(transform, interpolate) {\n          const scale = _util.Util.singularValueDecompose2dScale(transform);\n\n          scale[0] = Math.fround(scale[0]);\n          scale[1] = Math.fround(scale[1]);\n          const actualScale = Math.fround((globalThis.devicePixelRatio || 1) * _display_utils.PixelsPerInch.PDF_TO_CSS_UNITS);\n\n          if (interpolate !== undefined) {\n            return interpolate;\n          } else if (scale[0] <= actualScale || scale[1] <= actualScale) {\n            return true;\n          }\n\n          return false;\n        }\n\n        const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n        const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n        const NORMAL_CLIP = {};\n        const EO_CLIP = {};\n\n        class CanvasGraphics {\n          constructor(canvasCtx, commonObjs, objs, canvasFactory, imageLayer, optionalContentConfig, annotationCanvasMap, pageColors) {\n            this.ctx = canvasCtx;\n            this.current = new CanvasExtraState(this.ctx.canvas.width, this.ctx.canvas.height);\n            this.stateStack = [];\n            this.pendingClip = null;\n            this.pendingEOFill = false;\n            this.res = null;\n            this.xobjs = null;\n            this.commonObjs = commonObjs;\n            this.objs = objs;\n            this.canvasFactory = canvasFactory;\n            this.imageLayer = imageLayer;\n            this.groupStack = [];\n            this.processingType3 = null;\n            this.baseTransform = null;\n            this.baseTransformStack = [];\n            this.groupLevel = 0;\n            this.smaskStack = [];\n            this.smaskCounter = 0;\n            this.tempSMask = null;\n            this.suspendedCtx = null;\n            this.contentVisible = true;\n            this.markedContentStack = [];\n            this.optionalContentConfig = optionalContentConfig;\n            this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n            this.cachedPatterns = new Map();\n            this.annotationCanvasMap = annotationCanvasMap;\n            this.viewportScale = 1;\n            this.outputScaleX = 1;\n            this.outputScaleY = 1;\n            this.backgroundColor = pageColors?.background || null;\n            this.foregroundColor = pageColors?.foreground || null;\n\n            if (canvasCtx) {\n              addContextCurrentTransform(canvasCtx);\n            }\n\n            this._cachedScaleForStroking = null;\n            this._cachedGetSinglePixelWidth = null;\n            this._cachedBitmapsMap = new Map();\n          }\n\n          getObject(data) {\n            let fallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n            if (typeof data === \"string\") {\n              return data.startsWith(\"g_\") ? this.commonObjs.get(data) : this.objs.get(data);\n            }\n\n            return fallback;\n          }\n\n          beginDrawing(_ref24) {\n            let {\n              transform,\n              viewport,\n              transparency = false,\n              background = null\n            } = _ref24;\n            const width = this.ctx.canvas.width;\n            const height = this.ctx.canvas.height;\n            const defaultBackgroundColor = background || \"#ffffff\";\n            this.ctx.save();\n\n            if (this.foregroundColor && this.backgroundColor) {\n              this.ctx.fillStyle = this.foregroundColor;\n              const fg = this.foregroundColor = this.ctx.fillStyle;\n              this.ctx.fillStyle = this.backgroundColor;\n              const bg = this.backgroundColor = this.ctx.fillStyle;\n              let isValidDefaultBg = true;\n              let defaultBg = defaultBackgroundColor;\n              this.ctx.fillStyle = defaultBackgroundColor;\n              defaultBg = this.ctx.fillStyle;\n              isValidDefaultBg = typeof defaultBg === \"string\" && /^#[0-9A-Fa-f]{6}$/.test(defaultBg);\n\n              if (fg === \"#000000\" && bg === \"#ffffff\" || fg === bg || !isValidDefaultBg) {\n                this.foregroundColor = this.backgroundColor = null;\n              } else {\n                const cB = parseInt(defaultBg.slice(1), 16);\n                const rB = (cB && 0xff0000) >> 16;\n                const gB = (cB && 0x00ff00) >> 8;\n                const bB = cB && 0x0000ff;\n\n                const newComp = x => {\n                  x /= 255;\n                  return x <= 0.03928 ? x / 12.92 : ((x + 0.055) / 1.055) ** 2.4;\n                };\n\n                const lumB = Math.round(0.2126 * newComp(rB) + 0.7152 * newComp(gB) + 0.0722 * newComp(bB));\n\n                this.selectColor = (r, g, b) => {\n                  const lumC = 0.2126 * newComp(r) + 0.7152 * newComp(g) + 0.0722 * newComp(b);\n                  return Math.round(lumC) === lumB ? bg : fg;\n                };\n              }\n            }\n\n            this.ctx.fillStyle = this.backgroundColor || defaultBackgroundColor;\n            this.ctx.fillRect(0, 0, width, height);\n            this.ctx.restore();\n\n            if (transparency) {\n              const transparentCanvas = this.cachedCanvases.getCanvas(\"transparent\", width, height, true);\n              this.compositeCtx = this.ctx;\n              this.transparentCanvas = transparentCanvas.canvas;\n              this.ctx = transparentCanvas.context;\n              this.ctx.save();\n              this.ctx.transform.apply(this.ctx, this.compositeCtx.mozCurrentTransform);\n            }\n\n            this.ctx.save();\n            resetCtxToDefault(this.ctx, this.foregroundColor);\n\n            if (transform) {\n              this.ctx.transform.apply(this.ctx, transform);\n              this.outputScaleX = transform[0];\n              this.outputScaleY = transform[0];\n            }\n\n            this.ctx.transform.apply(this.ctx, viewport.transform);\n            this.viewportScale = viewport.scale;\n            this.baseTransform = this.ctx.mozCurrentTransform.slice();\n\n            if (this.imageLayer) {\n              this.imageLayer.beginLayout();\n            }\n          }\n\n          executeOperatorList(operatorList, executionStartIdx, continueCallback, stepper) {\n            const argsArray = operatorList.argsArray;\n            const fnArray = operatorList.fnArray;\n            let i = executionStartIdx || 0;\n            const argsArrayLen = argsArray.length;\n\n            if (argsArrayLen === i) {\n              return i;\n            }\n\n            const chunkOperations = argsArrayLen - i > EXECUTION_STEPS && typeof continueCallback === \"function\";\n            const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n            let steps = 0;\n            const commonObjs = this.commonObjs;\n            const objs = this.objs;\n            let fnId;\n\n            while (true) {\n              if (stepper !== undefined && i === stepper.nextBreakPoint) {\n                stepper.breakIt(i, continueCallback);\n                return i;\n              }\n\n              fnId = fnArray[i];\n\n              if (fnId !== _util.OPS.dependency) {\n                this[fnId].apply(this, argsArray[i]);\n              } else {\n                for (const depObjId of argsArray[i]) {\n                  const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n                  if (!objsPool.has(depObjId)) {\n                    objsPool.get(depObjId, continueCallback);\n                    return i;\n                  }\n                }\n              }\n\n              i++;\n\n              if (i === argsArrayLen) {\n                return i;\n              }\n\n              if (chunkOperations && ++steps > EXECUTION_STEPS) {\n                if (Date.now() > endTime) {\n                  continueCallback();\n                  return i;\n                }\n\n                steps = 0;\n              }\n            }\n          }\n\n          endDrawing() {\n            while (this.stateStack.length || this.inSMaskMode) {\n              this.restore();\n            }\n\n            this.ctx.restore();\n\n            if (this.transparentCanvas) {\n              this.ctx = this.compositeCtx;\n              this.ctx.save();\n              this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n              this.ctx.drawImage(this.transparentCanvas, 0, 0);\n              this.ctx.restore();\n              this.transparentCanvas = null;\n            }\n\n            this.cachedCanvases.clear();\n            this.cachedPatterns.clear();\n\n            for (const cache of this._cachedBitmapsMap.values()) {\n              for (const canvas of cache.values()) {\n                if (typeof HTMLCanvasElement !== \"undefined\" && canvas instanceof HTMLCanvasElement) {\n                  canvas.width = canvas.height = 0;\n                }\n              }\n\n              cache.clear();\n            }\n\n            this._cachedBitmapsMap.clear();\n\n            if (this.imageLayer) {\n              this.imageLayer.endLayout();\n            }\n          }\n\n          _scaleImage(img, inverseTransform) {\n            const width = img.width;\n            const height = img.height;\n            let widthScale = Math.max(Math.hypot(inverseTransform[0], inverseTransform[1]), 1);\n            let heightScale = Math.max(Math.hypot(inverseTransform[2], inverseTransform[3]), 1);\n            let paintWidth = width,\n                paintHeight = height;\n            let tmpCanvasId = \"prescale1\";\n            let tmpCanvas, tmpCtx;\n\n            while (widthScale > 2 && paintWidth > 1 || heightScale > 2 && paintHeight > 1) {\n              let newWidth = paintWidth,\n                  newHeight = paintHeight;\n\n              if (widthScale > 2 && paintWidth > 1) {\n                newWidth = Math.ceil(paintWidth / 2);\n                widthScale /= paintWidth / newWidth;\n              }\n\n              if (heightScale > 2 && paintHeight > 1) {\n                newHeight = Math.ceil(paintHeight / 2);\n                heightScale /= paintHeight / newHeight;\n              }\n\n              tmpCanvas = this.cachedCanvases.getCanvas(tmpCanvasId, newWidth, newHeight, false);\n              tmpCtx = tmpCanvas.context;\n              tmpCtx.clearRect(0, 0, newWidth, newHeight);\n              tmpCtx.drawImage(img, 0, 0, paintWidth, paintHeight, 0, 0, newWidth, newHeight);\n              img = tmpCanvas.canvas;\n              paintWidth = newWidth;\n              paintHeight = newHeight;\n              tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n            }\n\n            return {\n              img,\n              paintWidth,\n              paintHeight\n            };\n          }\n\n          _createMaskCanvas(img) {\n            const ctx = this.ctx;\n            const {\n              width,\n              height\n            } = img;\n            const fillColor = this.current.fillColor;\n            const isPatternFill = this.current.patternFill;\n            const currentTransform = ctx.mozCurrentTransform;\n            let cache, cacheKey, scaled, maskCanvas;\n\n            if ((img.bitmap || img.data) && img.count > 1) {\n              const mainKey = img.bitmap || img.data.buffer;\n              const withoutTranslation = currentTransform.slice(0, 4);\n              cacheKey = JSON.stringify(isPatternFill ? withoutTranslation : [withoutTranslation, fillColor]);\n              cache = this._cachedBitmapsMap.get(mainKey);\n\n              if (!cache) {\n                cache = new Map();\n\n                this._cachedBitmapsMap.set(mainKey, cache);\n              }\n\n              const cachedImage = cache.get(cacheKey);\n\n              if (cachedImage && !isPatternFill) {\n                const offsetX = Math.round(Math.min(currentTransform[0], currentTransform[2]) + currentTransform[4]);\n                const offsetY = Math.round(Math.min(currentTransform[1], currentTransform[3]) + currentTransform[5]);\n                return {\n                  canvas: cachedImage,\n                  offsetX,\n                  offsetY\n                };\n              }\n\n              scaled = cachedImage;\n            }\n\n            if (!scaled) {\n              maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height, false);\n              putBinaryImageMask(maskCanvas.context, img);\n            }\n\n            let maskToCanvas = _util.Util.transform(currentTransform, [1 / width, 0, 0, -1 / height, 0, 0]);\n\n            maskToCanvas = _util.Util.transform(maskToCanvas, [1, 0, 0, 1, 0, -height]);\n\n            const cord1 = _util.Util.applyTransform([0, 0], maskToCanvas);\n\n            const cord2 = _util.Util.applyTransform([width, height], maskToCanvas);\n\n            const rect = _util.Util.normalizeRect([cord1[0], cord1[1], cord2[0], cord2[1]]);\n\n            const drawnWidth = Math.round(rect[2] - rect[0]) || 1;\n            const drawnHeight = Math.round(rect[3] - rect[1]) || 1;\n            const fillCanvas = this.cachedCanvases.getCanvas(\"fillCanvas\", drawnWidth, drawnHeight, true);\n            const fillCtx = fillCanvas.context;\n            const offsetX = Math.min(cord1[0], cord2[0]);\n            const offsetY = Math.min(cord1[1], cord2[1]);\n            fillCtx.translate(-offsetX, -offsetY);\n            fillCtx.transform.apply(fillCtx, maskToCanvas);\n\n            if (!scaled) {\n              scaled = this._scaleImage(maskCanvas.canvas, fillCtx.mozCurrentTransformInverse);\n              scaled = scaled.img;\n\n              if (cache && isPatternFill) {\n                cache.set(cacheKey, scaled);\n              }\n            }\n\n            fillCtx.imageSmoothingEnabled = getImageSmoothingEnabled(fillCtx.mozCurrentTransform, img.interpolate);\n            drawImageAtIntegerCoords(fillCtx, scaled, 0, 0, scaled.width, scaled.height, 0, 0, width, height);\n            fillCtx.globalCompositeOperation = \"source-in\";\n\n            const inverse = _util.Util.transform(fillCtx.mozCurrentTransformInverse, [1, 0, 0, 1, -offsetX, -offsetY]);\n\n            fillCtx.fillStyle = isPatternFill ? fillColor.getPattern(ctx, this, inverse, _pattern_helper.PathType.FILL) : fillColor;\n            fillCtx.fillRect(0, 0, width, height);\n\n            if (cache && !isPatternFill) {\n              this.cachedCanvases.delete(\"fillCanvas\");\n              cache.set(cacheKey, fillCanvas.canvas);\n            }\n\n            return {\n              canvas: fillCanvas.canvas,\n              offsetX: Math.round(offsetX),\n              offsetY: Math.round(offsetY)\n            };\n          }\n\n          setLineWidth(width) {\n            if (width !== this.current.lineWidth) {\n              this._cachedScaleForStroking = null;\n            }\n\n            this.current.lineWidth = width;\n            this.ctx.lineWidth = width;\n          }\n\n          setLineCap(style) {\n            this.ctx.lineCap = LINE_CAP_STYLES[style];\n          }\n\n          setLineJoin(style) {\n            this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n          }\n\n          setMiterLimit(limit) {\n            this.ctx.miterLimit = limit;\n          }\n\n          setDash(dashArray, dashPhase) {\n            const ctx = this.ctx;\n\n            if (ctx.setLineDash !== undefined) {\n              ctx.setLineDash(dashArray);\n              ctx.lineDashOffset = dashPhase;\n            }\n          }\n\n          setRenderingIntent(intent) {}\n\n          setFlatness(flatness) {}\n\n          setGState(states) {\n            for (let i = 0, ii = states.length; i < ii; i++) {\n              const state = states[i];\n              const key = state[0];\n              const value = state[1];\n\n              switch (key) {\n                case \"LW\":\n                  this.setLineWidth(value);\n                  break;\n\n                case \"LC\":\n                  this.setLineCap(value);\n                  break;\n\n                case \"LJ\":\n                  this.setLineJoin(value);\n                  break;\n\n                case \"ML\":\n                  this.setMiterLimit(value);\n                  break;\n\n                case \"D\":\n                  this.setDash(value[0], value[1]);\n                  break;\n\n                case \"RI\":\n                  this.setRenderingIntent(value);\n                  break;\n\n                case \"FL\":\n                  this.setFlatness(value);\n                  break;\n\n                case \"Font\":\n                  this.setFont(value[0], value[1]);\n                  break;\n\n                case \"CA\":\n                  this.current.strokeAlpha = state[1];\n                  break;\n\n                case \"ca\":\n                  this.current.fillAlpha = state[1];\n                  this.ctx.globalAlpha = state[1];\n                  break;\n\n                case \"BM\":\n                  this.ctx.globalCompositeOperation = value;\n                  break;\n\n                case \"SMask\":\n                  this.current.activeSMask = value ? this.tempSMask : null;\n                  this.tempSMask = null;\n                  this.checkSMaskState();\n                  break;\n\n                case \"TR\":\n                  this.current.transferMaps = value;\n              }\n            }\n          }\n\n          get inSMaskMode() {\n            return !!this.suspendedCtx;\n          }\n\n          checkSMaskState() {\n            const inSMaskMode = this.inSMaskMode;\n\n            if (this.current.activeSMask && !inSMaskMode) {\n              this.beginSMaskMode();\n            } else if (!this.current.activeSMask && inSMaskMode) {\n              this.endSMaskMode();\n            }\n          }\n\n          beginSMaskMode() {\n            if (this.inSMaskMode) {\n              throw new Error(\"beginSMaskMode called while already in smask mode\");\n            }\n\n            const drawnWidth = this.ctx.canvas.width;\n            const drawnHeight = this.ctx.canvas.height;\n            const cacheId = \"smaskGroupAt\" + this.groupLevel;\n            const scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\n            this.suspendedCtx = this.ctx;\n            this.ctx = scratchCanvas.context;\n            const ctx = this.ctx;\n            ctx.setTransform.apply(ctx, this.suspendedCtx.mozCurrentTransform);\n            copyCtxState(this.suspendedCtx, ctx);\n            mirrorContextOperations(ctx, this.suspendedCtx);\n            this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n          }\n\n          endSMaskMode() {\n            if (!this.inSMaskMode) {\n              throw new Error(\"endSMaskMode called while not in smask mode\");\n            }\n\n            this.ctx._removeMirroring();\n\n            copyCtxState(this.ctx, this.suspendedCtx);\n            this.ctx = this.suspendedCtx;\n            this.suspendedCtx = null;\n          }\n\n          compose(dirtyBox) {\n            if (!this.current.activeSMask) {\n              return;\n            }\n\n            if (!dirtyBox) {\n              dirtyBox = [0, 0, this.ctx.canvas.width, this.ctx.canvas.height];\n            } else {\n              dirtyBox[0] = Math.floor(dirtyBox[0]);\n              dirtyBox[1] = Math.floor(dirtyBox[1]);\n              dirtyBox[2] = Math.ceil(dirtyBox[2]);\n              dirtyBox[3] = Math.ceil(dirtyBox[3]);\n            }\n\n            const smask = this.current.activeSMask;\n            const suspendedCtx = this.suspendedCtx;\n            composeSMask(suspendedCtx, smask, this.ctx, dirtyBox);\n            this.ctx.save();\n            this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n            this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n            this.ctx.restore();\n          }\n\n          save() {\n            if (this.inSMaskMode) {\n              copyCtxState(this.ctx, this.suspendedCtx);\n              this.suspendedCtx.save();\n            } else {\n              this.ctx.save();\n            }\n\n            const old = this.current;\n            this.stateStack.push(old);\n            this.current = old.clone();\n          }\n\n          restore() {\n            if (this.stateStack.length === 0 && this.inSMaskMode) {\n              this.endSMaskMode();\n            }\n\n            if (this.stateStack.length !== 0) {\n              this.current = this.stateStack.pop();\n\n              if (this.inSMaskMode) {\n                this.suspendedCtx.restore();\n                copyCtxState(this.suspendedCtx, this.ctx);\n              } else {\n                this.ctx.restore();\n              }\n\n              this.checkSMaskState();\n              this.pendingClip = null;\n              this._cachedScaleForStroking = null;\n              this._cachedGetSinglePixelWidth = null;\n            }\n          }\n\n          transform(a, b, c, d, e, f) {\n            this.ctx.transform(a, b, c, d, e, f);\n            this._cachedScaleForStroking = null;\n            this._cachedGetSinglePixelWidth = null;\n          }\n\n          constructPath(ops, args, minMax) {\n            const ctx = this.ctx;\n            const current = this.current;\n            let x = current.x,\n                y = current.y;\n            let startX, startY;\n            const currentTransform = ctx.mozCurrentTransform;\n            const isScalingMatrix = currentTransform[0] === 0 && currentTransform[3] === 0 || currentTransform[1] === 0 && currentTransform[2] === 0;\n            const minMaxForBezier = isScalingMatrix ? minMax.slice(0) : null;\n\n            for (let i = 0, j = 0, ii = ops.length; i < ii; i++) {\n              switch (ops[i] | 0) {\n                case _util.OPS.rectangle:\n                  x = args[j++];\n                  y = args[j++];\n                  const width = args[j++];\n                  const height = args[j++];\n                  const xw = x + width;\n                  const yh = y + height;\n                  ctx.moveTo(x, y);\n\n                  if (width === 0 || height === 0) {\n                    ctx.lineTo(xw, yh);\n                  } else {\n                    ctx.lineTo(xw, y);\n                    ctx.lineTo(xw, yh);\n                    ctx.lineTo(x, yh);\n                  }\n\n                  if (!isScalingMatrix) {\n                    current.updateRectMinMax(currentTransform, [x, y, xw, yh]);\n                  }\n\n                  ctx.closePath();\n                  break;\n\n                case _util.OPS.moveTo:\n                  x = args[j++];\n                  y = args[j++];\n                  ctx.moveTo(x, y);\n\n                  if (!isScalingMatrix) {\n                    current.updatePathMinMax(currentTransform, x, y);\n                  }\n\n                  break;\n\n                case _util.OPS.lineTo:\n                  x = args[j++];\n                  y = args[j++];\n                  ctx.lineTo(x, y);\n\n                  if (!isScalingMatrix) {\n                    current.updatePathMinMax(currentTransform, x, y);\n                  }\n\n                  break;\n\n                case _util.OPS.curveTo:\n                  startX = x;\n                  startY = y;\n                  x = args[j + 4];\n                  y = args[j + 5];\n                  ctx.bezierCurveTo(args[j], args[j + 1], args[j + 2], args[j + 3], x, y);\n                  current.updateCurvePathMinMax(currentTransform, startX, startY, args[j], args[j + 1], args[j + 2], args[j + 3], x, y, minMaxForBezier);\n                  j += 6;\n                  break;\n\n                case _util.OPS.curveTo2:\n                  startX = x;\n                  startY = y;\n                  ctx.bezierCurveTo(x, y, args[j], args[j + 1], args[j + 2], args[j + 3]);\n                  current.updateCurvePathMinMax(currentTransform, startX, startY, x, y, args[j], args[j + 1], args[j + 2], args[j + 3], minMaxForBezier);\n                  x = args[j + 2];\n                  y = args[j + 3];\n                  j += 4;\n                  break;\n\n                case _util.OPS.curveTo3:\n                  startX = x;\n                  startY = y;\n                  x = args[j + 2];\n                  y = args[j + 3];\n                  ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n                  current.updateCurvePathMinMax(currentTransform, startX, startY, args[j], args[j + 1], x, y, x, y, minMaxForBezier);\n                  j += 4;\n                  break;\n\n                case _util.OPS.closePath:\n                  ctx.closePath();\n                  break;\n              }\n            }\n\n            if (isScalingMatrix) {\n              current.updateScalingPathMinMax(currentTransform, minMaxForBezier);\n            }\n\n            current.setCurrentPoint(x, y);\n          }\n\n          closePath() {\n            this.ctx.closePath();\n          }\n\n          stroke(consumePath) {\n            consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n            const ctx = this.ctx;\n            const strokeColor = this.current.strokeColor;\n            ctx.globalAlpha = this.current.strokeAlpha;\n\n            if (this.contentVisible) {\n              if (typeof strokeColor === \"object\" && strokeColor?.getPattern) {\n                ctx.save();\n                ctx.strokeStyle = strokeColor.getPattern(ctx, this, ctx.mozCurrentTransformInverse, _pattern_helper.PathType.STROKE);\n                this.rescaleAndStroke(false);\n                ctx.restore();\n              } else {\n                this.rescaleAndStroke(true);\n              }\n            }\n\n            if (consumePath) {\n              this.consumePath(this.current.getClippedPathBoundingBox());\n            }\n\n            ctx.globalAlpha = this.current.fillAlpha;\n          }\n\n          closeStroke() {\n            this.closePath();\n            this.stroke();\n          }\n\n          fill(consumePath) {\n            consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n            const ctx = this.ctx;\n            const fillColor = this.current.fillColor;\n            const isPatternFill = this.current.patternFill;\n            let needRestore = false;\n\n            if (isPatternFill) {\n              ctx.save();\n              ctx.fillStyle = fillColor.getPattern(ctx, this, ctx.mozCurrentTransformInverse, _pattern_helper.PathType.FILL);\n              needRestore = true;\n            }\n\n            const intersect = this.current.getClippedPathBoundingBox();\n\n            if (this.contentVisible && intersect !== null) {\n              if (this.pendingEOFill) {\n                ctx.fill(\"evenodd\");\n                this.pendingEOFill = false;\n              } else {\n                ctx.fill();\n              }\n            }\n\n            if (needRestore) {\n              ctx.restore();\n            }\n\n            if (consumePath) {\n              this.consumePath(intersect);\n            }\n          }\n\n          eoFill() {\n            this.pendingEOFill = true;\n            this.fill();\n          }\n\n          fillStroke() {\n            this.fill(false);\n            this.stroke(false);\n            this.consumePath();\n          }\n\n          eoFillStroke() {\n            this.pendingEOFill = true;\n            this.fillStroke();\n          }\n\n          closeFillStroke() {\n            this.closePath();\n            this.fillStroke();\n          }\n\n          closeEOFillStroke() {\n            this.pendingEOFill = true;\n            this.closePath();\n            this.fillStroke();\n          }\n\n          endPath() {\n            this.consumePath();\n          }\n\n          clip() {\n            this.pendingClip = NORMAL_CLIP;\n          }\n\n          eoClip() {\n            this.pendingClip = EO_CLIP;\n          }\n\n          beginText() {\n            this.current.textMatrix = _util.IDENTITY_MATRIX;\n            this.current.textMatrixScale = 1;\n            this.current.x = this.current.lineX = 0;\n            this.current.y = this.current.lineY = 0;\n          }\n\n          endText() {\n            const paths = this.pendingTextPaths;\n            const ctx = this.ctx;\n\n            if (paths === undefined) {\n              ctx.beginPath();\n              return;\n            }\n\n            ctx.save();\n            ctx.beginPath();\n\n            for (let i = 0; i < paths.length; i++) {\n              const path = paths[i];\n              ctx.setTransform.apply(ctx, path.transform);\n              ctx.translate(path.x, path.y);\n              path.addToPath(ctx, path.fontSize);\n            }\n\n            ctx.restore();\n            ctx.clip();\n            ctx.beginPath();\n            delete this.pendingTextPaths;\n          }\n\n          setCharSpacing(spacing) {\n            this.current.charSpacing = spacing;\n          }\n\n          setWordSpacing(spacing) {\n            this.current.wordSpacing = spacing;\n          }\n\n          setHScale(scale) {\n            this.current.textHScale = scale / 100;\n          }\n\n          setLeading(leading) {\n            this.current.leading = -leading;\n          }\n\n          setFont(fontRefName, size) {\n            const fontObj = this.commonObjs.get(fontRefName);\n            const current = this.current;\n\n            if (!fontObj) {\n              throw new Error(`Can't find font for ${fontRefName}`);\n            }\n\n            current.fontMatrix = fontObj.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n\n            if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n              (0, _util.warn)(\"Invalid font matrix for font \" + fontRefName);\n            }\n\n            if (size < 0) {\n              size = -size;\n              current.fontDirection = -1;\n            } else {\n              current.fontDirection = 1;\n            }\n\n            this.current.font = fontObj;\n            this.current.fontSize = size;\n\n            if (fontObj.isType3Font) {\n              return;\n            }\n\n            const name = fontObj.loadedName || \"sans-serif\";\n            let bold = \"normal\";\n\n            if (fontObj.black) {\n              bold = \"900\";\n            } else if (fontObj.bold) {\n              bold = \"bold\";\n            }\n\n            const italic = fontObj.italic ? \"italic\" : \"normal\";\n            const typeface = `\"${name}\", ${fontObj.fallbackName}`;\n            let browserFontSize = size;\n\n            if (size < MIN_FONT_SIZE) {\n              browserFontSize = MIN_FONT_SIZE;\n            } else if (size > MAX_FONT_SIZE) {\n              browserFontSize = MAX_FONT_SIZE;\n            }\n\n            this.current.fontSizeScale = size / browserFontSize;\n            this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n          }\n\n          setTextRenderingMode(mode) {\n            this.current.textRenderingMode = mode;\n          }\n\n          setTextRise(rise) {\n            this.current.textRise = rise;\n          }\n\n          moveText(x, y) {\n            this.current.x = this.current.lineX += x;\n            this.current.y = this.current.lineY += y;\n          }\n\n          setLeadingMoveText(x, y) {\n            this.setLeading(-y);\n            this.moveText(x, y);\n          }\n\n          setTextMatrix(a, b, c, d, e, f) {\n            this.current.textMatrix = [a, b, c, d, e, f];\n            this.current.textMatrixScale = Math.hypot(a, b);\n            this.current.x = this.current.lineX = 0;\n            this.current.y = this.current.lineY = 0;\n          }\n\n          nextLine() {\n            this.moveText(0, this.current.leading);\n          }\n\n          paintChar(character, x, y, patternTransform) {\n            const ctx = this.ctx;\n            const current = this.current;\n            const font = current.font;\n            const textRenderingMode = current.textRenderingMode;\n            const fontSize = current.fontSize / current.fontSizeScale;\n            const fillStrokeMode = textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n            const isAddToPathSet = !!(textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n            const patternFill = current.patternFill && !font.missingFile;\n            let addToPath;\n\n            if (font.disableFontFace || isAddToPathSet || patternFill) {\n              addToPath = font.getPathGenerator(this.commonObjs, character);\n            }\n\n            if (font.disableFontFace || patternFill) {\n              ctx.save();\n              ctx.translate(x, y);\n              ctx.beginPath();\n              addToPath(ctx, fontSize);\n\n              if (patternTransform) {\n                ctx.setTransform.apply(ctx, patternTransform);\n              }\n\n              if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.fill();\n              }\n\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.stroke();\n              }\n\n              ctx.restore();\n            } else {\n              if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.fillText(character, x, y);\n              }\n\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.strokeText(character, x, y);\n              }\n            }\n\n            if (isAddToPathSet) {\n              const paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n              paths.push({\n                transform: ctx.mozCurrentTransform,\n                x,\n                y,\n                fontSize,\n                addToPath\n              });\n            }\n          }\n\n          get isFontSubpixelAAEnabled() {\n            const {\n              context: ctx\n            } = this.cachedCanvases.getCanvas(\"isFontSubpixelAAEnabled\", 10, 10, false);\n            ctx.scale(1.5, 1);\n            ctx.fillText(\"I\", 0, 10);\n            const data = ctx.getImageData(0, 0, 10, 10).data;\n            let enabled = false;\n\n            for (let i = 3; i < data.length; i += 4) {\n              if (data[i] > 0 && data[i] < 255) {\n                enabled = true;\n                break;\n              }\n            }\n\n            return (0, _util.shadow)(this, \"isFontSubpixelAAEnabled\", enabled);\n          }\n\n          showText(glyphs) {\n            const current = this.current;\n            const font = current.font;\n\n            if (font.isType3Font) {\n              return this.showType3Text(glyphs);\n            }\n\n            const fontSize = current.fontSize;\n\n            if (fontSize === 0) {\n              return undefined;\n            }\n\n            const ctx = this.ctx;\n            const fontSizeScale = current.fontSizeScale;\n            const charSpacing = current.charSpacing;\n            const wordSpacing = current.wordSpacing;\n            const fontDirection = current.fontDirection;\n            const textHScale = current.textHScale * fontDirection;\n            const glyphsLength = glyphs.length;\n            const vertical = font.vertical;\n            const spacingDir = vertical ? 1 : -1;\n            const defaultVMetrics = font.defaultVMetrics;\n            const widthAdvanceScale = fontSize * current.fontMatrix[0];\n            const simpleFillText = current.textRenderingMode === _util.TextRenderingMode.FILL && !font.disableFontFace && !current.patternFill;\n            ctx.save();\n            ctx.transform.apply(ctx, current.textMatrix);\n            ctx.translate(current.x, current.y + current.textRise);\n\n            if (fontDirection > 0) {\n              ctx.scale(textHScale, -1);\n            } else {\n              ctx.scale(textHScale, 1);\n            }\n\n            let patternTransform;\n\n            if (current.patternFill) {\n              ctx.save();\n              const pattern = current.fillColor.getPattern(ctx, this, ctx.mozCurrentTransformInverse, _pattern_helper.PathType.FILL);\n              patternTransform = ctx.mozCurrentTransform;\n              ctx.restore();\n              ctx.fillStyle = pattern;\n            }\n\n            let lineWidth = current.lineWidth;\n            const scale = current.textMatrixScale;\n\n            if (scale === 0 || lineWidth === 0) {\n              const fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                lineWidth = this.getSinglePixelWidth();\n              }\n            } else {\n              lineWidth /= scale;\n            }\n\n            if (fontSizeScale !== 1.0) {\n              ctx.scale(fontSizeScale, fontSizeScale);\n              lineWidth /= fontSizeScale;\n            }\n\n            ctx.lineWidth = lineWidth;\n            let x = 0,\n                i;\n\n            for (i = 0; i < glyphsLength; ++i) {\n              const glyph = glyphs[i];\n\n              if (typeof glyph === \"number\") {\n                x += spacingDir * glyph * fontSize / 1000;\n                continue;\n              }\n\n              let restoreNeeded = false;\n              const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n              const character = glyph.fontChar;\n              const accent = glyph.accent;\n              let scaledX, scaledY;\n              let width = glyph.width;\n\n              if (vertical) {\n                const vmetric = glyph.vmetric || defaultVMetrics;\n                const vx = -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n                const vy = vmetric[2] * widthAdvanceScale;\n                width = vmetric ? -vmetric[0] : width;\n                scaledX = vx / fontSizeScale;\n                scaledY = (x + vy) / fontSizeScale;\n              } else {\n                scaledX = x / fontSizeScale;\n                scaledY = 0;\n              }\n\n              if (font.remeasure && width > 0) {\n                const measuredWidth = ctx.measureText(character).width * 1000 / fontSize * fontSizeScale;\n\n                if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n                  const characterScaleX = width / measuredWidth;\n                  restoreNeeded = true;\n                  ctx.save();\n                  ctx.scale(characterScaleX, 1);\n                  scaledX /= characterScaleX;\n                } else if (width !== measuredWidth) {\n                  scaledX += (width - measuredWidth) / 2000 * fontSize / fontSizeScale;\n                }\n              }\n\n              if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n                if (simpleFillText && !accent) {\n                  ctx.fillText(character, scaledX, scaledY);\n                } else {\n                  this.paintChar(character, scaledX, scaledY, patternTransform);\n\n                  if (accent) {\n                    const scaledAccentX = scaledX + fontSize * accent.offset.x / fontSizeScale;\n                    const scaledAccentY = scaledY - fontSize * accent.offset.y / fontSizeScale;\n                    this.paintChar(accent.fontChar, scaledAccentX, scaledAccentY, patternTransform);\n                  }\n                }\n              }\n\n              let charWidth;\n\n              if (vertical) {\n                charWidth = width * widthAdvanceScale - spacing * fontDirection;\n              } else {\n                charWidth = width * widthAdvanceScale + spacing * fontDirection;\n              }\n\n              x += charWidth;\n\n              if (restoreNeeded) {\n                ctx.restore();\n              }\n            }\n\n            if (vertical) {\n              current.y -= x;\n            } else {\n              current.x += x * textHScale;\n            }\n\n            ctx.restore();\n            this.compose();\n            return undefined;\n          }\n\n          showType3Text(glyphs) {\n            const ctx = this.ctx;\n            const current = this.current;\n            const font = current.font;\n            const fontSize = current.fontSize;\n            const fontDirection = current.fontDirection;\n            const spacingDir = font.vertical ? 1 : -1;\n            const charSpacing = current.charSpacing;\n            const wordSpacing = current.wordSpacing;\n            const textHScale = current.textHScale * fontDirection;\n            const fontMatrix = current.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n            const glyphsLength = glyphs.length;\n            const isTextInvisible = current.textRenderingMode === _util.TextRenderingMode.INVISIBLE;\n            let i, glyph, width, spacingLength;\n\n            if (isTextInvisible || fontSize === 0) {\n              return;\n            }\n\n            this._cachedScaleForStroking = null;\n            this._cachedGetSinglePixelWidth = null;\n            ctx.save();\n            ctx.transform.apply(ctx, current.textMatrix);\n            ctx.translate(current.x, current.y);\n            ctx.scale(textHScale, fontDirection);\n\n            for (i = 0; i < glyphsLength; ++i) {\n              glyph = glyphs[i];\n\n              if (typeof glyph === \"number\") {\n                spacingLength = spacingDir * glyph * fontSize / 1000;\n                this.ctx.translate(spacingLength, 0);\n                current.x += spacingLength * textHScale;\n                continue;\n              }\n\n              const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n              const operatorList = font.charProcOperatorList[glyph.operatorListId];\n\n              if (!operatorList) {\n                (0, _util.warn)(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n                continue;\n              }\n\n              if (this.contentVisible) {\n                this.processingType3 = glyph;\n                this.save();\n                ctx.scale(fontSize, fontSize);\n                ctx.transform.apply(ctx, fontMatrix);\n                this.executeOperatorList(operatorList);\n                this.restore();\n              }\n\n              const transformed = _util.Util.applyTransform([glyph.width, 0], fontMatrix);\n\n              width = transformed[0] * fontSize + spacing;\n              ctx.translate(width, 0);\n              current.x += width * textHScale;\n            }\n\n            ctx.restore();\n            this.processingType3 = null;\n          }\n\n          setCharWidth(xWidth, yWidth) {}\n\n          setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n            this.ctx.rect(llx, lly, urx - llx, ury - lly);\n            this.ctx.clip();\n            this.endPath();\n          }\n\n          getColorN_Pattern(IR) {\n            let pattern;\n\n            if (IR[0] === \"TilingPattern\") {\n              const color = IR[1];\n              const baseTransform = this.baseTransform || this.ctx.mozCurrentTransform.slice();\n              const canvasGraphicsFactory = {\n                createCanvasGraphics: ctx => {\n                  return new CanvasGraphics(ctx, this.commonObjs, this.objs, this.canvasFactory);\n                }\n              };\n              pattern = new _pattern_helper.TilingPattern(IR, color, this.ctx, canvasGraphicsFactory, baseTransform);\n            } else {\n              pattern = this._getPattern(IR[1], IR[2]);\n            }\n\n            return pattern;\n          }\n\n          setStrokeColorN() {\n            this.current.strokeColor = this.getColorN_Pattern(arguments);\n          }\n\n          setFillColorN() {\n            this.current.fillColor = this.getColorN_Pattern(arguments);\n            this.current.patternFill = true;\n          }\n\n          setStrokeRGBColor(r, g, b) {\n            const color = this.selectColor?.(r, g, b) || _util.Util.makeHexColor(r, g, b);\n\n            this.ctx.strokeStyle = color;\n            this.current.strokeColor = color;\n          }\n\n          setFillRGBColor(r, g, b) {\n            const color = this.selectColor?.(r, g, b) || _util.Util.makeHexColor(r, g, b);\n\n            this.ctx.fillStyle = color;\n            this.current.fillColor = color;\n            this.current.patternFill = false;\n          }\n\n          _getPattern(objId) {\n            let matrix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            let pattern;\n\n            if (this.cachedPatterns.has(objId)) {\n              pattern = this.cachedPatterns.get(objId);\n            } else {\n              pattern = (0, _pattern_helper.getShadingPattern)(this.objs.get(objId));\n              this.cachedPatterns.set(objId, pattern);\n            }\n\n            if (matrix) {\n              pattern.matrix = matrix;\n            }\n\n            return pattern;\n          }\n\n          shadingFill(objId) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            const ctx = this.ctx;\n            this.save();\n\n            const pattern = this._getPattern(objId);\n\n            ctx.fillStyle = pattern.getPattern(ctx, this, ctx.mozCurrentTransformInverse, _pattern_helper.PathType.SHADING);\n            const inv = ctx.mozCurrentTransformInverse;\n\n            if (inv) {\n              const canvas = ctx.canvas;\n              const width = canvas.width;\n              const height = canvas.height;\n\n              const bl = _util.Util.applyTransform([0, 0], inv);\n\n              const br = _util.Util.applyTransform([0, height], inv);\n\n              const ul = _util.Util.applyTransform([width, 0], inv);\n\n              const ur = _util.Util.applyTransform([width, height], inv);\n\n              const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n              const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n              const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n              const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n              this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n            } else {\n              this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n            }\n\n            this.compose(this.current.getClippedPathBoundingBox());\n            this.restore();\n          }\n\n          beginInlineImage() {\n            (0, _util.unreachable)(\"Should not call beginInlineImage\");\n          }\n\n          beginImageData() {\n            (0, _util.unreachable)(\"Should not call beginImageData\");\n          }\n\n          paintFormXObjectBegin(matrix, bbox) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            this.save();\n            this.baseTransformStack.push(this.baseTransform);\n\n            if (Array.isArray(matrix) && matrix.length === 6) {\n              this.transform.apply(this, matrix);\n            }\n\n            this.baseTransform = this.ctx.mozCurrentTransform;\n\n            if (bbox) {\n              const width = bbox[2] - bbox[0];\n              const height = bbox[3] - bbox[1];\n              this.ctx.rect(bbox[0], bbox[1], width, height);\n              this.current.updateRectMinMax(this.ctx.mozCurrentTransform, bbox);\n              this.clip();\n              this.endPath();\n            }\n          }\n\n          paintFormXObjectEnd() {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            this.restore();\n            this.baseTransform = this.baseTransformStack.pop();\n          }\n\n          beginGroup(group) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            this.save();\n\n            if (this.inSMaskMode) {\n              this.endSMaskMode();\n              this.current.activeSMask = null;\n            }\n\n            const currentCtx = this.ctx;\n\n            if (!group.isolated) {\n              (0, _util.info)(\"TODO: Support non-isolated groups.\");\n            }\n\n            if (group.knockout) {\n              (0, _util.warn)(\"Knockout groups not supported.\");\n            }\n\n            const currentTransform = currentCtx.mozCurrentTransform;\n\n            if (group.matrix) {\n              currentCtx.transform.apply(currentCtx, group.matrix);\n            }\n\n            if (!group.bbox) {\n              throw new Error(\"Bounding box is required.\");\n            }\n\n            let bounds = _util.Util.getAxialAlignedBoundingBox(group.bbox, currentCtx.mozCurrentTransform);\n\n            const canvasBounds = [0, 0, currentCtx.canvas.width, currentCtx.canvas.height];\n            bounds = _util.Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n            const offsetX = Math.floor(bounds[0]);\n            const offsetY = Math.floor(bounds[1]);\n            let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n            let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n            let scaleX = 1,\n                scaleY = 1;\n\n            if (drawnWidth > MAX_GROUP_SIZE) {\n              scaleX = drawnWidth / MAX_GROUP_SIZE;\n              drawnWidth = MAX_GROUP_SIZE;\n            }\n\n            if (drawnHeight > MAX_GROUP_SIZE) {\n              scaleY = drawnHeight / MAX_GROUP_SIZE;\n              drawnHeight = MAX_GROUP_SIZE;\n            }\n\n            this.current.startNewPathAndClipBox([0, 0, drawnWidth, drawnHeight]);\n            let cacheId = \"groupAt\" + this.groupLevel;\n\n            if (group.smask) {\n              cacheId += \"_smask_\" + this.smaskCounter++ % 2;\n            }\n\n            const scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\n            const groupCtx = scratchCanvas.context;\n            groupCtx.scale(1 / scaleX, 1 / scaleY);\n            groupCtx.translate(-offsetX, -offsetY);\n            groupCtx.transform.apply(groupCtx, currentTransform);\n\n            if (group.smask) {\n              this.smaskStack.push({\n                canvas: scratchCanvas.canvas,\n                context: groupCtx,\n                offsetX,\n                offsetY,\n                scaleX,\n                scaleY,\n                subtype: group.smask.subtype,\n                backdrop: group.smask.backdrop,\n                transferMap: group.smask.transferMap || null,\n                startTransformInverse: null\n              });\n            } else {\n              currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n              currentCtx.translate(offsetX, offsetY);\n              currentCtx.scale(scaleX, scaleY);\n              currentCtx.save();\n            }\n\n            copyCtxState(currentCtx, groupCtx);\n            this.ctx = groupCtx;\n            this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n            this.groupStack.push(currentCtx);\n            this.groupLevel++;\n          }\n\n          endGroup(group) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            this.groupLevel--;\n            const groupCtx = this.ctx;\n            const ctx = this.groupStack.pop();\n            this.ctx = ctx;\n            this.ctx.imageSmoothingEnabled = false;\n\n            if (group.smask) {\n              this.tempSMask = this.smaskStack.pop();\n              this.restore();\n            } else {\n              this.ctx.restore();\n              const currentMtx = this.ctx.mozCurrentTransform;\n              this.restore();\n              this.ctx.save();\n              this.ctx.setTransform.apply(this.ctx, currentMtx);\n\n              const dirtyBox = _util.Util.getAxialAlignedBoundingBox([0, 0, groupCtx.canvas.width, groupCtx.canvas.height], currentMtx);\n\n              this.ctx.drawImage(groupCtx.canvas, 0, 0);\n              this.ctx.restore();\n              this.compose(dirtyBox);\n            }\n          }\n\n          beginAnnotations() {\n            this.save();\n\n            if (this.baseTransform) {\n              this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n            }\n          }\n\n          endAnnotations() {\n            this.restore();\n          }\n\n          beginAnnotation(id, rect, transform, matrix, hasOwnCanvas) {\n            this.save();\n\n            if (Array.isArray(rect) && rect.length === 4) {\n              const width = rect[2] - rect[0];\n              const height = rect[3] - rect[1];\n\n              if (hasOwnCanvas && this.annotationCanvasMap) {\n                transform = transform.slice();\n                transform[4] -= rect[0];\n                transform[5] -= rect[1];\n                rect = rect.slice();\n                rect[0] = rect[1] = 0;\n                rect[2] = width;\n                rect[3] = height;\n\n                const [scaleX, scaleY] = _util.Util.singularValueDecompose2dScale(this.ctx.mozCurrentTransform);\n\n                const {\n                  viewportScale\n                } = this;\n                const canvasWidth = Math.ceil(width * this.outputScaleX * viewportScale);\n                const canvasHeight = Math.ceil(height * this.outputScaleY * viewportScale);\n                this.annotationCanvas = this.canvasFactory.create(canvasWidth, canvasHeight);\n                const {\n                  canvas,\n                  context\n                } = this.annotationCanvas;\n                const viewportScaleFactorStr = `var(--zoom-factor) * ${_display_utils.PixelsPerInch.PDF_TO_CSS_UNITS}`;\n                canvas.style.width = `calc(${width}px * ${viewportScaleFactorStr})`;\n                canvas.style.height = `calc(${height}px * ${viewportScaleFactorStr})`;\n                this.annotationCanvasMap.set(id, canvas);\n                this.annotationCanvas.savedCtx = this.ctx;\n                this.ctx = context;\n                this.ctx.setTransform(scaleX, 0, 0, -scaleY, 0, height * scaleY);\n                addContextCurrentTransform(this.ctx);\n                resetCtxToDefault(this.ctx, this.foregroundColor);\n              } else {\n                resetCtxToDefault(this.ctx, this.foregroundColor);\n                this.ctx.rect(rect[0], rect[1], width, height);\n                this.ctx.clip();\n                this.endPath();\n              }\n            }\n\n            this.current = new CanvasExtraState(this.ctx.canvas.width, this.ctx.canvas.height);\n            this.transform.apply(this, transform);\n            this.transform.apply(this, matrix);\n          }\n\n          endAnnotation() {\n            if (this.annotationCanvas) {\n              this.ctx = this.annotationCanvas.savedCtx;\n              delete this.annotationCanvas.savedCtx;\n              delete this.annotationCanvas;\n            }\n\n            this.restore();\n          }\n\n          paintImageMaskXObject(img) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            const count = img.count;\n            img = this.getObject(img.data, img);\n            img.count = count;\n            const ctx = this.ctx;\n            const glyph = this.processingType3;\n\n            if (glyph) {\n              if (glyph.compiled === undefined) {\n                glyph.compiled = compileType3Glyph(img);\n              }\n\n              if (glyph.compiled) {\n                glyph.compiled(ctx);\n                return;\n              }\n            }\n\n            const mask = this._createMaskCanvas(img);\n\n            const maskCanvas = mask.canvas;\n            ctx.save();\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            ctx.drawImage(maskCanvas, mask.offsetX, mask.offsetY);\n            ctx.restore();\n            this.compose();\n          }\n\n          paintImageMaskXObjectRepeat(img, scaleX) {\n            let skewX = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n            let skewY = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n            let scaleY = arguments.length > 4 ? arguments[4] : undefined;\n            let positions = arguments.length > 5 ? arguments[5] : undefined;\n\n            if (!this.contentVisible) {\n              return;\n            }\n\n            img = this.getObject(img.data, img);\n            const ctx = this.ctx;\n            ctx.save();\n            const currentTransform = ctx.mozCurrentTransform;\n            ctx.transform(scaleX, skewX, skewY, scaleY, 0, 0);\n\n            const mask = this._createMaskCanvas(img);\n\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n\n            for (let i = 0, ii = positions.length; i < ii; i += 2) {\n              const trans = _util.Util.transform(currentTransform, [scaleX, skewX, skewY, scaleY, positions[i], positions[i + 1]]);\n\n              const [x, y] = _util.Util.applyTransform([0, 0], trans);\n\n              ctx.drawImage(mask.canvas, x, y);\n            }\n\n            ctx.restore();\n            this.compose();\n          }\n\n          paintImageMaskXObjectGroup(images) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            const ctx = this.ctx;\n            const fillColor = this.current.fillColor;\n            const isPatternFill = this.current.patternFill;\n\n            for (let i = 0, ii = images.length; i < ii; i++) {\n              const image = images[i];\n              const width = image.width,\n                    height = image.height;\n              const maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height, false);\n              const maskCtx = maskCanvas.context;\n              maskCtx.save();\n              putBinaryImageMask(maskCtx, image);\n              maskCtx.globalCompositeOperation = \"source-in\";\n              maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this, ctx.mozCurrentTransformInverse, _pattern_helper.PathType.FILL) : fillColor;\n              maskCtx.fillRect(0, 0, width, height);\n              maskCtx.restore();\n              ctx.save();\n              ctx.transform.apply(ctx, image.transform);\n              ctx.scale(1, -1);\n              drawImageAtIntegerCoords(ctx, maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n              ctx.restore();\n            }\n\n            this.compose();\n          }\n\n          paintImageXObject(objId) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            const imgData = this.getObject(objId);\n\n            if (!imgData) {\n              (0, _util.warn)(\"Dependent image isn't ready yet\");\n              return;\n            }\n\n            this.paintInlineImageXObject(imgData);\n          }\n\n          paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            const imgData = this.getObject(objId);\n\n            if (!imgData) {\n              (0, _util.warn)(\"Dependent image isn't ready yet\");\n              return;\n            }\n\n            const width = imgData.width;\n            const height = imgData.height;\n            const map = [];\n\n            for (let i = 0, ii = positions.length; i < ii; i += 2) {\n              map.push({\n                transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n                x: 0,\n                y: 0,\n                w: width,\n                h: height\n              });\n            }\n\n            this.paintInlineImageXObjectGroup(imgData, map);\n          }\n\n          paintInlineImageXObject(imgData) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            const width = imgData.width;\n            const height = imgData.height;\n            const ctx = this.ctx;\n            this.save();\n            ctx.scale(1 / width, -1 / height);\n            let imgToPaint;\n\n            if (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement || !imgData.data) {\n              imgToPaint = imgData;\n            } else {\n              const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height, false);\n              const tmpCtx = tmpCanvas.context;\n              putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n              imgToPaint = tmpCanvas.canvas;\n            }\n\n            const scaled = this._scaleImage(imgToPaint, ctx.mozCurrentTransformInverse);\n\n            ctx.imageSmoothingEnabled = getImageSmoothingEnabled(ctx.mozCurrentTransform, imgData.interpolate);\n            const [rWidth, rHeight] = drawImageAtIntegerCoords(ctx, scaled.img, 0, 0, scaled.paintWidth, scaled.paintHeight, 0, -height, width, height);\n\n            if (this.imageLayer) {\n              const position = this.getCanvasPosition(0, -height);\n              this.imageLayer.appendImage({\n                imgData,\n                left: position[0],\n                top: position[1],\n                width: rWidth,\n                height: rHeight\n              });\n            }\n\n            this.compose();\n            this.restore();\n          }\n\n          paintInlineImageXObjectGroup(imgData, map) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            const ctx = this.ctx;\n            const w = imgData.width;\n            const h = imgData.height;\n            const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h, false);\n            const tmpCtx = tmpCanvas.context;\n            putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n\n            for (let i = 0, ii = map.length; i < ii; i++) {\n              const entry = map[i];\n              ctx.save();\n              ctx.transform.apply(ctx, entry.transform);\n              ctx.scale(1, -1);\n              drawImageAtIntegerCoords(ctx, tmpCanvas.canvas, entry.x, entry.y, entry.w, entry.h, 0, -1, 1, 1);\n\n              if (this.imageLayer) {\n                const position = this.getCanvasPosition(entry.x, entry.y);\n                this.imageLayer.appendImage({\n                  imgData,\n                  left: position[0],\n                  top: position[1],\n                  width: w,\n                  height: h\n                });\n              }\n\n              ctx.restore();\n            }\n\n            this.compose();\n          }\n\n          paintSolidColorImageMask() {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            this.ctx.fillRect(0, 0, 1, 1);\n            this.compose();\n          }\n\n          markPoint(tag) {}\n\n          markPointProps(tag, properties) {}\n\n          beginMarkedContent(tag) {\n            this.markedContentStack.push({\n              visible: true\n            });\n          }\n\n          beginMarkedContentProps(tag, properties) {\n            if (tag === \"OC\") {\n              this.markedContentStack.push({\n                visible: this.optionalContentConfig.isVisible(properties)\n              });\n            } else {\n              this.markedContentStack.push({\n                visible: true\n              });\n            }\n\n            this.contentVisible = this.isContentVisible();\n          }\n\n          endMarkedContent() {\n            this.markedContentStack.pop();\n            this.contentVisible = this.isContentVisible();\n          }\n\n          beginCompat() {}\n\n          endCompat() {}\n\n          consumePath(clipBox) {\n            const isEmpty = this.current.isEmptyClip();\n\n            if (this.pendingClip) {\n              this.current.updateClipFromPath();\n            }\n\n            if (!this.pendingClip) {\n              this.compose(clipBox);\n            }\n\n            const ctx = this.ctx;\n\n            if (this.pendingClip) {\n              if (!isEmpty) {\n                if (this.pendingClip === EO_CLIP) {\n                  ctx.clip(\"evenodd\");\n                } else {\n                  ctx.clip();\n                }\n              }\n\n              this.pendingClip = null;\n            }\n\n            this.current.startNewPathAndClipBox(this.current.clipBox);\n            ctx.beginPath();\n          }\n\n          getSinglePixelWidth() {\n            if (!this._cachedGetSinglePixelWidth) {\n              const m = this.ctx.mozCurrentTransform;\n\n              if (m[1] === 0 && m[2] === 0) {\n                this._cachedGetSinglePixelWidth = 1 / Math.min(Math.abs(m[0]), Math.abs(m[3]));\n              } else {\n                const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n                const normX = Math.hypot(m[0], m[2]);\n                const normY = Math.hypot(m[1], m[3]);\n                this._cachedGetSinglePixelWidth = Math.max(normX, normY) / absDet;\n              }\n            }\n\n            return this._cachedGetSinglePixelWidth;\n          }\n\n          getScaleForStroking() {\n            if (!this._cachedScaleForStroking) {\n              const {\n                lineWidth\n              } = this.current;\n              const m = this.ctx.mozCurrentTransform;\n              let scaleX, scaleY;\n\n              if (m[1] === 0 && m[2] === 0) {\n                const normX = Math.abs(m[0]);\n                const normY = Math.abs(m[3]);\n\n                if (lineWidth === 0) {\n                  scaleX = 1 / normX;\n                  scaleY = 1 / normY;\n                } else {\n                  const scaledXLineWidth = normX * lineWidth;\n                  const scaledYLineWidth = normY * lineWidth;\n                  scaleX = scaledXLineWidth < 1 ? 1 / scaledXLineWidth : 1;\n                  scaleY = scaledYLineWidth < 1 ? 1 / scaledYLineWidth : 1;\n                }\n              } else {\n                const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n                const normX = Math.hypot(m[0], m[1]);\n                const normY = Math.hypot(m[2], m[3]);\n\n                if (lineWidth === 0) {\n                  scaleX = normY / absDet;\n                  scaleY = normX / absDet;\n                } else {\n                  const baseArea = lineWidth * absDet;\n                  scaleX = normY > baseArea ? normY / baseArea : 1;\n                  scaleY = normX > baseArea ? normX / baseArea : 1;\n                }\n              }\n\n              this._cachedScaleForStroking = [scaleX, scaleY];\n            }\n\n            return this._cachedScaleForStroking;\n          }\n\n          rescaleAndStroke(saveRestore) {\n            const {\n              ctx\n            } = this;\n            const {\n              lineWidth\n            } = this.current;\n            const [scaleX, scaleY] = this.getScaleForStroking();\n            ctx.lineWidth = lineWidth || 1;\n\n            if (scaleX === 1 && scaleY === 1) {\n              ctx.stroke();\n              return;\n            }\n\n            let savedMatrix, savedDashes, savedDashOffset;\n\n            if (saveRestore) {\n              savedMatrix = ctx.mozCurrentTransform.slice();\n              savedDashes = ctx.getLineDash().slice();\n              savedDashOffset = ctx.lineDashOffset;\n            }\n\n            ctx.scale(scaleX, scaleY);\n            const scale = Math.max(scaleX, scaleY);\n            ctx.setLineDash(ctx.getLineDash().map(x => x / scale));\n            ctx.lineDashOffset /= scale;\n            ctx.stroke();\n\n            if (saveRestore) {\n              ctx.setTransform(...savedMatrix);\n              ctx.setLineDash(savedDashes);\n              ctx.lineDashOffset = savedDashOffset;\n            }\n          }\n\n          getCanvasPosition(x, y) {\n            const transform = this.ctx.mozCurrentTransform;\n            return [transform[0] * x + transform[2] * y + transform[4], transform[1] * x + transform[3] * y + transform[5]];\n          }\n\n          isContentVisible() {\n            for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n              if (!this.markedContentStack[i].visible) {\n                return false;\n              }\n            }\n\n            return true;\n          }\n\n        }\n\n        exports.CanvasGraphics = CanvasGraphics;\n\n        for (const op in _util.OPS) {\n          if (CanvasGraphics.prototype[op] !== undefined) {\n            CanvasGraphics.prototype[_util.OPS[op]] = CanvasGraphics.prototype[op];\n          }\n        }\n        /***/\n\n      },\n      /* 11 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.TilingPattern = exports.PathType = void 0;\n        exports.getShadingPattern = getShadingPattern;\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _is_node = __w_pdfjs_require__(3);\n\n        const PathType = {\n          FILL: \"Fill\",\n          STROKE: \"Stroke\",\n          SHADING: \"Shading\"\n        };\n        exports.PathType = PathType;\n\n        function applyBoundingBox(ctx, bbox) {\n          if (!bbox || _is_node.isNodeJS) {\n            return;\n          }\n\n          const width = bbox[2] - bbox[0];\n          const height = bbox[3] - bbox[1];\n          const region = new Path2D();\n          region.rect(bbox[0], bbox[1], width, height);\n          ctx.clip(region);\n        }\n\n        class BaseShadingPattern {\n          constructor() {\n            if (this.constructor === BaseShadingPattern) {\n              (0, _util.unreachable)(\"Cannot initialize BaseShadingPattern.\");\n            }\n          }\n\n          getPattern() {\n            (0, _util.unreachable)(\"Abstract method `getPattern` called.\");\n          }\n\n        }\n\n        class RadialAxialShadingPattern extends BaseShadingPattern {\n          constructor(IR) {\n            super();\n            this._type = IR[1];\n            this._bbox = IR[2];\n            this._colorStops = IR[3];\n            this._p0 = IR[4];\n            this._p1 = IR[5];\n            this._r0 = IR[6];\n            this._r1 = IR[7];\n            this.matrix = null;\n          }\n\n          _createGradient(ctx) {\n            let grad;\n\n            if (this._type === \"axial\") {\n              grad = ctx.createLinearGradient(this._p0[0], this._p0[1], this._p1[0], this._p1[1]);\n            } else if (this._type === \"radial\") {\n              grad = ctx.createRadialGradient(this._p0[0], this._p0[1], this._r0, this._p1[0], this._p1[1], this._r1);\n            }\n\n            for (const colorStop of this._colorStops) {\n              grad.addColorStop(colorStop[0], colorStop[1]);\n            }\n\n            return grad;\n          }\n\n          getPattern(ctx, owner, inverse, pathType) {\n            let pattern;\n\n            if (pathType === PathType.STROKE || pathType === PathType.FILL) {\n              const ownerBBox = owner.current.getClippedPathBoundingBox(pathType, ctx.mozCurrentTransform) || [0, 0, 0, 0];\n              const width = Math.ceil(ownerBBox[2] - ownerBBox[0]) || 1;\n              const height = Math.ceil(ownerBBox[3] - ownerBBox[1]) || 1;\n              const tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", width, height, true);\n              const tmpCtx = tmpCanvas.context;\n              tmpCtx.clearRect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n              tmpCtx.beginPath();\n              tmpCtx.rect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n              tmpCtx.translate(-ownerBBox[0], -ownerBBox[1]);\n              inverse = _util.Util.transform(inverse, [1, 0, 0, 1, ownerBBox[0], ownerBBox[1]]);\n              tmpCtx.transform.apply(tmpCtx, owner.baseTransform);\n\n              if (this.matrix) {\n                tmpCtx.transform.apply(tmpCtx, this.matrix);\n              }\n\n              applyBoundingBox(tmpCtx, this._bbox);\n              tmpCtx.fillStyle = this._createGradient(tmpCtx);\n              tmpCtx.fill();\n              pattern = ctx.createPattern(tmpCanvas.canvas, \"no-repeat\");\n              const domMatrix = new DOMMatrix(inverse);\n\n              try {\n                pattern.setTransform(domMatrix);\n              } catch (ex) {\n                (0, _util.warn)(`RadialAxialShadingPattern.getPattern: \"${ex?.message}\".`);\n              }\n            } else {\n              applyBoundingBox(ctx, this._bbox);\n              pattern = this._createGradient(ctx);\n            }\n\n            return pattern;\n          }\n\n        }\n\n        function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n          const coords = context.coords,\n                colors = context.colors;\n          const bytes = data.data,\n                rowSize = data.width * 4;\n          let tmp;\n\n          if (coords[p1 + 1] > coords[p2 + 1]) {\n            tmp = p1;\n            p1 = p2;\n            p2 = tmp;\n            tmp = c1;\n            c1 = c2;\n            c2 = tmp;\n          }\n\n          if (coords[p2 + 1] > coords[p3 + 1]) {\n            tmp = p2;\n            p2 = p3;\n            p3 = tmp;\n            tmp = c2;\n            c2 = c3;\n            c3 = tmp;\n          }\n\n          if (coords[p1 + 1] > coords[p2 + 1]) {\n            tmp = p1;\n            p1 = p2;\n            p2 = tmp;\n            tmp = c1;\n            c1 = c2;\n            c2 = tmp;\n          }\n\n          const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n          const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n          const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n          const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n          const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n          const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n\n          if (y1 >= y3) {\n            return;\n          }\n\n          const c1r = colors[c1],\n                c1g = colors[c1 + 1],\n                c1b = colors[c1 + 2];\n          const c2r = colors[c2],\n                c2g = colors[c2 + 1],\n                c2b = colors[c2 + 2];\n          const c3r = colors[c3],\n                c3g = colors[c3 + 1],\n                c3b = colors[c3 + 2];\n          const minY = Math.round(y1),\n                maxY = Math.round(y3);\n          let xa, car, cag, cab;\n          let xb, cbr, cbg, cbb;\n\n          for (let y = minY; y <= maxY; y++) {\n            if (y < y2) {\n              let k;\n\n              if (y < y1) {\n                k = 0;\n              } else {\n                k = (y1 - y) / (y1 - y2);\n              }\n\n              xa = x1 - (x1 - x2) * k;\n              car = c1r - (c1r - c2r) * k;\n              cag = c1g - (c1g - c2g) * k;\n              cab = c1b - (c1b - c2b) * k;\n            } else {\n              let k;\n\n              if (y > y3) {\n                k = 1;\n              } else if (y2 === y3) {\n                k = 0;\n              } else {\n                k = (y2 - y) / (y2 - y3);\n              }\n\n              xa = x2 - (x2 - x3) * k;\n              car = c2r - (c2r - c3r) * k;\n              cag = c2g - (c2g - c3g) * k;\n              cab = c2b - (c2b - c3b) * k;\n            }\n\n            let k;\n\n            if (y < y1) {\n              k = 0;\n            } else if (y > y3) {\n              k = 1;\n            } else {\n              k = (y1 - y) / (y1 - y3);\n            }\n\n            xb = x1 - (x1 - x3) * k;\n            cbr = c1r - (c1r - c3r) * k;\n            cbg = c1g - (c1g - c3g) * k;\n            cbb = c1b - (c1b - c3b) * k;\n            const x1_ = Math.round(Math.min(xa, xb));\n            const x2_ = Math.round(Math.max(xa, xb));\n            let j = rowSize * y + x1_ * 4;\n\n            for (let x = x1_; x <= x2_; x++) {\n              k = (xa - x) / (xa - xb);\n\n              if (k < 0) {\n                k = 0;\n              } else if (k > 1) {\n                k = 1;\n              }\n\n              bytes[j++] = car - (car - cbr) * k | 0;\n              bytes[j++] = cag - (cag - cbg) * k | 0;\n              bytes[j++] = cab - (cab - cbb) * k | 0;\n              bytes[j++] = 255;\n            }\n          }\n        }\n\n        function drawFigure(data, figure, context) {\n          const ps = figure.coords;\n          const cs = figure.colors;\n          let i, ii;\n\n          switch (figure.type) {\n            case \"lattice\":\n              const verticesPerRow = figure.verticesPerRow;\n              const rows = Math.floor(ps.length / verticesPerRow) - 1;\n              const cols = verticesPerRow - 1;\n\n              for (i = 0; i < rows; i++) {\n                let q = i * verticesPerRow;\n\n                for (let j = 0; j < cols; j++, q++) {\n                  drawTriangle(data, context, ps[q], ps[q + 1], ps[q + verticesPerRow], cs[q], cs[q + 1], cs[q + verticesPerRow]);\n                  drawTriangle(data, context, ps[q + verticesPerRow + 1], ps[q + 1], ps[q + verticesPerRow], cs[q + verticesPerRow + 1], cs[q + 1], cs[q + verticesPerRow]);\n                }\n              }\n\n              break;\n\n            case \"triangles\":\n              for (i = 0, ii = ps.length; i < ii; i += 3) {\n                drawTriangle(data, context, ps[i], ps[i + 1], ps[i + 2], cs[i], cs[i + 1], cs[i + 2]);\n              }\n\n              break;\n\n            default:\n              throw new Error(\"illegal figure\");\n          }\n        }\n\n        class MeshShadingPattern extends BaseShadingPattern {\n          constructor(IR) {\n            super();\n            this._coords = IR[2];\n            this._colors = IR[3];\n            this._figures = IR[4];\n            this._bounds = IR[5];\n            this._bbox = IR[7];\n            this._background = IR[8];\n            this.matrix = null;\n          }\n\n          _createMeshCanvas(combinedScale, backgroundColor, cachedCanvases) {\n            const EXPECTED_SCALE = 1.1;\n            const MAX_PATTERN_SIZE = 3000;\n            const BORDER_SIZE = 2;\n            const offsetX = Math.floor(this._bounds[0]);\n            const offsetY = Math.floor(this._bounds[1]);\n            const boundsWidth = Math.ceil(this._bounds[2]) - offsetX;\n            const boundsHeight = Math.ceil(this._bounds[3]) - offsetY;\n            const width = Math.min(Math.ceil(Math.abs(boundsWidth * combinedScale[0] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n            const height = Math.min(Math.ceil(Math.abs(boundsHeight * combinedScale[1] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n            const scaleX = boundsWidth / width;\n            const scaleY = boundsHeight / height;\n            const context = {\n              coords: this._coords,\n              colors: this._colors,\n              offsetX: -offsetX,\n              offsetY: -offsetY,\n              scaleX: 1 / scaleX,\n              scaleY: 1 / scaleY\n            };\n            const paddedWidth = width + BORDER_SIZE * 2;\n            const paddedHeight = height + BORDER_SIZE * 2;\n            const tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\n            const tmpCtx = tmpCanvas.context;\n            const data = tmpCtx.createImageData(width, height);\n\n            if (backgroundColor) {\n              const bytes = data.data;\n\n              for (let i = 0, ii = bytes.length; i < ii; i += 4) {\n                bytes[i] = backgroundColor[0];\n                bytes[i + 1] = backgroundColor[1];\n                bytes[i + 2] = backgroundColor[2];\n                bytes[i + 3] = 255;\n              }\n            }\n\n            for (const figure of this._figures) {\n              drawFigure(data, figure, context);\n            }\n\n            tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n            const canvas = tmpCanvas.canvas;\n            return {\n              canvas,\n              offsetX: offsetX - BORDER_SIZE * scaleX,\n              offsetY: offsetY - BORDER_SIZE * scaleY,\n              scaleX,\n              scaleY\n            };\n          }\n\n          getPattern(ctx, owner, inverse, pathType) {\n            applyBoundingBox(ctx, this._bbox);\n            let scale;\n\n            if (pathType === PathType.SHADING) {\n              scale = _util.Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n            } else {\n              scale = _util.Util.singularValueDecompose2dScale(owner.baseTransform);\n\n              if (this.matrix) {\n                const matrixScale = _util.Util.singularValueDecompose2dScale(this.matrix);\n\n                scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n              }\n            }\n\n            const temporaryPatternCanvas = this._createMeshCanvas(scale, pathType === PathType.SHADING ? null : this._background, owner.cachedCanvases);\n\n            if (pathType !== PathType.SHADING) {\n              ctx.setTransform.apply(ctx, owner.baseTransform);\n\n              if (this.matrix) {\n                ctx.transform.apply(ctx, this.matrix);\n              }\n            }\n\n            ctx.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\n            ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n            return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n          }\n\n        }\n\n        class DummyShadingPattern extends BaseShadingPattern {\n          getPattern() {\n            return \"hotpink\";\n          }\n\n        }\n\n        function getShadingPattern(IR) {\n          switch (IR[0]) {\n            case \"RadialAxial\":\n              return new RadialAxialShadingPattern(IR);\n\n            case \"Mesh\":\n              return new MeshShadingPattern(IR);\n\n            case \"Dummy\":\n              return new DummyShadingPattern();\n          }\n\n          throw new Error(`Unknown IR type: ${IR[0]}`);\n        }\n\n        const PaintType = {\n          COLORED: 1,\n          UNCOLORED: 2\n        };\n\n        class TilingPattern {\n          static get MAX_PATTERN_SIZE() {\n            return (0, _util.shadow)(this, \"MAX_PATTERN_SIZE\", 3000);\n          }\n\n          constructor(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n            this.operatorList = IR[2];\n            this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n            this.bbox = IR[4];\n            this.xstep = IR[5];\n            this.ystep = IR[6];\n            this.paintType = IR[7];\n            this.tilingType = IR[8];\n            this.color = color;\n            this.ctx = ctx;\n            this.canvasGraphicsFactory = canvasGraphicsFactory;\n            this.baseTransform = baseTransform;\n          }\n\n          createPatternCanvas(owner) {\n            const operatorList = this.operatorList;\n            const bbox = this.bbox;\n            const xstep = this.xstep;\n            const ystep = this.ystep;\n            const paintType = this.paintType;\n            const tilingType = this.tilingType;\n            const color = this.color;\n            const canvasGraphicsFactory = this.canvasGraphicsFactory;\n            (0, _util.info)(\"TilingType: \" + tilingType);\n            const x0 = bbox[0],\n                  y0 = bbox[1],\n                  x1 = bbox[2],\n                  y1 = bbox[3];\n\n            const matrixScale = _util.Util.singularValueDecompose2dScale(this.matrix);\n\n            const curMatrixScale = _util.Util.singularValueDecompose2dScale(this.baseTransform);\n\n            const combinedScale = [matrixScale[0] * curMatrixScale[0], matrixScale[1] * curMatrixScale[1]];\n            const dimx = this.getSizeAndScale(xstep, this.ctx.canvas.width, combinedScale[0]);\n            const dimy = this.getSizeAndScale(ystep, this.ctx.canvas.height, combinedScale[1]);\n            const tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", dimx.size, dimy.size, true);\n            const tmpCtx = tmpCanvas.context;\n            const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n            graphics.groupLevel = owner.groupLevel;\n            this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n            let adjustedX0 = x0;\n            let adjustedY0 = y0;\n            let adjustedX1 = x1;\n            let adjustedY1 = y1;\n\n            if (x0 < 0) {\n              adjustedX0 = 0;\n              adjustedX1 += Math.abs(x0);\n            }\n\n            if (y0 < 0) {\n              adjustedY0 = 0;\n              adjustedY1 += Math.abs(y0);\n            }\n\n            tmpCtx.translate(-(dimx.scale * adjustedX0), -(dimy.scale * adjustedY0));\n            graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n            tmpCtx.save();\n            this.clipBbox(graphics, adjustedX0, adjustedY0, adjustedX1, adjustedY1);\n            graphics.baseTransform = graphics.ctx.mozCurrentTransform.slice();\n            graphics.executeOperatorList(operatorList);\n            graphics.endDrawing();\n            return {\n              canvas: tmpCanvas.canvas,\n              scaleX: dimx.scale,\n              scaleY: dimy.scale,\n              offsetX: adjustedX0,\n              offsetY: adjustedY0\n            };\n          }\n\n          getSizeAndScale(step, realOutputSize, scale) {\n            step = Math.abs(step);\n            const maxSize = Math.max(TilingPattern.MAX_PATTERN_SIZE, realOutputSize);\n            let size = Math.ceil(step * scale);\n\n            if (size >= maxSize) {\n              size = maxSize;\n            } else {\n              scale = size / step;\n            }\n\n            return {\n              scale,\n              size\n            };\n          }\n\n          clipBbox(graphics, x0, y0, x1, y1) {\n            const bboxWidth = x1 - x0;\n            const bboxHeight = y1 - y0;\n            graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n            graphics.current.updateRectMinMax(graphics.ctx.mozCurrentTransform, [x0, y0, x1, y1]);\n            graphics.clip();\n            graphics.endPath();\n          }\n\n          setFillAndStrokeStyleToContext(graphics, paintType, color) {\n            const context = graphics.ctx,\n                  current = graphics.current;\n\n            switch (paintType) {\n              case PaintType.COLORED:\n                const ctx = this.ctx;\n                context.fillStyle = ctx.fillStyle;\n                context.strokeStyle = ctx.strokeStyle;\n                current.fillColor = ctx.fillStyle;\n                current.strokeColor = ctx.strokeStyle;\n                break;\n\n              case PaintType.UNCOLORED:\n                const cssColor = _util.Util.makeHexColor(color[0], color[1], color[2]);\n\n                context.fillStyle = cssColor;\n                context.strokeStyle = cssColor;\n                current.fillColor = cssColor;\n                current.strokeColor = cssColor;\n                break;\n\n              default:\n                throw new _util.FormatError(`Unsupported paint type: ${paintType}`);\n            }\n          }\n\n          getPattern(ctx, owner, inverse, pathType) {\n            let matrix = inverse;\n\n            if (pathType !== PathType.SHADING) {\n              matrix = _util.Util.transform(matrix, owner.baseTransform);\n\n              if (this.matrix) {\n                matrix = _util.Util.transform(matrix, this.matrix);\n              }\n            }\n\n            const temporaryPatternCanvas = this.createPatternCanvas(owner);\n            let domMatrix = new DOMMatrix(matrix);\n            domMatrix = domMatrix.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\n            domMatrix = domMatrix.scale(1 / temporaryPatternCanvas.scaleX, 1 / temporaryPatternCanvas.scaleY);\n            const pattern = ctx.createPattern(temporaryPatternCanvas.canvas, \"repeat\");\n\n            try {\n              pattern.setTransform(domMatrix);\n            } catch (ex) {\n              (0, _util.warn)(`TilingPattern.getPattern: \"${ex?.message}\".`);\n            }\n\n            return pattern;\n          }\n\n        }\n\n        exports.TilingPattern = TilingPattern;\n        /***/\n      },\n      /* 12 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.applyMaskImageData = applyMaskImageData;\n\n        var _util = __w_pdfjs_require__(1);\n\n        function applyMaskImageData(_ref25) {\n          let {\n            src,\n            srcPos = 0,\n            dest,\n            destPos = 0,\n            width,\n            height,\n            inverseDecode = false\n          } = _ref25;\n          const opaque = _util.FeatureTest.isLittleEndian ? 0xff000000 : 0x000000ff;\n          const [zeroMapping, oneMapping] = !inverseDecode ? [opaque, 0] : [0, opaque];\n          const widthInSource = width >> 3;\n          const widthRemainder = width & 7;\n          const srcLength = src.length;\n          dest = new Uint32Array(dest.buffer);\n\n          for (let i = 0; i < height; i++) {\n            for (const max = srcPos + widthInSource; srcPos < max; srcPos++) {\n              const elem = srcPos < srcLength ? src[srcPos] : 255;\n              dest[destPos++] = elem & 0b10000000 ? oneMapping : zeroMapping;\n              dest[destPos++] = elem & 0b1000000 ? oneMapping : zeroMapping;\n              dest[destPos++] = elem & 0b100000 ? oneMapping : zeroMapping;\n              dest[destPos++] = elem & 0b10000 ? oneMapping : zeroMapping;\n              dest[destPos++] = elem & 0b1000 ? oneMapping : zeroMapping;\n              dest[destPos++] = elem & 0b100 ? oneMapping : zeroMapping;\n              dest[destPos++] = elem & 0b10 ? oneMapping : zeroMapping;\n              dest[destPos++] = elem & 0b1 ? oneMapping : zeroMapping;\n            }\n\n            if (widthRemainder === 0) {\n              continue;\n            }\n\n            const elem = srcPos < srcLength ? src[srcPos++] : 255;\n\n            for (let j = 0; j < widthRemainder; j++) {\n              dest[destPos++] = elem & 1 << 7 - j ? oneMapping : zeroMapping;\n            }\n          }\n\n          return {\n            srcPos,\n            destPos\n          };\n        }\n        /***/\n\n      },\n      /* 13 */\n\n      /***/\n      (__unused_webpack_module, exports) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.GlobalWorkerOptions = void 0;\n        const GlobalWorkerOptions = Object.create(null);\n        exports.GlobalWorkerOptions = GlobalWorkerOptions;\n        GlobalWorkerOptions.workerPort = GlobalWorkerOptions.workerPort === undefined ? null : GlobalWorkerOptions.workerPort;\n        GlobalWorkerOptions.workerSrc = GlobalWorkerOptions.workerSrc === undefined ? \"\" : GlobalWorkerOptions.workerSrc;\n        /***/\n      },\n      /* 14 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.MessageHandler = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        const CallbackKind = {\n          UNKNOWN: 0,\n          DATA: 1,\n          ERROR: 2\n        };\n        const StreamKind = {\n          UNKNOWN: 0,\n          CANCEL: 1,\n          CANCEL_COMPLETE: 2,\n          CLOSE: 3,\n          ENQUEUE: 4,\n          ERROR: 5,\n          PULL: 6,\n          PULL_COMPLETE: 7,\n          START_COMPLETE: 8\n        };\n\n        function wrapReason(reason) {\n          if (!(reason instanceof Error || typeof reason === \"object\" && reason !== null)) {\n            (0, _util.unreachable)('wrapReason: Expected \"reason\" to be a (possibly cloned) Error.');\n          }\n\n          switch (reason.name) {\n            case \"AbortException\":\n              return new _util.AbortException(reason.message);\n\n            case \"MissingPDFException\":\n              return new _util.MissingPDFException(reason.message);\n\n            case \"PasswordException\":\n              return new _util.PasswordException(reason.message, reason.code);\n\n            case \"UnexpectedResponseException\":\n              return new _util.UnexpectedResponseException(reason.message, reason.status);\n\n            case \"UnknownErrorException\":\n              return new _util.UnknownErrorException(reason.message, reason.details);\n\n            default:\n              return new _util.UnknownErrorException(reason.message, reason.toString());\n          }\n        }\n\n        class MessageHandler {\n          constructor(sourceName, targetName, comObj) {\n            this.sourceName = sourceName;\n            this.targetName = targetName;\n            this.comObj = comObj;\n            this.callbackId = 1;\n            this.streamId = 1;\n            this.streamSinks = Object.create(null);\n            this.streamControllers = Object.create(null);\n            this.callbackCapabilities = Object.create(null);\n            this.actionHandler = Object.create(null);\n\n            this._onComObjOnMessage = event => {\n              const data = event.data;\n\n              if (data.targetName !== this.sourceName) {\n                return;\n              }\n\n              if (data.stream) {\n                this._processStreamMessage(data);\n\n                return;\n              }\n\n              if (data.callback) {\n                const callbackId = data.callbackId;\n                const capability = this.callbackCapabilities[callbackId];\n\n                if (!capability) {\n                  throw new Error(`Cannot resolve callback ${callbackId}`);\n                }\n\n                delete this.callbackCapabilities[callbackId];\n\n                if (data.callback === CallbackKind.DATA) {\n                  capability.resolve(data.data);\n                } else if (data.callback === CallbackKind.ERROR) {\n                  capability.reject(wrapReason(data.reason));\n                } else {\n                  throw new Error(\"Unexpected callback case\");\n                }\n\n                return;\n              }\n\n              const action = this.actionHandler[data.action];\n\n              if (!action) {\n                throw new Error(`Unknown action from worker: ${data.action}`);\n              }\n\n              if (data.callbackId) {\n                const cbSourceName = this.sourceName;\n                const cbTargetName = data.sourceName;\n                new Promise(function (resolve) {\n                  resolve(action(data.data));\n                }).then(function (result) {\n                  comObj.postMessage({\n                    sourceName: cbSourceName,\n                    targetName: cbTargetName,\n                    callback: CallbackKind.DATA,\n                    callbackId: data.callbackId,\n                    data: result\n                  });\n                }, function (reason) {\n                  comObj.postMessage({\n                    sourceName: cbSourceName,\n                    targetName: cbTargetName,\n                    callback: CallbackKind.ERROR,\n                    callbackId: data.callbackId,\n                    reason: wrapReason(reason)\n                  });\n                });\n                return;\n              }\n\n              if (data.streamId) {\n                this._createStreamSink(data);\n\n                return;\n              }\n\n              action(data.data);\n            };\n\n            comObj.addEventListener(\"message\", this._onComObjOnMessage);\n          }\n\n          on(actionName, handler) {\n            const ah = this.actionHandler;\n\n            if (ah[actionName]) {\n              throw new Error(`There is already an actionName called \"${actionName}\"`);\n            }\n\n            ah[actionName] = handler;\n          }\n\n          send(actionName, data, transfers) {\n            this.comObj.postMessage({\n              sourceName: this.sourceName,\n              targetName: this.targetName,\n              action: actionName,\n              data\n            }, transfers);\n          }\n\n          sendWithPromise(actionName, data, transfers) {\n            const callbackId = this.callbackId++;\n            const capability = (0, _util.createPromiseCapability)();\n            this.callbackCapabilities[callbackId] = capability;\n\n            try {\n              this.comObj.postMessage({\n                sourceName: this.sourceName,\n                targetName: this.targetName,\n                action: actionName,\n                callbackId,\n                data\n              }, transfers);\n            } catch (ex) {\n              capability.reject(ex);\n            }\n\n            return capability.promise;\n          }\n\n          sendWithStream(actionName, data, queueingStrategy, transfers) {\n            const streamId = this.streamId++,\n                  sourceName = this.sourceName,\n                  targetName = this.targetName,\n                  comObj = this.comObj;\n            return new ReadableStream({\n              start: controller => {\n                const startCapability = (0, _util.createPromiseCapability)();\n                this.streamControllers[streamId] = {\n                  controller,\n                  startCall: startCapability,\n                  pullCall: null,\n                  cancelCall: null,\n                  isClosed: false\n                };\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  action: actionName,\n                  streamId,\n                  data,\n                  desiredSize: controller.desiredSize\n                }, transfers);\n                return startCapability.promise;\n              },\n              pull: controller => {\n                const pullCapability = (0, _util.createPromiseCapability)();\n                this.streamControllers[streamId].pullCall = pullCapability;\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.PULL,\n                  streamId,\n                  desiredSize: controller.desiredSize\n                });\n                return pullCapability.promise;\n              },\n              cancel: reason => {\n                (0, _util.assert)(reason instanceof Error, \"cancel must have a valid reason\");\n                const cancelCapability = (0, _util.createPromiseCapability)();\n                this.streamControllers[streamId].cancelCall = cancelCapability;\n                this.streamControllers[streamId].isClosed = true;\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.CANCEL,\n                  streamId,\n                  reason: wrapReason(reason)\n                });\n                return cancelCapability.promise;\n              }\n            }, queueingStrategy);\n          }\n\n          _createStreamSink(data) {\n            const streamId = data.streamId,\n                  sourceName = this.sourceName,\n                  targetName = data.sourceName,\n                  comObj = this.comObj;\n            const self = this,\n                  action = this.actionHandler[data.action];\n            const streamSink = {\n              enqueue(chunk) {\n                let size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n                let transfers = arguments.length > 2 ? arguments[2] : undefined;\n\n                if (this.isCancelled) {\n                  return;\n                }\n\n                const lastDesiredSize = this.desiredSize;\n                this.desiredSize -= size;\n\n                if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n                  this.sinkCapability = (0, _util.createPromiseCapability)();\n                  this.ready = this.sinkCapability.promise;\n                }\n\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.ENQUEUE,\n                  streamId,\n                  chunk\n                }, transfers);\n              },\n\n              close() {\n                if (this.isCancelled) {\n                  return;\n                }\n\n                this.isCancelled = true;\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.CLOSE,\n                  streamId\n                });\n                delete self.streamSinks[streamId];\n              },\n\n              error(reason) {\n                (0, _util.assert)(reason instanceof Error, \"error must have a valid reason\");\n\n                if (this.isCancelled) {\n                  return;\n                }\n\n                this.isCancelled = true;\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.ERROR,\n                  streamId,\n                  reason: wrapReason(reason)\n                });\n              },\n\n              sinkCapability: (0, _util.createPromiseCapability)(),\n              onPull: null,\n              onCancel: null,\n              isCancelled: false,\n              desiredSize: data.desiredSize,\n              ready: null\n            };\n            streamSink.sinkCapability.resolve();\n            streamSink.ready = streamSink.sinkCapability.promise;\n            this.streamSinks[streamId] = streamSink;\n            new Promise(function (resolve) {\n              resolve(action(data.data, streamSink));\n            }).then(function () {\n              comObj.postMessage({\n                sourceName,\n                targetName,\n                stream: StreamKind.START_COMPLETE,\n                streamId,\n                success: true\n              });\n            }, function (reason) {\n              comObj.postMessage({\n                sourceName,\n                targetName,\n                stream: StreamKind.START_COMPLETE,\n                streamId,\n                reason: wrapReason(reason)\n              });\n            });\n          }\n\n          _processStreamMessage(data) {\n            const streamId = data.streamId,\n                  sourceName = this.sourceName,\n                  targetName = data.sourceName,\n                  comObj = this.comObj;\n            const streamController = this.streamControllers[streamId],\n                  streamSink = this.streamSinks[streamId];\n\n            switch (data.stream) {\n              case StreamKind.START_COMPLETE:\n                if (data.success) {\n                  streamController.startCall.resolve();\n                } else {\n                  streamController.startCall.reject(wrapReason(data.reason));\n                }\n\n                break;\n\n              case StreamKind.PULL_COMPLETE:\n                if (data.success) {\n                  streamController.pullCall.resolve();\n                } else {\n                  streamController.pullCall.reject(wrapReason(data.reason));\n                }\n\n                break;\n\n              case StreamKind.PULL:\n                if (!streamSink) {\n                  comObj.postMessage({\n                    sourceName,\n                    targetName,\n                    stream: StreamKind.PULL_COMPLETE,\n                    streamId,\n                    success: true\n                  });\n                  break;\n                }\n\n                if (streamSink.desiredSize <= 0 && data.desiredSize > 0) {\n                  streamSink.sinkCapability.resolve();\n                }\n\n                streamSink.desiredSize = data.desiredSize;\n                new Promise(function (resolve) {\n                  resolve(streamSink.onPull && streamSink.onPull());\n                }).then(function () {\n                  comObj.postMessage({\n                    sourceName,\n                    targetName,\n                    stream: StreamKind.PULL_COMPLETE,\n                    streamId,\n                    success: true\n                  });\n                }, function (reason) {\n                  comObj.postMessage({\n                    sourceName,\n                    targetName,\n                    stream: StreamKind.PULL_COMPLETE,\n                    streamId,\n                    reason: wrapReason(reason)\n                  });\n                });\n                break;\n\n              case StreamKind.ENQUEUE:\n                (0, _util.assert)(streamController, \"enqueue should have stream controller\");\n\n                if (streamController.isClosed) {\n                  break;\n                }\n\n                streamController.controller.enqueue(data.chunk);\n                break;\n\n              case StreamKind.CLOSE:\n                (0, _util.assert)(streamController, \"close should have stream controller\");\n\n                if (streamController.isClosed) {\n                  break;\n                }\n\n                streamController.isClosed = true;\n                streamController.controller.close();\n\n                this._deleteStreamController(streamController, streamId);\n\n                break;\n\n              case StreamKind.ERROR:\n                (0, _util.assert)(streamController, \"error should have stream controller\");\n                streamController.controller.error(wrapReason(data.reason));\n\n                this._deleteStreamController(streamController, streamId);\n\n                break;\n\n              case StreamKind.CANCEL_COMPLETE:\n                if (data.success) {\n                  streamController.cancelCall.resolve();\n                } else {\n                  streamController.cancelCall.reject(wrapReason(data.reason));\n                }\n\n                this._deleteStreamController(streamController, streamId);\n\n                break;\n\n              case StreamKind.CANCEL:\n                if (!streamSink) {\n                  break;\n                }\n\n                new Promise(function (resolve) {\n                  resolve(streamSink.onCancel && streamSink.onCancel(wrapReason(data.reason)));\n                }).then(function () {\n                  comObj.postMessage({\n                    sourceName,\n                    targetName,\n                    stream: StreamKind.CANCEL_COMPLETE,\n                    streamId,\n                    success: true\n                  });\n                }, function (reason) {\n                  comObj.postMessage({\n                    sourceName,\n                    targetName,\n                    stream: StreamKind.CANCEL_COMPLETE,\n                    streamId,\n                    reason: wrapReason(reason)\n                  });\n                });\n                streamSink.sinkCapability.reject(wrapReason(data.reason));\n                streamSink.isCancelled = true;\n                delete this.streamSinks[streamId];\n                break;\n\n              default:\n                throw new Error(\"Unexpected stream case\");\n            }\n          }\n\n          async _deleteStreamController(streamController, streamId) {\n            await Promise.allSettled([streamController.startCall && streamController.startCall.promise, streamController.pullCall && streamController.pullCall.promise, streamController.cancelCall && streamController.cancelCall.promise]);\n            delete this.streamControllers[streamId];\n          }\n\n          destroy() {\n            this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n          }\n\n        }\n\n        exports.MessageHandler = MessageHandler;\n        /***/\n      },\n      /* 15 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.Metadata = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        class Metadata {\n          #metadataMap;\n          #data;\n\n          constructor(_ref26) {\n            let {\n              parsedData,\n              rawData\n            } = _ref26;\n            this.#metadataMap = parsedData;\n            this.#data = rawData;\n          }\n\n          getRaw() {\n            return this.#data;\n          }\n\n          get(name) {\n            return this.#metadataMap.get(name) ?? null;\n          }\n\n          getAll() {\n            return (0, _util.objectFromMap)(this.#metadataMap);\n          }\n\n          has(name) {\n            return this.#metadataMap.has(name);\n          }\n\n        }\n\n        exports.Metadata = Metadata;\n        /***/\n      },\n      /* 16 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.OptionalContentConfig = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        class OptionalContentGroup {\n          constructor(name, intent) {\n            this.visible = true;\n            this.name = name;\n            this.intent = intent;\n          }\n\n        }\n\n        class OptionalContentConfig {\n          constructor(data) {\n            this.name = null;\n            this.creator = null;\n            this._order = null;\n            this._groups = new Map();\n\n            if (data === null) {\n              return;\n            }\n\n            this.name = data.name;\n            this.creator = data.creator;\n            this._order = data.order;\n\n            for (const group of data.groups) {\n              this._groups.set(group.id, new OptionalContentGroup(group.name, group.intent));\n            }\n\n            if (data.baseState === \"OFF\") {\n              for (const group of this._groups) {\n                group.visible = false;\n              }\n            }\n\n            for (const on of data.on) {\n              this._groups.get(on).visible = true;\n            }\n\n            for (const off of data.off) {\n              this._groups.get(off).visible = false;\n            }\n          }\n\n          _evaluateVisibilityExpression(array) {\n            const length = array.length;\n\n            if (length < 2) {\n              return true;\n            }\n\n            const operator = array[0];\n\n            for (let i = 1; i < length; i++) {\n              const element = array[i];\n              let state;\n\n              if (Array.isArray(element)) {\n                state = this._evaluateVisibilityExpression(element);\n              } else if (this._groups.has(element)) {\n                state = this._groups.get(element).visible;\n              } else {\n                (0, _util.warn)(`Optional content group not found: ${element}`);\n                return true;\n              }\n\n              switch (operator) {\n                case \"And\":\n                  if (!state) {\n                    return false;\n                  }\n\n                  break;\n\n                case \"Or\":\n                  if (state) {\n                    return true;\n                  }\n\n                  break;\n\n                case \"Not\":\n                  return !state;\n\n                default:\n                  return true;\n              }\n            }\n\n            return operator === \"And\";\n          }\n\n          isVisible(group) {\n            if (this._groups.size === 0) {\n              return true;\n            }\n\n            if (!group) {\n              (0, _util.warn)(\"Optional content group not defined.\");\n              return true;\n            }\n\n            if (group.type === \"OCG\") {\n              if (!this._groups.has(group.id)) {\n                (0, _util.warn)(`Optional content group not found: ${group.id}`);\n                return true;\n              }\n\n              return this._groups.get(group.id).visible;\n            } else if (group.type === \"OCMD\") {\n              if (group.expression) {\n                return this._evaluateVisibilityExpression(group.expression);\n              }\n\n              if (!group.policy || group.policy === \"AnyOn\") {\n                for (const id of group.ids) {\n                  if (!this._groups.has(id)) {\n                    (0, _util.warn)(`Optional content group not found: ${id}`);\n                    return true;\n                  }\n\n                  if (this._groups.get(id).visible) {\n                    return true;\n                  }\n                }\n\n                return false;\n              } else if (group.policy === \"AllOn\") {\n                for (const id of group.ids) {\n                  if (!this._groups.has(id)) {\n                    (0, _util.warn)(`Optional content group not found: ${id}`);\n                    return true;\n                  }\n\n                  if (!this._groups.get(id).visible) {\n                    return false;\n                  }\n                }\n\n                return true;\n              } else if (group.policy === \"AnyOff\") {\n                for (const id of group.ids) {\n                  if (!this._groups.has(id)) {\n                    (0, _util.warn)(`Optional content group not found: ${id}`);\n                    return true;\n                  }\n\n                  if (!this._groups.get(id).visible) {\n                    return true;\n                  }\n                }\n\n                return false;\n              } else if (group.policy === \"AllOff\") {\n                for (const id of group.ids) {\n                  if (!this._groups.has(id)) {\n                    (0, _util.warn)(`Optional content group not found: ${id}`);\n                    return true;\n                  }\n\n                  if (this._groups.get(id).visible) {\n                    return false;\n                  }\n                }\n\n                return true;\n              }\n\n              (0, _util.warn)(`Unknown optional content policy ${group.policy}.`);\n              return true;\n            }\n\n            (0, _util.warn)(`Unknown group type ${group.type}.`);\n            return true;\n          }\n\n          setVisibility(id) {\n            let visible = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            if (!this._groups.has(id)) {\n              (0, _util.warn)(`Optional content group not found: ${id}`);\n              return;\n            }\n\n            this._groups.get(id).visible = !!visible;\n          }\n\n          getOrder() {\n            if (!this._groups.size) {\n              return null;\n            }\n\n            if (this._order) {\n              return this._order.slice();\n            }\n\n            return Array.from(this._groups.keys());\n          }\n\n          getGroups() {\n            return this._groups.size > 0 ? (0, _util.objectFromMap)(this._groups) : null;\n          }\n\n          getGroup(id) {\n            return this._groups.get(id) || null;\n          }\n\n        }\n\n        exports.OptionalContentConfig = OptionalContentConfig;\n        /***/\n      },\n      /* 17 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.PDFDataTransportStream = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _display_utils = __w_pdfjs_require__(5);\n\n        class PDFDataTransportStream {\n          constructor(params, pdfDataRangeTransport) {\n            (0, _util.assert)(pdfDataRangeTransport, 'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.');\n            this._queuedChunks = [];\n            this._progressiveDone = params.progressiveDone || false;\n            this._contentDispositionFilename = params.contentDispositionFilename || null;\n            const initialData = params.initialData;\n\n            if (initialData?.length > 0) {\n              const buffer = new Uint8Array(initialData).buffer;\n\n              this._queuedChunks.push(buffer);\n            }\n\n            this._pdfDataRangeTransport = pdfDataRangeTransport;\n            this._isStreamingSupported = !params.disableStream;\n            this._isRangeSupported = !params.disableRange;\n            this._contentLength = params.length;\n            this._fullRequestReader = null;\n            this._rangeReaders = [];\n\n            this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n              this._onReceiveData({\n                begin,\n                chunk\n              });\n            });\n\n            this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n              this._onProgress({\n                loaded,\n                total\n              });\n            });\n\n            this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n              this._onReceiveData({\n                chunk\n              });\n            });\n\n            this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n              this._onProgressiveDone();\n            });\n\n            this._pdfDataRangeTransport.transportReady();\n          }\n\n          _onReceiveData(args) {\n            const buffer = new Uint8Array(args.chunk).buffer;\n\n            if (args.begin === undefined) {\n              if (this._fullRequestReader) {\n                this._fullRequestReader._enqueue(buffer);\n              } else {\n                this._queuedChunks.push(buffer);\n              }\n            } else {\n              const found = this._rangeReaders.some(function (rangeReader) {\n                if (rangeReader._begin !== args.begin) {\n                  return false;\n                }\n\n                rangeReader._enqueue(buffer);\n\n                return true;\n              });\n\n              (0, _util.assert)(found, \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\");\n            }\n          }\n\n          get _progressiveDataLength() {\n            return this._fullRequestReader?._loaded ?? 0;\n          }\n\n          _onProgress(evt) {\n            if (evt.total === undefined) {\n              const firstReader = this._rangeReaders[0];\n\n              if (firstReader?.onProgress) {\n                firstReader.onProgress({\n                  loaded: evt.loaded\n                });\n              }\n            } else {\n              const fullReader = this._fullRequestReader;\n\n              if (fullReader?.onProgress) {\n                fullReader.onProgress({\n                  loaded: evt.loaded,\n                  total: evt.total\n                });\n              }\n            }\n          }\n\n          _onProgressiveDone() {\n            if (this._fullRequestReader) {\n              this._fullRequestReader.progressiveDone();\n            }\n\n            this._progressiveDone = true;\n          }\n\n          _removeRangeReader(reader) {\n            const i = this._rangeReaders.indexOf(reader);\n\n            if (i >= 0) {\n              this._rangeReaders.splice(i, 1);\n            }\n          }\n\n          getFullReader() {\n            (0, _util.assert)(!this._fullRequestReader, \"PDFDataTransportStream.getFullReader can only be called once.\");\n            const queuedChunks = this._queuedChunks;\n            this._queuedChunks = null;\n            return new PDFDataTransportStreamReader(this, queuedChunks, this._progressiveDone, this._contentDispositionFilename);\n          }\n\n          getRangeReader(begin, end) {\n            if (end <= this._progressiveDataLength) {\n              return null;\n            }\n\n            const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n\n            this._pdfDataRangeTransport.requestDataRange(begin, end);\n\n            this._rangeReaders.push(reader);\n\n            return reader;\n          }\n\n          cancelAllRequests(reason) {\n            if (this._fullRequestReader) {\n              this._fullRequestReader.cancel(reason);\n            }\n\n            for (const reader of this._rangeReaders.slice(0)) {\n              reader.cancel(reason);\n            }\n\n            this._pdfDataRangeTransport.abort();\n          }\n\n        }\n\n        exports.PDFDataTransportStream = PDFDataTransportStream;\n\n        class PDFDataTransportStreamReader {\n          constructor(stream, queuedChunks) {\n            let progressiveDone = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            let contentDispositionFilename = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n            this._stream = stream;\n            this._done = progressiveDone || false;\n            this._filename = (0, _display_utils.isPdfFile)(contentDispositionFilename) ? contentDispositionFilename : null;\n            this._queuedChunks = queuedChunks || [];\n            this._loaded = 0;\n\n            for (const chunk of this._queuedChunks) {\n              this._loaded += chunk.byteLength;\n            }\n\n            this._requests = [];\n            this._headersReady = Promise.resolve();\n            stream._fullRequestReader = this;\n            this.onProgress = null;\n          }\n\n          _enqueue(chunk) {\n            if (this._done) {\n              return;\n            }\n\n            if (this._requests.length > 0) {\n              const requestCapability = this._requests.shift();\n\n              requestCapability.resolve({\n                value: chunk,\n                done: false\n              });\n            } else {\n              this._queuedChunks.push(chunk);\n            }\n\n            this._loaded += chunk.byteLength;\n          }\n\n          get headersReady() {\n            return this._headersReady;\n          }\n\n          get filename() {\n            return this._filename;\n          }\n\n          get isRangeSupported() {\n            return this._stream._isRangeSupported;\n          }\n\n          get isStreamingSupported() {\n            return this._stream._isStreamingSupported;\n          }\n\n          get contentLength() {\n            return this._stream._contentLength;\n          }\n\n          async read() {\n            if (this._queuedChunks.length > 0) {\n              const chunk = this._queuedChunks.shift();\n\n              return {\n                value: chunk,\n                done: false\n              };\n            }\n\n            if (this._done) {\n              return {\n                value: undefined,\n                done: true\n              };\n            }\n\n            const requestCapability = (0, _util.createPromiseCapability)();\n\n            this._requests.push(requestCapability);\n\n            return requestCapability.promise;\n          }\n\n          cancel(reason) {\n            this._done = true;\n\n            for (const requestCapability of this._requests) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            }\n\n            this._requests.length = 0;\n          }\n\n          progressiveDone() {\n            if (this._done) {\n              return;\n            }\n\n            this._done = true;\n          }\n\n        }\n\n        class PDFDataTransportStreamRangeReader {\n          constructor(stream, begin, end) {\n            this._stream = stream;\n            this._begin = begin;\n            this._end = end;\n            this._queuedChunk = null;\n            this._requests = [];\n            this._done = false;\n            this.onProgress = null;\n          }\n\n          _enqueue(chunk) {\n            if (this._done) {\n              return;\n            }\n\n            if (this._requests.length === 0) {\n              this._queuedChunk = chunk;\n            } else {\n              const requestsCapability = this._requests.shift();\n\n              requestsCapability.resolve({\n                value: chunk,\n                done: false\n              });\n\n              for (const requestCapability of this._requests) {\n                requestCapability.resolve({\n                  value: undefined,\n                  done: true\n                });\n              }\n\n              this._requests.length = 0;\n            }\n\n            this._done = true;\n\n            this._stream._removeRangeReader(this);\n          }\n\n          get isStreamingSupported() {\n            return false;\n          }\n\n          async read() {\n            if (this._queuedChunk) {\n              const chunk = this._queuedChunk;\n              this._queuedChunk = null;\n              return {\n                value: chunk,\n                done: false\n              };\n            }\n\n            if (this._done) {\n              return {\n                value: undefined,\n                done: true\n              };\n            }\n\n            const requestCapability = (0, _util.createPromiseCapability)();\n\n            this._requests.push(requestCapability);\n\n            return requestCapability.promise;\n          }\n\n          cancel(reason) {\n            this._done = true;\n\n            for (const requestCapability of this._requests) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            }\n\n            this._requests.length = 0;\n\n            this._stream._removeRangeReader(this);\n          }\n\n        }\n        /***/\n\n      },\n      /* 18 */\n\n      /***/\n      (__unused_webpack_module, exports) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.XfaText = void 0;\n\n        class XfaText {\n          static textContent(xfa) {\n            const items = [];\n            const output = {\n              items,\n              styles: Object.create(null)\n            };\n\n            function walk(node) {\n              if (!node) {\n                return;\n              }\n\n              let str = null;\n              const name = node.name;\n\n              if (name === \"#text\") {\n                str = node.value;\n              } else if (!XfaText.shouldBuildText(name)) {\n                return;\n              } else if (node?.attributes?.textContent) {\n                str = node.attributes.textContent;\n              } else if (node.value) {\n                str = node.value;\n              }\n\n              if (str !== null) {\n                items.push({\n                  str\n                });\n              }\n\n              if (!node.children) {\n                return;\n              }\n\n              for (const child of node.children) {\n                walk(child);\n              }\n            }\n\n            walk(xfa);\n            return output;\n          }\n\n          static shouldBuildText(name) {\n            return !(name === \"textarea\" || name === \"input\" || name === \"option\" || name === \"select\");\n          }\n\n        }\n\n        exports.XfaText = XfaText;\n        /***/\n      },\n      /* 19 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.NodeStandardFontDataFactory = exports.NodeCanvasFactory = exports.NodeCMapReaderFactory = void 0;\n\n        var _base_factory = __w_pdfjs_require__(6);\n\n        ;\n\n        const fetchData = function (url) {\n          return new Promise((resolve, reject) => {\n            const fs = require(\"fs\");\n\n            fs.readFile(url, (error, data) => {\n              if (error || !data) {\n                reject(new Error(error));\n                return;\n              }\n\n              resolve(new Uint8Array(data));\n            });\n          });\n        };\n\n        class NodeCanvasFactory extends _base_factory.BaseCanvasFactory {\n          _createCanvas(width, height) {\n            const Canvas = require(\"canvas\");\n\n            return Canvas.createCanvas(width, height);\n          }\n\n        }\n\n        exports.NodeCanvasFactory = NodeCanvasFactory;\n\n        class NodeCMapReaderFactory extends _base_factory.BaseCMapReaderFactory {\n          _fetchData(url, compressionType) {\n            return fetchData(url).then(data => {\n              return {\n                cMapData: data,\n                compressionType\n              };\n            });\n          }\n\n        }\n\n        exports.NodeCMapReaderFactory = NodeCMapReaderFactory;\n\n        class NodeStandardFontDataFactory extends _base_factory.BaseStandardFontDataFactory {\n          _fetchData(url) {\n            return fetchData(url);\n          }\n\n        }\n\n        exports.NodeStandardFontDataFactory = NodeStandardFontDataFactory;\n        /***/\n      },\n      /* 20 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.AnnotationLayer = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _display_utils = __w_pdfjs_require__(5);\n\n        var _annotation_storage = __w_pdfjs_require__(8);\n\n        var _scripting_utils = __w_pdfjs_require__(21);\n\n        var _xfa_layer = __w_pdfjs_require__(22);\n\n        const DEFAULT_TAB_INDEX = 1000;\n        const GetElementsByNameSet = new WeakSet();\n\n        function getRectDims(rect) {\n          return {\n            width: rect[2] - rect[0],\n            height: rect[3] - rect[1]\n          };\n        }\n\n        class AnnotationElementFactory {\n          static create(parameters) {\n            const subtype = parameters.data.annotationType;\n\n            switch (subtype) {\n              case _util.AnnotationType.LINK:\n                return new LinkAnnotationElement(parameters);\n\n              case _util.AnnotationType.TEXT:\n                return new TextAnnotationElement(parameters);\n\n              case _util.AnnotationType.WIDGET:\n                const fieldType = parameters.data.fieldType;\n\n                switch (fieldType) {\n                  case \"Tx\":\n                    return new TextWidgetAnnotationElement(parameters);\n\n                  case \"Btn\":\n                    if (parameters.data.radioButton) {\n                      return new RadioButtonWidgetAnnotationElement(parameters);\n                    } else if (parameters.data.checkBox) {\n                      return new CheckboxWidgetAnnotationElement(parameters);\n                    }\n\n                    return new PushButtonWidgetAnnotationElement(parameters);\n\n                  case \"Ch\":\n                    return new ChoiceWidgetAnnotationElement(parameters);\n                }\n\n                return new WidgetAnnotationElement(parameters);\n\n              case _util.AnnotationType.POPUP:\n                return new PopupAnnotationElement(parameters);\n\n              case _util.AnnotationType.FREETEXT:\n                return new FreeTextAnnotationElement(parameters);\n\n              case _util.AnnotationType.LINE:\n                return new LineAnnotationElement(parameters);\n\n              case _util.AnnotationType.SQUARE:\n                return new SquareAnnotationElement(parameters);\n\n              case _util.AnnotationType.CIRCLE:\n                return new CircleAnnotationElement(parameters);\n\n              case _util.AnnotationType.POLYLINE:\n                return new PolylineAnnotationElement(parameters);\n\n              case _util.AnnotationType.CARET:\n                return new CaretAnnotationElement(parameters);\n\n              case _util.AnnotationType.INK:\n                return new InkAnnotationElement(parameters);\n\n              case _util.AnnotationType.POLYGON:\n                return new PolygonAnnotationElement(parameters);\n\n              case _util.AnnotationType.HIGHLIGHT:\n                return new HighlightAnnotationElement(parameters);\n\n              case _util.AnnotationType.UNDERLINE:\n                return new UnderlineAnnotationElement(parameters);\n\n              case _util.AnnotationType.SQUIGGLY:\n                return new SquigglyAnnotationElement(parameters);\n\n              case _util.AnnotationType.STRIKEOUT:\n                return new StrikeOutAnnotationElement(parameters);\n\n              case _util.AnnotationType.STAMP:\n                return new StampAnnotationElement(parameters);\n\n              case _util.AnnotationType.FILEATTACHMENT:\n                return new FileAttachmentAnnotationElement(parameters);\n\n              default:\n                return new AnnotationElement(parameters);\n            }\n          }\n\n        }\n\n        class AnnotationElement {\n          constructor(parameters) {\n            let {\n              isRenderable = false,\n              ignoreBorder = false,\n              createQuadrilaterals = false\n            } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n            this.isRenderable = isRenderable;\n            this.data = parameters.data;\n            this.layer = parameters.layer;\n            this.page = parameters.page;\n            this.viewport = parameters.viewport;\n            this.linkService = parameters.linkService;\n            this.downloadManager = parameters.downloadManager;\n            this.imageResourcesPath = parameters.imageResourcesPath;\n            this.renderForms = parameters.renderForms;\n            this.svgFactory = parameters.svgFactory;\n            this.annotationStorage = parameters.annotationStorage;\n            this.enableScripting = parameters.enableScripting;\n            this.hasJSActions = parameters.hasJSActions;\n            this._fieldObjects = parameters.fieldObjects;\n            this._mouseState = parameters.mouseState;\n\n            if (isRenderable) {\n              this.container = this._createContainer(ignoreBorder);\n            }\n\n            if (createQuadrilaterals) {\n              this.quadrilaterals = this._createQuadrilaterals(ignoreBorder);\n            }\n          }\n\n          _createContainer() {\n            let ignoreBorder = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            const data = this.data,\n                  page = this.page,\n                  viewport = this.viewport;\n            const container = document.createElement(\"section\");\n            let {\n              width,\n              height\n            } = getRectDims(data.rect);\n            container.setAttribute(\"data-annotation-id\", data.id);\n\n            const rect = _util.Util.normalizeRect([data.rect[0], page.view[3] - data.rect[1] + page.view[1], data.rect[2], page.view[3] - data.rect[3] + page.view[1]]);\n\n            if (data.hasOwnCanvas) {\n              const transform = viewport.transform.slice();\n\n              const [scaleX, scaleY] = _util.Util.singularValueDecompose2dScale(transform);\n\n              width = Math.ceil(width * scaleX);\n              height = Math.ceil(height * scaleY);\n              rect[0] *= scaleX;\n              rect[1] *= scaleY;\n\n              for (let i = 0; i < 4; i++) {\n                transform[i] = Math.sign(transform[i]);\n              }\n\n              container.style.transform = `matrix(${transform.join(\",\")})`;\n            } else {\n              container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n            }\n\n            container.style.transformOrigin = `${-rect[0]}px ${-rect[1]}px`;\n\n            if (!ignoreBorder && data.borderStyle.width > 0) {\n              container.style.borderWidth = `${data.borderStyle.width}px`;\n\n              if (data.borderStyle.style !== _util.AnnotationBorderStyleType.UNDERLINE) {\n                width -= 2 * data.borderStyle.width;\n                height -= 2 * data.borderStyle.width;\n              }\n\n              const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n              const verticalRadius = data.borderStyle.verticalCornerRadius;\n\n              if (horizontalRadius > 0 || verticalRadius > 0) {\n                const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n                container.style.borderRadius = radius;\n              }\n\n              switch (data.borderStyle.style) {\n                case _util.AnnotationBorderStyleType.SOLID:\n                  container.style.borderStyle = \"solid\";\n                  break;\n\n                case _util.AnnotationBorderStyleType.DASHED:\n                  container.style.borderStyle = \"dashed\";\n                  break;\n\n                case _util.AnnotationBorderStyleType.BEVELED:\n                  (0, _util.warn)(\"Unimplemented border style: beveled\");\n                  break;\n\n                case _util.AnnotationBorderStyleType.INSET:\n                  (0, _util.warn)(\"Unimplemented border style: inset\");\n                  break;\n\n                case _util.AnnotationBorderStyleType.UNDERLINE:\n                  container.style.borderBottomStyle = \"solid\";\n                  break;\n\n                default:\n                  break;\n              }\n\n              const borderColor = data.borderColor || data.color || null;\n\n              if (borderColor) {\n                container.style.borderColor = _util.Util.makeHexColor(data.color[0] | 0, data.color[1] | 0, data.color[2] | 0);\n              } else {\n                container.style.borderWidth = 0;\n              }\n            }\n\n            container.style.left = `${rect[0]}px`;\n            container.style.top = `${rect[1]}px`;\n\n            if (data.hasOwnCanvas) {\n              container.style.width = container.style.height = \"auto\";\n            } else {\n              container.style.width = `${width}px`;\n              container.style.height = `${height}px`;\n            }\n\n            return container;\n          }\n\n          get _commonActions() {\n            const setColor = (jsName, styleName, event) => {\n              const color = event.detail[jsName];\n              event.target.style[styleName] = _scripting_utils.ColorConverters[`${color[0]}_HTML`](color.slice(1));\n            };\n\n            return (0, _util.shadow)(this, \"_commonActions\", {\n              display: event => {\n                const hidden = event.detail.display % 2 === 1;\n                event.target.style.visibility = hidden ? \"hidden\" : \"visible\";\n                this.annotationStorage.setValue(this.data.id, {\n                  hidden,\n                  print: event.detail.display === 0 || event.detail.display === 3\n                });\n              },\n              print: event => {\n                this.annotationStorage.setValue(this.data.id, {\n                  print: event.detail.print\n                });\n              },\n              hidden: event => {\n                event.target.style.visibility = event.detail.hidden ? \"hidden\" : \"visible\";\n                this.annotationStorage.setValue(this.data.id, {\n                  hidden: event.detail.hidden\n                });\n              },\n              focus: event => {\n                setTimeout(() => event.target.focus({\n                  preventScroll: false\n                }), 0);\n              },\n              userName: event => {\n                event.target.title = event.detail.userName;\n              },\n              readonly: event => {\n                if (event.detail.readonly) {\n                  event.target.setAttribute(\"readonly\", \"\");\n                } else {\n                  event.target.removeAttribute(\"readonly\");\n                }\n              },\n              required: event => {\n                if (event.detail.required) {\n                  event.target.setAttribute(\"required\", \"\");\n                } else {\n                  event.target.removeAttribute(\"required\");\n                }\n              },\n              bgColor: event => {\n                setColor(\"bgColor\", \"backgroundColor\", event);\n              },\n              fillColor: event => {\n                setColor(\"fillColor\", \"backgroundColor\", event);\n              },\n              fgColor: event => {\n                setColor(\"fgColor\", \"color\", event);\n              },\n              textColor: event => {\n                setColor(\"textColor\", \"color\", event);\n              },\n              borderColor: event => {\n                setColor(\"borderColor\", \"borderColor\", event);\n              },\n              strokeColor: event => {\n                setColor(\"strokeColor\", \"borderColor\", event);\n              }\n            });\n          }\n\n          _dispatchEventFromSandbox(actions, jsEvent) {\n            const commonActions = this._commonActions;\n\n            for (const name of Object.keys(jsEvent.detail)) {\n              const action = actions[name] || commonActions[name];\n\n              if (action) {\n                action(jsEvent);\n              }\n            }\n          }\n\n          _setDefaultPropertiesFromJS(element) {\n            if (!this.enableScripting) {\n              return;\n            }\n\n            const storedData = this.annotationStorage.getRawValue(this.data.id);\n\n            if (!storedData) {\n              return;\n            }\n\n            const commonActions = this._commonActions;\n\n            for (const [actionName, detail] of Object.entries(storedData)) {\n              const action = commonActions[actionName];\n\n              if (action) {\n                action({\n                  detail,\n                  target: element\n                });\n                delete storedData[actionName];\n              }\n            }\n          }\n\n          _createQuadrilaterals() {\n            let ignoreBorder = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            if (!this.data.quadPoints) {\n              return null;\n            }\n\n            const quadrilaterals = [];\n            const savedRect = this.data.rect;\n\n            for (const quadPoint of this.data.quadPoints) {\n              this.data.rect = [quadPoint[2].x, quadPoint[2].y, quadPoint[1].x, quadPoint[1].y];\n              quadrilaterals.push(this._createContainer(ignoreBorder));\n            }\n\n            this.data.rect = savedRect;\n            return quadrilaterals;\n          }\n\n          _createPopup(trigger, data) {\n            let container = this.container;\n\n            if (this.quadrilaterals) {\n              trigger = trigger || this.quadrilaterals;\n              container = this.quadrilaterals[0];\n            }\n\n            if (!trigger) {\n              trigger = document.createElement(\"div\");\n              trigger.style.height = container.style.height;\n              trigger.style.width = container.style.width;\n              container.appendChild(trigger);\n            }\n\n            const popupElement = new PopupElement({\n              container,\n              trigger,\n              color: data.color,\n              titleObj: data.titleObj,\n              modificationDate: data.modificationDate,\n              contentsObj: data.contentsObj,\n              richText: data.richText,\n              hideWrapper: true\n            });\n            const popup = popupElement.render();\n            popup.style.left = container.style.width;\n            container.appendChild(popup);\n          }\n\n          _renderQuadrilaterals(className) {\n            for (const quadrilateral of this.quadrilaterals) {\n              quadrilateral.className = className;\n            }\n\n            return this.quadrilaterals;\n          }\n\n          render() {\n            (0, _util.unreachable)(\"Abstract method `AnnotationElement.render` called\");\n          }\n\n          _getElementsByName(name) {\n            let skipId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            const fields = [];\n\n            if (this._fieldObjects) {\n              const fieldObj = this._fieldObjects[name];\n\n              if (fieldObj) {\n                for (const {\n                  page,\n                  id,\n                  exportValues\n                } of fieldObj) {\n                  if (page === -1) {\n                    continue;\n                  }\n\n                  if (id === skipId) {\n                    continue;\n                  }\n\n                  const exportValue = typeof exportValues === \"string\" ? exportValues : null;\n                  const domElement = document.getElementById(id);\n\n                  if (domElement && !GetElementsByNameSet.has(domElement)) {\n                    (0, _util.warn)(`_getElementsByName - element not allowed: ${id}`);\n                    continue;\n                  }\n\n                  fields.push({\n                    id,\n                    exportValue,\n                    domElement\n                  });\n                }\n              }\n\n              return fields;\n            }\n\n            for (const domElement of document.getElementsByName(name)) {\n              const {\n                id,\n                exportValue\n              } = domElement;\n\n              if (id === skipId) {\n                continue;\n              }\n\n              if (!GetElementsByNameSet.has(domElement)) {\n                continue;\n              }\n\n              fields.push({\n                id,\n                exportValue,\n                domElement\n              });\n            }\n\n            return fields;\n          }\n\n          static get platform() {\n            const platform = typeof navigator !== \"undefined\" ? navigator.platform : \"\";\n            return (0, _util.shadow)(this, \"platform\", {\n              isWin: platform.includes(\"Win\"),\n              isMac: platform.includes(\"Mac\")\n            });\n          }\n\n        }\n\n        class LinkAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            const isRenderable = !!(parameters.data.url || parameters.data.dest || parameters.data.action || parameters.data.isTooltipOnly || parameters.data.resetForm || parameters.data.actions && (parameters.data.actions.Action || parameters.data.actions[\"Mouse Up\"] || parameters.data.actions[\"Mouse Down\"]));\n            super(parameters, {\n              isRenderable,\n              ignoreBorder: !!options?.ignoreBorder,\n              createQuadrilaterals: true\n            });\n          }\n\n          render() {\n            const {\n              data,\n              linkService\n            } = this;\n            const link = document.createElement(\"a\");\n\n            if (data.url) {\n              linkService.addLinkAttributes(link, data.url, data.newWindow);\n            } else if (data.action) {\n              this._bindNamedAction(link, data.action);\n            } else if (data.dest) {\n              this._bindLink(link, data.dest);\n            } else {\n              let hasClickAction = false;\n\n              if (data.actions && (data.actions.Action || data.actions[\"Mouse Up\"] || data.actions[\"Mouse Down\"]) && this.enableScripting && this.hasJSActions) {\n                hasClickAction = true;\n\n                this._bindJSAction(link, data);\n              }\n\n              if (data.resetForm) {\n                this._bindResetFormAction(link, data.resetForm);\n              } else if (!hasClickAction) {\n                this._bindLink(link, \"\");\n              }\n            }\n\n            if (this.quadrilaterals) {\n              return this._renderQuadrilaterals(\"linkAnnotation\").map((quadrilateral, index) => {\n                const linkElement = index === 0 ? link : link.cloneNode();\n                quadrilateral.appendChild(linkElement);\n                return quadrilateral;\n              });\n            }\n\n            this.container.className = \"linkAnnotation\";\n            this.container.appendChild(link);\n            return this.container;\n          }\n\n          _bindLink(link, destination) {\n            link.href = this.linkService.getDestinationHash(destination);\n\n            link.onclick = () => {\n              if (destination) {\n                this.linkService.goToDestination(destination);\n              }\n\n              return false;\n            };\n\n            if (destination || destination === \"\") {\n              link.className = \"internalLink\";\n            }\n          }\n\n          _bindNamedAction(link, action) {\n            link.href = this.linkService.getAnchorUrl(\"\");\n\n            link.onclick = () => {\n              this.linkService.executeNamedAction(action);\n              return false;\n            };\n\n            link.className = \"internalLink\";\n          }\n\n          _bindJSAction(link, data) {\n            link.href = this.linkService.getAnchorUrl(\"\");\n            const map = new Map([[\"Action\", \"onclick\"], [\"Mouse Up\", \"onmouseup\"], [\"Mouse Down\", \"onmousedown\"]]);\n\n            for (const name of Object.keys(data.actions)) {\n              const jsName = map.get(name);\n\n              if (!jsName) {\n                continue;\n              }\n\n              link[jsName] = () => {\n                this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                  source: this,\n                  detail: {\n                    id: data.id,\n                    name\n                  }\n                });\n                return false;\n              };\n            }\n\n            if (!link.onclick) {\n              link.onclick = () => false;\n            }\n\n            link.className = \"internalLink\";\n          }\n\n          _bindResetFormAction(link, resetForm) {\n            const otherClickAction = link.onclick;\n\n            if (!otherClickAction) {\n              link.href = this.linkService.getAnchorUrl(\"\");\n            }\n\n            link.className = \"internalLink\";\n\n            if (!this._fieldObjects) {\n              (0, _util.warn)(`_bindResetFormAction - \"resetForm\" action not supported, ` + \"ensure that the `fieldObjects` parameter is provided.\");\n\n              if (!otherClickAction) {\n                link.onclick = () => false;\n              }\n\n              return;\n            }\n\n            link.onclick = () => {\n              if (otherClickAction) {\n                otherClickAction();\n              }\n\n              const {\n                fields: resetFormFields,\n                refs: resetFormRefs,\n                include\n              } = resetForm;\n              const allFields = [];\n\n              if (resetFormFields.length !== 0 || resetFormRefs.length !== 0) {\n                const fieldIds = new Set(resetFormRefs);\n\n                for (const fieldName of resetFormFields) {\n                  const fields = this._fieldObjects[fieldName] || [];\n\n                  for (const {\n                    id\n                  } of fields) {\n                    fieldIds.add(id);\n                  }\n                }\n\n                for (const fields of Object.values(this._fieldObjects)) {\n                  for (const field of fields) {\n                    if (fieldIds.has(field.id) === include) {\n                      allFields.push(field);\n                    }\n                  }\n                }\n              } else {\n                for (const fields of Object.values(this._fieldObjects)) {\n                  allFields.push(...fields);\n                }\n              }\n\n              const storage = this.annotationStorage;\n              const allIds = [];\n\n              for (const field of allFields) {\n                const {\n                  id\n                } = field;\n                allIds.push(id);\n\n                switch (field.type) {\n                  case \"text\":\n                    {\n                      const value = field.defaultValue || \"\";\n                      storage.setValue(id, {\n                        value\n                      });\n                      break;\n                    }\n\n                  case \"checkbox\":\n                  case \"radiobutton\":\n                    {\n                      const value = field.defaultValue === field.exportValues;\n                      storage.setValue(id, {\n                        value\n                      });\n                      break;\n                    }\n\n                  case \"combobox\":\n                  case \"listbox\":\n                    {\n                      const value = field.defaultValue || \"\";\n                      storage.setValue(id, {\n                        value\n                      });\n                      break;\n                    }\n\n                  default:\n                    continue;\n                }\n\n                const domElement = document.getElementById(id);\n\n                if (!domElement || !GetElementsByNameSet.has(domElement)) {\n                  continue;\n                }\n\n                domElement.dispatchEvent(new Event(\"resetform\"));\n              }\n\n              if (this.enableScripting) {\n                this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                  source: this,\n                  detail: {\n                    id: \"app\",\n                    ids: allIds,\n                    name: \"ResetForm\"\n                  }\n                });\n              }\n\n              return false;\n            };\n          }\n\n        }\n\n        class TextAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n            super(parameters, {\n              isRenderable\n            });\n          }\n\n          render() {\n            this.container.className = \"textAnnotation\";\n            const image = document.createElement(\"img\");\n            image.style.height = this.container.style.height;\n            image.style.width = this.container.style.width;\n            image.src = this.imageResourcesPath + \"annotation-\" + this.data.name.toLowerCase() + \".svg\";\n            image.alt = \"[{{type}} Annotation]\";\n            image.dataset.l10nId = \"text_annotation_type\";\n            image.dataset.l10nArgs = JSON.stringify({\n              type: this.data.name\n            });\n\n            if (!this.data.hasPopup) {\n              this._createPopup(image, this.data);\n            }\n\n            this.container.appendChild(image);\n            return this.container;\n          }\n\n        }\n\n        class WidgetAnnotationElement extends AnnotationElement {\n          render() {\n            if (this.data.alternativeText) {\n              this.container.title = this.data.alternativeText;\n            }\n\n            return this.container;\n          }\n\n          _getKeyModifier(event) {\n            const {\n              isWin,\n              isMac\n            } = AnnotationElement.platform;\n            return isWin && event.ctrlKey || isMac && event.metaKey;\n          }\n\n          _setEventListener(element, baseName, eventName, valueGetter) {\n            if (baseName.includes(\"mouse\")) {\n              element.addEventListener(baseName, event => {\n                this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                  source: this,\n                  detail: {\n                    id: this.data.id,\n                    name: eventName,\n                    value: valueGetter(event),\n                    shift: event.shiftKey,\n                    modifier: this._getKeyModifier(event)\n                  }\n                });\n              });\n            } else {\n              element.addEventListener(baseName, event => {\n                this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                  source: this,\n                  detail: {\n                    id: this.data.id,\n                    name: eventName,\n                    value: valueGetter(event)\n                  }\n                });\n              });\n            }\n          }\n\n          _setEventListeners(element, names, getter) {\n            for (const [baseName, eventName] of names) {\n              if (eventName === \"Action\" || this.data.actions?.[eventName]) {\n                this._setEventListener(element, baseName, eventName, getter);\n              }\n            }\n          }\n\n          _setBackgroundColor(element) {\n            const color = this.data.backgroundColor || null;\n            element.style.backgroundColor = color === null ? \"transparent\" : _util.Util.makeHexColor(color[0], color[1], color[2]);\n          }\n\n        }\n\n        class TextWidgetAnnotationElement extends WidgetAnnotationElement {\n          constructor(parameters) {\n            const isRenderable = parameters.renderForms || !parameters.data.hasAppearance && !!parameters.data.fieldValue;\n            super(parameters, {\n              isRenderable\n            });\n          }\n\n          setPropertyOnSiblings(base, key, value, keyInStorage) {\n            const storage = this.annotationStorage;\n\n            for (const element of this._getElementsByName(base.name, base.id)) {\n              if (element.domElement) {\n                element.domElement[key] = value;\n              }\n\n              storage.setValue(element.id, {\n                [keyInStorage]: value\n              });\n            }\n          }\n\n          render() {\n            const storage = this.annotationStorage;\n            const id = this.data.id;\n            this.container.className = \"textWidgetAnnotation\";\n            let element = null;\n\n            if (this.renderForms) {\n              const storedData = storage.getValue(id, {\n                value: this.data.fieldValue\n              });\n              const textContent = storedData.formattedValue || storedData.value || \"\";\n              const elementData = {\n                userValue: null,\n                formattedValue: null,\n                valueOnFocus: \"\"\n              };\n\n              if (this.data.multiLine) {\n                element = document.createElement(\"textarea\");\n                element.textContent = textContent;\n              } else {\n                element = document.createElement(\"input\");\n                element.type = \"text\";\n                element.setAttribute(\"value\", textContent);\n              }\n\n              GetElementsByNameSet.add(element);\n              element.disabled = this.data.readOnly;\n              element.name = this.data.fieldName;\n              element.tabIndex = DEFAULT_TAB_INDEX;\n              elementData.userValue = textContent;\n              element.setAttribute(\"id\", id);\n              element.addEventListener(\"input\", event => {\n                storage.setValue(id, {\n                  value: event.target.value\n                });\n                this.setPropertyOnSiblings(element, \"value\", event.target.value, \"value\");\n              });\n              element.addEventListener(\"resetform\", event => {\n                const defaultValue = this.data.defaultFieldValue ?? \"\";\n                element.value = elementData.userValue = defaultValue;\n                elementData.formattedValue = null;\n              });\n\n              let blurListener = event => {\n                const {\n                  formattedValue\n                } = elementData;\n\n                if (formattedValue !== null && formattedValue !== undefined) {\n                  event.target.value = formattedValue;\n                }\n\n                event.target.scrollLeft = 0;\n              };\n\n              if (this.enableScripting && this.hasJSActions) {\n                element.addEventListener(\"focus\", event => {\n                  if (elementData.userValue) {\n                    event.target.value = elementData.userValue;\n                  }\n\n                  elementData.valueOnFocus = event.target.value;\n                });\n                element.addEventListener(\"updatefromsandbox\", jsEvent => {\n                  const actions = {\n                    value(event) {\n                      elementData.userValue = event.detail.value ?? \"\";\n                      storage.setValue(id, {\n                        value: elementData.userValue.toString()\n                      });\n                      event.target.value = elementData.userValue;\n                    },\n\n                    formattedValue(event) {\n                      const {\n                        formattedValue\n                      } = event.detail;\n                      elementData.formattedValue = formattedValue;\n\n                      if (formattedValue !== null && formattedValue !== undefined && event.target !== document.activeElement) {\n                        event.target.value = formattedValue;\n                      }\n\n                      storage.setValue(id, {\n                        formattedValue\n                      });\n                    },\n\n                    selRange(event) {\n                      event.target.setSelectionRange(...event.detail.selRange);\n                    }\n\n                  };\n\n                  this._dispatchEventFromSandbox(actions, jsEvent);\n                });\n                element.addEventListener(\"keydown\", event => {\n                  let commitKey = -1;\n\n                  if (event.key === \"Escape\") {\n                    commitKey = 0;\n                  } else if (event.key === \"Enter\") {\n                    commitKey = 2;\n                  } else if (event.key === \"Tab\") {\n                    commitKey = 3;\n                  }\n\n                  if (commitKey === -1) {\n                    return;\n                  }\n\n                  const {\n                    value\n                  } = event.target;\n\n                  if (elementData.valueOnFocus === value) {\n                    return;\n                  }\n\n                  elementData.userValue = value;\n                  this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                    source: this,\n                    detail: {\n                      id,\n                      name: \"Keystroke\",\n                      value,\n                      willCommit: true,\n                      commitKey,\n                      selStart: event.target.selectionStart,\n                      selEnd: event.target.selectionEnd\n                    }\n                  });\n                });\n                const _blurListener = blurListener;\n                blurListener = null;\n                element.addEventListener(\"blur\", event => {\n                  const {\n                    value\n                  } = event.target;\n                  elementData.userValue = value;\n\n                  if (this._mouseState.isDown && elementData.valueOnFocus !== value) {\n                    this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                      source: this,\n                      detail: {\n                        id,\n                        name: \"Keystroke\",\n                        value,\n                        willCommit: true,\n                        commitKey: 1,\n                        selStart: event.target.selectionStart,\n                        selEnd: event.target.selectionEnd\n                      }\n                    });\n                  }\n\n                  _blurListener(event);\n                });\n\n                if (this.data.actions?.Keystroke) {\n                  element.addEventListener(\"beforeinput\", event => {\n                    const {\n                      data,\n                      target\n                    } = event;\n                    const {\n                      value,\n                      selectionStart,\n                      selectionEnd\n                    } = target;\n                    let selStart = selectionStart,\n                        selEnd = selectionEnd;\n\n                    switch (event.inputType) {\n                      case \"deleteWordBackward\":\n                        {\n                          const match = value.substring(0, selectionStart).match(/\\w*[^\\w]*$/);\n\n                          if (match) {\n                            selStart -= match[0].length;\n                          }\n\n                          break;\n                        }\n\n                      case \"deleteWordForward\":\n                        {\n                          const match = value.substring(selectionStart).match(/^[^\\w]*\\w*/);\n\n                          if (match) {\n                            selEnd += match[0].length;\n                          }\n\n                          break;\n                        }\n\n                      case \"deleteContentBackward\":\n                        if (selectionStart === selectionEnd) {\n                          selStart -= 1;\n                        }\n\n                        break;\n\n                      case \"deleteContentForward\":\n                        if (selectionStart === selectionEnd) {\n                          selEnd += 1;\n                        }\n\n                        break;\n                    }\n\n                    event.preventDefault();\n                    this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                      source: this,\n                      detail: {\n                        id,\n                        name: \"Keystroke\",\n                        value,\n                        change: data || \"\",\n                        willCommit: false,\n                        selStart,\n                        selEnd\n                      }\n                    });\n                  });\n                }\n\n                this._setEventListeners(element, [[\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.value);\n              }\n\n              if (blurListener) {\n                element.addEventListener(\"blur\", blurListener);\n              }\n\n              if (this.data.maxLen !== null) {\n                element.maxLength = this.data.maxLen;\n              }\n\n              if (this.data.comb) {\n                const fieldWidth = this.data.rect[2] - this.data.rect[0];\n                const combWidth = fieldWidth / this.data.maxLen;\n                element.classList.add(\"comb\");\n                element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n              }\n            } else {\n              element = document.createElement(\"div\");\n              element.textContent = this.data.fieldValue;\n              element.style.verticalAlign = \"middle\";\n              element.style.display = \"table-cell\";\n            }\n\n            this._setTextStyle(element);\n\n            this._setBackgroundColor(element);\n\n            this._setDefaultPropertiesFromJS(element);\n\n            this.container.appendChild(element);\n            return this.container;\n          }\n\n          _setTextStyle(element) {\n            const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n            const {\n              fontSize,\n              fontColor\n            } = this.data.defaultAppearanceData;\n            const style = element.style;\n\n            if (fontSize) {\n              style.fontSize = `${fontSize}px`;\n            }\n\n            style.color = _util.Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n\n            if (this.data.textAlignment !== null) {\n              style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n            }\n          }\n\n        }\n\n        class CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: parameters.renderForms\n            });\n          }\n\n          render() {\n            const storage = this.annotationStorage;\n            const data = this.data;\n            const id = data.id;\n            let value = storage.getValue(id, {\n              value: data.exportValue === data.fieldValue\n            }).value;\n\n            if (typeof value === \"string\") {\n              value = value !== \"Off\";\n              storage.setValue(id, {\n                value\n              });\n            }\n\n            this.container.className = \"buttonWidgetAnnotation checkBox\";\n            const element = document.createElement(\"input\");\n            GetElementsByNameSet.add(element);\n            element.disabled = data.readOnly;\n            element.type = \"checkbox\";\n            element.name = data.fieldName;\n\n            if (value) {\n              element.setAttribute(\"checked\", true);\n            }\n\n            element.setAttribute(\"id\", id);\n            element.setAttribute(\"exportValue\", data.exportValue);\n            element.tabIndex = DEFAULT_TAB_INDEX;\n            element.addEventListener(\"change\", event => {\n              const {\n                name,\n                checked\n              } = event.target;\n\n              for (const checkbox of this._getElementsByName(name, id)) {\n                const curChecked = checked && checkbox.exportValue === data.exportValue;\n\n                if (checkbox.domElement) {\n                  checkbox.domElement.checked = curChecked;\n                }\n\n                storage.setValue(checkbox.id, {\n                  value: curChecked\n                });\n              }\n\n              storage.setValue(id, {\n                value: checked\n              });\n            });\n            element.addEventListener(\"resetform\", event => {\n              const defaultValue = data.defaultFieldValue || \"Off\";\n              event.target.checked = defaultValue === data.exportValue;\n            });\n\n            if (this.enableScripting && this.hasJSActions) {\n              element.addEventListener(\"updatefromsandbox\", jsEvent => {\n                const actions = {\n                  value(event) {\n                    event.target.checked = event.detail.value !== \"Off\";\n                    storage.setValue(id, {\n                      value: event.target.checked\n                    });\n                  }\n\n                };\n\n                this._dispatchEventFromSandbox(actions, jsEvent);\n              });\n\n              this._setEventListeners(element, [[\"change\", \"Validate\"], [\"change\", \"Action\"], [\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.checked);\n            }\n\n            this._setBackgroundColor(element);\n\n            this._setDefaultPropertiesFromJS(element);\n\n            this.container.appendChild(element);\n            return this.container;\n          }\n\n        }\n\n        class RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: parameters.renderForms\n            });\n          }\n\n          render() {\n            this.container.className = \"buttonWidgetAnnotation radioButton\";\n            const storage = this.annotationStorage;\n            const data = this.data;\n            const id = data.id;\n            let value = storage.getValue(id, {\n              value: data.fieldValue === data.buttonValue\n            }).value;\n\n            if (typeof value === \"string\") {\n              value = value !== data.buttonValue;\n              storage.setValue(id, {\n                value\n              });\n            }\n\n            const element = document.createElement(\"input\");\n            GetElementsByNameSet.add(element);\n            element.disabled = data.readOnly;\n            element.type = \"radio\";\n            element.name = data.fieldName;\n\n            if (value) {\n              element.setAttribute(\"checked\", true);\n            }\n\n            element.setAttribute(\"id\", id);\n            element.tabIndex = DEFAULT_TAB_INDEX;\n            element.addEventListener(\"change\", event => {\n              const {\n                name,\n                checked\n              } = event.target;\n\n              for (const radio of this._getElementsByName(name, id)) {\n                storage.setValue(radio.id, {\n                  value: false\n                });\n              }\n\n              storage.setValue(id, {\n                value: checked\n              });\n            });\n            element.addEventListener(\"resetform\", event => {\n              const defaultValue = data.defaultFieldValue;\n              event.target.checked = defaultValue !== null && defaultValue !== undefined && defaultValue === data.buttonValue;\n            });\n\n            if (this.enableScripting && this.hasJSActions) {\n              const pdfButtonValue = data.buttonValue;\n              element.addEventListener(\"updatefromsandbox\", jsEvent => {\n                const actions = {\n                  value: event => {\n                    const checked = pdfButtonValue === event.detail.value;\n\n                    for (const radio of this._getElementsByName(event.target.name)) {\n                      const curChecked = checked && radio.id === id;\n\n                      if (radio.domElement) {\n                        radio.domElement.checked = curChecked;\n                      }\n\n                      storage.setValue(radio.id, {\n                        value: curChecked\n                      });\n                    }\n                  }\n                };\n\n                this._dispatchEventFromSandbox(actions, jsEvent);\n              });\n\n              this._setEventListeners(element, [[\"change\", \"Validate\"], [\"change\", \"Action\"], [\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.checked);\n            }\n\n            this._setBackgroundColor(element);\n\n            this._setDefaultPropertiesFromJS(element);\n\n            this.container.appendChild(element);\n            return this.container;\n          }\n\n        }\n\n        class PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              ignoreBorder: parameters.data.hasAppearance\n            });\n          }\n\n          render() {\n            const container = super.render();\n            container.className = \"buttonWidgetAnnotation pushButton\";\n\n            if (this.data.alternativeText) {\n              container.title = this.data.alternativeText;\n            }\n\n            this._setDefaultPropertiesFromJS(container);\n\n            return container;\n          }\n\n        }\n\n        class ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: parameters.renderForms\n            });\n          }\n\n          render() {\n            this.container.className = \"choiceWidgetAnnotation\";\n            const storage = this.annotationStorage;\n            const id = this.data.id;\n            const storedData = storage.getValue(id, {\n              value: this.data.fieldValue\n            });\n            let {\n              fontSize\n            } = this.data.defaultAppearanceData;\n\n            if (!fontSize) {\n              fontSize = 9;\n            }\n\n            const fontSizeStyle = `calc(${fontSize}px * var(--zoom-factor))`;\n            const selectElement = document.createElement(\"select\");\n            GetElementsByNameSet.add(selectElement);\n            selectElement.disabled = this.data.readOnly;\n            selectElement.name = this.data.fieldName;\n            selectElement.setAttribute(\"id\", id);\n            selectElement.tabIndex = DEFAULT_TAB_INDEX;\n            selectElement.style.fontSize = `${fontSize}px`;\n\n            if (!this.data.combo) {\n              selectElement.size = this.data.options.length;\n\n              if (this.data.multiSelect) {\n                selectElement.multiple = true;\n              }\n            }\n\n            selectElement.addEventListener(\"resetform\", event => {\n              const defaultValue = this.data.defaultFieldValue;\n\n              for (const option of selectElement.options) {\n                option.selected = option.value === defaultValue;\n              }\n            });\n\n            for (const option of this.data.options) {\n              const optionElement = document.createElement(\"option\");\n              optionElement.textContent = option.displayValue;\n              optionElement.value = option.exportValue;\n\n              if (this.data.combo) {\n                optionElement.style.fontSize = fontSizeStyle;\n              }\n\n              if (storedData.value.includes(option.exportValue)) {\n                optionElement.setAttribute(\"selected\", true);\n              }\n\n              selectElement.appendChild(optionElement);\n            }\n\n            const getValue = (event, isExport) => {\n              const name = isExport ? \"value\" : \"textContent\";\n              const options = event.target.options;\n\n              if (!event.target.multiple) {\n                return options.selectedIndex === -1 ? null : options[options.selectedIndex][name];\n              }\n\n              return Array.prototype.filter.call(options, option => option.selected).map(option => option[name]);\n            };\n\n            const getItems = event => {\n              const options = event.target.options;\n              return Array.prototype.map.call(options, option => {\n                return {\n                  displayValue: option.textContent,\n                  exportValue: option.value\n                };\n              });\n            };\n\n            if (this.enableScripting && this.hasJSActions) {\n              selectElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n                const actions = {\n                  value(event) {\n                    const value = event.detail.value;\n                    const values = new Set(Array.isArray(value) ? value : [value]);\n\n                    for (const option of selectElement.options) {\n                      option.selected = values.has(option.value);\n                    }\n\n                    storage.setValue(id, {\n                      value: getValue(event, true)\n                    });\n                  },\n\n                  multipleSelection(event) {\n                    selectElement.multiple = true;\n                  },\n\n                  remove(event) {\n                    const options = selectElement.options;\n                    const index = event.detail.remove;\n                    options[index].selected = false;\n                    selectElement.remove(index);\n\n                    if (options.length > 0) {\n                      const i = Array.prototype.findIndex.call(options, option => option.selected);\n\n                      if (i === -1) {\n                        options[0].selected = true;\n                      }\n                    }\n\n                    storage.setValue(id, {\n                      value: getValue(event, true),\n                      items: getItems(event)\n                    });\n                  },\n\n                  clear(event) {\n                    while (selectElement.length !== 0) {\n                      selectElement.remove(0);\n                    }\n\n                    storage.setValue(id, {\n                      value: null,\n                      items: []\n                    });\n                  },\n\n                  insert(event) {\n                    const {\n                      index,\n                      displayValue,\n                      exportValue\n                    } = event.detail.insert;\n                    const optionElement = document.createElement(\"option\");\n                    optionElement.textContent = displayValue;\n                    optionElement.value = exportValue;\n                    selectElement.insertBefore(optionElement, selectElement.children[index]);\n                    storage.setValue(id, {\n                      value: getValue(event, true),\n                      items: getItems(event)\n                    });\n                  },\n\n                  items(event) {\n                    const {\n                      items\n                    } = event.detail;\n\n                    while (selectElement.length !== 0) {\n                      selectElement.remove(0);\n                    }\n\n                    for (const item of items) {\n                      const {\n                        displayValue,\n                        exportValue\n                      } = item;\n                      const optionElement = document.createElement(\"option\");\n                      optionElement.textContent = displayValue;\n                      optionElement.value = exportValue;\n                      selectElement.appendChild(optionElement);\n                    }\n\n                    if (selectElement.options.length > 0) {\n                      selectElement.options[0].selected = true;\n                    }\n\n                    storage.setValue(id, {\n                      value: getValue(event, true),\n                      items: getItems(event)\n                    });\n                  },\n\n                  indices(event) {\n                    const indices = new Set(event.detail.indices);\n\n                    for (const option of event.target.options) {\n                      option.selected = indices.has(option.index);\n                    }\n\n                    storage.setValue(id, {\n                      value: getValue(event, true)\n                    });\n                  },\n\n                  editable(event) {\n                    event.target.disabled = !event.detail.editable;\n                  }\n\n                };\n\n                this._dispatchEventFromSandbox(actions, jsEvent);\n              });\n              selectElement.addEventListener(\"input\", event => {\n                const exportValue = getValue(event, true);\n                const value = getValue(event, false);\n                storage.setValue(id, {\n                  value: exportValue\n                });\n                this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                  source: this,\n                  detail: {\n                    id,\n                    name: \"Keystroke\",\n                    value,\n                    changeEx: exportValue,\n                    willCommit: true,\n                    commitKey: 1,\n                    keyDown: false\n                  }\n                });\n              });\n\n              this._setEventListeners(selectElement, [[\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"], [\"input\", \"Action\"]], event => event.target.checked);\n            } else {\n              selectElement.addEventListener(\"input\", function (event) {\n                storage.setValue(id, {\n                  value: getValue(event, true)\n                });\n              });\n            }\n\n            this._setBackgroundColor(selectElement);\n\n            this._setDefaultPropertiesFromJS(selectElement);\n\n            this.container.appendChild(selectElement);\n            return this.container;\n          }\n\n        }\n\n        class PopupAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            const isRenderable = !!(parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n            super(parameters, {\n              isRenderable\n            });\n          }\n\n          render() {\n            const IGNORE_TYPES = [\"Line\", \"Square\", \"Circle\", \"PolyLine\", \"Polygon\", \"Ink\"];\n            this.container.className = \"popupAnnotation\";\n\n            if (IGNORE_TYPES.includes(this.data.parentType)) {\n              return this.container;\n            }\n\n            const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n            const parentElements = this.layer.querySelectorAll(selector);\n\n            if (parentElements.length === 0) {\n              return this.container;\n            }\n\n            const popup = new PopupElement({\n              container: this.container,\n              trigger: Array.from(parentElements),\n              color: this.data.color,\n              titleObj: this.data.titleObj,\n              modificationDate: this.data.modificationDate,\n              contentsObj: this.data.contentsObj,\n              richText: this.data.richText\n            });\n            const page = this.page;\n\n            const rect = _util.Util.normalizeRect([this.data.parentRect[0], page.view[3] - this.data.parentRect[1] + page.view[1], this.data.parentRect[2], page.view[3] - this.data.parentRect[3] + page.view[1]]);\n\n            const popupLeft = rect[0] + this.data.parentRect[2] - this.data.parentRect[0];\n            const popupTop = rect[1];\n            this.container.style.transformOrigin = `${-popupLeft}px ${-popupTop}px`;\n            this.container.style.left = `${popupLeft}px`;\n            this.container.style.top = `${popupTop}px`;\n            this.container.appendChild(popup.render());\n            return this.container;\n          }\n\n        }\n\n        class PopupElement {\n          constructor(parameters) {\n            this.container = parameters.container;\n            this.trigger = parameters.trigger;\n            this.color = parameters.color;\n            this.titleObj = parameters.titleObj;\n            this.modificationDate = parameters.modificationDate;\n            this.contentsObj = parameters.contentsObj;\n            this.richText = parameters.richText;\n            this.hideWrapper = parameters.hideWrapper || false;\n            this.pinned = false;\n          }\n\n          render() {\n            const BACKGROUND_ENLIGHT = 0.7;\n            const wrapper = document.createElement(\"div\");\n            wrapper.className = \"popupWrapper\";\n            this.hideElement = this.hideWrapper ? wrapper : this.container;\n            this.hideElement.hidden = true;\n            const popup = document.createElement(\"div\");\n            popup.className = \"popup\";\n            const color = this.color;\n\n            if (color) {\n              const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n              const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n              const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n              popup.style.backgroundColor = _util.Util.makeHexColor(r | 0, g | 0, b | 0);\n            }\n\n            const title = document.createElement(\"h1\");\n            title.dir = this.titleObj.dir;\n            title.textContent = this.titleObj.str;\n            popup.appendChild(title);\n\n            const dateObject = _display_utils.PDFDateString.toDateObject(this.modificationDate);\n\n            if (dateObject) {\n              const modificationDate = document.createElement(\"span\");\n              modificationDate.className = \"popupDate\";\n              modificationDate.textContent = \"{{date}}, {{time}}\";\n              modificationDate.dataset.l10nId = \"annotation_date_string\";\n              modificationDate.dataset.l10nArgs = JSON.stringify({\n                date: dateObject.toLocaleDateString(),\n                time: dateObject.toLocaleTimeString()\n              });\n              popup.appendChild(modificationDate);\n            }\n\n            if (this.richText?.str && (!this.contentsObj?.str || this.contentsObj.str === this.richText.str)) {\n              _xfa_layer.XfaLayer.render({\n                xfaHtml: this.richText.html,\n                intent: \"richText\",\n                div: popup\n              });\n\n              popup.lastChild.className = \"richText popupContent\";\n            } else {\n              const contents = this._formatContents(this.contentsObj);\n\n              popup.appendChild(contents);\n            }\n\n            if (!Array.isArray(this.trigger)) {\n              this.trigger = [this.trigger];\n            }\n\n            for (const element of this.trigger) {\n              element.addEventListener(\"click\", this._toggle.bind(this));\n              element.addEventListener(\"mouseover\", this._show.bind(this, false));\n              element.addEventListener(\"mouseout\", this._hide.bind(this, false));\n            }\n\n            popup.addEventListener(\"click\", this._hide.bind(this, true));\n            wrapper.appendChild(popup);\n            return wrapper;\n          }\n\n          _formatContents(_ref27) {\n            let {\n              str,\n              dir\n            } = _ref27;\n            const p = document.createElement(\"p\");\n            p.className = \"popupContent\";\n            p.dir = dir;\n            const lines = str.split(/(?:\\r\\n?|\\n)/);\n\n            for (let i = 0, ii = lines.length; i < ii; ++i) {\n              const line = lines[i];\n              p.appendChild(document.createTextNode(line));\n\n              if (i < ii - 1) {\n                p.appendChild(document.createElement(\"br\"));\n              }\n            }\n\n            return p;\n          }\n\n          _toggle() {\n            if (this.pinned) {\n              this._hide(true);\n            } else {\n              this._show(true);\n            }\n          }\n\n          _show() {\n            let pin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            if (pin) {\n              this.pinned = true;\n            }\n\n            if (this.hideElement.hidden) {\n              this.hideElement.hidden = false;\n              this.container.style.zIndex += 1;\n            }\n          }\n\n          _hide() {\n            let unpin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n            if (unpin) {\n              this.pinned = false;\n            }\n\n            if (!this.hideElement.hidden && !this.pinned) {\n              this.hideElement.hidden = true;\n              this.container.style.zIndex -= 1;\n            }\n          }\n\n        }\n\n        class FreeTextAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n            super(parameters, {\n              isRenderable,\n              ignoreBorder: true\n            });\n          }\n\n          render() {\n            this.container.className = \"freeTextAnnotation\";\n\n            if (!this.data.hasPopup) {\n              this._createPopup(null, this.data);\n            }\n\n            return this.container;\n          }\n\n        }\n\n        class LineAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n            super(parameters, {\n              isRenderable,\n              ignoreBorder: true\n            });\n          }\n\n          render() {\n            this.container.className = \"lineAnnotation\";\n            const data = this.data;\n            const {\n              width,\n              height\n            } = getRectDims(data.rect);\n            const svg = this.svgFactory.create(width, height);\n            const line = this.svgFactory.createElement(\"svg:line\");\n            line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n            line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n            line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n            line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n            line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n            line.setAttribute(\"stroke\", \"transparent\");\n            line.setAttribute(\"fill\", \"transparent\");\n            svg.appendChild(line);\n            this.container.append(svg);\n\n            this._createPopup(line, data);\n\n            return this.container;\n          }\n\n        }\n\n        class SquareAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n            super(parameters, {\n              isRenderable,\n              ignoreBorder: true\n            });\n          }\n\n          render() {\n            this.container.className = \"squareAnnotation\";\n            const data = this.data;\n            const {\n              width,\n              height\n            } = getRectDims(data.rect);\n            const svg = this.svgFactory.create(width, height);\n            const borderWidth = data.borderStyle.width;\n            const square = this.svgFactory.createElement(\"svg:rect\");\n            square.setAttribute(\"x\", borderWidth / 2);\n            square.setAttribute(\"y\", borderWidth / 2);\n            square.setAttribute(\"width\", width - borderWidth);\n            square.setAttribute(\"height\", height - borderWidth);\n            square.setAttribute(\"stroke-width\", borderWidth || 1);\n            square.setAttribute(\"stroke\", \"transparent\");\n            square.setAttribute(\"fill\", \"transparent\");\n            svg.appendChild(square);\n            this.container.append(svg);\n\n            this._createPopup(square, data);\n\n            return this.container;\n          }\n\n        }\n\n        class CircleAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n            super(parameters, {\n              isRenderable,\n              ignoreBorder: true\n            });\n          }\n\n          render() {\n            this.container.className = \"circleAnnotation\";\n            const data = this.data;\n            const {\n              width,\n              height\n            } = getRectDims(data.rect);\n            const svg = this.svgFactory.create(width, height);\n            const borderWidth = data.borderStyle.width;\n            const circle = this.svgFactory.createElement(\"svg:ellipse\");\n            circle.setAttribute(\"cx\", width / 2);\n            circle.setAttribute(\"cy\", height / 2);\n            circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n            circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n            circle.setAttribute(\"stroke-width\", borderWidth || 1);\n            circle.setAttribute(\"stroke\", \"transparent\");\n            circle.setAttribute(\"fill\", \"transparent\");\n            svg.appendChild(circle);\n            this.container.append(svg);\n\n            this._createPopup(circle, data);\n\n            return this.container;\n          }\n\n        }\n\n        class PolylineAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n            super(parameters, {\n              isRenderable,\n              ignoreBorder: true\n            });\n            this.containerClassName = \"polylineAnnotation\";\n            this.svgElementName = \"svg:polyline\";\n          }\n\n          render() {\n            this.container.className = this.containerClassName;\n            const data = this.data;\n            const {\n              width,\n              height\n            } = getRectDims(data.rect);\n            const svg = this.svgFactory.create(width, height);\n            let points = [];\n\n            for (const coordinate of data.vertices) {\n              const x = coordinate.x - data.rect[0];\n              const y = data.rect[3] - coordinate.y;\n              points.push(x + \",\" + y);\n            }\n\n            points = points.join(\" \");\n            const polyline = this.svgFactory.createElement(this.svgElementName);\n            polyline.setAttribute(\"points\", points);\n            polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n            polyline.setAttribute(\"stroke\", \"transparent\");\n            polyline.setAttribute(\"fill\", \"transparent\");\n            svg.appendChild(polyline);\n            this.container.append(svg);\n\n            this._createPopup(polyline, data);\n\n            return this.container;\n          }\n\n        }\n\n        class PolygonAnnotationElement extends PolylineAnnotationElement {\n          constructor(parameters) {\n            super(parameters);\n            this.containerClassName = \"polygonAnnotation\";\n            this.svgElementName = \"svg:polygon\";\n          }\n\n        }\n\n        class CaretAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n            super(parameters, {\n              isRenderable,\n              ignoreBorder: true\n            });\n          }\n\n          render() {\n            this.container.className = \"caretAnnotation\";\n\n            if (!this.data.hasPopup) {\n              this._createPopup(null, this.data);\n            }\n\n            return this.container;\n          }\n\n        }\n\n        class InkAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n            super(parameters, {\n              isRenderable,\n              ignoreBorder: true\n            });\n            this.containerClassName = \"inkAnnotation\";\n            this.svgElementName = \"svg:polyline\";\n          }\n\n          render() {\n            this.container.className = this.containerClassName;\n            const data = this.data;\n            const {\n              width,\n              height\n            } = getRectDims(data.rect);\n            const svg = this.svgFactory.create(width, height);\n\n            for (const inkList of data.inkLists) {\n              let points = [];\n\n              for (const coordinate of inkList) {\n                const x = coordinate.x - data.rect[0];\n                const y = data.rect[3] - coordinate.y;\n                points.push(`${x},${y}`);\n              }\n\n              points = points.join(\" \");\n              const polyline = this.svgFactory.createElement(this.svgElementName);\n              polyline.setAttribute(\"points\", points);\n              polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n              polyline.setAttribute(\"stroke\", \"transparent\");\n              polyline.setAttribute(\"fill\", \"transparent\");\n\n              this._createPopup(polyline, data);\n\n              svg.appendChild(polyline);\n            }\n\n            this.container.append(svg);\n            return this.container;\n          }\n\n        }\n\n        class HighlightAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n            super(parameters, {\n              isRenderable,\n              ignoreBorder: true,\n              createQuadrilaterals: true\n            });\n          }\n\n          render() {\n            if (!this.data.hasPopup) {\n              this._createPopup(null, this.data);\n            }\n\n            if (this.quadrilaterals) {\n              return this._renderQuadrilaterals(\"highlightAnnotation\");\n            }\n\n            this.container.className = \"highlightAnnotation\";\n            return this.container;\n          }\n\n        }\n\n        class UnderlineAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n            super(parameters, {\n              isRenderable,\n              ignoreBorder: true,\n              createQuadrilaterals: true\n            });\n          }\n\n          render() {\n            if (!this.data.hasPopup) {\n              this._createPopup(null, this.data);\n            }\n\n            if (this.quadrilaterals) {\n              return this._renderQuadrilaterals(\"underlineAnnotation\");\n            }\n\n            this.container.className = \"underlineAnnotation\";\n            return this.container;\n          }\n\n        }\n\n        class SquigglyAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n            super(parameters, {\n              isRenderable,\n              ignoreBorder: true,\n              createQuadrilaterals: true\n            });\n          }\n\n          render() {\n            if (!this.data.hasPopup) {\n              this._createPopup(null, this.data);\n            }\n\n            if (this.quadrilaterals) {\n              return this._renderQuadrilaterals(\"squigglyAnnotation\");\n            }\n\n            this.container.className = \"squigglyAnnotation\";\n            return this.container;\n          }\n\n        }\n\n        class StrikeOutAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n            super(parameters, {\n              isRenderable,\n              ignoreBorder: true,\n              createQuadrilaterals: true\n            });\n          }\n\n          render() {\n            if (!this.data.hasPopup) {\n              this._createPopup(null, this.data);\n            }\n\n            if (this.quadrilaterals) {\n              return this._renderQuadrilaterals(\"strikeoutAnnotation\");\n            }\n\n            this.container.className = \"strikeoutAnnotation\";\n            return this.container;\n          }\n\n        }\n\n        class StampAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            const isRenderable = !!(parameters.data.hasPopup || parameters.data.titleObj?.str || parameters.data.contentsObj?.str || parameters.data.richText?.str);\n            super(parameters, {\n              isRenderable,\n              ignoreBorder: true\n            });\n          }\n\n          render() {\n            this.container.className = \"stampAnnotation\";\n\n            if (!this.data.hasPopup) {\n              this._createPopup(null, this.data);\n            }\n\n            return this.container;\n          }\n\n        }\n\n        class FileAttachmentAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true\n            });\n            const {\n              filename,\n              content\n            } = this.data.file;\n            this.filename = (0, _display_utils.getFilenameFromUrl)(filename);\n            this.content = content;\n            this.linkService.eventBus?.dispatch(\"fileattachmentannotation\", {\n              source: this,\n              filename,\n              content\n            });\n          }\n\n          render() {\n            this.container.className = \"fileAttachmentAnnotation\";\n            const trigger = document.createElement(\"div\");\n            trigger.style.height = this.container.style.height;\n            trigger.style.width = this.container.style.width;\n            trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n            if (!this.data.hasPopup && (this.data.titleObj?.str || this.data.contentsObj?.str || this.data.richText)) {\n              this._createPopup(trigger, this.data);\n            }\n\n            this.container.appendChild(trigger);\n            return this.container;\n          }\n\n          _download() {\n            this.downloadManager?.openOrDownloadData(this.container, this.content, this.filename);\n          }\n\n        }\n\n        class AnnotationLayer {\n          static render(parameters) {\n            const sortedAnnotations = [],\n                  popupAnnotations = [];\n\n            for (const data of parameters.annotations) {\n              if (!data) {\n                continue;\n              }\n\n              const {\n                width,\n                height\n              } = getRectDims(data.rect);\n\n              if (width <= 0 || height <= 0) {\n                continue;\n              }\n\n              if (data.annotationType === _util.AnnotationType.POPUP) {\n                popupAnnotations.push(data);\n                continue;\n              }\n\n              sortedAnnotations.push(data);\n            }\n\n            if (popupAnnotations.length) {\n              sortedAnnotations.push(...popupAnnotations);\n            }\n\n            const div = parameters.div;\n\n            for (const data of sortedAnnotations) {\n              const element = AnnotationElementFactory.create({\n                data,\n                layer: div,\n                page: parameters.page,\n                viewport: parameters.viewport,\n                linkService: parameters.linkService,\n                downloadManager: parameters.downloadManager,\n                imageResourcesPath: parameters.imageResourcesPath || \"\",\n                renderForms: parameters.renderForms !== false,\n                svgFactory: new _display_utils.DOMSVGFactory(),\n                annotationStorage: parameters.annotationStorage || new _annotation_storage.AnnotationStorage(),\n                enableScripting: parameters.enableScripting,\n                hasJSActions: parameters.hasJSActions,\n                fieldObjects: parameters.fieldObjects,\n                mouseState: parameters.mouseState || {\n                  isDown: false\n                }\n              });\n\n              if (element.isRenderable) {\n                const rendered = element.render();\n\n                if (data.hidden) {\n                  rendered.style.visibility = \"hidden\";\n                }\n\n                if (Array.isArray(rendered)) {\n                  for (const renderedElement of rendered) {\n                    div.appendChild(renderedElement);\n                  }\n                } else {\n                  if (element instanceof PopupAnnotationElement) {\n                    div.prepend(rendered);\n                  } else {\n                    div.appendChild(rendered);\n                  }\n                }\n              }\n            }\n\n            this.#setAnnotationCanvasMap(div, parameters.annotationCanvasMap);\n          }\n\n          static update(parameters) {\n            const {\n              page,\n              viewport,\n              annotations,\n              annotationCanvasMap,\n              div\n            } = parameters;\n            const transform = viewport.transform;\n            const matrix = `matrix(${transform.join(\",\")})`;\n            let scale, ownMatrix;\n\n            for (const data of annotations) {\n              const elements = div.querySelectorAll(`[data-annotation-id=\"${data.id}\"]`);\n\n              if (elements) {\n                for (const element of elements) {\n                  if (data.hasOwnCanvas) {\n                    const rect = _util.Util.normalizeRect([data.rect[0], page.view[3] - data.rect[1] + page.view[1], data.rect[2], page.view[3] - data.rect[3] + page.view[1]]);\n\n                    if (!ownMatrix) {\n                      scale = Math.abs(transform[0] || transform[1]);\n                      const ownTransform = transform.slice();\n\n                      for (let i = 0; i < 4; i++) {\n                        ownTransform[i] = Math.sign(ownTransform[i]);\n                      }\n\n                      ownMatrix = `matrix(${ownTransform.join(\",\")})`;\n                    }\n\n                    const left = rect[0] * scale;\n                    const top = rect[1] * scale;\n                    element.style.left = `${left}px`;\n                    element.style.top = `${top}px`;\n                    element.style.transformOrigin = `${-left}px ${-top}px`;\n                    element.style.transform = ownMatrix;\n                  } else {\n                    element.style.transform = matrix;\n                  }\n                }\n              }\n            }\n\n            this.#setAnnotationCanvasMap(div, annotationCanvasMap);\n            div.hidden = false;\n          }\n\n          static #setAnnotationCanvasMap(div, annotationCanvasMap) {\n            if (!annotationCanvasMap) {\n              return;\n            }\n\n            for (const [id, canvas] of annotationCanvasMap) {\n              const element = div.querySelector(`[data-annotation-id=\"${id}\"]`);\n\n              if (!element) {\n                continue;\n              }\n\n              const {\n                firstChild\n              } = element;\n\n              if (firstChild.nodeName === \"CANVAS\") {\n                element.replaceChild(canvas, firstChild);\n              } else {\n                element.insertBefore(canvas, firstChild);\n              }\n            }\n\n            annotationCanvasMap.clear();\n          }\n\n        }\n\n        exports.AnnotationLayer = AnnotationLayer;\n        /***/\n      },\n      /* 21 */\n\n      /***/\n      (__unused_webpack_module, exports) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.ColorConverters = void 0;\n\n        function makeColorComp(n) {\n          return Math.floor(Math.max(0, Math.min(1, n)) * 255).toString(16).padStart(2, \"0\");\n        }\n\n        class ColorConverters {\n          static CMYK_G(_ref28) {\n            let [c, y, m, k] = _ref28;\n            return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n          }\n\n          static G_CMYK(_ref29) {\n            let [g] = _ref29;\n            return [\"CMYK\", 0, 0, 0, 1 - g];\n          }\n\n          static G_RGB(_ref30) {\n            let [g] = _ref30;\n            return [\"RGB\", g, g, g];\n          }\n\n          static G_HTML(_ref31) {\n            let [g] = _ref31;\n            const G = makeColorComp(g);\n            return `#${G}${G}${G}`;\n          }\n\n          static RGB_G(_ref32) {\n            let [r, g, b] = _ref32;\n            return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n          }\n\n          static RGB_HTML(_ref33) {\n            let [r, g, b] = _ref33;\n            const R = makeColorComp(r);\n            const G = makeColorComp(g);\n            const B = makeColorComp(b);\n            return `#${R}${G}${B}`;\n          }\n\n          static T_HTML() {\n            return \"#00000000\";\n          }\n\n          static CMYK_RGB(_ref34) {\n            let [c, y, m, k] = _ref34;\n            return [\"RGB\", 1 - Math.min(1, c + k), 1 - Math.min(1, m + k), 1 - Math.min(1, y + k)];\n          }\n\n          static CMYK_HTML(components) {\n            return this.RGB_HTML(this.CMYK_RGB(components));\n          }\n\n          static RGB_CMYK(_ref35) {\n            let [r, g, b] = _ref35;\n            const c = 1 - r;\n            const m = 1 - g;\n            const y = 1 - b;\n            const k = Math.min(c, m, y);\n            return [\"CMYK\", c, m, y, k];\n          }\n\n        }\n\n        exports.ColorConverters = ColorConverters;\n        /***/\n      },\n      /* 22 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.XfaLayer = void 0;\n\n        var _xfa_text = __w_pdfjs_require__(18);\n\n        class XfaLayer {\n          static setupStorage(html, id, element, storage, intent) {\n            const storedData = storage.getValue(id, {\n              value: null\n            });\n\n            switch (element.name) {\n              case \"textarea\":\n                if (storedData.value !== null) {\n                  html.textContent = storedData.value;\n                }\n\n                if (intent === \"print\") {\n                  break;\n                }\n\n                html.addEventListener(\"input\", event => {\n                  storage.setValue(id, {\n                    value: event.target.value\n                  });\n                });\n                break;\n\n              case \"input\":\n                if (element.attributes.type === \"radio\" || element.attributes.type === \"checkbox\") {\n                  if (storedData.value === element.attributes.xfaOn) {\n                    html.setAttribute(\"checked\", true);\n                  } else if (storedData.value === element.attributes.xfaOff) {\n                    html.removeAttribute(\"checked\");\n                  }\n\n                  if (intent === \"print\") {\n                    break;\n                  }\n\n                  html.addEventListener(\"change\", event => {\n                    storage.setValue(id, {\n                      value: event.target.checked ? event.target.getAttribute(\"xfaOn\") : event.target.getAttribute(\"xfaOff\")\n                    });\n                  });\n                } else {\n                  if (storedData.value !== null) {\n                    html.setAttribute(\"value\", storedData.value);\n                  }\n\n                  if (intent === \"print\") {\n                    break;\n                  }\n\n                  html.addEventListener(\"input\", event => {\n                    storage.setValue(id, {\n                      value: event.target.value\n                    });\n                  });\n                }\n\n                break;\n\n              case \"select\":\n                if (storedData.value !== null) {\n                  for (const option of element.children) {\n                    if (option.attributes.value === storedData.value) {\n                      option.attributes.selected = true;\n                    }\n                  }\n                }\n\n                html.addEventListener(\"input\", event => {\n                  const options = event.target.options;\n                  const value = options.selectedIndex === -1 ? \"\" : options[options.selectedIndex].value;\n                  storage.setValue(id, {\n                    value\n                  });\n                });\n                break;\n            }\n          }\n\n          static setAttributes(_ref36) {\n            let {\n              html,\n              element,\n              storage = null,\n              intent,\n              linkService\n            } = _ref36;\n            const {\n              attributes\n            } = element;\n            const isHTMLAnchorElement = html instanceof HTMLAnchorElement;\n\n            if (attributes.type === \"radio\") {\n              attributes.name = `${attributes.name}-${intent}`;\n            }\n\n            for (const [key, value] of Object.entries(attributes)) {\n              if (value === null || value === undefined || key === \"dataId\") {\n                continue;\n              }\n\n              if (key !== \"style\") {\n                if (key === \"textContent\") {\n                  html.textContent = value;\n                } else if (key === \"class\") {\n                  if (value.length) {\n                    html.setAttribute(key, value.join(\" \"));\n                  }\n                } else {\n                  if (isHTMLAnchorElement && (key === \"href\" || key === \"newWindow\")) {\n                    continue;\n                  }\n\n                  html.setAttribute(key, value);\n                }\n              } else {\n                Object.assign(html.style, value);\n              }\n            }\n\n            if (isHTMLAnchorElement) {\n              linkService.addLinkAttributes(html, attributes.href, attributes.newWindow);\n            }\n\n            if (storage && attributes.dataId) {\n              this.setupStorage(html, attributes.dataId, element, storage);\n            }\n          }\n\n          static render(parameters) {\n            const storage = parameters.annotationStorage;\n            const linkService = parameters.linkService;\n            const root = parameters.xfaHtml;\n            const intent = parameters.intent || \"display\";\n            const rootHtml = document.createElement(root.name);\n\n            if (root.attributes) {\n              this.setAttributes({\n                html: rootHtml,\n                element: root,\n                intent,\n                linkService\n              });\n            }\n\n            const stack = [[root, -1, rootHtml]];\n            const rootDiv = parameters.div;\n            rootDiv.appendChild(rootHtml);\n\n            if (parameters.viewport) {\n              const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n              rootDiv.style.transform = transform;\n            }\n\n            if (intent !== \"richText\") {\n              rootDiv.setAttribute(\"class\", \"xfaLayer xfaFont\");\n            }\n\n            const textDivs = [];\n\n            while (stack.length > 0) {\n              const [parent, i, html] = stack[stack.length - 1];\n\n              if (i + 1 === parent.children.length) {\n                stack.pop();\n                continue;\n              }\n\n              const child = parent.children[++stack[stack.length - 1][1]];\n\n              if (child === null) {\n                continue;\n              }\n\n              const {\n                name\n              } = child;\n\n              if (name === \"#text\") {\n                const node = document.createTextNode(child.value);\n                textDivs.push(node);\n                html.appendChild(node);\n                continue;\n              }\n\n              let childHtml;\n\n              if (child?.attributes?.xmlns) {\n                childHtml = document.createElementNS(child.attributes.xmlns, name);\n              } else {\n                childHtml = document.createElement(name);\n              }\n\n              html.appendChild(childHtml);\n\n              if (child.attributes) {\n                this.setAttributes({\n                  html: childHtml,\n                  element: child,\n                  storage,\n                  intent,\n                  linkService\n                });\n              }\n\n              if (child.children && child.children.length > 0) {\n                stack.push([child, -1, childHtml]);\n              } else if (child.value) {\n                const node = document.createTextNode(child.value);\n\n                if (_xfa_text.XfaText.shouldBuildText(name)) {\n                  textDivs.push(node);\n                }\n\n                childHtml.appendChild(node);\n              }\n            }\n\n            for (const el of rootDiv.querySelectorAll(\".xfaNonInteractive input, .xfaNonInteractive textarea\")) {\n              el.setAttribute(\"readOnly\", true);\n            }\n\n            return {\n              textDivs\n            };\n          }\n\n          static update(parameters) {\n            const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n            parameters.div.style.transform = transform;\n            parameters.div.hidden = false;\n          }\n\n        }\n\n        exports.XfaLayer = XfaLayer;\n        /***/\n      },\n      /* 23 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.renderTextLayer = renderTextLayer;\n\n        var _util = __w_pdfjs_require__(1);\n\n        const MAX_TEXT_DIVS_TO_RENDER = 100000;\n        const DEFAULT_FONT_SIZE = 30;\n        const DEFAULT_FONT_ASCENT = 0.8;\n        const ascentCache = new Map();\n        const AllWhitespaceRegexp = /^\\s+$/g;\n\n        function getAscent(fontFamily, ctx) {\n          const cachedAscent = ascentCache.get(fontFamily);\n\n          if (cachedAscent) {\n            return cachedAscent;\n          }\n\n          ctx.save();\n          ctx.font = `${DEFAULT_FONT_SIZE}px ${fontFamily}`;\n          const metrics = ctx.measureText(\"\");\n          let ascent = metrics.fontBoundingBoxAscent;\n          let descent = Math.abs(metrics.fontBoundingBoxDescent);\n\n          if (ascent) {\n            ctx.restore();\n            const ratio = ascent / (ascent + descent);\n            ascentCache.set(fontFamily, ratio);\n            return ratio;\n          }\n\n          ctx.strokeStyle = \"red\";\n          ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n          ctx.strokeText(\"g\", 0, 0);\n          let pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n          descent = 0;\n\n          for (let i = pixels.length - 1 - 3; i >= 0; i -= 4) {\n            if (pixels[i] > 0) {\n              descent = Math.ceil(i / 4 / DEFAULT_FONT_SIZE);\n              break;\n            }\n          }\n\n          ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n          ctx.strokeText(\"A\", 0, DEFAULT_FONT_SIZE);\n          pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n          ascent = 0;\n\n          for (let i = 0, ii = pixels.length; i < ii; i += 4) {\n            if (pixels[i] > 0) {\n              ascent = DEFAULT_FONT_SIZE - Math.floor(i / 4 / DEFAULT_FONT_SIZE);\n              break;\n            }\n          }\n\n          ctx.restore();\n\n          if (ascent) {\n            const ratio = ascent / (ascent + descent);\n            ascentCache.set(fontFamily, ratio);\n            return ratio;\n          }\n\n          ascentCache.set(fontFamily, DEFAULT_FONT_ASCENT);\n          return DEFAULT_FONT_ASCENT;\n        }\n\n        function appendText(task, geom, styles, ctx) {\n          const textDiv = document.createElement(\"span\");\n          const textDivProperties = task._enhanceTextSelection ? {\n            angle: 0,\n            canvasWidth: 0,\n            hasText: geom.str !== \"\",\n            hasEOL: geom.hasEOL,\n            originalTransform: null,\n            paddingBottom: 0,\n            paddingLeft: 0,\n            paddingRight: 0,\n            paddingTop: 0,\n            scale: 1\n          } : {\n            angle: 0,\n            canvasWidth: 0,\n            hasText: geom.str !== \"\",\n            hasEOL: geom.hasEOL\n          };\n\n          task._textDivs.push(textDiv);\n\n          const tx = _util.Util.transform(task._viewport.transform, geom.transform);\n\n          let angle = Math.atan2(tx[1], tx[0]);\n          const style = styles[geom.fontName];\n\n          if (style.vertical) {\n            angle += Math.PI / 2;\n          }\n\n          const fontHeight = Math.hypot(tx[2], tx[3]);\n          const fontAscent = fontHeight * getAscent(style.fontFamily, ctx);\n          let left, top;\n\n          if (angle === 0) {\n            left = tx[4];\n            top = tx[5] - fontAscent;\n          } else {\n            left = tx[4] + fontAscent * Math.sin(angle);\n            top = tx[5] - fontAscent * Math.cos(angle);\n          }\n\n          textDiv.style.left = `${left}px`;\n          textDiv.style.top = `${top}px`;\n          textDiv.style.fontSize = `${fontHeight}px`;\n          textDiv.style.fontFamily = style.fontFamily;\n          textDiv.setAttribute(\"role\", \"presentation\");\n          textDiv.textContent = geom.str;\n          textDiv.dir = geom.dir;\n\n          if (task._fontInspectorEnabled) {\n            textDiv.dataset.fontName = geom.fontName;\n          }\n\n          if (angle !== 0) {\n            textDivProperties.angle = angle * (180 / Math.PI);\n          }\n\n          let shouldScaleText = false;\n\n          if (geom.str.length > 1 || task._enhanceTextSelection && AllWhitespaceRegexp.test(geom.str)) {\n            shouldScaleText = true;\n          } else if (geom.str !== \" \" && geom.transform[0] !== geom.transform[3]) {\n            const absScaleX = Math.abs(geom.transform[0]),\n                  absScaleY = Math.abs(geom.transform[3]);\n\n            if (absScaleX !== absScaleY && Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5) {\n              shouldScaleText = true;\n            }\n          }\n\n          if (shouldScaleText) {\n            if (style.vertical) {\n              textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n            } else {\n              textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n            }\n          }\n\n          task._textDivProperties.set(textDiv, textDivProperties);\n\n          if (task._textContentStream) {\n            task._layoutText(textDiv);\n          }\n\n          if (task._enhanceTextSelection && textDivProperties.hasText) {\n            let angleCos = 1,\n                angleSin = 0;\n\n            if (angle !== 0) {\n              angleCos = Math.cos(angle);\n              angleSin = Math.sin(angle);\n            }\n\n            const divWidth = (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n            const divHeight = fontHeight;\n            let m, b;\n\n            if (angle !== 0) {\n              m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n              b = _util.Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n            } else {\n              b = [left, top, left + divWidth, top + divHeight];\n            }\n\n            task._bounds.push({\n              left: b[0],\n              top: b[1],\n              right: b[2],\n              bottom: b[3],\n              div: textDiv,\n              size: [divWidth, divHeight],\n              m\n            });\n          }\n        }\n\n        function render(task) {\n          if (task._canceled) {\n            return;\n          }\n\n          const textDivs = task._textDivs;\n          const capability = task._capability;\n          const textDivsLength = textDivs.length;\n\n          if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n            task._renderingDone = true;\n            capability.resolve();\n            return;\n          }\n\n          if (!task._textContentStream) {\n            for (let i = 0; i < textDivsLength; i++) {\n              task._layoutText(textDivs[i]);\n            }\n          }\n\n          task._renderingDone = true;\n          capability.resolve();\n        }\n\n        function findPositiveMin(ts, offset, count) {\n          let result = 0;\n\n          for (let i = 0; i < count; i++) {\n            const t = ts[offset++];\n\n            if (t > 0) {\n              result = result ? Math.min(t, result) : t;\n            }\n          }\n\n          return result;\n        }\n\n        function expand(task) {\n          const bounds = task._bounds;\n          const viewport = task._viewport;\n          const expanded = expandBounds(viewport.width, viewport.height, bounds);\n\n          for (let i = 0; i < expanded.length; i++) {\n            const div = bounds[i].div;\n\n            const divProperties = task._textDivProperties.get(div);\n\n            if (divProperties.angle === 0) {\n              divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n              divProperties.paddingTop = bounds[i].top - expanded[i].top;\n              divProperties.paddingRight = expanded[i].right - bounds[i].right;\n              divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n\n              task._textDivProperties.set(div, divProperties);\n\n              continue;\n            }\n\n            const e = expanded[i],\n                  b = bounds[i];\n            const m = b.m,\n                  c = m[0],\n                  s = m[1];\n            const points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n            const ts = new Float64Array(64);\n\n            for (let j = 0, jj = points.length; j < jj; j++) {\n              const t = _util.Util.applyTransform(points[j], m);\n\n              ts[j + 0] = c && (e.left - t[0]) / c;\n              ts[j + 4] = s && (e.top - t[1]) / s;\n              ts[j + 8] = c && (e.right - t[0]) / c;\n              ts[j + 12] = s && (e.bottom - t[1]) / s;\n              ts[j + 16] = s && (e.left - t[0]) / -s;\n              ts[j + 20] = c && (e.top - t[1]) / c;\n              ts[j + 24] = s && (e.right - t[0]) / -s;\n              ts[j + 28] = c && (e.bottom - t[1]) / c;\n              ts[j + 32] = c && (e.left - t[0]) / -c;\n              ts[j + 36] = s && (e.top - t[1]) / -s;\n              ts[j + 40] = c && (e.right - t[0]) / -c;\n              ts[j + 44] = s && (e.bottom - t[1]) / -s;\n              ts[j + 48] = s && (e.left - t[0]) / s;\n              ts[j + 52] = c && (e.top - t[1]) / -c;\n              ts[j + 56] = s && (e.right - t[0]) / s;\n              ts[j + 60] = c && (e.bottom - t[1]) / -c;\n            }\n\n            const boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n            divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n            divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n            divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n            divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n\n            task._textDivProperties.set(div, divProperties);\n          }\n        }\n\n        function expandBounds(width, height, boxes) {\n          const bounds = boxes.map(function (box, i) {\n            return {\n              x1: box.left,\n              y1: box.top,\n              x2: box.right,\n              y2: box.bottom,\n              index: i,\n              x1New: undefined,\n              x2New: undefined\n            };\n          });\n          expandBoundsLTR(width, bounds);\n          const expanded = new Array(boxes.length);\n\n          for (const b of bounds) {\n            const i = b.index;\n            expanded[i] = {\n              left: b.x1New,\n              top: 0,\n              right: b.x2New,\n              bottom: 0\n            };\n          }\n\n          boxes.map(function (box, i) {\n            const e = expanded[i],\n                  b = bounds[i];\n            b.x1 = box.top;\n            b.y1 = width - e.right;\n            b.x2 = box.bottom;\n            b.y2 = width - e.left;\n            b.index = i;\n            b.x1New = undefined;\n            b.x2New = undefined;\n          });\n          expandBoundsLTR(height, bounds);\n\n          for (const b of bounds) {\n            const i = b.index;\n            expanded[i].top = b.x1New;\n            expanded[i].bottom = b.x2New;\n          }\n\n          return expanded;\n        }\n\n        function expandBoundsLTR(width, bounds) {\n          bounds.sort(function (a, b) {\n            return a.x1 - b.x1 || a.index - b.index;\n          });\n          const fakeBoundary = {\n            x1: -Infinity,\n            y1: -Infinity,\n            x2: 0,\n            y2: Infinity,\n            index: -1,\n            x1New: 0,\n            x2New: 0\n          };\n          const horizon = [{\n            start: -Infinity,\n            end: Infinity,\n            boundary: fakeBoundary\n          }];\n\n          for (const boundary of bounds) {\n            let i = 0;\n\n            while (i < horizon.length && horizon[i].end <= boundary.y1) {\n              i++;\n            }\n\n            let j = horizon.length - 1;\n\n            while (j >= 0 && horizon[j].start >= boundary.y2) {\n              j--;\n            }\n\n            let horizonPart, affectedBoundary;\n            let q,\n                k,\n                maxXNew = -Infinity;\n\n            for (q = i; q <= j; q++) {\n              horizonPart = horizon[q];\n              affectedBoundary = horizonPart.boundary;\n              let xNew;\n\n              if (affectedBoundary.x2 > boundary.x1) {\n                xNew = affectedBoundary.index > boundary.index ? affectedBoundary.x1New : boundary.x1;\n              } else if (affectedBoundary.x2New === undefined) {\n                xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n              } else {\n                xNew = affectedBoundary.x2New;\n              }\n\n              if (xNew > maxXNew) {\n                maxXNew = xNew;\n              }\n            }\n\n            boundary.x1New = maxXNew;\n\n            for (q = i; q <= j; q++) {\n              horizonPart = horizon[q];\n              affectedBoundary = horizonPart.boundary;\n\n              if (affectedBoundary.x2New === undefined) {\n                if (affectedBoundary.x2 > boundary.x1) {\n                  if (affectedBoundary.index > boundary.index) {\n                    affectedBoundary.x2New = affectedBoundary.x2;\n                  }\n                } else {\n                  affectedBoundary.x2New = maxXNew;\n                }\n              } else if (affectedBoundary.x2New > maxXNew) {\n                affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n              }\n            }\n\n            const changedHorizon = [];\n            let lastBoundary = null;\n\n            for (q = i; q <= j; q++) {\n              horizonPart = horizon[q];\n              affectedBoundary = horizonPart.boundary;\n              const useBoundary = affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n\n              if (lastBoundary === useBoundary) {\n                changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n              } else {\n                changedHorizon.push({\n                  start: horizonPart.start,\n                  end: horizonPart.end,\n                  boundary: useBoundary\n                });\n                lastBoundary = useBoundary;\n              }\n            }\n\n            if (horizon[i].start < boundary.y1) {\n              changedHorizon[0].start = boundary.y1;\n              changedHorizon.unshift({\n                start: horizon[i].start,\n                end: boundary.y1,\n                boundary: horizon[i].boundary\n              });\n            }\n\n            if (boundary.y2 < horizon[j].end) {\n              changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n              changedHorizon.push({\n                start: boundary.y2,\n                end: horizon[j].end,\n                boundary: horizon[j].boundary\n              });\n            }\n\n            for (q = i; q <= j; q++) {\n              horizonPart = horizon[q];\n              affectedBoundary = horizonPart.boundary;\n\n              if (affectedBoundary.x2New !== undefined) {\n                continue;\n              }\n\n              let used = false;\n\n              for (k = i - 1; !used && k >= 0 && horizon[k].start >= affectedBoundary.y1; k--) {\n                used = horizon[k].boundary === affectedBoundary;\n              }\n\n              for (k = j + 1; !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2; k++) {\n                used = horizon[k].boundary === affectedBoundary;\n              }\n\n              for (k = 0; !used && k < changedHorizon.length; k++) {\n                used = changedHorizon[k].boundary === affectedBoundary;\n              }\n\n              if (!used) {\n                affectedBoundary.x2New = maxXNew;\n              }\n            }\n\n            Array.prototype.splice.apply(horizon, [i, j - i + 1].concat(changedHorizon));\n          }\n\n          for (const horizonPart of horizon) {\n            const affectedBoundary = horizonPart.boundary;\n\n            if (affectedBoundary.x2New === undefined) {\n              affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n            }\n          }\n        }\n\n        class TextLayerRenderTask {\n          constructor(_ref37) {\n            let {\n              textContent,\n              textContentStream,\n              container,\n              viewport,\n              textDivs,\n              textContentItemsStr,\n              enhanceTextSelection\n            } = _ref37;\n            this._textContent = textContent;\n            this._textContentStream = textContentStream;\n            this._container = container;\n            this._document = container.ownerDocument;\n            this._viewport = viewport;\n            this._textDivs = textDivs || [];\n            this._textContentItemsStr = textContentItemsStr || [];\n            this._enhanceTextSelection = !!enhanceTextSelection;\n            this._fontInspectorEnabled = !!globalThis.FontInspector?.enabled;\n            this._reader = null;\n            this._layoutTextLastFontSize = null;\n            this._layoutTextLastFontFamily = null;\n            this._layoutTextCtx = null;\n            this._textDivProperties = new WeakMap();\n            this._renderingDone = false;\n            this._canceled = false;\n            this._capability = (0, _util.createPromiseCapability)();\n            this._renderTimer = null;\n            this._bounds = [];\n\n            this._capability.promise.finally(() => {\n              if (!this._enhanceTextSelection) {\n                this._textDivProperties = null;\n              }\n\n              if (this._layoutTextCtx) {\n                this._layoutTextCtx.canvas.width = 0;\n                this._layoutTextCtx.canvas.height = 0;\n                this._layoutTextCtx = null;\n              }\n            }).catch(() => {});\n          }\n\n          get promise() {\n            return this._capability.promise;\n          }\n\n          cancel() {\n            this._canceled = true;\n\n            if (this._reader) {\n              this._reader.cancel(new _util.AbortException(\"TextLayer task cancelled.\")).catch(() => {});\n\n              this._reader = null;\n            }\n\n            if (this._renderTimer !== null) {\n              clearTimeout(this._renderTimer);\n              this._renderTimer = null;\n            }\n\n            this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n          }\n\n          _processItems(items, styleCache) {\n            for (let i = 0, len = items.length; i < len; i++) {\n              if (items[i].str === undefined) {\n                if (items[i].type === \"beginMarkedContentProps\" || items[i].type === \"beginMarkedContent\") {\n                  const parent = this._container;\n                  this._container = document.createElement(\"span\");\n\n                  this._container.classList.add(\"markedContent\");\n\n                  if (items[i].id !== null) {\n                    this._container.setAttribute(\"id\", `${items[i].id}`);\n                  }\n\n                  parent.appendChild(this._container);\n                } else if (items[i].type === \"endMarkedContent\") {\n                  this._container = this._container.parentNode;\n                }\n\n                continue;\n              }\n\n              this._textContentItemsStr.push(items[i].str);\n\n              appendText(this, items[i], styleCache, this._layoutTextCtx);\n            }\n          }\n\n          _layoutText(textDiv) {\n            const textDivProperties = this._textDivProperties.get(textDiv);\n\n            let transform = \"\";\n\n            if (textDivProperties.canvasWidth !== 0 && textDivProperties.hasText) {\n              const {\n                fontSize,\n                fontFamily\n              } = textDiv.style;\n\n              if (fontSize !== this._layoutTextLastFontSize || fontFamily !== this._layoutTextLastFontFamily) {\n                this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n                this._layoutTextLastFontSize = fontSize;\n                this._layoutTextLastFontFamily = fontFamily;\n              }\n\n              const {\n                width\n              } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n              if (width > 0) {\n                const scale = textDivProperties.canvasWidth / width;\n\n                if (this._enhanceTextSelection) {\n                  textDivProperties.scale = scale;\n                }\n\n                transform = `scaleX(${scale})`;\n              }\n            }\n\n            if (textDivProperties.angle !== 0) {\n              transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n            }\n\n            if (transform.length > 0) {\n              if (this._enhanceTextSelection) {\n                textDivProperties.originalTransform = transform;\n              }\n\n              textDiv.style.transform = transform;\n            }\n\n            if (textDivProperties.hasText) {\n              this._container.appendChild(textDiv);\n            }\n\n            if (textDivProperties.hasEOL) {\n              const br = document.createElement(\"br\");\n              br.setAttribute(\"role\", \"presentation\");\n\n              this._container.appendChild(br);\n            }\n          }\n\n          _render() {\n            let timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n            const capability = (0, _util.createPromiseCapability)();\n            let styleCache = Object.create(null);\n\n            const canvas = this._document.createElement(\"canvas\");\n\n            canvas.height = canvas.width = DEFAULT_FONT_SIZE;\n            this._layoutTextCtx = canvas.getContext(\"2d\", {\n              alpha: false\n            });\n\n            if (this._textContent) {\n              const textItems = this._textContent.items;\n              const textStyles = this._textContent.styles;\n\n              this._processItems(textItems, textStyles);\n\n              capability.resolve();\n            } else if (this._textContentStream) {\n              const pump = () => {\n                this._reader.read().then(_ref38 => {\n                  let {\n                    value,\n                    done\n                  } = _ref38;\n\n                  if (done) {\n                    capability.resolve();\n                    return;\n                  }\n\n                  Object.assign(styleCache, value.styles);\n\n                  this._processItems(value.items, styleCache);\n\n                  pump();\n                }, capability.reject);\n              };\n\n              this._reader = this._textContentStream.getReader();\n              pump();\n            } else {\n              throw new Error('Neither \"textContent\" nor \"textContentStream\" parameters specified.');\n            }\n\n            capability.promise.then(() => {\n              styleCache = null;\n\n              if (!timeout) {\n                render(this);\n              } else {\n                this._renderTimer = setTimeout(() => {\n                  render(this);\n                  this._renderTimer = null;\n                }, timeout);\n              }\n            }, this._capability.reject);\n          }\n\n          expandTextDivs() {\n            let expandDivs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            if (!this._enhanceTextSelection || !this._renderingDone) {\n              return;\n            }\n\n            if (this._bounds !== null) {\n              expand(this);\n              this._bounds = null;\n            }\n\n            const transformBuf = [],\n                  paddingBuf = [];\n\n            for (let i = 0, ii = this._textDivs.length; i < ii; i++) {\n              const div = this._textDivs[i];\n\n              const divProps = this._textDivProperties.get(div);\n\n              if (!divProps.hasText) {\n                continue;\n              }\n\n              if (expandDivs) {\n                transformBuf.length = 0;\n                paddingBuf.length = 0;\n\n                if (divProps.originalTransform) {\n                  transformBuf.push(divProps.originalTransform);\n                }\n\n                if (divProps.paddingTop > 0) {\n                  paddingBuf.push(`${divProps.paddingTop}px`);\n                  transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n                } else {\n                  paddingBuf.push(0);\n                }\n\n                if (divProps.paddingRight > 0) {\n                  paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n                } else {\n                  paddingBuf.push(0);\n                }\n\n                if (divProps.paddingBottom > 0) {\n                  paddingBuf.push(`${divProps.paddingBottom}px`);\n                } else {\n                  paddingBuf.push(0);\n                }\n\n                if (divProps.paddingLeft > 0) {\n                  paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n                  transformBuf.push(`translateX(${-divProps.paddingLeft / divProps.scale}px)`);\n                } else {\n                  paddingBuf.push(0);\n                }\n\n                div.style.padding = paddingBuf.join(\" \");\n\n                if (transformBuf.length) {\n                  div.style.transform = transformBuf.join(\" \");\n                }\n              } else {\n                div.style.padding = null;\n                div.style.transform = divProps.originalTransform;\n              }\n            }\n          }\n\n        }\n\n        function renderTextLayer(renderParameters) {\n          const task = new TextLayerRenderTask({\n            textContent: renderParameters.textContent,\n            textContentStream: renderParameters.textContentStream,\n            container: renderParameters.container,\n            viewport: renderParameters.viewport,\n            textDivs: renderParameters.textDivs,\n            textContentItemsStr: renderParameters.textContentItemsStr,\n            enhanceTextSelection: renderParameters.enhanceTextSelection\n          });\n\n          task._render(renderParameters.timeout);\n\n          return task;\n        }\n        /***/\n\n      },\n      /* 24 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.SVGGraphics = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _display_utils = __w_pdfjs_require__(5);\n\n        var _is_node = __w_pdfjs_require__(3);\n\n        let SVGGraphics = class {\n          constructor() {\n            (0, _util.unreachable)(\"Not implemented: SVGGraphics\");\n          }\n\n        };\n        exports.SVGGraphics = SVGGraphics;\n        {\n          const SVG_DEFAULTS = {\n            fontStyle: \"normal\",\n            fontWeight: \"normal\",\n            fillColor: \"#000000\"\n          };\n          const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n          const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n          const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n          const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n          const createObjectURL = function (data) {\n            let contentType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n            let forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            if (URL.createObjectURL && typeof Blob !== \"undefined\" && !forceDataSchema) {\n              return URL.createObjectURL(new Blob([data], {\n                type: contentType\n              }));\n            }\n\n            const digits = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n            let buffer = `data:${contentType};base64,`;\n\n            for (let i = 0, ii = data.length; i < ii; i += 3) {\n              const b1 = data[i] & 0xff;\n              const b2 = data[i + 1] & 0xff;\n              const b3 = data[i + 2] & 0xff;\n              const d1 = b1 >> 2,\n                    d2 = (b1 & 3) << 4 | b2 >> 4;\n              const d3 = i + 1 < ii ? (b2 & 0xf) << 2 | b3 >> 6 : 64;\n              const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n              buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n            }\n\n            return buffer;\n          };\n\n          const convertImgDataToPng = function () {\n            const PNG_HEADER = new Uint8Array([0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a]);\n            const CHUNK_WRAPPER_SIZE = 12;\n            const crcTable = new Int32Array(256);\n\n            for (let i = 0; i < 256; i++) {\n              let c = i;\n\n              for (let h = 0; h < 8; h++) {\n                if (c & 1) {\n                  c = 0xedb88320 ^ c >> 1 & 0x7fffffff;\n                } else {\n                  c = c >> 1 & 0x7fffffff;\n                }\n              }\n\n              crcTable[i] = c;\n            }\n\n            function crc32(data, start, end) {\n              let crc = -1;\n\n              for (let i = start; i < end; i++) {\n                const a = (crc ^ data[i]) & 0xff;\n                const b = crcTable[a];\n                crc = crc >>> 8 ^ b;\n              }\n\n              return crc ^ -1;\n            }\n\n            function writePngChunk(type, body, data, offset) {\n              let p = offset;\n              const len = body.length;\n              data[p] = len >> 24 & 0xff;\n              data[p + 1] = len >> 16 & 0xff;\n              data[p + 2] = len >> 8 & 0xff;\n              data[p + 3] = len & 0xff;\n              p += 4;\n              data[p] = type.charCodeAt(0) & 0xff;\n              data[p + 1] = type.charCodeAt(1) & 0xff;\n              data[p + 2] = type.charCodeAt(2) & 0xff;\n              data[p + 3] = type.charCodeAt(3) & 0xff;\n              p += 4;\n              data.set(body, p);\n              p += body.length;\n              const crc = crc32(data, offset + 4, p);\n              data[p] = crc >> 24 & 0xff;\n              data[p + 1] = crc >> 16 & 0xff;\n              data[p + 2] = crc >> 8 & 0xff;\n              data[p + 3] = crc & 0xff;\n            }\n\n            function adler32(data, start, end) {\n              let a = 1;\n              let b = 0;\n\n              for (let i = start; i < end; ++i) {\n                a = (a + (data[i] & 0xff)) % 65521;\n                b = (b + a) % 65521;\n              }\n\n              return b << 16 | a;\n            }\n\n            function deflateSync(literals) {\n              if (!_is_node.isNodeJS) {\n                return deflateSyncUncompressed(literals);\n              }\n\n              try {\n                let input;\n\n                if (parseInt(process.versions.node) >= 8) {\n                  input = literals;\n                } else {\n                  input = Buffer.from(literals);\n                }\n\n                const output = require(\"zlib\").deflateSync(input, {\n                  level: 9\n                });\n\n                return output instanceof Uint8Array ? output : new Uint8Array(output);\n              } catch (e) {\n                (0, _util.warn)(\"Not compressing PNG because zlib.deflateSync is unavailable: \" + e);\n              }\n\n              return deflateSyncUncompressed(literals);\n            }\n\n            function deflateSyncUncompressed(literals) {\n              let len = literals.length;\n              const maxBlockLength = 0xffff;\n              const deflateBlocks = Math.ceil(len / maxBlockLength);\n              const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n              let pi = 0;\n              idat[pi++] = 0x78;\n              idat[pi++] = 0x9c;\n              let pos = 0;\n\n              while (len > maxBlockLength) {\n                idat[pi++] = 0x00;\n                idat[pi++] = 0xff;\n                idat[pi++] = 0xff;\n                idat[pi++] = 0x00;\n                idat[pi++] = 0x00;\n                idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n                pi += maxBlockLength;\n                pos += maxBlockLength;\n                len -= maxBlockLength;\n              }\n\n              idat[pi++] = 0x01;\n              idat[pi++] = len & 0xff;\n              idat[pi++] = len >> 8 & 0xff;\n              idat[pi++] = ~len & 0xffff & 0xff;\n              idat[pi++] = (~len & 0xffff) >> 8 & 0xff;\n              idat.set(literals.subarray(pos), pi);\n              pi += literals.length - pos;\n              const adler = adler32(literals, 0, literals.length);\n              idat[pi++] = adler >> 24 & 0xff;\n              idat[pi++] = adler >> 16 & 0xff;\n              idat[pi++] = adler >> 8 & 0xff;\n              idat[pi++] = adler & 0xff;\n              return idat;\n            }\n\n            function encode(imgData, kind, forceDataSchema, isMask) {\n              const width = imgData.width;\n              const height = imgData.height;\n              let bitDepth, colorType, lineSize;\n              const bytes = imgData.data;\n\n              switch (kind) {\n                case _util.ImageKind.GRAYSCALE_1BPP:\n                  colorType = 0;\n                  bitDepth = 1;\n                  lineSize = width + 7 >> 3;\n                  break;\n\n                case _util.ImageKind.RGB_24BPP:\n                  colorType = 2;\n                  bitDepth = 8;\n                  lineSize = width * 3;\n                  break;\n\n                case _util.ImageKind.RGBA_32BPP:\n                  colorType = 6;\n                  bitDepth = 8;\n                  lineSize = width * 4;\n                  break;\n\n                default:\n                  throw new Error(\"invalid format\");\n              }\n\n              const literals = new Uint8Array((1 + lineSize) * height);\n              let offsetLiterals = 0,\n                  offsetBytes = 0;\n\n              for (let y = 0; y < height; ++y) {\n                literals[offsetLiterals++] = 0;\n                literals.set(bytes.subarray(offsetBytes, offsetBytes + lineSize), offsetLiterals);\n                offsetBytes += lineSize;\n                offsetLiterals += lineSize;\n              }\n\n              if (kind === _util.ImageKind.GRAYSCALE_1BPP && isMask) {\n                offsetLiterals = 0;\n\n                for (let y = 0; y < height; y++) {\n                  offsetLiterals++;\n\n                  for (let i = 0; i < lineSize; i++) {\n                    literals[offsetLiterals++] ^= 0xff;\n                  }\n                }\n              }\n\n              const ihdr = new Uint8Array([width >> 24 & 0xff, width >> 16 & 0xff, width >> 8 & 0xff, width & 0xff, height >> 24 & 0xff, height >> 16 & 0xff, height >> 8 & 0xff, height & 0xff, bitDepth, colorType, 0x00, 0x00, 0x00]);\n              const idat = deflateSync(literals);\n              const pngLength = PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n              const data = new Uint8Array(pngLength);\n              let offset = 0;\n              data.set(PNG_HEADER, offset);\n              offset += PNG_HEADER.length;\n              writePngChunk(\"IHDR\", ihdr, data, offset);\n              offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n              writePngChunk(\"IDATA\", idat, data, offset);\n              offset += CHUNK_WRAPPER_SIZE + idat.length;\n              writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n              return createObjectURL(data, \"image/png\", forceDataSchema);\n            }\n\n            return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n              const kind = imgData.kind === undefined ? _util.ImageKind.GRAYSCALE_1BPP : imgData.kind;\n              return encode(imgData, kind, forceDataSchema, isMask);\n            };\n          }();\n\n          class SVGExtraState {\n            constructor() {\n              this.fontSizeScale = 1;\n              this.fontWeight = SVG_DEFAULTS.fontWeight;\n              this.fontSize = 0;\n              this.textMatrix = _util.IDENTITY_MATRIX;\n              this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n              this.leading = 0;\n              this.textRenderingMode = _util.TextRenderingMode.FILL;\n              this.textMatrixScale = 1;\n              this.x = 0;\n              this.y = 0;\n              this.lineX = 0;\n              this.lineY = 0;\n              this.charSpacing = 0;\n              this.wordSpacing = 0;\n              this.textHScale = 1;\n              this.textRise = 0;\n              this.fillColor = SVG_DEFAULTS.fillColor;\n              this.strokeColor = \"#000000\";\n              this.fillAlpha = 1;\n              this.strokeAlpha = 1;\n              this.lineWidth = 1;\n              this.lineJoin = \"\";\n              this.lineCap = \"\";\n              this.miterLimit = 0;\n              this.dashArray = [];\n              this.dashPhase = 0;\n              this.dependencies = [];\n              this.activeClipUrl = null;\n              this.clipGroup = null;\n              this.maskId = \"\";\n            }\n\n            clone() {\n              return Object.create(this);\n            }\n\n            setCurrentPoint(x, y) {\n              this.x = x;\n              this.y = y;\n            }\n\n          }\n\n          function opListToTree(opList) {\n            let opTree = [];\n            const tmp = [];\n\n            for (const opListElement of opList) {\n              if (opListElement.fn === \"save\") {\n                opTree.push({\n                  fnId: 92,\n                  fn: \"group\",\n                  items: []\n                });\n                tmp.push(opTree);\n                opTree = opTree[opTree.length - 1].items;\n                continue;\n              }\n\n              if (opListElement.fn === \"restore\") {\n                opTree = tmp.pop();\n              } else {\n                opTree.push(opListElement);\n              }\n            }\n\n            return opTree;\n          }\n\n          function pf(value) {\n            if (Number.isInteger(value)) {\n              return value.toString();\n            }\n\n            const s = value.toFixed(10);\n            let i = s.length - 1;\n\n            if (s[i] !== \"0\") {\n              return s;\n            }\n\n            do {\n              i--;\n            } while (s[i] === \"0\");\n\n            return s.substring(0, s[i] === \".\" ? i : i + 1);\n          }\n\n          function pm(m) {\n            if (m[4] === 0 && m[5] === 0) {\n              if (m[1] === 0 && m[2] === 0) {\n                if (m[0] === 1 && m[3] === 1) {\n                  return \"\";\n                }\n\n                return `scale(${pf(m[0])} ${pf(m[3])})`;\n              }\n\n              if (m[0] === m[3] && m[1] === -m[2]) {\n                const a = Math.acos(m[0]) * 180 / Math.PI;\n                return `rotate(${pf(a)})`;\n              }\n            } else {\n              if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n                return `translate(${pf(m[4])} ${pf(m[5])})`;\n              }\n            }\n\n            return `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` + `${pf(m[5])})`;\n          }\n\n          let clipCount = 0;\n          let maskCount = 0;\n          let shadingCount = 0;\n          exports.SVGGraphics = SVGGraphics = class {\n            constructor(commonObjs, objs) {\n              let forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n              this.svgFactory = new _display_utils.DOMSVGFactory();\n              this.current = new SVGExtraState();\n              this.transformMatrix = _util.IDENTITY_MATRIX;\n              this.transformStack = [];\n              this.extraStack = [];\n              this.commonObjs = commonObjs;\n              this.objs = objs;\n              this.pendingClip = null;\n              this.pendingEOFill = false;\n              this.embedFonts = false;\n              this.embeddedFonts = Object.create(null);\n              this.cssStyle = null;\n              this.forceDataSchema = !!forceDataSchema;\n              this._operatorIdMapping = [];\n\n              for (const op in _util.OPS) {\n                this._operatorIdMapping[_util.OPS[op]] = op;\n              }\n            }\n\n            save() {\n              this.transformStack.push(this.transformMatrix);\n              const old = this.current;\n              this.extraStack.push(old);\n              this.current = old.clone();\n            }\n\n            restore() {\n              this.transformMatrix = this.transformStack.pop();\n              this.current = this.extraStack.pop();\n              this.pendingClip = null;\n              this.tgrp = null;\n            }\n\n            group(items) {\n              this.save();\n              this.executeOpTree(items);\n              this.restore();\n            }\n\n            loadDependencies(operatorList) {\n              const fnArray = operatorList.fnArray;\n              const argsArray = operatorList.argsArray;\n\n              for (let i = 0, ii = fnArray.length; i < ii; i++) {\n                if (fnArray[i] !== _util.OPS.dependency) {\n                  continue;\n                }\n\n                for (const obj of argsArray[i]) {\n                  const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n                  const promise = new Promise(resolve => {\n                    objsPool.get(obj, resolve);\n                  });\n                  this.current.dependencies.push(promise);\n                }\n              }\n\n              return Promise.all(this.current.dependencies);\n            }\n\n            transform(a, b, c, d, e, f) {\n              const transformMatrix = [a, b, c, d, e, f];\n              this.transformMatrix = _util.Util.transform(this.transformMatrix, transformMatrix);\n              this.tgrp = null;\n            }\n\n            getSVG(operatorList, viewport) {\n              this.viewport = viewport;\n\n              const svgElement = this._initialize(viewport);\n\n              return this.loadDependencies(operatorList).then(() => {\n                this.transformMatrix = _util.IDENTITY_MATRIX;\n                this.executeOpTree(this.convertOpList(operatorList));\n                return svgElement;\n              });\n            }\n\n            convertOpList(operatorList) {\n              const operatorIdMapping = this._operatorIdMapping;\n              const argsArray = operatorList.argsArray;\n              const fnArray = operatorList.fnArray;\n              const opList = [];\n\n              for (let i = 0, ii = fnArray.length; i < ii; i++) {\n                const fnId = fnArray[i];\n                opList.push({\n                  fnId,\n                  fn: operatorIdMapping[fnId],\n                  args: argsArray[i]\n                });\n              }\n\n              return opListToTree(opList);\n            }\n\n            executeOpTree(opTree) {\n              for (const opTreeElement of opTree) {\n                const fn = opTreeElement.fn;\n                const fnId = opTreeElement.fnId;\n                const args = opTreeElement.args;\n\n                switch (fnId | 0) {\n                  case _util.OPS.beginText:\n                    this.beginText();\n                    break;\n\n                  case _util.OPS.dependency:\n                    break;\n\n                  case _util.OPS.setLeading:\n                    this.setLeading(args);\n                    break;\n\n                  case _util.OPS.setLeadingMoveText:\n                    this.setLeadingMoveText(args[0], args[1]);\n                    break;\n\n                  case _util.OPS.setFont:\n                    this.setFont(args);\n                    break;\n\n                  case _util.OPS.showText:\n                    this.showText(args[0]);\n                    break;\n\n                  case _util.OPS.showSpacedText:\n                    this.showText(args[0]);\n                    break;\n\n                  case _util.OPS.endText:\n                    this.endText();\n                    break;\n\n                  case _util.OPS.moveText:\n                    this.moveText(args[0], args[1]);\n                    break;\n\n                  case _util.OPS.setCharSpacing:\n                    this.setCharSpacing(args[0]);\n                    break;\n\n                  case _util.OPS.setWordSpacing:\n                    this.setWordSpacing(args[0]);\n                    break;\n\n                  case _util.OPS.setHScale:\n                    this.setHScale(args[0]);\n                    break;\n\n                  case _util.OPS.setTextMatrix:\n                    this.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n                    break;\n\n                  case _util.OPS.setTextRise:\n                    this.setTextRise(args[0]);\n                    break;\n\n                  case _util.OPS.setTextRenderingMode:\n                    this.setTextRenderingMode(args[0]);\n                    break;\n\n                  case _util.OPS.setLineWidth:\n                    this.setLineWidth(args[0]);\n                    break;\n\n                  case _util.OPS.setLineJoin:\n                    this.setLineJoin(args[0]);\n                    break;\n\n                  case _util.OPS.setLineCap:\n                    this.setLineCap(args[0]);\n                    break;\n\n                  case _util.OPS.setMiterLimit:\n                    this.setMiterLimit(args[0]);\n                    break;\n\n                  case _util.OPS.setFillRGBColor:\n                    this.setFillRGBColor(args[0], args[1], args[2]);\n                    break;\n\n                  case _util.OPS.setStrokeRGBColor:\n                    this.setStrokeRGBColor(args[0], args[1], args[2]);\n                    break;\n\n                  case _util.OPS.setStrokeColorN:\n                    this.setStrokeColorN(args);\n                    break;\n\n                  case _util.OPS.setFillColorN:\n                    this.setFillColorN(args);\n                    break;\n\n                  case _util.OPS.shadingFill:\n                    this.shadingFill(args[0]);\n                    break;\n\n                  case _util.OPS.setDash:\n                    this.setDash(args[0], args[1]);\n                    break;\n\n                  case _util.OPS.setRenderingIntent:\n                    this.setRenderingIntent(args[0]);\n                    break;\n\n                  case _util.OPS.setFlatness:\n                    this.setFlatness(args[0]);\n                    break;\n\n                  case _util.OPS.setGState:\n                    this.setGState(args[0]);\n                    break;\n\n                  case _util.OPS.fill:\n                    this.fill();\n                    break;\n\n                  case _util.OPS.eoFill:\n                    this.eoFill();\n                    break;\n\n                  case _util.OPS.stroke:\n                    this.stroke();\n                    break;\n\n                  case _util.OPS.fillStroke:\n                    this.fillStroke();\n                    break;\n\n                  case _util.OPS.eoFillStroke:\n                    this.eoFillStroke();\n                    break;\n\n                  case _util.OPS.clip:\n                    this.clip(\"nonzero\");\n                    break;\n\n                  case _util.OPS.eoClip:\n                    this.clip(\"evenodd\");\n                    break;\n\n                  case _util.OPS.paintSolidColorImageMask:\n                    this.paintSolidColorImageMask();\n                    break;\n\n                  case _util.OPS.paintImageXObject:\n                    this.paintImageXObject(args[0]);\n                    break;\n\n                  case _util.OPS.paintInlineImageXObject:\n                    this.paintInlineImageXObject(args[0]);\n                    break;\n\n                  case _util.OPS.paintImageMaskXObject:\n                    this.paintImageMaskXObject(args[0]);\n                    break;\n\n                  case _util.OPS.paintFormXObjectBegin:\n                    this.paintFormXObjectBegin(args[0], args[1]);\n                    break;\n\n                  case _util.OPS.paintFormXObjectEnd:\n                    this.paintFormXObjectEnd();\n                    break;\n\n                  case _util.OPS.closePath:\n                    this.closePath();\n                    break;\n\n                  case _util.OPS.closeStroke:\n                    this.closeStroke();\n                    break;\n\n                  case _util.OPS.closeFillStroke:\n                    this.closeFillStroke();\n                    break;\n\n                  case _util.OPS.closeEOFillStroke:\n                    this.closeEOFillStroke();\n                    break;\n\n                  case _util.OPS.nextLine:\n                    this.nextLine();\n                    break;\n\n                  case _util.OPS.transform:\n                    this.transform(args[0], args[1], args[2], args[3], args[4], args[5]);\n                    break;\n\n                  case _util.OPS.constructPath:\n                    this.constructPath(args[0], args[1]);\n                    break;\n\n                  case _util.OPS.endPath:\n                    this.endPath();\n                    break;\n\n                  case 92:\n                    this.group(opTreeElement.items);\n                    break;\n\n                  default:\n                    (0, _util.warn)(`Unimplemented operator ${fn}`);\n                    break;\n                }\n              }\n            }\n\n            setWordSpacing(wordSpacing) {\n              this.current.wordSpacing = wordSpacing;\n            }\n\n            setCharSpacing(charSpacing) {\n              this.current.charSpacing = charSpacing;\n            }\n\n            nextLine() {\n              this.moveText(0, this.current.leading);\n            }\n\n            setTextMatrix(a, b, c, d, e, f) {\n              const current = this.current;\n              current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n              current.textMatrixScale = Math.hypot(a, b);\n              current.x = current.lineX = 0;\n              current.y = current.lineY = 0;\n              current.xcoords = [];\n              current.ycoords = [];\n              current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n              current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n              current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n              current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n              current.txtElement = this.svgFactory.createElement(\"svg:text\");\n              current.txtElement.appendChild(current.tspan);\n            }\n\n            beginText() {\n              const current = this.current;\n              current.x = current.lineX = 0;\n              current.y = current.lineY = 0;\n              current.textMatrix = _util.IDENTITY_MATRIX;\n              current.lineMatrix = _util.IDENTITY_MATRIX;\n              current.textMatrixScale = 1;\n              current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n              current.txtElement = this.svgFactory.createElement(\"svg:text\");\n              current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n              current.xcoords = [];\n              current.ycoords = [];\n            }\n\n            moveText(x, y) {\n              const current = this.current;\n              current.x = current.lineX += x;\n              current.y = current.lineY += y;\n              current.xcoords = [];\n              current.ycoords = [];\n              current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n              current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n              current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n              current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n            }\n\n            showText(glyphs) {\n              const current = this.current;\n              const font = current.font;\n              const fontSize = current.fontSize;\n\n              if (fontSize === 0) {\n                return;\n              }\n\n              const fontSizeScale = current.fontSizeScale;\n              const charSpacing = current.charSpacing;\n              const wordSpacing = current.wordSpacing;\n              const fontDirection = current.fontDirection;\n              const textHScale = current.textHScale * fontDirection;\n              const vertical = font.vertical;\n              const spacingDir = vertical ? 1 : -1;\n              const defaultVMetrics = font.defaultVMetrics;\n              const widthAdvanceScale = fontSize * current.fontMatrix[0];\n              let x = 0;\n\n              for (const glyph of glyphs) {\n                if (glyph === null) {\n                  x += fontDirection * wordSpacing;\n                  continue;\n                } else if (typeof glyph === \"number\") {\n                  x += spacingDir * glyph * fontSize / 1000;\n                  continue;\n                }\n\n                const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n                const character = glyph.fontChar;\n                let scaledX, scaledY;\n                let width = glyph.width;\n\n                if (vertical) {\n                  let vx;\n                  const vmetric = glyph.vmetric || defaultVMetrics;\n                  vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n                  vx = -vx * widthAdvanceScale;\n                  const vy = vmetric[2] * widthAdvanceScale;\n                  width = vmetric ? -vmetric[0] : width;\n                  scaledX = vx / fontSizeScale;\n                  scaledY = (x + vy) / fontSizeScale;\n                } else {\n                  scaledX = x / fontSizeScale;\n                  scaledY = 0;\n                }\n\n                if (glyph.isInFont || font.missingFile) {\n                  current.xcoords.push(current.x + scaledX);\n\n                  if (vertical) {\n                    current.ycoords.push(-current.y + scaledY);\n                  }\n\n                  current.tspan.textContent += character;\n                } else {}\n\n                let charWidth;\n\n                if (vertical) {\n                  charWidth = width * widthAdvanceScale - spacing * fontDirection;\n                } else {\n                  charWidth = width * widthAdvanceScale + spacing * fontDirection;\n                }\n\n                x += charWidth;\n              }\n\n              current.tspan.setAttributeNS(null, \"x\", current.xcoords.map(pf).join(\" \"));\n\n              if (vertical) {\n                current.tspan.setAttributeNS(null, \"y\", current.ycoords.map(pf).join(\" \"));\n              } else {\n                current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n              }\n\n              if (vertical) {\n                current.y -= x;\n              } else {\n                current.x += x * textHScale;\n              }\n\n              current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n              current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n\n              if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n                current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n              }\n\n              if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n                current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n              }\n\n              const fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n\n              if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n                  current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n                }\n\n                if (current.fillAlpha < 1) {\n                  current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n                }\n              } else if (current.textRenderingMode === _util.TextRenderingMode.ADD_TO_PATH) {\n                current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n              } else {\n                current.tspan.setAttributeNS(null, \"fill\", \"none\");\n              }\n\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                const lineWidthScale = 1 / (current.textMatrixScale || 1);\n\n                this._setStrokeAttributes(current.tspan, lineWidthScale);\n              }\n\n              let textMatrix = current.textMatrix;\n\n              if (current.textRise !== 0) {\n                textMatrix = textMatrix.slice();\n                textMatrix[5] += current.textRise;\n              }\n\n              current.txtElement.setAttributeNS(null, \"transform\", `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`);\n              current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n              current.txtElement.appendChild(current.tspan);\n              current.txtgrp.appendChild(current.txtElement);\n\n              this._ensureTransformGroup().appendChild(current.txtElement);\n            }\n\n            setLeadingMoveText(x, y) {\n              this.setLeading(-y);\n              this.moveText(x, y);\n            }\n\n            addFontStyle(fontObj) {\n              if (!fontObj.data) {\n                throw new Error(\"addFontStyle: No font data available, \" + 'ensure that the \"fontExtraProperties\" API parameter is set.');\n              }\n\n              if (!this.cssStyle) {\n                this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n                this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n                this.defs.appendChild(this.cssStyle);\n              }\n\n              const url = createObjectURL(fontObj.data, fontObj.mimetype, this.forceDataSchema);\n              this.cssStyle.textContent += `@font-face { font-family: \"${fontObj.loadedName}\";` + ` src: url(${url}); }\\n`;\n            }\n\n            setFont(details) {\n              const current = this.current;\n              const fontObj = this.commonObjs.get(details[0]);\n              let size = details[1];\n              current.font = fontObj;\n\n              if (this.embedFonts && !fontObj.missingFile && !this.embeddedFonts[fontObj.loadedName]) {\n                this.addFontStyle(fontObj);\n                this.embeddedFonts[fontObj.loadedName] = fontObj;\n              }\n\n              current.fontMatrix = fontObj.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n              let bold = \"normal\";\n\n              if (fontObj.black) {\n                bold = \"900\";\n              } else if (fontObj.bold) {\n                bold = \"bold\";\n              }\n\n              const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n              if (size < 0) {\n                size = -size;\n                current.fontDirection = -1;\n              } else {\n                current.fontDirection = 1;\n              }\n\n              current.fontSize = size;\n              current.fontFamily = fontObj.loadedName;\n              current.fontWeight = bold;\n              current.fontStyle = italic;\n              current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n              current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n              current.xcoords = [];\n              current.ycoords = [];\n            }\n\n            endText() {\n              const current = this.current;\n\n              if (current.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG && current.txtElement?.hasChildNodes()) {\n                current.element = current.txtElement;\n                this.clip(\"nonzero\");\n                this.endPath();\n              }\n            }\n\n            setLineWidth(width) {\n              if (width > 0) {\n                this.current.lineWidth = width;\n              }\n            }\n\n            setLineCap(style) {\n              this.current.lineCap = LINE_CAP_STYLES[style];\n            }\n\n            setLineJoin(style) {\n              this.current.lineJoin = LINE_JOIN_STYLES[style];\n            }\n\n            setMiterLimit(limit) {\n              this.current.miterLimit = limit;\n            }\n\n            setStrokeAlpha(strokeAlpha) {\n              this.current.strokeAlpha = strokeAlpha;\n            }\n\n            setStrokeRGBColor(r, g, b) {\n              this.current.strokeColor = _util.Util.makeHexColor(r, g, b);\n            }\n\n            setFillAlpha(fillAlpha) {\n              this.current.fillAlpha = fillAlpha;\n            }\n\n            setFillRGBColor(r, g, b) {\n              this.current.fillColor = _util.Util.makeHexColor(r, g, b);\n              this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n              this.current.xcoords = [];\n              this.current.ycoords = [];\n            }\n\n            setStrokeColorN(args) {\n              this.current.strokeColor = this._makeColorN_Pattern(args);\n            }\n\n            setFillColorN(args) {\n              this.current.fillColor = this._makeColorN_Pattern(args);\n            }\n\n            shadingFill(args) {\n              const width = this.viewport.width;\n              const height = this.viewport.height;\n\n              const inv = _util.Util.inverseTransform(this.transformMatrix);\n\n              const bl = _util.Util.applyTransform([0, 0], inv);\n\n              const br = _util.Util.applyTransform([0, height], inv);\n\n              const ul = _util.Util.applyTransform([width, 0], inv);\n\n              const ur = _util.Util.applyTransform([width, height], inv);\n\n              const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n              const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n              const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n              const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n              const rect = this.svgFactory.createElement(\"svg:rect\");\n              rect.setAttributeNS(null, \"x\", x0);\n              rect.setAttributeNS(null, \"y\", y0);\n              rect.setAttributeNS(null, \"width\", x1 - x0);\n              rect.setAttributeNS(null, \"height\", y1 - y0);\n              rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n\n              if (this.current.fillAlpha < 1) {\n                rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n              }\n\n              this._ensureTransformGroup().appendChild(rect);\n            }\n\n            _makeColorN_Pattern(args) {\n              if (args[0] === \"TilingPattern\") {\n                return this._makeTilingPattern(args);\n              }\n\n              return this._makeShadingPattern(args);\n            }\n\n            _makeTilingPattern(args) {\n              const color = args[1];\n              const operatorList = args[2];\n              const matrix = args[3] || _util.IDENTITY_MATRIX;\n              const [x0, y0, x1, y1] = args[4];\n              const xstep = args[5];\n              const ystep = args[6];\n              const paintType = args[7];\n              const tilingId = `shading${shadingCount++}`;\n\n              const [tx0, ty0, tx1, ty1] = _util.Util.normalizeRect([..._util.Util.applyTransform([x0, y0], matrix), ..._util.Util.applyTransform([x1, y1], matrix)]);\n\n              const [xscale, yscale] = _util.Util.singularValueDecompose2dScale(matrix);\n\n              const txstep = xstep * xscale;\n              const tystep = ystep * yscale;\n              const tiling = this.svgFactory.createElement(\"svg:pattern\");\n              tiling.setAttributeNS(null, \"id\", tilingId);\n              tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n              tiling.setAttributeNS(null, \"width\", txstep);\n              tiling.setAttributeNS(null, \"height\", tystep);\n              tiling.setAttributeNS(null, \"x\", `${tx0}`);\n              tiling.setAttributeNS(null, \"y\", `${ty0}`);\n              const svg = this.svg;\n              const transformMatrix = this.transformMatrix;\n              const fillColor = this.current.fillColor;\n              const strokeColor = this.current.strokeColor;\n              const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n              this.svg = bbox;\n              this.transformMatrix = matrix;\n\n              if (paintType === 2) {\n                const cssColor = _util.Util.makeHexColor(...color);\n\n                this.current.fillColor = cssColor;\n                this.current.strokeColor = cssColor;\n              }\n\n              this.executeOpTree(this.convertOpList(operatorList));\n              this.svg = svg;\n              this.transformMatrix = transformMatrix;\n              this.current.fillColor = fillColor;\n              this.current.strokeColor = strokeColor;\n              tiling.appendChild(bbox.childNodes[0]);\n              this.defs.appendChild(tiling);\n              return `url(#${tilingId})`;\n            }\n\n            _makeShadingPattern(args) {\n              if (typeof args === \"string\") {\n                args = this.objs.get(args);\n              }\n\n              switch (args[0]) {\n                case \"RadialAxial\":\n                  const shadingId = `shading${shadingCount++}`;\n                  const colorStops = args[3];\n                  let gradient;\n\n                  switch (args[1]) {\n                    case \"axial\":\n                      const point0 = args[4];\n                      const point1 = args[5];\n                      gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n                      gradient.setAttributeNS(null, \"id\", shadingId);\n                      gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                      gradient.setAttributeNS(null, \"x1\", point0[0]);\n                      gradient.setAttributeNS(null, \"y1\", point0[1]);\n                      gradient.setAttributeNS(null, \"x2\", point1[0]);\n                      gradient.setAttributeNS(null, \"y2\", point1[1]);\n                      break;\n\n                    case \"radial\":\n                      const focalPoint = args[4];\n                      const circlePoint = args[5];\n                      const focalRadius = args[6];\n                      const circleRadius = args[7];\n                      gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n                      gradient.setAttributeNS(null, \"id\", shadingId);\n                      gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                      gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n                      gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n                      gradient.setAttributeNS(null, \"r\", circleRadius);\n                      gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n                      gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n                      gradient.setAttributeNS(null, \"fr\", focalRadius);\n                      break;\n\n                    default:\n                      throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n                  }\n\n                  for (const colorStop of colorStops) {\n                    const stop = this.svgFactory.createElement(\"svg:stop\");\n                    stop.setAttributeNS(null, \"offset\", colorStop[0]);\n                    stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n                    gradient.appendChild(stop);\n                  }\n\n                  this.defs.appendChild(gradient);\n                  return `url(#${shadingId})`;\n\n                case \"Mesh\":\n                  (0, _util.warn)(\"Unimplemented pattern Mesh\");\n                  return null;\n\n                case \"Dummy\":\n                  return \"hotpink\";\n\n                default:\n                  throw new Error(`Unknown IR type: ${args[0]}`);\n              }\n            }\n\n            setDash(dashArray, dashPhase) {\n              this.current.dashArray = dashArray;\n              this.current.dashPhase = dashPhase;\n            }\n\n            constructPath(ops, args) {\n              const current = this.current;\n              let x = current.x,\n                  y = current.y;\n              let d = [];\n              let j = 0;\n\n              for (const op of ops) {\n                switch (op | 0) {\n                  case _util.OPS.rectangle:\n                    x = args[j++];\n                    y = args[j++];\n                    const width = args[j++];\n                    const height = args[j++];\n                    const xw = x + width;\n                    const yh = y + height;\n                    d.push(\"M\", pf(x), pf(y), \"L\", pf(xw), pf(y), \"L\", pf(xw), pf(yh), \"L\", pf(x), pf(yh), \"Z\");\n                    break;\n\n                  case _util.OPS.moveTo:\n                    x = args[j++];\n                    y = args[j++];\n                    d.push(\"M\", pf(x), pf(y));\n                    break;\n\n                  case _util.OPS.lineTo:\n                    x = args[j++];\n                    y = args[j++];\n                    d.push(\"L\", pf(x), pf(y));\n                    break;\n\n                  case _util.OPS.curveTo:\n                    x = args[j + 4];\n                    y = args[j + 5];\n                    d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]), pf(x), pf(y));\n                    j += 6;\n                    break;\n\n                  case _util.OPS.curveTo2:\n                    d.push(\"C\", pf(x), pf(y), pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]));\n                    x = args[j + 2];\n                    y = args[j + 3];\n                    j += 4;\n                    break;\n\n                  case _util.OPS.curveTo3:\n                    x = args[j + 2];\n                    y = args[j + 3];\n                    d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(x), pf(y), pf(x), pf(y));\n                    j += 4;\n                    break;\n\n                  case _util.OPS.closePath:\n                    d.push(\"Z\");\n                    break;\n                }\n              }\n\n              d = d.join(\" \");\n\n              if (current.path && ops.length > 0 && ops[0] !== _util.OPS.rectangle && ops[0] !== _util.OPS.moveTo) {\n                d = current.path.getAttributeNS(null, \"d\") + d;\n              } else {\n                current.path = this.svgFactory.createElement(\"svg:path\");\n\n                this._ensureTransformGroup().appendChild(current.path);\n              }\n\n              current.path.setAttributeNS(null, \"d\", d);\n              current.path.setAttributeNS(null, \"fill\", \"none\");\n              current.element = current.path;\n              current.setCurrentPoint(x, y);\n            }\n\n            endPath() {\n              const current = this.current;\n              current.path = null;\n\n              if (!this.pendingClip) {\n                return;\n              }\n\n              if (!current.element) {\n                this.pendingClip = null;\n                return;\n              }\n\n              const clipId = `clippath${clipCount++}`;\n              const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n              clipPath.setAttributeNS(null, \"id\", clipId);\n              clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n              const clipElement = current.element.cloneNode(true);\n\n              if (this.pendingClip === \"evenodd\") {\n                clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n              } else {\n                clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n              }\n\n              this.pendingClip = null;\n              clipPath.appendChild(clipElement);\n              this.defs.appendChild(clipPath);\n\n              if (current.activeClipUrl) {\n                current.clipGroup = null;\n\n                for (const prev of this.extraStack) {\n                  prev.clipGroup = null;\n                }\n\n                clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n              }\n\n              current.activeClipUrl = `url(#${clipId})`;\n              this.tgrp = null;\n            }\n\n            clip(type) {\n              this.pendingClip = type;\n            }\n\n            closePath() {\n              const current = this.current;\n\n              if (current.path) {\n                const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n                current.path.setAttributeNS(null, \"d\", d);\n              }\n            }\n\n            setLeading(leading) {\n              this.current.leading = -leading;\n            }\n\n            setTextRise(textRise) {\n              this.current.textRise = textRise;\n            }\n\n            setTextRenderingMode(textRenderingMode) {\n              this.current.textRenderingMode = textRenderingMode;\n            }\n\n            setHScale(scale) {\n              this.current.textHScale = scale / 100;\n            }\n\n            setRenderingIntent(intent) {}\n\n            setFlatness(flatness) {}\n\n            setGState(states) {\n              for (const [key, value] of states) {\n                switch (key) {\n                  case \"LW\":\n                    this.setLineWidth(value);\n                    break;\n\n                  case \"LC\":\n                    this.setLineCap(value);\n                    break;\n\n                  case \"LJ\":\n                    this.setLineJoin(value);\n                    break;\n\n                  case \"ML\":\n                    this.setMiterLimit(value);\n                    break;\n\n                  case \"D\":\n                    this.setDash(value[0], value[1]);\n                    break;\n\n                  case \"RI\":\n                    this.setRenderingIntent(value);\n                    break;\n\n                  case \"FL\":\n                    this.setFlatness(value);\n                    break;\n\n                  case \"Font\":\n                    this.setFont(value);\n                    break;\n\n                  case \"CA\":\n                    this.setStrokeAlpha(value);\n                    break;\n\n                  case \"ca\":\n                    this.setFillAlpha(value);\n                    break;\n\n                  default:\n                    (0, _util.warn)(`Unimplemented graphic state operator ${key}`);\n                    break;\n                }\n              }\n            }\n\n            fill() {\n              const current = this.current;\n\n              if (current.element) {\n                current.element.setAttributeNS(null, \"fill\", current.fillColor);\n                current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n                this.endPath();\n              }\n            }\n\n            stroke() {\n              const current = this.current;\n\n              if (current.element) {\n                this._setStrokeAttributes(current.element);\n\n                current.element.setAttributeNS(null, \"fill\", \"none\");\n                this.endPath();\n              }\n            }\n\n            _setStrokeAttributes(element) {\n              let lineWidthScale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n              const current = this.current;\n              let dashArray = current.dashArray;\n\n              if (lineWidthScale !== 1 && dashArray.length > 0) {\n                dashArray = dashArray.map(function (value) {\n                  return lineWidthScale * value;\n                });\n              }\n\n              element.setAttributeNS(null, \"stroke\", current.strokeColor);\n              element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n              element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n              element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n              element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n              element.setAttributeNS(null, \"stroke-width\", pf(lineWidthScale * current.lineWidth) + \"px\");\n              element.setAttributeNS(null, \"stroke-dasharray\", dashArray.map(pf).join(\" \"));\n              element.setAttributeNS(null, \"stroke-dashoffset\", pf(lineWidthScale * current.dashPhase) + \"px\");\n            }\n\n            eoFill() {\n              if (this.current.element) {\n                this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n              }\n\n              this.fill();\n            }\n\n            fillStroke() {\n              this.stroke();\n              this.fill();\n            }\n\n            eoFillStroke() {\n              if (this.current.element) {\n                this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n              }\n\n              this.fillStroke();\n            }\n\n            closeStroke() {\n              this.closePath();\n              this.stroke();\n            }\n\n            closeFillStroke() {\n              this.closePath();\n              this.fillStroke();\n            }\n\n            closeEOFillStroke() {\n              this.closePath();\n              this.eoFillStroke();\n            }\n\n            paintSolidColorImageMask() {\n              const rect = this.svgFactory.createElement(\"svg:rect\");\n              rect.setAttributeNS(null, \"x\", \"0\");\n              rect.setAttributeNS(null, \"y\", \"0\");\n              rect.setAttributeNS(null, \"width\", \"1px\");\n              rect.setAttributeNS(null, \"height\", \"1px\");\n              rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n              this._ensureTransformGroup().appendChild(rect);\n            }\n\n            paintImageXObject(objId) {\n              const imgData = objId.startsWith(\"g_\") ? this.commonObjs.get(objId) : this.objs.get(objId);\n\n              if (!imgData) {\n                (0, _util.warn)(`Dependent image with object ID ${objId} is not ready yet`);\n                return;\n              }\n\n              this.paintInlineImageXObject(imgData);\n            }\n\n            paintInlineImageXObject(imgData, mask) {\n              const width = imgData.width;\n              const height = imgData.height;\n              const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n              const cliprect = this.svgFactory.createElement(\"svg:rect\");\n              cliprect.setAttributeNS(null, \"x\", \"0\");\n              cliprect.setAttributeNS(null, \"y\", \"0\");\n              cliprect.setAttributeNS(null, \"width\", pf(width));\n              cliprect.setAttributeNS(null, \"height\", pf(height));\n              this.current.element = cliprect;\n              this.clip(\"nonzero\");\n              const imgEl = this.svgFactory.createElement(\"svg:image\");\n              imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n              imgEl.setAttributeNS(null, \"x\", \"0\");\n              imgEl.setAttributeNS(null, \"y\", pf(-height));\n              imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n              imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n              imgEl.setAttributeNS(null, \"transform\", `scale(${pf(1 / width)} ${pf(-1 / height)})`);\n\n              if (mask) {\n                mask.appendChild(imgEl);\n              } else {\n                this._ensureTransformGroup().appendChild(imgEl);\n              }\n            }\n\n            paintImageMaskXObject(imgData) {\n              const current = this.current;\n              const width = imgData.width;\n              const height = imgData.height;\n              const fillColor = current.fillColor;\n              current.maskId = `mask${maskCount++}`;\n              const mask = this.svgFactory.createElement(\"svg:mask\");\n              mask.setAttributeNS(null, \"id\", current.maskId);\n              const rect = this.svgFactory.createElement(\"svg:rect\");\n              rect.setAttributeNS(null, \"x\", \"0\");\n              rect.setAttributeNS(null, \"y\", \"0\");\n              rect.setAttributeNS(null, \"width\", pf(width));\n              rect.setAttributeNS(null, \"height\", pf(height));\n              rect.setAttributeNS(null, \"fill\", fillColor);\n              rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n              this.defs.appendChild(mask);\n\n              this._ensureTransformGroup().appendChild(rect);\n\n              this.paintInlineImageXObject(imgData, mask);\n            }\n\n            paintFormXObjectBegin(matrix, bbox) {\n              if (Array.isArray(matrix) && matrix.length === 6) {\n                this.transform(matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]);\n              }\n\n              if (bbox) {\n                const width = bbox[2] - bbox[0];\n                const height = bbox[3] - bbox[1];\n                const cliprect = this.svgFactory.createElement(\"svg:rect\");\n                cliprect.setAttributeNS(null, \"x\", bbox[0]);\n                cliprect.setAttributeNS(null, \"y\", bbox[1]);\n                cliprect.setAttributeNS(null, \"width\", pf(width));\n                cliprect.setAttributeNS(null, \"height\", pf(height));\n                this.current.element = cliprect;\n                this.clip(\"nonzero\");\n                this.endPath();\n              }\n            }\n\n            paintFormXObjectEnd() {}\n\n            _initialize(viewport) {\n              const svg = this.svgFactory.create(viewport.width, viewport.height);\n              const definitions = this.svgFactory.createElement(\"svg:defs\");\n              svg.appendChild(definitions);\n              this.defs = definitions;\n              const rootGroup = this.svgFactory.createElement(\"svg:g\");\n              rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n              svg.appendChild(rootGroup);\n              this.svg = rootGroup;\n              return svg;\n            }\n\n            _ensureClipGroup() {\n              if (!this.current.clipGroup) {\n                const clipGroup = this.svgFactory.createElement(\"svg:g\");\n                clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n                this.svg.appendChild(clipGroup);\n                this.current.clipGroup = clipGroup;\n              }\n\n              return this.current.clipGroup;\n            }\n\n            _ensureTransformGroup() {\n              if (!this.tgrp) {\n                this.tgrp = this.svgFactory.createElement(\"svg:g\");\n                this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n                if (this.current.activeClipUrl) {\n                  this._ensureClipGroup().appendChild(this.tgrp);\n                } else {\n                  this.svg.appendChild(this.tgrp);\n                }\n              }\n\n              return this.tgrp;\n            }\n\n          };\n        }\n        /***/\n      },\n      /* 25 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.PDFNodeStream = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _network_utils = __w_pdfjs_require__(26);\n\n        ;\n\n        const fs = require(\"fs\");\n\n        const http = require(\"http\");\n\n        const https = require(\"https\");\n\n        const url = require(\"url\");\n\n        const fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\n        function parseUrl(sourceUrl) {\n          const parsedUrl = url.parse(sourceUrl);\n\n          if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n            return parsedUrl;\n          }\n\n          if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n            return url.parse(`file:///${sourceUrl}`);\n          }\n\n          if (!parsedUrl.host) {\n            parsedUrl.protocol = \"file:\";\n          }\n\n          return parsedUrl;\n        }\n\n        class PDFNodeStream {\n          constructor(source) {\n            this.source = source;\n            this.url = parseUrl(source.url);\n            this.isHttp = this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n            this.isFsUrl = this.url.protocol === \"file:\";\n            this.httpHeaders = this.isHttp && source.httpHeaders || {};\n            this._fullRequestReader = null;\n            this._rangeRequestReaders = [];\n          }\n\n          get _progressiveDataLength() {\n            return this._fullRequestReader?._loaded ?? 0;\n          }\n\n          getFullReader() {\n            (0, _util.assert)(!this._fullRequestReader, \"PDFNodeStream.getFullReader can only be called once.\");\n            this._fullRequestReader = this.isFsUrl ? new PDFNodeStreamFsFullReader(this) : new PDFNodeStreamFullReader(this);\n            return this._fullRequestReader;\n          }\n\n          getRangeReader(start, end) {\n            if (end <= this._progressiveDataLength) {\n              return null;\n            }\n\n            const rangeReader = this.isFsUrl ? new PDFNodeStreamFsRangeReader(this, start, end) : new PDFNodeStreamRangeReader(this, start, end);\n\n            this._rangeRequestReaders.push(rangeReader);\n\n            return rangeReader;\n          }\n\n          cancelAllRequests(reason) {\n            if (this._fullRequestReader) {\n              this._fullRequestReader.cancel(reason);\n            }\n\n            for (const reader of this._rangeRequestReaders.slice(0)) {\n              reader.cancel(reason);\n            }\n          }\n\n        }\n\n        exports.PDFNodeStream = PDFNodeStream;\n\n        class BaseFullReader {\n          constructor(stream) {\n            this._url = stream.url;\n            this._done = false;\n            this._storedError = null;\n            this.onProgress = null;\n            const source = stream.source;\n            this._contentLength = source.length;\n            this._loaded = 0;\n            this._filename = null;\n            this._disableRange = source.disableRange || false;\n            this._rangeChunkSize = source.rangeChunkSize;\n\n            if (!this._rangeChunkSize && !this._disableRange) {\n              this._disableRange = true;\n            }\n\n            this._isStreamingSupported = !source.disableStream;\n            this._isRangeSupported = !source.disableRange;\n            this._readableStream = null;\n            this._readCapability = (0, _util.createPromiseCapability)();\n            this._headersCapability = (0, _util.createPromiseCapability)();\n          }\n\n          get headersReady() {\n            return this._headersCapability.promise;\n          }\n\n          get filename() {\n            return this._filename;\n          }\n\n          get contentLength() {\n            return this._contentLength;\n          }\n\n          get isRangeSupported() {\n            return this._isRangeSupported;\n          }\n\n          get isStreamingSupported() {\n            return this._isStreamingSupported;\n          }\n\n          async read() {\n            await this._readCapability.promise;\n\n            if (this._done) {\n              return {\n                value: undefined,\n                done: true\n              };\n            }\n\n            if (this._storedError) {\n              throw this._storedError;\n            }\n\n            const chunk = this._readableStream.read();\n\n            if (chunk === null) {\n              this._readCapability = (0, _util.createPromiseCapability)();\n              return this.read();\n            }\n\n            this._loaded += chunk.length;\n\n            if (this.onProgress) {\n              this.onProgress({\n                loaded: this._loaded,\n                total: this._contentLength\n              });\n            }\n\n            const buffer = new Uint8Array(chunk).buffer;\n            return {\n              value: buffer,\n              done: false\n            };\n          }\n\n          cancel(reason) {\n            if (!this._readableStream) {\n              this._error(reason);\n\n              return;\n            }\n\n            this._readableStream.destroy(reason);\n          }\n\n          _error(reason) {\n            this._storedError = reason;\n\n            this._readCapability.resolve();\n          }\n\n          _setReadableStream(readableStream) {\n            this._readableStream = readableStream;\n            readableStream.on(\"readable\", () => {\n              this._readCapability.resolve();\n            });\n            readableStream.on(\"end\", () => {\n              readableStream.destroy();\n              this._done = true;\n\n              this._readCapability.resolve();\n            });\n            readableStream.on(\"error\", reason => {\n              this._error(reason);\n            });\n\n            if (!this._isStreamingSupported && this._isRangeSupported) {\n              this._error(new _util.AbortException(\"streaming is disabled\"));\n            }\n\n            if (this._storedError) {\n              this._readableStream.destroy(this._storedError);\n            }\n          }\n\n        }\n\n        class BaseRangeReader {\n          constructor(stream) {\n            this._url = stream.url;\n            this._done = false;\n            this._storedError = null;\n            this.onProgress = null;\n            this._loaded = 0;\n            this._readableStream = null;\n            this._readCapability = (0, _util.createPromiseCapability)();\n            const source = stream.source;\n            this._isStreamingSupported = !source.disableStream;\n          }\n\n          get isStreamingSupported() {\n            return this._isStreamingSupported;\n          }\n\n          async read() {\n            await this._readCapability.promise;\n\n            if (this._done) {\n              return {\n                value: undefined,\n                done: true\n              };\n            }\n\n            if (this._storedError) {\n              throw this._storedError;\n            }\n\n            const chunk = this._readableStream.read();\n\n            if (chunk === null) {\n              this._readCapability = (0, _util.createPromiseCapability)();\n              return this.read();\n            }\n\n            this._loaded += chunk.length;\n\n            if (this.onProgress) {\n              this.onProgress({\n                loaded: this._loaded\n              });\n            }\n\n            const buffer = new Uint8Array(chunk).buffer;\n            return {\n              value: buffer,\n              done: false\n            };\n          }\n\n          cancel(reason) {\n            if (!this._readableStream) {\n              this._error(reason);\n\n              return;\n            }\n\n            this._readableStream.destroy(reason);\n          }\n\n          _error(reason) {\n            this._storedError = reason;\n\n            this._readCapability.resolve();\n          }\n\n          _setReadableStream(readableStream) {\n            this._readableStream = readableStream;\n            readableStream.on(\"readable\", () => {\n              this._readCapability.resolve();\n            });\n            readableStream.on(\"end\", () => {\n              readableStream.destroy();\n              this._done = true;\n\n              this._readCapability.resolve();\n            });\n            readableStream.on(\"error\", reason => {\n              this._error(reason);\n            });\n\n            if (this._storedError) {\n              this._readableStream.destroy(this._storedError);\n            }\n          }\n\n        }\n\n        function createRequestOptions(parsedUrl, headers) {\n          return {\n            protocol: parsedUrl.protocol,\n            auth: parsedUrl.auth,\n            host: parsedUrl.hostname,\n            port: parsedUrl.port,\n            path: parsedUrl.path,\n            method: \"GET\",\n            headers\n          };\n        }\n\n        class PDFNodeStreamFullReader extends BaseFullReader {\n          constructor(stream) {\n            super(stream);\n\n            const handleResponse = response => {\n              if (response.statusCode === 404) {\n                const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`);\n                this._storedError = error;\n\n                this._headersCapability.reject(error);\n\n                return;\n              }\n\n              this._headersCapability.resolve();\n\n              this._setReadableStream(response);\n\n              const getResponseHeader = name => {\n                return this._readableStream.headers[name.toLowerCase()];\n              };\n\n              const {\n                allowRangeRequests,\n                suggestedLength\n              } = (0, _network_utils.validateRangeRequestCapabilities)({\n                getResponseHeader,\n                isHttp: stream.isHttp,\n                rangeChunkSize: this._rangeChunkSize,\n                disableRange: this._disableRange\n              });\n              this._isRangeSupported = allowRangeRequests;\n              this._contentLength = suggestedLength || this._contentLength;\n              this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n            };\n\n            this._request = null;\n\n            if (this._url.protocol === \"http:\") {\n              this._request = http.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\n            } else {\n              this._request = https.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\n            }\n\n            this._request.on(\"error\", reason => {\n              this._storedError = reason;\n\n              this._headersCapability.reject(reason);\n            });\n\n            this._request.end();\n          }\n\n        }\n\n        class PDFNodeStreamRangeReader extends BaseRangeReader {\n          constructor(stream, start, end) {\n            super(stream);\n            this._httpHeaders = {};\n\n            for (const property in stream.httpHeaders) {\n              const value = stream.httpHeaders[property];\n\n              if (typeof value === \"undefined\") {\n                continue;\n              }\n\n              this._httpHeaders[property] = value;\n            }\n\n            this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n\n            const handleResponse = response => {\n              if (response.statusCode === 404) {\n                const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`);\n                this._storedError = error;\n                return;\n              }\n\n              this._setReadableStream(response);\n            };\n\n            this._request = null;\n\n            if (this._url.protocol === \"http:\") {\n              this._request = http.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\n            } else {\n              this._request = https.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\n            }\n\n            this._request.on(\"error\", reason => {\n              this._storedError = reason;\n            });\n\n            this._request.end();\n          }\n\n        }\n\n        class PDFNodeStreamFsFullReader extends BaseFullReader {\n          constructor(stream) {\n            super(stream);\n            let path = decodeURIComponent(this._url.path);\n\n            if (fileUriRegex.test(this._url.href)) {\n              path = path.replace(/^\\//, \"\");\n            }\n\n            fs.lstat(path, (error, stat) => {\n              if (error) {\n                if (error.code === \"ENOENT\") {\n                  error = new _util.MissingPDFException(`Missing PDF \"${path}\".`);\n                }\n\n                this._storedError = error;\n\n                this._headersCapability.reject(error);\n\n                return;\n              }\n\n              this._contentLength = stat.size;\n\n              this._setReadableStream(fs.createReadStream(path));\n\n              this._headersCapability.resolve();\n            });\n          }\n\n        }\n\n        class PDFNodeStreamFsRangeReader extends BaseRangeReader {\n          constructor(stream, start, end) {\n            super(stream);\n            let path = decodeURIComponent(this._url.path);\n\n            if (fileUriRegex.test(this._url.href)) {\n              path = path.replace(/^\\//, \"\");\n            }\n\n            this._setReadableStream(fs.createReadStream(path, {\n              start,\n              end: end - 1\n            }));\n          }\n\n        }\n        /***/\n\n      },\n      /* 26 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.createResponseStatusError = createResponseStatusError;\n        exports.extractFilenameFromHeader = extractFilenameFromHeader;\n        exports.validateRangeRequestCapabilities = validateRangeRequestCapabilities;\n        exports.validateResponseStatus = validateResponseStatus;\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _content_disposition = __w_pdfjs_require__(27);\n\n        var _display_utils = __w_pdfjs_require__(5);\n\n        function validateRangeRequestCapabilities(_ref39) {\n          let {\n            getResponseHeader,\n            isHttp,\n            rangeChunkSize,\n            disableRange\n          } = _ref39;\n          const returnValues = {\n            allowRangeRequests: false,\n            suggestedLength: undefined\n          };\n          const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n\n          if (!Number.isInteger(length)) {\n            return returnValues;\n          }\n\n          returnValues.suggestedLength = length;\n\n          if (length <= 2 * rangeChunkSize) {\n            return returnValues;\n          }\n\n          if (disableRange || !isHttp) {\n            return returnValues;\n          }\n\n          if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n            return returnValues;\n          }\n\n          const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n\n          if (contentEncoding !== \"identity\") {\n            return returnValues;\n          }\n\n          returnValues.allowRangeRequests = true;\n          return returnValues;\n        }\n\n        function extractFilenameFromHeader(getResponseHeader) {\n          const contentDisposition = getResponseHeader(\"Content-Disposition\");\n\n          if (contentDisposition) {\n            let filename = (0, _content_disposition.getFilenameFromContentDispositionHeader)(contentDisposition);\n\n            if (filename.includes(\"%\")) {\n              try {\n                filename = decodeURIComponent(filename);\n              } catch (ex) {}\n            }\n\n            if ((0, _display_utils.isPdfFile)(filename)) {\n              return filename;\n            }\n          }\n\n          return null;\n        }\n\n        function createResponseStatusError(status, url) {\n          if (status === 404 || status === 0 && url.startsWith(\"file:\")) {\n            return new _util.MissingPDFException('Missing PDF \"' + url + '\".');\n          }\n\n          return new _util.UnexpectedResponseException(`Unexpected server response (${status}) while retrieving PDF \"${url}\".`, status);\n        }\n\n        function validateResponseStatus(status) {\n          return status === 200 || status === 206;\n        }\n        /***/\n\n      },\n      /* 27 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.getFilenameFromContentDispositionHeader = getFilenameFromContentDispositionHeader;\n\n        var _util = __w_pdfjs_require__(1);\n\n        function getFilenameFromContentDispositionHeader(contentDisposition) {\n          let needsEncodingFixup = true;\n          let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n\n          if (tmp) {\n            tmp = tmp[1];\n            let filename = rfc2616unquote(tmp);\n            filename = unescape(filename);\n            filename = rfc5987decode(filename);\n            filename = rfc2047decode(filename);\n            return fixupEncoding(filename);\n          }\n\n          tmp = rfc2231getparam(contentDisposition);\n\n          if (tmp) {\n            const filename = rfc2047decode(tmp);\n            return fixupEncoding(filename);\n          }\n\n          tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n\n          if (tmp) {\n            tmp = tmp[1];\n            let filename = rfc2616unquote(tmp);\n            filename = rfc2047decode(filename);\n            return fixupEncoding(filename);\n          }\n\n          function toParamRegExp(attributePattern, flags) {\n            return new RegExp(\"(?:^|;)\\\\s*\" + attributePattern + \"\\\\s*=\\\\s*\" + \"(\" + '[^\";\\\\s][^;\\\\s]*' + \"|\" + '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' + \")\", flags);\n          }\n\n          function textdecode(encoding, value) {\n            if (encoding) {\n              if (!/^[\\x00-\\xFF]+$/.test(value)) {\n                return value;\n              }\n\n              try {\n                const decoder = new TextDecoder(encoding, {\n                  fatal: true\n                });\n                const buffer = (0, _util.stringToBytes)(value);\n                value = decoder.decode(buffer);\n                needsEncodingFixup = false;\n              } catch (e) {}\n            }\n\n            return value;\n          }\n\n          function fixupEncoding(value) {\n            if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n              value = textdecode(\"utf-8\", value);\n\n              if (needsEncodingFixup) {\n                value = textdecode(\"iso-8859-1\", value);\n              }\n            }\n\n            return value;\n          }\n\n          function rfc2231getparam(contentDispositionStr) {\n            const matches = [];\n            let match;\n            const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n\n            while ((match = iter.exec(contentDispositionStr)) !== null) {\n              let [, n, quot, part] = match;\n              n = parseInt(n, 10);\n\n              if (n in matches) {\n                if (n === 0) {\n                  break;\n                }\n\n                continue;\n              }\n\n              matches[n] = [quot, part];\n            }\n\n            const parts = [];\n\n            for (let n = 0; n < matches.length; ++n) {\n              if (!(n in matches)) {\n                break;\n              }\n\n              let [quot, part] = matches[n];\n              part = rfc2616unquote(part);\n\n              if (quot) {\n                part = unescape(part);\n\n                if (n === 0) {\n                  part = rfc5987decode(part);\n                }\n              }\n\n              parts.push(part);\n            }\n\n            return parts.join(\"\");\n          }\n\n          function rfc2616unquote(value) {\n            if (value.startsWith('\"')) {\n              const parts = value.slice(1).split('\\\\\"');\n\n              for (let i = 0; i < parts.length; ++i) {\n                const quotindex = parts[i].indexOf('\"');\n\n                if (quotindex !== -1) {\n                  parts[i] = parts[i].slice(0, quotindex);\n                  parts.length = i + 1;\n                }\n\n                parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n              }\n\n              value = parts.join('\"');\n            }\n\n            return value;\n          }\n\n          function rfc5987decode(extvalue) {\n            const encodingend = extvalue.indexOf(\"'\");\n\n            if (encodingend === -1) {\n              return extvalue;\n            }\n\n            const encoding = extvalue.slice(0, encodingend);\n            const langvalue = extvalue.slice(encodingend + 1);\n            const value = langvalue.replace(/^[^']*'/, \"\");\n            return textdecode(encoding, value);\n          }\n\n          function rfc2047decode(value) {\n            if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n              return value;\n            }\n\n            return value.replace(/=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g, function (matches, charset, encoding, text) {\n              if (encoding === \"q\" || encoding === \"Q\") {\n                text = text.replace(/_/g, \" \");\n                text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n                  return String.fromCharCode(parseInt(hex, 16));\n                });\n                return textdecode(charset, text);\n              }\n\n              try {\n                text = atob(text);\n              } catch (e) {}\n\n              return textdecode(charset, text);\n            });\n          }\n\n          return \"\";\n        }\n        /***/\n\n      },\n      /* 28 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.PDFNetworkStream = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _network_utils = __w_pdfjs_require__(26);\n\n        ;\n        const OK_RESPONSE = 200;\n        const PARTIAL_CONTENT_RESPONSE = 206;\n\n        function getArrayBuffer(xhr) {\n          const data = xhr.response;\n\n          if (typeof data !== \"string\") {\n            return data;\n          }\n\n          const array = (0, _util.stringToBytes)(data);\n          return array.buffer;\n        }\n\n        class NetworkManager {\n          constructor(url) {\n            let args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n            this.url = url;\n            this.isHttp = /^https?:/i.test(url);\n            this.httpHeaders = this.isHttp && args.httpHeaders || Object.create(null);\n            this.withCredentials = args.withCredentials || false;\n\n            this.getXhr = args.getXhr || function NetworkManager_getXhr() {\n              return new XMLHttpRequest();\n            };\n\n            this.currXhrId = 0;\n            this.pendingRequests = Object.create(null);\n          }\n\n          requestRange(begin, end, listeners) {\n            const args = {\n              begin,\n              end\n            };\n\n            for (const prop in listeners) {\n              args[prop] = listeners[prop];\n            }\n\n            return this.request(args);\n          }\n\n          requestFull(listeners) {\n            return this.request(listeners);\n          }\n\n          request(args) {\n            const xhr = this.getXhr();\n            const xhrId = this.currXhrId++;\n            const pendingRequest = this.pendingRequests[xhrId] = {\n              xhr\n            };\n            xhr.open(\"GET\", this.url);\n            xhr.withCredentials = this.withCredentials;\n\n            for (const property in this.httpHeaders) {\n              const value = this.httpHeaders[property];\n\n              if (typeof value === \"undefined\") {\n                continue;\n              }\n\n              xhr.setRequestHeader(property, value);\n            }\n\n            if (this.isHttp && \"begin\" in args && \"end\" in args) {\n              xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n              pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n            } else {\n              pendingRequest.expectedStatus = OK_RESPONSE;\n            }\n\n            xhr.responseType = \"arraybuffer\";\n\n            if (args.onError) {\n              xhr.onerror = function (evt) {\n                args.onError(xhr.status);\n              };\n            }\n\n            xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n            xhr.onprogress = this.onProgress.bind(this, xhrId);\n            pendingRequest.onHeadersReceived = args.onHeadersReceived;\n            pendingRequest.onDone = args.onDone;\n            pendingRequest.onError = args.onError;\n            pendingRequest.onProgress = args.onProgress;\n            xhr.send(null);\n            return xhrId;\n          }\n\n          onProgress(xhrId, evt) {\n            const pendingRequest = this.pendingRequests[xhrId];\n\n            if (!pendingRequest) {\n              return;\n            }\n\n            pendingRequest.onProgress?.(evt);\n          }\n\n          onStateChange(xhrId, evt) {\n            const pendingRequest = this.pendingRequests[xhrId];\n\n            if (!pendingRequest) {\n              return;\n            }\n\n            const xhr = pendingRequest.xhr;\n\n            if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n              pendingRequest.onHeadersReceived();\n              delete pendingRequest.onHeadersReceived;\n            }\n\n            if (xhr.readyState !== 4) {\n              return;\n            }\n\n            if (!(xhrId in this.pendingRequests)) {\n              return;\n            }\n\n            delete this.pendingRequests[xhrId];\n\n            if (xhr.status === 0 && this.isHttp) {\n              pendingRequest.onError?.(xhr.status);\n              return;\n            }\n\n            const xhrStatus = xhr.status || OK_RESPONSE;\n            const ok_response_on_range_request = xhrStatus === OK_RESPONSE && pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n            if (!ok_response_on_range_request && xhrStatus !== pendingRequest.expectedStatus) {\n              pendingRequest.onError?.(xhr.status);\n              return;\n            }\n\n            const chunk = getArrayBuffer(xhr);\n\n            if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n              const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n              const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n              pendingRequest.onDone({\n                begin: parseInt(matches[1], 10),\n                chunk\n              });\n            } else if (chunk) {\n              pendingRequest.onDone({\n                begin: 0,\n                chunk\n              });\n            } else {\n              pendingRequest.onError?.(xhr.status);\n            }\n          }\n\n          getRequestXhr(xhrId) {\n            return this.pendingRequests[xhrId].xhr;\n          }\n\n          isPendingRequest(xhrId) {\n            return xhrId in this.pendingRequests;\n          }\n\n          abortRequest(xhrId) {\n            const xhr = this.pendingRequests[xhrId].xhr;\n            delete this.pendingRequests[xhrId];\n            xhr.abort();\n          }\n\n        }\n\n        class PDFNetworkStream {\n          constructor(source) {\n            this._source = source;\n            this._manager = new NetworkManager(source.url, {\n              httpHeaders: source.httpHeaders,\n              withCredentials: source.withCredentials\n            });\n            this._rangeChunkSize = source.rangeChunkSize;\n            this._fullRequestReader = null;\n            this._rangeRequestReaders = [];\n          }\n\n          _onRangeRequestReaderClosed(reader) {\n            const i = this._rangeRequestReaders.indexOf(reader);\n\n            if (i >= 0) {\n              this._rangeRequestReaders.splice(i, 1);\n            }\n          }\n\n          getFullReader() {\n            (0, _util.assert)(!this._fullRequestReader, \"PDFNetworkStream.getFullReader can only be called once.\");\n            this._fullRequestReader = new PDFNetworkStreamFullRequestReader(this._manager, this._source);\n            return this._fullRequestReader;\n          }\n\n          getRangeReader(begin, end) {\n            const reader = new PDFNetworkStreamRangeRequestReader(this._manager, begin, end);\n            reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n\n            this._rangeRequestReaders.push(reader);\n\n            return reader;\n          }\n\n          cancelAllRequests(reason) {\n            this._fullRequestReader?.cancel(reason);\n\n            for (const reader of this._rangeRequestReaders.slice(0)) {\n              reader.cancel(reason);\n            }\n          }\n\n        }\n\n        exports.PDFNetworkStream = PDFNetworkStream;\n\n        class PDFNetworkStreamFullRequestReader {\n          constructor(manager, source) {\n            this._manager = manager;\n            const args = {\n              onHeadersReceived: this._onHeadersReceived.bind(this),\n              onDone: this._onDone.bind(this),\n              onError: this._onError.bind(this),\n              onProgress: this._onProgress.bind(this)\n            };\n            this._url = source.url;\n            this._fullRequestId = manager.requestFull(args);\n            this._headersReceivedCapability = (0, _util.createPromiseCapability)();\n            this._disableRange = source.disableRange || false;\n            this._contentLength = source.length;\n            this._rangeChunkSize = source.rangeChunkSize;\n\n            if (!this._rangeChunkSize && !this._disableRange) {\n              this._disableRange = true;\n            }\n\n            this._isStreamingSupported = false;\n            this._isRangeSupported = false;\n            this._cachedChunks = [];\n            this._requests = [];\n            this._done = false;\n            this._storedError = undefined;\n            this._filename = null;\n            this.onProgress = null;\n          }\n\n          _onHeadersReceived() {\n            const fullRequestXhrId = this._fullRequestId;\n\n            const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n            const getResponseHeader = name => {\n              return fullRequestXhr.getResponseHeader(name);\n            };\n\n            const {\n              allowRangeRequests,\n              suggestedLength\n            } = (0, _network_utils.validateRangeRequestCapabilities)({\n              getResponseHeader,\n              isHttp: this._manager.isHttp,\n              rangeChunkSize: this._rangeChunkSize,\n              disableRange: this._disableRange\n            });\n\n            if (allowRangeRequests) {\n              this._isRangeSupported = true;\n            }\n\n            this._contentLength = suggestedLength || this._contentLength;\n            this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n\n            if (this._isRangeSupported) {\n              this._manager.abortRequest(fullRequestXhrId);\n            }\n\n            this._headersReceivedCapability.resolve();\n          }\n\n          _onDone(data) {\n            if (data) {\n              if (this._requests.length > 0) {\n                const requestCapability = this._requests.shift();\n\n                requestCapability.resolve({\n                  value: data.chunk,\n                  done: false\n                });\n              } else {\n                this._cachedChunks.push(data.chunk);\n              }\n            }\n\n            this._done = true;\n\n            if (this._cachedChunks.length > 0) {\n              return;\n            }\n\n            for (const requestCapability of this._requests) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            }\n\n            this._requests.length = 0;\n          }\n\n          _onError(status) {\n            this._storedError = (0, _network_utils.createResponseStatusError)(status, this._url);\n\n            this._headersReceivedCapability.reject(this._storedError);\n\n            for (const requestCapability of this._requests) {\n              requestCapability.reject(this._storedError);\n            }\n\n            this._requests.length = 0;\n            this._cachedChunks.length = 0;\n          }\n\n          _onProgress(evt) {\n            this.onProgress?.({\n              loaded: evt.loaded,\n              total: evt.lengthComputable ? evt.total : this._contentLength\n            });\n          }\n\n          get filename() {\n            return this._filename;\n          }\n\n          get isRangeSupported() {\n            return this._isRangeSupported;\n          }\n\n          get isStreamingSupported() {\n            return this._isStreamingSupported;\n          }\n\n          get contentLength() {\n            return this._contentLength;\n          }\n\n          get headersReady() {\n            return this._headersReceivedCapability.promise;\n          }\n\n          async read() {\n            if (this._storedError) {\n              throw this._storedError;\n            }\n\n            if (this._cachedChunks.length > 0) {\n              const chunk = this._cachedChunks.shift();\n\n              return {\n                value: chunk,\n                done: false\n              };\n            }\n\n            if (this._done) {\n              return {\n                value: undefined,\n                done: true\n              };\n            }\n\n            const requestCapability = (0, _util.createPromiseCapability)();\n\n            this._requests.push(requestCapability);\n\n            return requestCapability.promise;\n          }\n\n          cancel(reason) {\n            this._done = true;\n\n            this._headersReceivedCapability.reject(reason);\n\n            for (const requestCapability of this._requests) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            }\n\n            this._requests.length = 0;\n\n            if (this._manager.isPendingRequest(this._fullRequestId)) {\n              this._manager.abortRequest(this._fullRequestId);\n            }\n\n            this._fullRequestReader = null;\n          }\n\n        }\n\n        class PDFNetworkStreamRangeRequestReader {\n          constructor(manager, begin, end) {\n            this._manager = manager;\n            const args = {\n              onDone: this._onDone.bind(this),\n              onError: this._onError.bind(this),\n              onProgress: this._onProgress.bind(this)\n            };\n            this._url = manager.url;\n            this._requestId = manager.requestRange(begin, end, args);\n            this._requests = [];\n            this._queuedChunk = null;\n            this._done = false;\n            this._storedError = undefined;\n            this.onProgress = null;\n            this.onClosed = null;\n          }\n\n          _close() {\n            this.onClosed?.(this);\n          }\n\n          _onDone(data) {\n            const chunk = data.chunk;\n\n            if (this._requests.length > 0) {\n              const requestCapability = this._requests.shift();\n\n              requestCapability.resolve({\n                value: chunk,\n                done: false\n              });\n            } else {\n              this._queuedChunk = chunk;\n            }\n\n            this._done = true;\n\n            for (const requestCapability of this._requests) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            }\n\n            this._requests.length = 0;\n\n            this._close();\n          }\n\n          _onError(status) {\n            this._storedError = (0, _network_utils.createResponseStatusError)(status, this._url);\n\n            for (const requestCapability of this._requests) {\n              requestCapability.reject(this._storedError);\n            }\n\n            this._requests.length = 0;\n            this._queuedChunk = null;\n          }\n\n          _onProgress(evt) {\n            if (!this.isStreamingSupported) {\n              this.onProgress?.({\n                loaded: evt.loaded\n              });\n            }\n          }\n\n          get isStreamingSupported() {\n            return false;\n          }\n\n          async read() {\n            if (this._storedError) {\n              throw this._storedError;\n            }\n\n            if (this._queuedChunk !== null) {\n              const chunk = this._queuedChunk;\n              this._queuedChunk = null;\n              return {\n                value: chunk,\n                done: false\n              };\n            }\n\n            if (this._done) {\n              return {\n                value: undefined,\n                done: true\n              };\n            }\n\n            const requestCapability = (0, _util.createPromiseCapability)();\n\n            this._requests.push(requestCapability);\n\n            return requestCapability.promise;\n          }\n\n          cancel(reason) {\n            this._done = true;\n\n            for (const requestCapability of this._requests) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            }\n\n            this._requests.length = 0;\n\n            if (this._manager.isPendingRequest(this._requestId)) {\n              this._manager.abortRequest(this._requestId);\n            }\n\n            this._close();\n          }\n\n        }\n        /***/\n\n      },\n      /* 29 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.PDFFetchStream = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _network_utils = __w_pdfjs_require__(26);\n\n        ;\n\n        function createFetchOptions(headers, withCredentials, abortController) {\n          return {\n            method: \"GET\",\n            headers,\n            signal: abortController?.signal,\n            mode: \"cors\",\n            credentials: withCredentials ? \"include\" : \"same-origin\",\n            redirect: \"follow\"\n          };\n        }\n\n        function createHeaders(httpHeaders) {\n          const headers = new Headers();\n\n          for (const property in httpHeaders) {\n            const value = httpHeaders[property];\n\n            if (typeof value === \"undefined\") {\n              continue;\n            }\n\n            headers.append(property, value);\n          }\n\n          return headers;\n        }\n\n        class PDFFetchStream {\n          constructor(source) {\n            this.source = source;\n            this.isHttp = /^https?:/i.test(source.url);\n            this.httpHeaders = this.isHttp && source.httpHeaders || {};\n            this._fullRequestReader = null;\n            this._rangeRequestReaders = [];\n          }\n\n          get _progressiveDataLength() {\n            return this._fullRequestReader?._loaded ?? 0;\n          }\n\n          getFullReader() {\n            (0, _util.assert)(!this._fullRequestReader, \"PDFFetchStream.getFullReader can only be called once.\");\n            this._fullRequestReader = new PDFFetchStreamReader(this);\n            return this._fullRequestReader;\n          }\n\n          getRangeReader(begin, end) {\n            if (end <= this._progressiveDataLength) {\n              return null;\n            }\n\n            const reader = new PDFFetchStreamRangeReader(this, begin, end);\n\n            this._rangeRequestReaders.push(reader);\n\n            return reader;\n          }\n\n          cancelAllRequests(reason) {\n            if (this._fullRequestReader) {\n              this._fullRequestReader.cancel(reason);\n            }\n\n            for (const reader of this._rangeRequestReaders.slice(0)) {\n              reader.cancel(reason);\n            }\n          }\n\n        }\n\n        exports.PDFFetchStream = PDFFetchStream;\n\n        class PDFFetchStreamReader {\n          constructor(stream) {\n            this._stream = stream;\n            this._reader = null;\n            this._loaded = 0;\n            this._filename = null;\n            const source = stream.source;\n            this._withCredentials = source.withCredentials || false;\n            this._contentLength = source.length;\n            this._headersCapability = (0, _util.createPromiseCapability)();\n            this._disableRange = source.disableRange || false;\n            this._rangeChunkSize = source.rangeChunkSize;\n\n            if (!this._rangeChunkSize && !this._disableRange) {\n              this._disableRange = true;\n            }\n\n            if (typeof AbortController !== \"undefined\") {\n              this._abortController = new AbortController();\n            }\n\n            this._isStreamingSupported = !source.disableStream;\n            this._isRangeSupported = !source.disableRange;\n            this._headers = createHeaders(this._stream.httpHeaders);\n            const url = source.url;\n            fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(response => {\n              if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n                throw (0, _network_utils.createResponseStatusError)(response.status, url);\n              }\n\n              this._reader = response.body.getReader();\n\n              this._headersCapability.resolve();\n\n              const getResponseHeader = name => {\n                return response.headers.get(name);\n              };\n\n              const {\n                allowRangeRequests,\n                suggestedLength\n              } = (0, _network_utils.validateRangeRequestCapabilities)({\n                getResponseHeader,\n                isHttp: this._stream.isHttp,\n                rangeChunkSize: this._rangeChunkSize,\n                disableRange: this._disableRange\n              });\n              this._isRangeSupported = allowRangeRequests;\n              this._contentLength = suggestedLength || this._contentLength;\n              this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n\n              if (!this._isStreamingSupported && this._isRangeSupported) {\n                this.cancel(new _util.AbortException(\"Streaming is disabled.\"));\n              }\n            }).catch(this._headersCapability.reject);\n            this.onProgress = null;\n          }\n\n          get headersReady() {\n            return this._headersCapability.promise;\n          }\n\n          get filename() {\n            return this._filename;\n          }\n\n          get contentLength() {\n            return this._contentLength;\n          }\n\n          get isRangeSupported() {\n            return this._isRangeSupported;\n          }\n\n          get isStreamingSupported() {\n            return this._isStreamingSupported;\n          }\n\n          async read() {\n            await this._headersCapability.promise;\n            const {\n              value,\n              done\n            } = await this._reader.read();\n\n            if (done) {\n              return {\n                value,\n                done\n              };\n            }\n\n            this._loaded += value.byteLength;\n\n            if (this.onProgress) {\n              this.onProgress({\n                loaded: this._loaded,\n                total: this._contentLength\n              });\n            }\n\n            const buffer = new Uint8Array(value).buffer;\n            return {\n              value: buffer,\n              done: false\n            };\n          }\n\n          cancel(reason) {\n            if (this._reader) {\n              this._reader.cancel(reason);\n            }\n\n            if (this._abortController) {\n              this._abortController.abort();\n            }\n          }\n\n        }\n\n        class PDFFetchStreamRangeReader {\n          constructor(stream, begin, end) {\n            this._stream = stream;\n            this._reader = null;\n            this._loaded = 0;\n            const source = stream.source;\n            this._withCredentials = source.withCredentials || false;\n            this._readCapability = (0, _util.createPromiseCapability)();\n            this._isStreamingSupported = !source.disableStream;\n\n            if (typeof AbortController !== \"undefined\") {\n              this._abortController = new AbortController();\n            }\n\n            this._headers = createHeaders(this._stream.httpHeaders);\n\n            this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n            const url = source.url;\n            fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(response => {\n              if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n                throw (0, _network_utils.createResponseStatusError)(response.status, url);\n              }\n\n              this._readCapability.resolve();\n\n              this._reader = response.body.getReader();\n            }).catch(this._readCapability.reject);\n            this.onProgress = null;\n          }\n\n          get isStreamingSupported() {\n            return this._isStreamingSupported;\n          }\n\n          async read() {\n            await this._readCapability.promise;\n            const {\n              value,\n              done\n            } = await this._reader.read();\n\n            if (done) {\n              return {\n                value,\n                done\n              };\n            }\n\n            this._loaded += value.byteLength;\n\n            if (this.onProgress) {\n              this.onProgress({\n                loaded: this._loaded\n              });\n            }\n\n            const buffer = new Uint8Array(value).buffer;\n            return {\n              value: buffer,\n              done: false\n            };\n          }\n\n          cancel(reason) {\n            if (this._reader) {\n              this._reader.cancel(reason);\n            }\n\n            if (this._abortController) {\n              this._abortController.abort();\n            }\n          }\n\n        }\n        /***/\n\n      }\n      /******/\n      ];\n      /************************************************************************/\n\n      /******/\n      // The module cache\n\n      /******/\n\n      var __webpack_module_cache__ = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __w_pdfjs_require__(moduleId) {\n        /******/\n        // Check if module is in cache\n\n        /******/\n        var cachedModule = __webpack_module_cache__[moduleId];\n        /******/\n\n        if (cachedModule !== undefined) {\n          /******/\n          return cachedModule.exports;\n          /******/\n        }\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n\n        var module = __webpack_module_cache__[moduleId] = {\n          /******/\n          // no module.id needed\n\n          /******/\n          // no module.loaded needed\n\n          /******/\n          exports: {}\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        __webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /************************************************************************/\n\n\n      var __webpack_exports__ = {}; // This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.\n\n      (() => {\n        var exports = __webpack_exports__;\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        Object.defineProperty(exports, \"AnnotationLayer\", {\n          enumerable: true,\n          get: function () {\n            return _annotation_layer.AnnotationLayer;\n          }\n        });\n        Object.defineProperty(exports, \"AnnotationMode\", {\n          enumerable: true,\n          get: function () {\n            return _util.AnnotationMode;\n          }\n        });\n        Object.defineProperty(exports, \"CMapCompressionType\", {\n          enumerable: true,\n          get: function () {\n            return _util.CMapCompressionType;\n          }\n        });\n        Object.defineProperty(exports, \"GlobalWorkerOptions\", {\n          enumerable: true,\n          get: function () {\n            return _worker_options.GlobalWorkerOptions;\n          }\n        });\n        Object.defineProperty(exports, \"InvalidPDFException\", {\n          enumerable: true,\n          get: function () {\n            return _util.InvalidPDFException;\n          }\n        });\n        Object.defineProperty(exports, \"LoopbackPort\", {\n          enumerable: true,\n          get: function () {\n            return _api.LoopbackPort;\n          }\n        });\n        Object.defineProperty(exports, \"MissingPDFException\", {\n          enumerable: true,\n          get: function () {\n            return _util.MissingPDFException;\n          }\n        });\n        Object.defineProperty(exports, \"OPS\", {\n          enumerable: true,\n          get: function () {\n            return _util.OPS;\n          }\n        });\n        Object.defineProperty(exports, \"PDFDataRangeTransport\", {\n          enumerable: true,\n          get: function () {\n            return _api.PDFDataRangeTransport;\n          }\n        });\n        Object.defineProperty(exports, \"PDFDateString\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.PDFDateString;\n          }\n        });\n        Object.defineProperty(exports, \"PDFWorker\", {\n          enumerable: true,\n          get: function () {\n            return _api.PDFWorker;\n          }\n        });\n        Object.defineProperty(exports, \"PasswordResponses\", {\n          enumerable: true,\n          get: function () {\n            return _util.PasswordResponses;\n          }\n        });\n        Object.defineProperty(exports, \"PermissionFlag\", {\n          enumerable: true,\n          get: function () {\n            return _util.PermissionFlag;\n          }\n        });\n        Object.defineProperty(exports, \"PixelsPerInch\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.PixelsPerInch;\n          }\n        });\n        Object.defineProperty(exports, \"RenderingCancelledException\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.RenderingCancelledException;\n          }\n        });\n        Object.defineProperty(exports, \"SVGGraphics\", {\n          enumerable: true,\n          get: function () {\n            return _svg.SVGGraphics;\n          }\n        });\n        Object.defineProperty(exports, \"UNSUPPORTED_FEATURES\", {\n          enumerable: true,\n          get: function () {\n            return _util.UNSUPPORTED_FEATURES;\n          }\n        });\n        Object.defineProperty(exports, \"UnexpectedResponseException\", {\n          enumerable: true,\n          get: function () {\n            return _util.UnexpectedResponseException;\n          }\n        });\n        Object.defineProperty(exports, \"Util\", {\n          enumerable: true,\n          get: function () {\n            return _util.Util;\n          }\n        });\n        Object.defineProperty(exports, \"VerbosityLevel\", {\n          enumerable: true,\n          get: function () {\n            return _util.VerbosityLevel;\n          }\n        });\n        Object.defineProperty(exports, \"XfaLayer\", {\n          enumerable: true,\n          get: function () {\n            return _xfa_layer.XfaLayer;\n          }\n        });\n        Object.defineProperty(exports, \"build\", {\n          enumerable: true,\n          get: function () {\n            return _api.build;\n          }\n        });\n        Object.defineProperty(exports, \"createPromiseCapability\", {\n          enumerable: true,\n          get: function () {\n            return _util.createPromiseCapability;\n          }\n        });\n        Object.defineProperty(exports, \"createValidAbsoluteUrl\", {\n          enumerable: true,\n          get: function () {\n            return _util.createValidAbsoluteUrl;\n          }\n        });\n        Object.defineProperty(exports, \"getDocument\", {\n          enumerable: true,\n          get: function () {\n            return _api.getDocument;\n          }\n        });\n        Object.defineProperty(exports, \"getFilenameFromUrl\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.getFilenameFromUrl;\n          }\n        });\n        Object.defineProperty(exports, \"getPdfFilenameFromUrl\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.getPdfFilenameFromUrl;\n          }\n        });\n        Object.defineProperty(exports, \"getXfaPageViewport\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.getXfaPageViewport;\n          }\n        });\n        Object.defineProperty(exports, \"isPdfFile\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.isPdfFile;\n          }\n        });\n        Object.defineProperty(exports, \"loadScript\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.loadScript;\n          }\n        });\n        Object.defineProperty(exports, \"renderTextLayer\", {\n          enumerable: true,\n          get: function () {\n            return _text_layer.renderTextLayer;\n          }\n        });\n        Object.defineProperty(exports, \"shadow\", {\n          enumerable: true,\n          get: function () {\n            return _util.shadow;\n          }\n        });\n        Object.defineProperty(exports, \"version\", {\n          enumerable: true,\n          get: function () {\n            return _api.version;\n          }\n        });\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _api = __w_pdfjs_require__(4);\n\n        var _display_utils = __w_pdfjs_require__(5);\n\n        var _annotation_layer = __w_pdfjs_require__(20);\n\n        var _worker_options = __w_pdfjs_require__(13);\n\n        var _is_node = __w_pdfjs_require__(3);\n\n        var _text_layer = __w_pdfjs_require__(23);\n\n        var _svg = __w_pdfjs_require__(24);\n\n        var _xfa_layer = __w_pdfjs_require__(22);\n\n        const pdfjsVersion = '2.14.305';\n        const pdfjsBuild = 'eaaa8b4ad';\n        {\n          if (_is_node.isNodeJS) {\n            const {\n              PDFNodeStream\n            } = __w_pdfjs_require__(25);\n\n            (0, _api.setPDFNetworkStreamFactory)(params => {\n              return new PDFNodeStream(params);\n            });\n          } else {\n            const {\n              PDFNetworkStream\n            } = __w_pdfjs_require__(28);\n\n            const {\n              PDFFetchStream\n            } = __w_pdfjs_require__(29);\n\n            (0, _api.setPDFNetworkStreamFactory)(params => {\n              if ((0, _display_utils.isValidFetchUrl)(params.url)) {\n                return new PDFFetchStream(params);\n              }\n\n              return new PDFNetworkStream(params);\n            });\n          }\n        }\n      })();\n      /******/\n\n\n      return __webpack_exports__;\n      /******/\n    })()\n  );\n});","map":{"version":3,"mappings":"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","names":["module","define","exports","root","__w_pdfjs_require__","IDENTITY_MATRIX","FONT_IDENTITY_MATRIX","RenderingIntentFlag","ANY","DISPLAY","PRINT","ANNOTATIONS_FORMS","ANNOTATIONS_STORAGE","ANNOTATIONS_DISABLE","OPLIST","AnnotationMode","DISABLE","ENABLE","ENABLE_FORMS","ENABLE_STORAGE","PermissionFlag","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","TextRenderingMode","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","ImageKind","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","AnnotationType","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","AnnotationStateModelType","MARKED","REVIEW","AnnotationMarkedState","UNMARKED","AnnotationReviewState","ACCEPTED","REJECTED","CANCELLED","COMPLETED","NONE","AnnotationReplyType","GROUP","REPLY","AnnotationFlag","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","AnnotationFieldFlag","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","AnnotationBorderStyleType","SOLID","DASHED","BEVELED","INSET","AnnotationActionEventType","E","X","D","U","Fo","Bl","PO","PC","PV","PI","K","F","V","C","DocumentActionEventType","WC","WS","DS","WP","DP","PageActionEventType","O","StreamType","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RLX","FontType","TYPE1","TYPE1STANDARD","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","VerbosityLevel","ERRORS","WARNINGS","INFOS","CMapCompressionType","BINARY","STREAM","OPS","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","transform","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","UNSUPPORTED_FEATURES","unknown","forms","javaScript","signatures","smask","shadingPattern","font","errorTilingPattern","errorExtGState","errorXObject","errorFontLoadType3","errorFontState","errorFontMissing","errorFontTranslate","errorColorSpace","errorOperatorList","errorFontToUnicode","errorFontLoadNative","errorFontBuildPath","errorFontGetPath","errorMarkedContent","errorContentSubStream","PasswordResponses","NEED_PASSWORD","INCORRECT_PASSWORD","verbosity","setVerbosityLevel","level","Number","isInteger","getVerbosityLevel","info","msg","console","log","warn","unreachable","Error","assert","cond","_isValidProtocol","url","protocol","createValidAbsoluteUrl","baseUrl","options","addDefaultProtocol","startsWith","dots","match","length","tryConvertEncoding","stringToUTF8String","ex","absoluteUrl","URL","shadow","obj","prop","value","Object","defineProperty","enumerable","configurable","writable","BaseException","BaseExceptionClosure","message","name","constructor","prototype","PasswordException","code","UnknownErrorException","details","InvalidPDFException","MissingPDFException","UnexpectedResponseException","status","FormatError","AbortException","bytesToString","bytes","undefined","MAX_ARGUMENT_COUNT","String","fromCharCode","apply","strBuf","i","chunkEnd","Math","min","chunk","subarray","push","join","stringToBytes","str","Uint8Array","charCodeAt","arrayByteLength","arr","byteLength","arraysToBytes","resultLength","pos","data","item","itemLength","set","string32","objectSize","keys","objectFromMap","map","create","key","isLittleEndian","buffer8","view32","Uint32Array","buffer","isEvalSupported","Function","e","FeatureTest","isOffscreenCanvasSupported","OffscreenCanvas","hexNumbers","Array","n","toString","padStart","Util","makeHexColor","r","g","b","scaleMinMax","minMax","temp","m1","m2","applyTransform","p","m","xt","yt","applyInverseTransform","d","getAxialAlignedBoundingBox","p1","p2","slice","p3","p4","max","inverseTransform","apply3dTransform","v","singularValueDecompose2dScale","transpose","a","c","first","second","sqrt","sx","sy","normalizeRect","rect","intersect","rect1","rect2","xLow","xHigh","yLow","yHigh","bezierBoundingBox","x0","y0","x1","y1","x2","y2","x3","y3","tvalues","bounds","t","t1","t2","b2ac","sqrtb2ac","abs","j","mt","jlen","PDFStringTranslateTable","stringToPDFString","encoding","decoder","TextDecoder","fatal","decode","ii","charAt","escapeString","replace","isAscii","test","stringToUTF16BEString","buf","char","decodeURIComponent","escape","utf8StringToString","unescape","encodeURIComponent","isArrayBuffer","isArrayEqual","arr1","arr2","getModificationDate","date","Date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createPromiseCapability","capability","isSettled","get","promise","Promise","resolve","reject","reason","isNodeJS","process","versions","nw","electron","type","DEFAULT_RANGE_CHUNK_SIZE","RENDERING_CANCELLED_TIMEOUT","DefaultCanvasFactory","DOMCanvasFactory","DefaultCMapReaderFactory","DOMCMapReaderFactory","DefaultStandardFontDataFactory","DOMStandardFontDataFactory","NodeCanvasFactory","NodeCMapReaderFactory","NodeStandardFontDataFactory","require","createPDFNetworkStream","setPDFNetworkStreamFactory","pdfNetworkStreamFactory","getDocument","src","task","PDFDocumentLoadingTask","source","PDFDataRangeTransport","range","params","rangeTransport","worker","window","location","href","Buffer","isNaN","CMapReaderFactory","StandardFontDataFactory","ignoreErrors","stopAtErrors","fontExtraProperties","pdfBug","enableXfa","rangeChunkSize","docBaseUrl","isDataScheme","maxImageSize","cMapUrl","standardFontDataUrl","useWorkerFetch","disableFontFace","useSystemFonts","ownerDocument","globalThis","document","disableRange","disableStream","disableAutoFetch","workerParams","port","GlobalWorkerOptions","workerPort","PDFWorker","fromPort","_worker","docId","then","destroyed","workerIdPromise","_fetchDocument","networkStreamPromise","networkStream","PDFDataTransportStream","initialData","progressiveDone","contentDispositionFilename","httpHeaders","withCredentials","all","workerId","messageHandler","MessageHandler","transport","WorkerTransport","_transport","send","catch","_capability","pdfDataRangeTransport","sendWithPromise","apiVersion","password","onPassword","onProgress","onUnsupportedFeature","destroy","_rangeListeners","_progressListeners","_progressiveReadListeners","_progressiveDoneListeners","_readyCapability","addRangeListener","listener","addProgressListener","addProgressiveReadListener","addProgressiveDoneListener","onDataRange","begin","onDataProgress","loaded","total","onDataProgressiveRead","onDataProgressiveDone","transportReady","requestDataRange","end","abort","PDFDocumentProxy","pdfInfo","_pdfInfo","deprecated","fingerprints","stats","streamTypes","fontTypes","annotationStorage","numPages","isPureXfa","_htmlForXfa","allXfaHtml","getPage","pageNumber","getPageIndex","ref","getDestinations","getDestination","id","getPageLabels","getPageLayout","getPageMode","getViewerPreferences","getOpenAction","getAttachments","getJavaScript","getJSActions","getDocJSActions","getOutline","getOptionalContentConfig","getPermissions","getMetadata","getMarkInfo","getData","getDownloadInfo","downloadInfoCapability","cleanup","keepLoadedFonts","startCleanup","loadingTask","loadingParams","saveDocument","size","getFieldObjects","hasJSActions","getCalculationOrderIds","PDFPageProxy","pageIndex","pageInfo","_pageIndex","_pageInfo","_ownerDocument","_stats","StatTimer","_pdfBug","commonObjs","objs","PDFObjects","_bitmaps","Set","cleanupAfterRender","pendingCleanup","_intentStates","Map","_annotationPromises","rotate","userUnit","view","getViewport","scale","rotation","offsetX","offsetY","dontFlip","PageViewport","viewBox","getAnnotations","intent","intentArgs","getRenderingIntent","cacheKey","renderingIntent","annotations","annotation","titleObj","contentsObj","_jsActionsPromise","getPageJSActions","getXfa","children","render","canvasContext","viewport","annotationMode","imageLayer","canvasFactory","background","optionalContentConfigPromise","annotationCanvasMap","pageColors","arguments","renderInteractiveForms","includeAnnotationStorage","time","intentState","streamReaderCancelTimeout","clearTimeout","canvasFactoryInstance","intentPrint","displayReadyCapability","operatorList","fnArray","argsArray","lastChunk","_pumpOperatorList","complete","error","renderTasks","delete","internalRenderTask","_tryCleanup","_abortOperatorList","timeEnd","InternalRenderTask","callback","useRequestAnimationFrame","add","renderTask","transparency","optionalContentConfig","initializeGraphics","operatorListChanged","getOperatorList","opListReadCapability","opListTask","streamTextContent","disableCombineTextItems","includeMarkedContent","TEXT_CONTENT_CHUNK_SIZE","sendWithStream","combineTextItems","highWaterMark","textContent","items","getTextContent","xfa","XfaText","readableStream","pump","reader","read","done","assign","styles","getReader","getStructTree","_structTreePromise","_destroy","waitOn","values","force","completed","cancel","clear","bitmap","close","resetStats","_startRenderPage","_renderPageChunk","operatorListChunk","serializable","streamReader","RenderingCancelledException","setTimeout","curCacheKey","curIntentState","LoopbackPort","_listeners","_deferred","postMessage","transfers","event","structuredClone","call","addEventListener","removeEventListener","indexOf","splice","terminate","PDFWorkerUtil","isWorkerDisabled","fallbackWorkerSrc","fakeWorkerId","__non_webpack_require__","pdfjsFilePath","currentScript","isSameOrigin","otherUrl","base","origin","other","createCDNWrapper","wrapper","createObjectURL","Blob","workerPorts","WeakMap","has","_port","_webWorker","_messageHandler","_initializeFromPort","_initialize","on","Worker","_mainThreadWorkerMessageHandler","workerSrc","terminateEarly","onWorkerError","_setupFakeWorker","sendTest","testObj","_setupFakeWorkerGlobal","WorkerMessageHandler","workerHandler","setup","pdfjsWorker","loader","mainWorkerMessageHandler","eval","loadScript","getWorkerSrc","docStats","pageCache","pagePromises","metadataPromise","fontLoader","FontLoader","_onUnsupportedFeature","bind","styleElement","_params","isCompressed","cMapPacked","destroyCapability","_passwordCapability","_networkStream","_fullReader","_lastProgress","setupMessageHandler","AnnotationStorage","isOpList","annotationHash","hash","page","hasOwnProperty","resetModified","terminated","_getFieldObjectsPromise","_hasJSActionsPromise","cancelAllRequests","sink","getFullReader","evt","onPull","enqueue","onCancel","ready","readyReason","headersCapability","fullReader","headersReady","isStreamingSupported","isRangeSupported","contentLength","rangeReader","getRangeReader","_numPages","htmlForXfa","exception","updatePassword","exportedData","exportedError","fontRegistry","FontInspector","enabled","registerFont","fontAdded","FontFaceObject","finally","imageData","pageProxy","MAX_IMAGE_SIZE_TO_STORE","width","height","freeze","fetch","featureId","cachedPromise","num","gen","filename","results","OptionalContentConfig","metadata","Metadata","cleanupSuccessful","ensureObj","objId","settled","RenderTask","_internalRenderTask","onContinue","canvasInUse","WeakSet","operatorListIdx","running","graphicsReadyCallback","graphicsReady","_useRequestAnimationFrame","cancelled","_cancelBound","_continueBound","_continue","_scheduleNextBound","_scheduleNext","_nextBound","_next","_canvas","canvas","StepperManager","stepper","init","nextBreakPoint","getNextBreakPoint","gfx","CanvasGraphics","beginDrawing","endDrawing","updateOperatorList","requestAnimationFrame","executeOperatorList","version","build","SVG_NS","PixelsPerInch","CSS","PDF","PDF_TO_CSS_UNITS","BaseCanvasFactory","_document","_createCanvas","createElement","fetchData","asTypedArray","isValidFetchUrl","baseURI","response","ok","statusText","arrayBuffer","text","request","XMLHttpRequest","open","responseType","onreadystatechange","readyState","DONE","responseText","BaseCMapReaderFactory","_fetchData","compressionType","cMapData","BaseStandardFontDataFactory","DOMSVGFactory","BaseSVGFactory","_createSVG","createElementNS","centerX","centerY","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","offsetCanvasY","clone","convertToViewportPoint","x","y","convertToViewportRectangle","topLeft","bottomRight","convertToPdfPoint","trim","substring","toLowerCase","isPdfFile","getFilenameFromUrl","anchor","query","lastIndexOf","getPdfFilenameFromUrl","defaultFilename","reURI","reFilename","splitURI","exec","suggestedFilename","includes","started","times","now","start","outBuf","longest","duration","padEnd","removeScriptElement","script","onload","remove","onerror","head","documentElement","appendChild","pdfDateStringRegex","PDFDateString","toDateObject","input","RegExp","matches","year","parseInt","month","day","hour","minute","universalTimeRelation","offsetHour","offsetMinute","UTC","getXfaPageViewport","xfaPage","attributes","style","context","getContext","reset","canvasAndContext","svg","setAttribute","BaseFontLoader","nativeFontFaces","addNativeFontFace","nativeFontFace","fonts","insertRule","rule","getElementsByTagName","styleSheet","sheet","cssRules","attached","missingFile","isFontLoadingAPISupported","createNativeFontFace","family","createFontFaceRule","isSyncFontLoadingSupported","_queueLoadingCallback","_prepareFontLoadEvent","hasFonts","_loadTestFont","rules","fontsToLoad","GenericFontLoader","loadingContext","requests","nextRequestId","loadTestFontId","supported","navigator","userAgent","completeRequest","otherRequest","shift","getLoadTestFont","atob","int32","offset","spliceString","s","insert","chunk1","chunk2","ctx","called","isFontReady","fillText","getImageData","COMMENT_OFFSET","CFF_CHECKSUM_OFFSET","XXXX_VALUE","checksum","btoa","names","loadedName","div","visibility","position","top","left","span","fontFamily","body","translatedData","compiledGlyphs","cssFontInfo","FontFace","css","weight","fontWeight","italicAngle","mimetype","getPathGenerator","character","cmds","jsBuf","current","args","cmd","_storage","_modified","onSetModified","onResetModified","getValue","defaultValue","getRawValue","setValue","modified","entry","val","entries","_setModified","getAll","MurmurHash3_64","update","JSON","stringify","hexdigest","SEED","MASK_HIGH","MASK_LOW","seed","h1","h2","blockCounts","tailLength","dataUint32","k1","k2","C1","C2","C1_LOW","C2_LOW","hex1","hex2","MIN_FONT_SIZE","MAX_FONT_SIZE","MAX_GROUP_SIZE","EXECUTION_TIME","EXECUTION_STEPS","COMPILE_TYPE3_GLYPHS","MAX_SIZE_TO_COMPILE","FULL_CHUNK_HEIGHT","LINEWIDTH_SCALE_FACTOR","mirrorContextOperations","destCtx","_removeMirroring","__originalSave","__originalRestore","__originalRotate","__originalScale","__originalTranslate","translate","__originalTransform","__originalSetTransform","setTransform","__originalResetTransform","resetTransform","__originalClip","__originalMoveTo","__originalLineTo","__originalBezierCurveTo","bezierCurveTo","__originalRect","__originalClosePath","__originalBeginPath","beginPath","ctxSave","ctxRestore","ctxTranslate","ctxScale","ctxTransform","f","ctxSetTransform","ctxResetTransform","ctxRotate","angle","cp1x","cp1y","cp2x","cp2y","addContextCurrentTransform","_transformStack","mozCurrentTransform","_originalSave","_originalRestore","_originalRotate","_originalScale","_originalTranslate","_originalTransform","_originalSetTransform","_originalResetTransform","_transformMatrix","desc","getOwnPropertyDescriptor","getPrototypeOf","_setLineWidth","_getLineWidth","getLineWidth","_","getCurrentTransform","getCurrentTransformInverse","ad_bc","bc_ad","old","prev","pop","cosValue","cos","sinValue","sin","CachedCanvases","cache","getCanvas","trackTransform","canvasEntry","drawImageAtIntegerCoords","srcImg","srcX","srcY","srcW","srcH","destX","destY","destW","destH","tx","ty","tlX","rTlX","round","tlY","rTlY","brX","rWidth","brY","rHeight","sign","drawImage","scaleX","hypot","scaleY","compileType3Glyph","imgData","POINT_TO_PROCESS_LIMIT","POINT_TYPES","width1","points","j0","lineSize","elem","mask","count","sum","steps","Int32Array","path","outlines","coords","Path2D","p0","step","pp","drawOutline","o","l","ll","CanvasExtraState","alphaIsShape","fontSize","fontSizeScale","textMatrix","textMatrixScale","fontMatrix","leading","lineX","lineY","charSpacing","wordSpacing","textHScale","textRenderingMode","textRise","fillColor","strokeColor","patternFill","fillAlpha","strokeAlpha","lineWidth","activeSMask","transferMaps","startNewPathAndClipBox","clipBox","setCurrentPoint","updatePathMinMax","minX","minY","maxX","maxY","updateRectMinMax","updateScalingPathMinMax","updateCurvePathMinMax","box","getPathBoundingBox","pathType","PathType","xStrokePad","yStrokePad","updateClipFromPath","isEmptyClip","Infinity","getClippedPathBoundingBox","putBinaryImageData","ImageData","putImageData","partialChunkHeight","fullChunks","totalChunks","chunkImgData","createImageData","srcPos","destPos","dest","thisChunkHeight","elemsInThisChunk","transferMapRed","transferMapGreen","transferMapBlue","transferMapGray","kind","srcLength","dest32","dest32DataLength","fullSrcDiff","white","black","srcDiff","k","kEnd","kEndUnrolled","srcByte","hasTransferMaps","putBinaryImageMask","applyMaskImageData","copyCtxState","sourceCtx","properties","property","setLineDash","getLineDash","lineDashOffset","resetCtxToDefault","foregroundColor","strokeStyle","fillStyle","fillRule","globalAlpha","lineCap","lineJoin","miterLimit","globalCompositeOperation","composeSMaskBackdrop","r0","g0","b0","alpha","alpha_","composeSMaskAlpha","maskData","layerData","transferMap","composeSMaskLuminosity","genericComposeSMask","maskCtx","layerCtx","subtype","backdrop","layerOffsetX","layerOffsetY","maskOffsetX","maskOffsetY","hasBackdrop","composeFn","PIXELS_TO_PROCESS","chunkSize","ceil","row","chunkHeight","composeSMask","layerBox","layerWidth","layerHeight","getImageSmoothingEnabled","interpolate","fround","actualScale","devicePixelRatio","LINE_CAP_STYLES","LINE_JOIN_STYLES","NORMAL_CLIP","EO_CLIP","canvasCtx","stateStack","pendingClip","pendingEOFill","res","xobjs","groupStack","processingType3","baseTransform","baseTransformStack","groupLevel","smaskStack","smaskCounter","tempSMask","suspendedCtx","contentVisible","markedContentStack","cachedCanvases","cachedPatterns","viewportScale","outputScaleX","outputScaleY","backgroundColor","foreground","_cachedScaleForStroking","_cachedGetSinglePixelWidth","_cachedBitmapsMap","getObject","fallback","defaultBackgroundColor","fg","bg","isValidDefaultBg","defaultBg","cB","rB","gB","bB","newComp","lumB","selectColor","lumC","fillRect","transparentCanvas","compositeCtx","beginLayout","executionStartIdx","continueCallback","argsArrayLen","chunkOperations","endTime","fnId","breakIt","depObjId","objsPool","inSMaskMode","HTMLCanvasElement","endLayout","_scaleImage","img","widthScale","heightScale","paintWidth","paintHeight","tmpCanvasId","tmpCanvas","tmpCtx","newWidth","newHeight","clearRect","_createMaskCanvas","isPatternFill","currentTransform","scaled","maskCanvas","mainKey","withoutTranslation","cachedImage","maskToCanvas","cord1","cord2","drawnWidth","drawnHeight","fillCanvas","fillCtx","mozCurrentTransformInverse","imageSmoothingEnabled","inverse","getPattern","limit","dashArray","dashPhase","flatness","states","state","checkSMaskState","beginSMaskMode","endSMaskMode","cacheId","scratchCanvas","compose","dirtyBox","floor","ops","startX","startY","isScalingMatrix","minMaxForBezier","xw","yh","consumePath","rescaleAndStroke","needRestore","paths","pendingTextPaths","addToPath","spacing","fontRefName","fontObj","fontDirection","isType3Font","bold","italic","typeface","fallbackName","browserFontSize","mode","rise","paintChar","patternTransform","fillStrokeMode","isAddToPathSet","strokeText","isFontSubpixelAAEnabled","glyphs","showType3Text","glyphsLength","vertical","spacingDir","defaultVMetrics","widthAdvanceScale","simpleFillText","pattern","getSinglePixelWidth","glyph","restoreNeeded","isSpace","fontChar","accent","scaledX","scaledY","vmetric","vx","vy","remeasure","measuredWidth","measureText","characterScaleX","isInFont","scaledAccentX","scaledAccentY","charWidth","isTextInvisible","spacingLength","charProcOperatorList","operatorListId","transformed","xWidth","yWidth","llx","lly","urx","ury","getColorN_Pattern","IR","color","canvasGraphicsFactory","createCanvasGraphics","TilingPattern","_getPattern","matrix","getShadingPattern","SHADING","inv","bl","br","ul","ur","bbox","isArray","group","currentCtx","isolated","knockout","canvasBounds","groupCtx","startTransformInverse","currentMtx","hasOwnCanvas","canvasWidth","canvasHeight","annotationCanvas","viewportScaleFactorStr","savedCtx","compiled","skewX","skewY","positions","trans","images","image","w","h","imgToPaint","HTMLElement","getCanvasPosition","appendImage","tag","visible","isVisible","isContentVisible","isEmpty","absDet","normX","normY","getScaleForStroking","scaledXLineWidth","scaledYLineWidth","baseArea","saveRestore","savedMatrix","savedDashes","savedDashOffset","op","applyBoundingBox","region","BaseShadingPattern","RadialAxialShadingPattern","_type","_bbox","_colorStops","_p0","_p1","_r0","_r1","_createGradient","grad","createLinearGradient","createRadialGradient","colorStop","addColorStop","owner","ownerBBox","createPattern","domMatrix","DOMMatrix","drawTriangle","c1","c2","c3","colors","rowSize","tmp","c1r","c1g","c1b","c2r","c2g","c2b","c3r","c3g","c3b","xa","car","cag","cab","xb","cbr","cbg","cbb","x1_","x2_","drawFigure","figure","ps","cs","verticesPerRow","rows","cols","q","MeshShadingPattern","_coords","_colors","_figures","_bounds","_background","_createMeshCanvas","combinedScale","EXPECTED_SCALE","MAX_PATTERN_SIZE","BORDER_SIZE","boundsWidth","boundsHeight","paddedWidth","paddedHeight","matrixScale","temporaryPatternCanvas","DummyShadingPattern","PaintType","COLORED","UNCOLORED","xstep","ystep","paintType","tilingType","createPatternCanvas","curMatrixScale","dimx","getSizeAndScale","dimy","graphics","setFillAndStrokeStyleToContext","adjustedX0","adjustedY0","adjustedX1","adjustedY1","clipBbox","realOutputSize","maxSize","bboxWidth","bboxHeight","cssColor","inverseDecode","opaque","zeroMapping","oneMapping","widthInSource","widthRemainder","CallbackKind","DATA","ERROR","StreamKind","CANCEL","CANCEL_COMPLETE","CLOSE","ENQUEUE","PULL","PULL_COMPLETE","START_COMPLETE","wrapReason","sourceName","targetName","comObj","callbackId","streamId","streamSinks","streamControllers","callbackCapabilities","actionHandler","_onComObjOnMessage","stream","_processStreamMessage","action","cbSourceName","cbTargetName","result","_createStreamSink","actionName","handler","ah","queueingStrategy","ReadableStream","controller","startCapability","startCall","pullCall","cancelCall","isClosed","desiredSize","pull","pullCapability","cancelCapability","self","streamSink","isCancelled","lastDesiredSize","sinkCapability","success","streamController","_deleteStreamController","allSettled","metadataMap","parsedData","rawData","getRaw","OptionalContentGroup","creator","_order","_groups","order","groups","baseState","off","_evaluateVisibilityExpression","array","operator","element","expression","policy","ids","setVisibility","getOrder","from","getGroups","getGroup","_queuedChunks","_progressiveDone","_contentDispositionFilename","_pdfDataRangeTransport","_isStreamingSupported","_isRangeSupported","_contentLength","_fullRequestReader","_rangeReaders","_onReceiveData","_onProgress","_onProgressiveDone","_enqueue","found","some","_begin","_progressiveDataLength","_loaded","firstReader","_removeRangeReader","queuedChunks","PDFDataTransportStreamReader","PDFDataTransportStreamRangeReader","_stream","_done","_filename","_requests","_headersReady","requestCapability","_end","_queuedChunk","requestsCapability","output","walk","node","shouldBuildText","child","fs","readFile","Canvas","createCanvas","DEFAULT_TAB_INDEX","GetElementsByNameSet","getRectDims","AnnotationElementFactory","parameters","annotationType","LinkAnnotationElement","TextAnnotationElement","fieldType","TextWidgetAnnotationElement","radioButton","RadioButtonWidgetAnnotationElement","checkBox","CheckboxWidgetAnnotationElement","PushButtonWidgetAnnotationElement","ChoiceWidgetAnnotationElement","WidgetAnnotationElement","PopupAnnotationElement","FreeTextAnnotationElement","LineAnnotationElement","SquareAnnotationElement","CircleAnnotationElement","PolylineAnnotationElement","CaretAnnotationElement","InkAnnotationElement","PolygonAnnotationElement","HighlightAnnotationElement","UnderlineAnnotationElement","SquigglyAnnotationElement","StrikeOutAnnotationElement","StampAnnotationElement","FileAttachmentAnnotationElement","AnnotationElement","isRenderable","ignoreBorder","createQuadrilaterals","layer","linkService","downloadManager","imageResourcesPath","renderForms","svgFactory","enableScripting","_fieldObjects","fieldObjects","_mouseState","mouseState","container","_createContainer","quadrilaterals","_createQuadrilaterals","transformOrigin","borderStyle","borderWidth","horizontalRadius","horizontalCornerRadius","verticalRadius","verticalCornerRadius","radius","borderRadius","borderBottomStyle","borderColor","_commonActions","setColor","jsName","styleName","detail","target","ColorConverters","display","hidden","print","focus","preventScroll","userName","title","readonly","removeAttribute","required","bgColor","fgColor","textColor","_dispatchEventFromSandbox","actions","jsEvent","commonActions","_setDefaultPropertiesFromJS","storedData","quadPoints","savedRect","quadPoint","_createPopup","trigger","popupElement","PopupElement","modificationDate","richText","hideWrapper","popup","_renderQuadrilaterals","className","quadrilateral","_getElementsByName","skipId","fields","fieldObj","exportValues","exportValue","domElement","getElementById","getElementsByName","platform","isWin","isMac","isTooltipOnly","resetForm","Action","link","addLinkAttributes","newWindow","_bindNamedAction","_bindLink","hasClickAction","_bindJSAction","_bindResetFormAction","index","linkElement","cloneNode","destination","getDestinationHash","onclick","goToDestination","getAnchorUrl","executeNamedAction","eventBus","dispatch","otherClickAction","resetFormFields","refs","resetFormRefs","include","allFields","fieldIds","fieldName","field","storage","allIds","dispatchEvent","Event","hasPopup","alt","dataset","l10nId","l10nArgs","alternativeText","_getKeyModifier","ctrlKey","metaKey","_setEventListener","baseName","eventName","valueGetter","shiftKey","modifier","_setEventListeners","getter","_setBackgroundColor","hasAppearance","fieldValue","setPropertyOnSiblings","keyInStorage","formattedValue","elementData","userValue","valueOnFocus","multiLine","disabled","readOnly","tabIndex","defaultFieldValue","blurListener","scrollLeft","activeElement","selRange","setSelectionRange","commitKey","willCommit","selStart","selectionStart","selEnd","selectionEnd","_blurListener","isDown","Keystroke","inputType","preventDefault","change","maxLen","maxLength","comb","fieldWidth","combWidth","classList","letterSpacing","verticalAlign","_setTextStyle","TEXT_ALIGNMENT","fontColor","defaultAppearanceData","textAlignment","textAlign","checked","checkbox","curChecked","buttonValue","radio","pdfButtonValue","fontSizeStyle","selectElement","combo","multiSelect","multiple","option","selected","optionElement","displayValue","isExport","selectedIndex","filter","getItems","multipleSelection","findIndex","insertBefore","indices","editable","changeEx","keyDown","IGNORE_TYPES","parentType","selector","parentId","parentElements","querySelectorAll","parentRect","popupLeft","popupTop","pinned","BACKGROUND_ENLIGHT","hideElement","dir","dateObject","toLocaleDateString","toLocaleTimeString","XfaLayer","xfaHtml","html","lastChild","contents","_formatContents","_toggle","_show","_hide","lines","split","line","createTextNode","pin","zIndex","unpin","lineCoordinates","append","square","circle","containerClassName","svgElementName","coordinate","vertices","polyline","inkList","inkLists","content","file","_download","openOrDownloadData","AnnotationLayer","sortedAnnotations","popupAnnotations","rendered","renderedElement","prepend","setAnnotationCanvasMap","ownMatrix","elements","ownTransform","querySelector","firstChild","nodeName","replaceChild","makeColorComp","CMYK_G","G_CMYK","G_RGB","G_HTML","G","RGB_G","RGB_HTML","R","B","T_HTML","CMYK_RGB","CMYK_HTML","components","RGB_CMYK","setupStorage","xfaOn","xfaOff","getAttribute","setAttributes","isHTMLAnchorElement","HTMLAnchorElement","dataId","rootHtml","stack","rootDiv","textDivs","parent","childHtml","xmlns","el","MAX_TEXT_DIVS_TO_RENDER","DEFAULT_FONT_SIZE","DEFAULT_FONT_ASCENT","ascentCache","AllWhitespaceRegexp","getAscent","cachedAscent","metrics","ascent","fontBoundingBoxAscent","descent","fontBoundingBoxDescent","ratio","pixels","appendText","geom","textDiv","textDivProperties","_enhanceTextSelection","hasText","hasEOL","originalTransform","paddingBottom","paddingLeft","paddingRight","paddingTop","_textDivs","_viewport","atan2","fontName","fontHeight","fontAscent","_fontInspectorEnabled","shouldScaleText","absScaleX","absScaleY","_textDivProperties","_textContentStream","_layoutText","angleCos","angleSin","divWidth","divHeight","right","bottom","_canceled","textDivsLength","_renderingDone","findPositiveMin","ts","expand","expanded","expandBounds","divProperties","Float64Array","jj","boxScale","boxes","x1New","x2New","expandBoundsLTR","sort","fakeBoundary","horizon","boundary","horizonPart","affectedBoundary","maxXNew","xNew","changedHorizon","lastBoundary","useBoundary","unshift","used","concat","TextLayerRenderTask","textContentStream","textContentItemsStr","enhanceTextSelection","_textContent","_container","_textContentItemsStr","_reader","_layoutTextLastFontSize","_layoutTextLastFontFamily","_layoutTextCtx","_renderTimer","_processItems","styleCache","len","parentNode","_render","timeout","textItems","textStyles","expandTextDivs","expandDivs","transformBuf","paddingBuf","divProps","padding","renderTextLayer","renderParameters","SVGGraphics","SVG_DEFAULTS","fontStyle","XML_NS","XLINK_NS","contentType","forceDataSchema","digits","b1","b2","b3","d1","d2","d3","d4","convertImgDataToPng","PNG_HEADER","CHUNK_WRAPPER_SIZE","crcTable","crc32","crc","writePngChunk","adler32","deflateSync","literals","deflateSyncUncompressed","maxBlockLength","deflateBlocks","idat","pi","adler","encode","isMask","bitDepth","colorType","offsetLiterals","offsetBytes","ihdr","pngLength","SVGExtraState","dependencies","activeClipUrl","clipGroup","maskId","opListToTree","opList","opTree","opListElement","fn","pf","toFixed","pm","acos","clipCount","maskCount","shadingCount","transformMatrix","transformStack","extraStack","embedFonts","embeddedFonts","cssStyle","_operatorIdMapping","tgrp","executeOpTree","loadDependencies","getSVG","svgElement","convertOpList","operatorIdMapping","opTreeElement","lineMatrix","xcoords","ycoords","tspan","setAttributeNS","txtElement","txtgrp","lineWidthScale","_setStrokeAttributes","_ensureTransformGroup","addFontStyle","defs","hasChildNodes","setStrokeAlpha","setFillAlpha","_makeColorN_Pattern","_makeShadingPattern","_makeTilingPattern","tilingId","tx0","ty0","tx1","ty1","xscale","yscale","txstep","tystep","tiling","childNodes","shadingId","colorStops","gradient","point0","point1","focalPoint","circlePoint","focalRadius","circleRadius","stop","getAttributeNS","clipId","clipPath","clipElement","imgSrc","cliprect","imgEl","definitions","rootGroup","_ensureClipGroup","http","https","fileUriRegex","parseUrl","sourceUrl","parsedUrl","parse","host","PDFNodeStream","isHttp","isFsUrl","_rangeRequestReaders","PDFNodeStreamFsFullReader","PDFNodeStreamFullReader","PDFNodeStreamFsRangeReader","PDFNodeStreamRangeReader","BaseFullReader","_url","_storedError","_disableRange","_rangeChunkSize","_readableStream","_readCapability","_headersCapability","_error","_setReadableStream","BaseRangeReader","createRequestOptions","headers","auth","hostname","method","handleResponse","statusCode","getResponseHeader","allowRangeRequests","suggestedLength","validateRangeRequestCapabilities","extractFilenameFromHeader","_request","_httpHeaders","Range","lstat","stat","createReadStream","returnValues","contentEncoding","contentDisposition","getFilenameFromContentDispositionHeader","createResponseStatusError","validateResponseStatus","needsEncodingFixup","toParamRegExp","rfc2616unquote","rfc5987decode","rfc2047decode","fixupEncoding","rfc2231getparam","attributePattern","flags","textdecode","contentDispositionStr","iter","quot","part","parts","quotindex","extvalue","encodingend","langvalue","charset","hex","OK_RESPONSE","PARTIAL_CONTENT_RESPONSE","getArrayBuffer","xhr","NetworkManager","getXhr","NetworkManager_getXhr","currXhrId","pendingRequests","requestRange","listeners","requestFull","xhrId","pendingRequest","setRequestHeader","expectedStatus","onError","onStateChange","onprogress","onHeadersReceived","onDone","xhrStatus","ok_response_on_range_request","rangeHeader","getRequestXhr","isPendingRequest","abortRequest","PDFNetworkStream","_source","_manager","_onRangeRequestReaderClosed","PDFNetworkStreamFullRequestReader","PDFNetworkStreamRangeRequestReader","onClosed","manager","_onHeadersReceived","_onDone","_onError","_fullRequestId","_headersReceivedCapability","_cachedChunks","fullRequestXhrId","fullRequestXhr","lengthComputable","_requestId","_close","createFetchOptions","abortController","signal","credentials","redirect","createHeaders","Headers","PDFFetchStream","PDFFetchStreamReader","PDFFetchStreamRangeReader","_withCredentials","AbortController","_abortController","_headers","__webpack_modules__","pdfjsVersion","pdfjsBuild"],"sources":["webpack://pdfjs-dist/build/pdf/webpack/universalModuleDefinition","webpack://pdfjs-dist/build/pdf/src/shared/util.js","webpack://pdfjs-dist/build/pdf/src/shared/compatibility.js","webpack://pdfjs-dist/build/pdf/src/shared/is_node.js","webpack://pdfjs-dist/build/pdf/src/display/api.js","webpack://pdfjs-dist/build/pdf/src/display/display_utils.js","webpack://pdfjs-dist/build/pdf/src/display/base_factory.js","webpack://pdfjs-dist/build/pdf/src/display/font_loader.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_storage.js","webpack://pdfjs-dist/build/pdf/src/shared/murmurhash3.js","webpack://pdfjs-dist/build/pdf/src/display/canvas.js","webpack://pdfjs-dist/build/pdf/src/display/pattern_helper.js","webpack://pdfjs-dist/build/pdf/src/shared/image_utils.js","webpack://pdfjs-dist/build/pdf/src/display/worker_options.js","webpack://pdfjs-dist/build/pdf/src/shared/message_handler.js","webpack://pdfjs-dist/build/pdf/src/display/metadata.js","webpack://pdfjs-dist/build/pdf/src/display/optional_content_config.js","webpack://pdfjs-dist/build/pdf/src/display/transport_stream.js","webpack://pdfjs-dist/build/pdf/src/display/xfa_text.js","webpack://pdfjs-dist/build/pdf/src/display/node_utils.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_layer.js","webpack://pdfjs-dist/build/pdf/src/shared/scripting_utils.js","webpack://pdfjs-dist/build/pdf/src/display/xfa_layer.js","webpack://pdfjs-dist/build/pdf/src/display/text_layer.js","webpack://pdfjs-dist/build/pdf/src/display/svg.js","webpack://pdfjs-dist/build/pdf/src/display/node_stream.js","webpack://pdfjs-dist/build/pdf/src/display/network_utils.js","webpack://pdfjs-dist/build/pdf/src/display/content_disposition.js","webpack://pdfjs-dist/build/pdf/src/display/network.js","webpack://pdfjs-dist/build/pdf/src/display/fetch_stream.js","webpack://pdfjs-dist/build/pdf/webpack/bootstrap","webpack://pdfjs-dist/build/pdf/src/pdf.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = factory();\n})(this, () => {\nreturn ","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./compatibility.js\";\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\n/**\n * Refer to the `WorkerTransport.getRenderingIntent`-method in the API, to see\n * how these flags are being used:\n *  - ANY, DISPLAY, and PRINT are the normal rendering intents, note the\n *    `PDFPageProxy.{render, getOperatorList, getAnnotations}`-methods.\n *  - ANNOTATIONS_FORMS, ANNOTATIONS_STORAGE, ANNOTATIONS_DISABLE control which\n *    annotations are rendered onto the canvas (i.e. by being included in the\n *    operatorList), note the `PDFPageProxy.{render, getOperatorList}`-methods\n *    and their `annotationMode`-option.\n *  - OPLIST is used with the `PDFPageProxy.getOperatorList`-method, note the\n *    `OperatorList`-constructor (on the worker-thread).\n */\nconst RenderingIntentFlag = {\n  ANY: 0x01,\n  DISPLAY: 0x02,\n  PRINT: 0x04,\n  ANNOTATIONS_FORMS: 0x10,\n  ANNOTATIONS_STORAGE: 0x20,\n  ANNOTATIONS_DISABLE: 0x40,\n  OPLIST: 0x100,\n};\n\nconst AnnotationMode = {\n  DISABLE: 0,\n  ENABLE: 1,\n  ENABLE_FORMS: 2,\n  ENABLE_STORAGE: 3,\n};\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\",\n};\n\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\",\n};\n\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\",\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst AnnotationActionEventType = {\n  E: \"Mouse Enter\",\n  X: \"Mouse Exit\",\n  D: \"Mouse Down\",\n  U: \"Mouse Up\",\n  Fo: \"Focus\",\n  Bl: \"Blur\",\n  PO: \"PageOpen\",\n  PC: \"PageClose\",\n  PV: \"PageVisible\",\n  PI: \"PageInvisible\",\n  K: \"Keystroke\",\n  F: \"Format\",\n  V: \"Validate\",\n  C: \"Calculate\",\n};\n\nconst DocumentActionEventType = {\n  WC: \"WillClose\",\n  WS: \"WillSave\",\n  DS: \"DidSave\",\n  WP: \"WillPrint\",\n  DP: \"DidPrint\",\n};\n\nconst PageActionEventType = {\n  O: \"PageOpen\",\n  C: \"PageClose\",\n};\n\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\", // PDF short name is 'RL', but telemetry requires three chars.\n};\n\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1STANDARD: \"TYPE1STANDARD\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  /** @deprecated unused */\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst UNSUPPORTED_FEATURES = {\n  /** @deprecated unused */\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  signatures: \"signatures\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  /** @deprecated unused */\n  font: \"font\",\n  errorTilingPattern: \"errorTilingPattern\",\n  errorExtGState: \"errorExtGState\",\n  errorXObject: \"errorXObject\",\n  errorFontLoadType3: \"errorFontLoadType3\",\n  errorFontState: \"errorFontState\",\n  errorFontMissing: \"errorFontMissing\",\n  errorFontTranslate: \"errorFontTranslate\",\n  errorColorSpace: \"errorColorSpace\",\n  errorOperatorList: \"errorOperatorList\",\n  errorFontToUnicode: \"errorFontToUnicode\",\n  errorFontLoadNative: \"errorFontLoadNative\",\n  errorFontBuildPath: \"errorFontBuildPath\",\n  errorFontGetPath: \"errorFontGetPath\",\n  errorMarkedContent: \"errorMarkedContent\",\n  errorContentSubStream: \"errorContentSubStream\",\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs use one of the allowed protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} [baseUrl] - An absolute URL.\n * @param {Object} [options]\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl = null, options = null) {\n  if (!url) {\n    return null;\n  }\n  try {\n    if (options && typeof url === \"string\") {\n      // Let URLs beginning with \"www.\" default to using the \"http://\" protocol.\n      if (options.addDefaultProtocol && url.startsWith(\"www.\")) {\n        const dots = url.match(/\\./g);\n        // Avoid accidentally matching a *relative* URL pointing to a file named\n        // e.g. \"www.pdf\" or similar.\n        if (dots && dots.length >= 2) {\n          url = `http://${url}`;\n        }\n      }\n\n      // According to ISO 32000-1:2008, section 12.6.4.7, URIs should be encoded\n      // in 7-bit ASCII. Some bad PDFs use UTF-8 encoding; see bug 1122280.\n      if (options.tryConvertEncoding) {\n        try {\n          url = stringToUTF8String(url);\n        } catch (ex) {}\n      }\n    }\n\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      prop in obj,\n      `shadow: Property \"${prop && prop.toString()}\" not found in object.`\n    );\n  }\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\n/**\n * @type {any}\n */\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message, name) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg, \"PasswordException\");\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg, \"UnknownErrorException\");\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"InvalidPDFException\");\n  }\n}\n\nclass MissingPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"MissingPDFException\");\n  }\n}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg, \"UnexpectedResponseException\");\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {\n  constructor(msg) {\n    super(msg, \"FormatError\");\n  }\n}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {\n  constructor(msg) {\n    super(msg, \"AbortException\");\n  }\n}\n\nfunction bytesToString(bytes) {\n  if (\n    typeof bytes !== \"object\" ||\n    bytes === null ||\n    bytes.length === undefined\n  ) {\n    unreachable(\"Invalid argument for bytesToString\");\n  }\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  if (typeof str !== \"string\") {\n    unreachable(\"Invalid argument for stringToBytes\");\n  }\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\n/**\n * Gets length of the array (Array, Uint8Array, or string) in bytes.\n * @param {Array<any>|Uint8Array|string} arr\n * @returns {number}\n */\n// eslint-disable-next-line consistent-return\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  if (arr.byteLength !== undefined) {\n    return arr.byteLength;\n  }\n  unreachable(\"Invalid argument for arrayByteLength\");\n}\n\n/**\n * Combines array items (arrays) into single Uint8Array object.\n * @param {Array<Array<any>|Uint8Array|string>} arr - the array of the arrays\n *   (Array, Uint8Array, or string).\n * @returns {Uint8Array}\n */\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n  // Shortcut: if first and only item is Uint8Array, return it.\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  let resultLength = 0;\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\n\nfunction string32(value) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      typeof value === \"number\" && Math.abs(value) < 2 ** 32,\n      `string32: Unexpected input \"${value}\".`\n    );\n  }\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\nfunction objectSize(obj) {\n  return Object.keys(obj).length;\n}\n\n// Ensure that the returned Object has a `null` prototype; hence why\n// `Object.fromEntries(...)` is not used.\nfunction objectFromMap(map) {\n  const obj = Object.create(null);\n  for (const [key, value] of map) {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nclass FeatureTest {\n  static get isLittleEndian() {\n    return shadow(this, \"isLittleEndian\", isLittleEndian());\n  }\n\n  static get isEvalSupported() {\n    return shadow(this, \"isEvalSupported\", isEvalSupported());\n  }\n\n  static get isOffscreenCanvasSupported() {\n    return shadow(\n      this,\n      \"isOffscreenCanvasSupported\",\n      typeof OffscreenCanvas !== \"undefined\"\n    );\n  }\n}\n\nconst hexNumbers = [...Array(256).keys()].map(n =>\n  n.toString(16).padStart(2, \"0\")\n);\n\nclass Util {\n  static makeHexColor(r, g, b) {\n    return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n  }\n\n  // Apply a scaling matrix to some min/max values.\n  // If a scaling factor is negative then min and max must be\n  // swaped.\n  static scaleMinMax(transform, minMax) {\n    let temp;\n    if (transform[0]) {\n      if (transform[0] < 0) {\n        temp = minMax[0];\n        minMax[0] = minMax[1];\n        minMax[1] = temp;\n      }\n      minMax[0] *= transform[0];\n      minMax[1] *= transform[0];\n\n      if (transform[3] < 0) {\n        temp = minMax[2];\n        minMax[2] = minMax[3];\n        minMax[3] = temp;\n      }\n      minMax[2] *= transform[3];\n      minMax[3] *= transform[3];\n    } else {\n      temp = minMax[0];\n      minMax[0] = minMax[2];\n      minMax[2] = temp;\n      temp = minMax[1];\n      minMax[1] = minMax[3];\n      minMax[3] = temp;\n\n      if (transform[1] < 0) {\n        temp = minMax[2];\n        minMax[2] = minMax[3];\n        minMax[3] = temp;\n      }\n      minMax[2] *= transform[1];\n      minMax[3] *= transform[1];\n\n      if (transform[2] < 0) {\n        temp = minMax[0];\n        minMax[0] = minMax[1];\n        minMax[1] = temp;\n      }\n      minMax[0] *= transform[2];\n      minMax[1] *= transform[2];\n    }\n    minMax[0] += transform[4];\n    minMax[1] += transform[4];\n    minMax[2] += transform[5];\n    minMax[3] += transform[5];\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  static apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2],\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'null'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    const xLow = Math.max(\n      Math.min(rect1[0], rect1[2]),\n      Math.min(rect2[0], rect2[2])\n    );\n    const xHigh = Math.min(\n      Math.max(rect1[0], rect1[2]),\n      Math.max(rect2[0], rect2[2])\n    );\n    if (xLow > xHigh) {\n      return null;\n    }\n    const yLow = Math.max(\n      Math.min(rect1[1], rect1[3]),\n      Math.min(rect2[1], rect2[3])\n    );\n    const yHigh = Math.min(\n      Math.max(rect1[1], rect1[3]),\n      Math.max(rect2[1], rect2[3])\n    );\n    if (yLow > yHigh) {\n      return null;\n    }\n\n    return [xLow, yLow, xHigh, yHigh];\n  }\n\n  // From https://github.com/adobe-webplatform/Snap.svg/blob/b365287722a72526000ac4bfcf0ce4cac2faa015/src/path.js#L852\n  static bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3) {\n    const tvalues = [],\n      bounds = [[], []];\n    let a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n    for (let i = 0; i < 2; ++i) {\n      if (i === 0) {\n        b = 6 * x0 - 12 * x1 + 6 * x2;\n        a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n        c = 3 * x1 - 3 * x0;\n      } else {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n      if (Math.abs(a) < 1e-12) {\n        if (Math.abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      sqrtb2ac = Math.sqrt(b2ac);\n      if (b2ac < 0) {\n        continue;\n      }\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    let j = tvalues.length,\n      mt;\n    const jlen = j;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      bounds[0][j] =\n        mt * mt * mt * x0 +\n        3 * mt * mt * t * x1 +\n        3 * mt * t * t * x2 +\n        t * t * t * x3;\n      bounds[1][j] =\n        mt * mt * mt * y0 +\n        3 * mt * mt * t * y1 +\n        3 * mt * t * t * y2 +\n        t * t * t * y3;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    bounds[0].length = bounds[1].length = jlen + 2;\n\n    return [\n      Math.min(...bounds[0]),\n      Math.min(...bounds[1]),\n      Math.max(...bounds[0]),\n      Math.max(...bounds[1]),\n    ];\n  }\n}\n\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8,\n  0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192,\n  0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018,\n  0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d,\n  0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac,\n];\n\nfunction stringToPDFString(str) {\n  if (str[0] >= \"\\xEF\") {\n    let encoding;\n    if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n      encoding = \"utf-16be\";\n    } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n      encoding = \"utf-16le\";\n    } else if (str[0] === \"\\xEF\" && str[1] === \"\\xBB\" && str[2] === \"\\xBF\") {\n      encoding = \"utf-8\";\n    }\n\n    if (encoding) {\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const buffer = stringToBytes(str);\n        return decoder.decode(buffer);\n      } catch (ex) {\n        warn(`stringToPDFString: \"${ex}\".`);\n      }\n    }\n  }\n  // ISO Latin 1\n  const strBuf = [];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const code = PDFStringTranslateTable[str.charCodeAt(i)];\n    strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction escapeString(str) {\n  // replace \"(\", \")\", \"\\n\", \"\\r\" and \"\\\"\n  // by \"\\(\", \"\\)\", \"\\\\n\", \"\\\\r\" and \"\\\\\"\n  // in order to write it in a PDF file.\n  return str.replace(/([()\\\\\\n\\r])/g, match => {\n    if (match === \"\\n\") {\n      return \"\\\\n\";\n    } else if (match === \"\\r\") {\n      return \"\\\\r\";\n    }\n    return `\\\\${match}`;\n  });\n}\n\nfunction isAscii(str) {\n  return /^[\\x00-\\x7F]*$/.test(str);\n}\n\nfunction stringToUTF16BEString(str) {\n  const buf = [\"\\xFE\\xFF\"];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.charCodeAt(i);\n    buf.push(\n      String.fromCharCode((char >> 8) & 0xff),\n      String.fromCharCode(char & 0xff)\n    );\n  }\n  return buf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0, ii = arr1.length; i < ii; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getModificationDate(date = new Date()) {\n  const buffer = [\n    date.getUTCFullYear().toString(),\n    (date.getUTCMonth() + 1).toString().padStart(2, \"0\"),\n    date.getUTCDate().toString().padStart(2, \"0\"),\n    date.getUTCHours().toString().padStart(2, \"0\"),\n    date.getUTCMinutes().toString().padStart(2, \"0\"),\n    date.getUTCSeconds().toString().padStart(2, \"0\"),\n  ];\n\n  return buffer.join(\"\");\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise<any>} promise - A Promise object.\n * @property {boolean} settled - If the Promise has been fulfilled/rejected.\n * @property {function} resolve - Fulfills the Promise.\n * @property {function} reject - Rejects the Promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias createPromiseCapability\n *\n * @returns {PromiseCapability}\n */\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    },\n  });\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = function (data) {\n      isSettled = true;\n      resolve(data);\n    };\n    capability.reject = function (reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nexport {\n  AbortException,\n  AnnotationActionEventType,\n  AnnotationBorderStyleType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMarkedState,\n  AnnotationMode,\n  AnnotationReplyType,\n  AnnotationReviewState,\n  AnnotationStateModelType,\n  AnnotationType,\n  arrayByteLength,\n  arraysToBytes,\n  assert,\n  BaseException,\n  bytesToString,\n  CMapCompressionType,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  DocumentActionEventType,\n  escapeString,\n  FeatureTest,\n  FONT_IDENTITY_MATRIX,\n  FontType,\n  FormatError,\n  getModificationDate,\n  getVerbosityLevel,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isArrayEqual,\n  isAscii,\n  MissingPDFException,\n  objectFromMap,\n  objectSize,\n  OPS,\n  PageActionEventType,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  RenderingIntentFlag,\n  setVerbosityLevel,\n  shadow,\n  StreamType,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF16BEString,\n  stringToUTF8String,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  utf8StringToString,\n  Util,\n  VerbosityLevel,\n  warn,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport { isNodeJS } from \"./is_node.js\";\n\n// Skip compatibility checks for modern builds and if we already ran the module.\nif (\n  (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"SKIP_BABEL\")) &&\n  !globalThis._pdfjsCompatibilityChecked\n) {\n  globalThis._pdfjsCompatibilityChecked = true;\n\n  // Support: Node.js\n  (function checkNodeBtoa() {\n    if (globalThis.btoa || !isNodeJS) {\n      return;\n    }\n    globalThis.btoa = function (chars) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(chars, \"binary\").toString(\"base64\");\n    };\n  })();\n\n  // Support: Node.js\n  (function checkNodeAtob() {\n    if (globalThis.atob || !isNodeJS) {\n      return;\n    }\n    globalThis.atob = function (input) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(input, \"base64\").toString(\"binary\");\n    };\n  })();\n\n  // Support: Node.js\n  (function checkDOMMatrix() {\n    if (globalThis.DOMMatrix || !isNodeJS) {\n      return;\n    }\n    globalThis.DOMMatrix = __non_webpack_require__(\n      \"dommatrix/dist/dommatrix.js\"\n    );\n  })();\n\n  // Provides support for *recent* additions to the Promise specification,\n  // however basic Promise support is assumed to be available natively.\n  // Support: Firefox<71, Chrome<76, Safari<13, Node.js<12.9.0\n  (function checkPromise() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `Promise` shouldn't\n      // need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    if (globalThis.Promise.allSettled) {\n      return;\n    }\n    globalThis.Promise = require(\"core-js/es/promise/index.js\");\n  })();\n\n  // Support: Node.js\n  (function checkReadableStream() {\n    if (globalThis.ReadableStream || !isNodeJS) {\n      return;\n    }\n    globalThis.ReadableStream = __non_webpack_require__(\n      \"web-streams-polyfill/dist/ponyfill.js\"\n    ).ReadableStream;\n  })();\n\n  // Support: Firefox<94, Chrome<98, Safari<15.4, Node.js<17.0.0\n  (function checkStructuredClone() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `structuredClone`\n      // shouldn't need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    if (globalThis.structuredClone) {\n      return;\n    }\n    require(\"core-js/web/structured-clone.js\");\n  })();\n}\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://www.electronjs.org/docs/api/process#processversionselectron-readonly\n// https://www.electronjs.org/docs/api/process#processtype-readonly\nconst isNodeJS =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions.nw &&\n  !(process.versions.electron && process.type && process.type !== \"browser\");\n\nexport { isNodeJS };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module pdfjsLib\n */\n\nimport {\n  AbortException,\n  AnnotationMode,\n  assert,\n  createPromiseCapability,\n  getVerbosityLevel,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  MissingPDFException,\n  PasswordException,\n  RenderingIntentFlag,\n  setVerbosityLevel,\n  shadow,\n  stringToBytes,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMStandardFontDataFactory,\n  isDataScheme,\n  loadScript,\n  PageViewport,\n  RenderingCancelledException,\n  StatTimer,\n} from \"./display_utils.js\";\nimport { FontFaceObject, FontLoader } from \"./font_loader.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { CanvasGraphics } from \"./canvas.js\";\nimport { GlobalWorkerOptions } from \"./worker_options.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { MessageHandler } from \"../shared/message_handler.js\";\nimport { Metadata } from \"./metadata.js\";\nimport { OptionalContentConfig } from \"./optional_content_config.js\";\nimport { PDFDataTransportStream } from \"./transport_stream.js\";\nimport { XfaText } from \"./xfa_text.js\";\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536; // 2^16 = 65536\nconst RENDERING_CANCELLED_TIMEOUT = 100; // ms\n\nlet DefaultCanvasFactory = DOMCanvasFactory;\nlet DefaultCMapReaderFactory = DOMCMapReaderFactory;\nlet DefaultStandardFontDataFactory = DOMStandardFontDataFactory;\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\") && isNodeJS) {\n  const {\n    NodeCanvasFactory,\n    NodeCMapReaderFactory,\n    NodeStandardFontDataFactory,\n  } = require(\"./node_utils.js\");\n\n  DefaultCanvasFactory = NodeCanvasFactory;\n  DefaultCMapReaderFactory = NodeCMapReaderFactory;\n  DefaultStandardFontDataFactory = NodeStandardFontDataFactory;\n}\n\n/**\n * @typedef {function} IPDFStreamFactory\n * @param {DocumentInitParameters} params - The document initialization\n *   parameters. The \"url\" key is always present.\n * @returns {Promise} A promise, which is resolved with an instance of\n *   {IPDFStream}.\n * @ignore\n */\n\n/**\n * @type {IPDFStreamFactory}\n * @private\n */\nlet createPDFNetworkStream;\n\n/**\n * Sets the function that instantiates an {IPDFStream} as an alternative PDF\n * data transport.\n *\n * @param {IPDFStreamFactory} pdfNetworkStreamFactory - The factory function\n *   that takes document initialization parameters (including a \"url\") and\n *   returns a promise which is resolved with an instance of {IPDFStream}.\n * @ignore\n */\nfunction setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n  createPDFNetworkStream = pdfNetworkStreamFactory;\n}\n\n/**\n * @typedef { Int8Array | Uint8Array | Uint8ClampedArray |\n *            Int16Array | Uint16Array |\n *            Int32Array | Uint32Array | Float32Array |\n *            Float64Array\n * } TypedArray\n */\n\n/**\n * @typedef {Object} RefProxy\n * @property {number} num\n * @property {number} gen\n */\n\n/**\n * Document initialization / loading parameters object.\n *\n * @typedef {Object} DocumentInitParameters\n * @property {string|URL} [url] - The URL of the PDF.\n * @property {TypedArray|Array<number>|string} [data] - Binary PDF data. Use\n *    typed arrays (Uint8Array) to improve the memory usage. If PDF data is\n *    BASE64-encoded, use `atob()` to convert it to a binary string first.\n * @property {Object} [httpHeaders] - Basic authentication headers.\n * @property {boolean} [withCredentials] - Indicates whether or not\n *   cross-site Access-Control requests should be made using credentials such\n *   as cookies or authorization headers. The default is `false`.\n * @property {string} [password] - For decrypting password-protected PDFs.\n * @property {TypedArray} [initialData] - A typed array with the first portion\n *   or all of the pdf data. Used by the extension since some data is already\n *   loaded before the switch to range requests.\n * @property {number} [length] - The PDF file length. It's used for progress\n *   reports and range requests operations.\n * @property {PDFDataRangeTransport} [range] - Allows for using a custom range\n *   transport implementation.\n * @property {number} [rangeChunkSize] - Specify maximum number of bytes fetched\n *   per range request. The default value is {@link DEFAULT_RANGE_CHUNK_SIZE}.\n * @property {PDFWorker} [worker] - The worker that will be used for loading and\n *   parsing the PDF data.\n * @property {number} [verbosity] - Controls the logging level; the constants\n *   from {@link VerbosityLevel} should be used.\n * @property {string} [docBaseUrl] - The base URL of the document, used when\n *   attempting to recover valid absolute URLs for annotations, and outline\n *   items, that (incorrectly) only specify relative URLs.\n * @property {string} [cMapUrl] - The URL where the predefined Adobe CMaps are\n *   located. Include the trailing slash.\n * @property {boolean} [cMapPacked] - Specifies if the Adobe CMaps are binary\n *   packed or not.\n * @property {Object} [CMapReaderFactory] - The factory that will be used when\n *   reading built-in CMap files. Providing a custom factory is useful for\n *   environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMCMapReaderFactory}.\n * @property {boolean} [useSystemFonts] - When `true`, fonts that aren't\n *   embedded in the PDF document will fallback to a system font.\n *   The default value is `true` in web environments and `false` in Node.js;\n *   unless `disableFontFace === true` in which case this defaults to `false`\n *   regardless of the environment (to prevent completely broken fonts).\n * @property {string} [standardFontDataUrl] - The URL where the standard font\n *   files are located. Include the trailing slash.\n * @property {Object} [StandardFontDataFactory] - The factory that will be used\n *   when reading the standard font files. Providing a custom factory is useful\n *   for environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMStandardFontDataFactory}.\n * @property {boolean} [useWorkerFetch] - Enable using the Fetch API in the\n *   worker-thread when reading CMap and standard font files. When `true`,\n *   the `CMapReaderFactory` and `StandardFontDataFactory` options are ignored.\n *   The default value is `true` in web environments and `false` in Node.js.\n * @property {boolean} [stopAtErrors] - Reject certain promises, e.g.\n *   `getOperatorList`, `getTextContent`, and `RenderTask`, when the associated\n *   PDF data cannot be successfully parsed, instead of attempting to recover\n *   whatever possible of the data. The default value is `false`.\n * @property {number} [maxImageSize] - The maximum allowed image size in total\n *   pixels, i.e. width * height. Images above this value will not be rendered.\n *   Use -1 for no limit, which is also the default value.\n * @property {boolean} [isEvalSupported] - Determines if we can evaluate strings\n *   as JavaScript. Primarily used to improve performance of font rendering, and\n *   when parsing PDF functions. The default value is `true`.\n * @property {boolean} [disableFontFace] - By default fonts are converted to\n *   OpenType fonts and loaded via the Font Loading API or `@font-face` rules.\n *   If disabled, fonts will be rendered using a built-in font renderer that\n *   constructs the glyphs with primitive path commands.\n *   The default value is `false` in web environments and `true` in Node.js.\n * @property {boolean} [fontExtraProperties] - Include additional properties,\n *   which are unused during rendering of PDF documents, when exporting the\n *   parsed font data from the worker-thread. This may be useful for debugging\n *   purposes (and backwards compatibility), but note that it will lead to\n *   increased memory usage. The default value is `false`.\n * @property {boolean} [enableXfa] - Render Xfa forms if any.\n *   The default value is `false`.\n * @property {HTMLDocument} [ownerDocument] - Specify an explicit document\n *   context to create elements with and to load resources, such as fonts,\n *   into. Defaults to the current document.\n * @property {boolean} [disableRange] - Disable range request loading of PDF\n *   files. When enabled, and if the server supports partial content requests,\n *   then the PDF will be fetched in chunks. The default value is `false`.\n * @property {boolean} [disableStream] - Disable streaming of PDF file data.\n *   By default PDF.js attempts to load PDF files in chunks. The default value\n *   is `false`.\n * @property {boolean} [disableAutoFetch] - Disable pre-fetching of PDF file\n *   data. When range requests are enabled PDF.js will automatically keep\n *   fetching more data even if it isn't needed to display the current page.\n *   The default value is `false`.\n *\n *   NOTE: It is also necessary to disable streaming, see above, in order for\n *   disabling of pre-fetching to work correctly.\n * @property {boolean} [pdfBug] - Enables special hooks for debugging PDF.js\n *   (see `web/debugger.js`). The default value is `false`.\n */\n\n/**\n * This is the main entry point for loading a PDF and interacting with it.\n *\n * NOTE: If a URL is used to fetch the PDF data a standard Fetch API call (or\n * XHR as fallback) is used, which means it must follow same origin rules,\n * e.g. no cross-domain requests without CORS.\n *\n * @param {string|URL|TypedArray|PDFDataRangeTransport|DocumentInitParameters}\n *   src - Can be a URL where a PDF file is located, a typed array (Uint8Array)\n *         already populated with data, or a parameter object.\n * @returns {PDFDocumentLoadingTask}\n */\nfunction getDocument(src) {\n  const task = new PDFDocumentLoadingTask();\n\n  let source;\n  if (typeof src === \"string\" || src instanceof URL) {\n    source = { url: src };\n  } else if (isArrayBuffer(src)) {\n    source = { data: src };\n  } else if (src instanceof PDFDataRangeTransport) {\n    source = { range: src };\n  } else {\n    if (typeof src !== \"object\") {\n      throw new Error(\n        \"Invalid parameter in getDocument, \" +\n          \"need either string, URL, Uint8Array, or parameter object.\"\n      );\n    }\n    if (!src.url && !src.data && !src.range) {\n      throw new Error(\n        \"Invalid parameter object: need either .data, .range or .url\"\n      );\n    }\n    source = src;\n  }\n  const params = Object.create(null);\n  let rangeTransport = null,\n    worker = null;\n\n  for (const key in source) {\n    const value = source[key];\n\n    switch (key) {\n      case \"url\":\n        if (typeof window !== \"undefined\") {\n          try {\n            // The full path is required in the 'url' field.\n            params[key] = new URL(value, window.location).href;\n            continue;\n          } catch (ex) {\n            warn(`Cannot create valid URL: \"${ex}\".`);\n          }\n        } else if (typeof value === \"string\" || value instanceof URL) {\n          params[key] = value.toString(); // Support Node.js environments.\n          continue;\n        }\n        throw new Error(\n          \"Invalid PDF url data: \" +\n            \"either string or URL-object is expected in the url property.\"\n        );\n      case \"range\":\n        rangeTransport = value;\n        continue;\n      case \"worker\":\n        worker = value;\n        continue;\n      case \"data\":\n        // Converting string or array-like data to Uint8Array.\n        if (\n          typeof PDFJSDev !== \"undefined\" &&\n          PDFJSDev.test(\"GENERIC\") &&\n          isNodeJS &&\n          typeof Buffer !== \"undefined\" && // eslint-disable-line no-undef\n          value instanceof Buffer // eslint-disable-line no-undef\n        ) {\n          params[key] = new Uint8Array(value);\n        } else if (value instanceof Uint8Array) {\n          break; // Use the data as-is when it's already a Uint8Array.\n        } else if (typeof value === \"string\") {\n          params[key] = stringToBytes(value);\n        } else if (\n          typeof value === \"object\" &&\n          value !== null &&\n          !isNaN(value.length)\n        ) {\n          params[key] = new Uint8Array(value);\n        } else if (isArrayBuffer(value)) {\n          params[key] = new Uint8Array(value);\n        } else {\n          throw new Error(\n            \"Invalid PDF binary data: either typed array, \" +\n              \"string, or array-like object is expected in the data property.\"\n          );\n        }\n        continue;\n    }\n    params[key] = value;\n  }\n\n  params.CMapReaderFactory =\n    params.CMapReaderFactory || DefaultCMapReaderFactory;\n  params.StandardFontDataFactory =\n    params.StandardFontDataFactory || DefaultStandardFontDataFactory;\n  params.ignoreErrors = params.stopAtErrors !== true;\n  params.fontExtraProperties = params.fontExtraProperties === true;\n  params.pdfBug = params.pdfBug === true;\n  params.enableXfa = params.enableXfa === true;\n\n  if (!Number.isInteger(params.rangeChunkSize) || params.rangeChunkSize < 1) {\n    params.rangeChunkSize = DEFAULT_RANGE_CHUNK_SIZE;\n  }\n  if (\n    typeof params.docBaseUrl !== \"string\" ||\n    isDataScheme(params.docBaseUrl)\n  ) {\n    // Ignore \"data:\"-URLs, since they can't be used to recover valid absolute\n    // URLs anyway. We want to avoid sending them to the worker-thread, since\n    // they contain the *entire* PDF document and can thus be arbitrarily long.\n    params.docBaseUrl = null;\n  }\n  if (!Number.isInteger(params.maxImageSize) || params.maxImageSize < -1) {\n    params.maxImageSize = -1;\n  }\n  if (typeof params.cMapUrl !== \"string\") {\n    params.cMapUrl = null;\n  }\n  if (typeof params.standardFontDataUrl !== \"string\") {\n    params.standardFontDataUrl = null;\n  }\n  if (typeof params.useWorkerFetch !== \"boolean\") {\n    params.useWorkerFetch =\n      params.CMapReaderFactory === DOMCMapReaderFactory &&\n      params.StandardFontDataFactory === DOMStandardFontDataFactory;\n  }\n  if (typeof params.isEvalSupported !== \"boolean\") {\n    params.isEvalSupported = true;\n  }\n  if (typeof params.disableFontFace !== \"boolean\") {\n    params.disableFontFace = isNodeJS;\n  }\n  if (typeof params.useSystemFonts !== \"boolean\") {\n    params.useSystemFonts = !isNodeJS && !params.disableFontFace;\n  }\n  if (\n    typeof params.ownerDocument !== \"object\" ||\n    params.ownerDocument === null\n  ) {\n    params.ownerDocument = globalThis.document;\n  }\n\n  if (typeof params.disableRange !== \"boolean\") {\n    params.disableRange = false;\n  }\n  if (typeof params.disableStream !== \"boolean\") {\n    params.disableStream = false;\n  }\n  if (typeof params.disableAutoFetch !== \"boolean\") {\n    params.disableAutoFetch = false;\n  }\n\n  // Set the main-thread verbosity level.\n  setVerbosityLevel(params.verbosity);\n\n  if (!worker) {\n    const workerParams = {\n      verbosity: params.verbosity,\n      port: GlobalWorkerOptions.workerPort,\n    };\n    // Worker was not provided -- creating and owning our own. If message port\n    // is specified in global worker options, using it.\n    worker = workerParams.port\n      ? PDFWorker.fromPort(workerParams)\n      : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n  const docId = task.docId;\n  worker.promise\n    .then(function () {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      const workerIdPromise = _fetchDocument(\n        worker,\n        params,\n        rangeTransport,\n        docId\n      );\n      const networkStreamPromise = new Promise(function (resolve) {\n        let networkStream;\n        if (rangeTransport) {\n          networkStream = new PDFDataTransportStream(\n            {\n              length: params.length,\n              initialData: params.initialData,\n              progressiveDone: params.progressiveDone,\n              contentDispositionFilename: params.contentDispositionFilename,\n              disableRange: params.disableRange,\n              disableStream: params.disableStream,\n            },\n            rangeTransport\n          );\n        } else if (!params.data) {\n          networkStream = createPDFNetworkStream({\n            url: params.url,\n            length: params.length,\n            httpHeaders: params.httpHeaders,\n            withCredentials: params.withCredentials,\n            rangeChunkSize: params.rangeChunkSize,\n            disableRange: params.disableRange,\n            disableStream: params.disableStream,\n          });\n        }\n        resolve(networkStream);\n      });\n\n      return Promise.all([workerIdPromise, networkStreamPromise]).then(\n        function ([workerId, networkStream]) {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          const messageHandler = new MessageHandler(\n            docId,\n            workerId,\n            worker.port\n          );\n          const transport = new WorkerTransport(\n            messageHandler,\n            task,\n            networkStream,\n            params\n          );\n          task._transport = transport;\n          messageHandler.send(\"Ready\", null);\n        }\n      );\n    })\n    .catch(task._capability.reject);\n\n  return task;\n}\n\n/**\n * Starts fetching of specified PDF document/data.\n *\n * @param {PDFWorker} worker\n * @param {Object} source\n * @param {PDFDataRangeTransport} pdfDataRangeTransport\n * @param {string} docId - Unique document ID, used in `MessageHandler`.\n * @returns {Promise<string>} A promise that is resolved when the worker ID of\n *   the `MessageHandler` is known.\n * @private\n */\nasync function _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n  if (worker.destroyed) {\n    throw new Error(\"Worker was destroyed\");\n  }\n\n  if (pdfDataRangeTransport) {\n    source.length = pdfDataRangeTransport.length;\n    source.initialData = pdfDataRangeTransport.initialData;\n    source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n    source.contentDispositionFilename =\n      pdfDataRangeTransport.contentDispositionFilename;\n  }\n  const workerId = await worker.messageHandler.sendWithPromise(\n    \"GetDocRequest\",\n    {\n      docId,\n      apiVersion:\n        typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"TESTING\")\n          ? PDFJSDev.eval(\"BUNDLE_VERSION\")\n          : null,\n      // Only send the required properties, and *not* the entire object.\n      source: {\n        data: source.data,\n        url: source.url,\n        password: source.password,\n        disableAutoFetch: source.disableAutoFetch,\n        rangeChunkSize: source.rangeChunkSize,\n        length: source.length,\n      },\n      maxImageSize: source.maxImageSize,\n      disableFontFace: source.disableFontFace,\n      docBaseUrl: source.docBaseUrl,\n      ignoreErrors: source.ignoreErrors,\n      isEvalSupported: source.isEvalSupported,\n      fontExtraProperties: source.fontExtraProperties,\n      enableXfa: source.enableXfa,\n      useSystemFonts: source.useSystemFonts,\n      cMapUrl: source.useWorkerFetch ? source.cMapUrl : null,\n      standardFontDataUrl: source.useWorkerFetch\n        ? source.standardFontDataUrl\n        : null,\n    }\n  );\n\n  if (worker.destroyed) {\n    throw new Error(\"Worker was destroyed\");\n  }\n  return workerId;\n}\n\n/**\n * @typedef {Object} OnProgressParameters\n * @property {number} loaded - Currently loaded number of bytes.\n * @property {number} total - Total number of bytes in the PDF file.\n */\n\n/**\n * The loading task controls the operations required to load a PDF document\n * (such as network requests) and provides a way to listen for completion,\n * after which individual pages can be rendered.\n */\nclass PDFDocumentLoadingTask {\n  static #docId = 0;\n\n  constructor() {\n    this._capability = createPromiseCapability();\n    this._transport = null;\n    this._worker = null;\n\n    /**\n     * Unique identifier for the document loading task.\n     * @type {string}\n     */\n    this.docId = `d${PDFDocumentLoadingTask.#docId++}`;\n\n    /**\n     * Whether the loading task is destroyed or not.\n     * @type {boolean}\n     */\n    this.destroyed = false;\n\n    /**\n     * Callback to request a password if a wrong or no password was provided.\n     * The callback receives two parameters: a function that should be called\n     * with the new password, and a reason (see {@link PasswordResponses}).\n     * @type {function}\n     */\n    this.onPassword = null;\n\n    /**\n     * Callback to be able to monitor the loading progress of the PDF file\n     * (necessary to implement e.g. a loading bar).\n     * The callback receives an {@link OnProgressParameters} argument.\n     * @type {function}\n     */\n    this.onProgress = null;\n\n    /**\n     * Callback for when an unsupported feature is used in the PDF document.\n     * The callback receives an {@link UNSUPPORTED_FEATURES} argument.\n     * @type {function}\n     */\n    this.onUnsupportedFeature = null;\n  }\n\n  /**\n   * Promise for document loading task completion.\n   * @type {Promise<PDFDocumentProxy>}\n   */\n  get promise() {\n    return this._capability.promise;\n  }\n\n  /**\n   * Abort all network requests and destroy the worker.\n   * @returns {Promise<void>} A promise that is resolved when destruction is\n   *   completed.\n   */\n  async destroy() {\n    this.destroyed = true;\n    await this._transport?.destroy();\n\n    this._transport = null;\n    if (this._worker) {\n      this._worker.destroy();\n      this._worker = null;\n    }\n  }\n}\n\n/**\n * Abstract class to support range requests file loading.\n */\nclass PDFDataRangeTransport {\n  /**\n   * @param {number} length\n   * @param {Uint8Array} initialData\n   * @param {boolean} [progressiveDone]\n   * @param {string} [contentDispositionFilename]\n   */\n  constructor(\n    length,\n    initialData,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n    this.contentDispositionFilename = contentDispositionFilename;\n\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = createPromiseCapability();\n  }\n\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  requestDataRange(begin, end) {\n    unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n}\n\n/**\n * Proxy to a `PDFDocument` in the worker thread.\n */\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n      Object.defineProperty(this, \"fingerprint\", {\n        get() {\n          deprecated(\n            \"`PDFDocumentProxy.fingerprint`, \" +\n              \"please use `PDFDocumentProxy.fingerprints` instead.\"\n          );\n          return this.fingerprints[0];\n        },\n      });\n\n      Object.defineProperty(this, \"getStats\", {\n        value: async () => {\n          deprecated(\n            \"`PDFDocumentProxy.getStats`, \" +\n              \"please use the `PDFDocumentProxy.stats`-getter instead.\"\n          );\n          return this.stats || { streamTypes: {}, fontTypes: {} };\n        },\n      });\n    }\n  }\n\n  /**\n   * @type {AnnotationStorage} Storage for annotation data in forms.\n   */\n  get annotationStorage() {\n    return this._transport.annotationStorage;\n  }\n\n  /**\n   * @type {number} Total number of pages in the PDF file.\n   */\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  /**\n   * @type {Array<string, string|null>} A (not guaranteed to be) unique ID to\n   *   identify the PDF document.\n   *   NOTE: The first element will always be defined for all PDF documents,\n   *   whereas the second element is only defined for *modified* PDF documents.\n   */\n  get fingerprints() {\n    return this._pdfInfo.fingerprints;\n  }\n\n  /**\n   * @typedef {Object} PDFDocumentStats\n   * @property {Object<string, boolean>} streamTypes - Used stream types in the\n   *   document (an item is set to true if specific stream ID was used in the\n   *   document).\n   * @property {Object<string, boolean>} fontTypes - Used font types in the\n   *   document (an item is set to true if specific font ID was used in the\n   *   document).\n   */\n\n  /**\n   * @type {PDFDocumentStats | null} The current statistics about document\n   *   structures, or `null` when no statistics exists.\n   */\n  get stats() {\n    return this._transport.stats;\n  }\n\n  /**\n   * @type {boolean} True if only XFA form.\n   */\n  get isPureXfa() {\n    return !!this._transport._htmlForXfa;\n  }\n\n  /**\n   * NOTE: This is (mostly) intended to support printing of XFA forms.\n   *\n   * @type {Object | null} An object representing a HTML tree structure\n   *   to render the XFA, or `null` when no XFA form exists.\n   */\n  get allXfaHtml() {\n    return this._transport._htmlForXfa;\n  }\n\n  /**\n   * @param {number} pageNumber - The page number to get. The first page is 1.\n   * @returns {Promise<PDFPageProxy>} A promise that is resolved with\n   *   a {@link PDFPageProxy} object.\n   */\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  /**\n   * @param {RefProxy} ref - The page reference.\n   * @returns {Promise<number>} A promise that is resolved with the page index,\n   *   starting from zero, that is associated with the reference.\n   */\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<any>>>} A promise that is resolved\n   *   with a mapping from named destinations to references.\n   *\n   * This can be slow for large documents. Use `getDestination` instead.\n   */\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  /**\n   * @param {string} id - The named destination to get.\n   * @returns {Promise<Array<any> | null>} A promise that is resolved with all\n   *   information of the given named destination, or `null` when the named\n   *   destination is not present in the PDF file.\n   */\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} containing the page labels that correspond to the page\n   *   indexes, or `null` when no page labels are present in the PDF file.\n   */\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page layout name.\n   */\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page mode name.\n   */\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with an\n   *   {Object} containing the viewer preferences, or `null` when no viewer\n   *   preferences are present in the PDF file.\n   */\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  /**\n   * @returns {Promise<any | null>} A promise that is resolved with an {Array}\n   *   containing the destination, or `null` when no open action is present\n   *   in the PDF.\n   */\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  /**\n   * @returns {Promise<any>} A promise that is resolved with a lookup table\n   *   for mapping named attachments to their content.\n   */\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} of all the JavaScript strings in the name tree, or `null`\n   *   if no JavaScript exists.\n   */\n  getJavaScript() {\n    return this._transport.getJavaScript();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with the JavaScript actions:\n   *     - from the name tree (like getJavaScript);\n   *     - from A or AA entries in the catalog dictionary.\n   *   , or `null` if no JavaScript exists.\n   */\n  getJSActions() {\n    return this._transport.getDocJSActions();\n  }\n\n  /**\n   * @typedef {Object} OutlineNode\n   * @property {string} title\n   * @property {boolean} bold\n   * @property {boolean} italic\n   * @property {Uint8ClampedArray} color - The color in RGB format to use for\n   *   display purposes.\n   * @property {string | Array<any> | null} dest\n   * @property {string | null} url\n   * @property {string | undefined} unsafeUrl\n   * @property {boolean | undefined} newWindow\n   * @property {number | undefined} count\n   * @property {Array<OutlineNode>} items\n   */\n\n  /**\n   * @returns {Promise<Array<OutlineNode>>} A promise that is resolved with an\n   *   {Array} that is a tree outline (if it has one) of the PDF file.\n   */\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  /**\n   * @returns {Promise<OptionalContentConfig>} A promise that is resolved with\n   *   an {@link OptionalContentConfig} that contains all the optional content\n   *   groups (assuming that the document has any).\n   */\n  getOptionalContentConfig() {\n    return this._transport.getOptionalContentConfig();\n  }\n\n  /**\n   * @returns {Promise<Array<number> | null>} A promise that is resolved with\n   *   an {Array} that contains the permission flags for the PDF document, or\n   *   `null` when no permissions are present in the PDF file.\n   */\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  /**\n   * @returns {Promise<{ info: Object, metadata: Metadata }>} A promise that is\n   *   resolved with an {Object} that has `info` and `metadata` properties.\n   *   `info` is an {Object} filled with anything available in the information\n   *   dictionary and similarly `metadata` is a {Metadata} object with\n   *   information from the metadata section of the PDF.\n   */\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  /**\n   * @typedef {Object} MarkInfo\n   * Properties correspond to Table 321 of the PDF 32000-1:2008 spec.\n   * @property {boolean} Marked\n   * @property {boolean} UserProperties\n   * @property {boolean} Suspects\n   */\n\n  /**\n   * @returns {Promise<MarkInfo | null>} A promise that is resolved with\n   *   a {MarkInfo} object that contains the MarkInfo flags for the PDF\n   *   document, or `null` when no MarkInfo values are present in the PDF file.\n   */\n  getMarkInfo() {\n    return this._transport.getMarkInfo();\n  }\n\n  /**\n   * @returns {Promise<TypedArray>} A promise that is resolved with a\n   *   {TypedArray} that has the raw data from the PDF.\n   */\n  getData() {\n    return this._transport.getData();\n  }\n\n  /**\n   * @returns {Promise<{ length: number }>} A promise that is resolved when the\n   *   document's data is loaded. It is resolved with an {Object} that contains\n   *   the `length` property that indicates size of the PDF data in bytes.\n   */\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  /**\n   * Cleans up resources allocated by the document on both the main and worker\n   * threads.\n   *\n   * NOTE: Do not, under any circumstances, call this method when rendering is\n   * currently ongoing since that may lead to rendering errors.\n   *\n   * @param {boolean} [keepLoadedFonts] - Let fonts remain attached to the DOM.\n   *   NOTE: This will increase persistent memory usage, hence don't use this\n   *   option unless absolutely necessary. The default value is `false`.\n   * @returns {Promise} A promise that is resolved when clean-up has finished.\n   */\n  cleanup(keepLoadedFonts = false) {\n    return this._transport.startCleanup(keepLoadedFonts || this.isPureXfa);\n  }\n\n  /**\n   * Destroys the current document instance and terminates the worker.\n   */\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  /**\n   * @type {DocumentInitParameters} A subset of the current\n   *   {DocumentInitParameters}, which are needed in the viewer.\n   */\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  /**\n   * @type {PDFDocumentLoadingTask} The loadingTask for the current document.\n   */\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n\n  /**\n   * @returns {Promise<Uint8Array>} A promise that is resolved with a\n   *   {Uint8Array} containing the full data of the saved document.\n   */\n  saveDocument() {\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n      this._transport.annotationStorage.size <= 0\n    ) {\n      deprecated(\n        \"saveDocument called while `annotationStorage` is empty, \" +\n          \"please use the getData-method instead.\"\n      );\n    }\n    return this._transport.saveDocument();\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<Object>> | null>} A promise that is\n   *   resolved with an {Object} containing /AcroForm field data for the JS\n   *   sandbox, or `null` when no field data is present in the PDF file.\n   */\n  getFieldObjects() {\n    return this._transport.getFieldObjects();\n  }\n\n  /**\n   * @returns {Promise<boolean>} A promise that is resolved with `true`\n   *   if some /AcroForm fields have JavaScript actions.\n   */\n  hasJSActions() {\n    return this._transport.hasJSActions();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with an\n   *   {Array<string>} containing IDs of annotations that have a calculation\n   *   action, or `null` when no such annotations are present in the PDF file.\n   */\n  getCalculationOrderIds() {\n    return this._transport.getCalculationOrderIds();\n  }\n}\n\n/**\n * Page getViewport parameters.\n *\n * @typedef {Object} GetViewportParameters\n * @property {number} scale - The desired scale of the viewport.\n * @property {number} [rotation] - The desired rotation, in degrees, of\n *   the viewport. If omitted it defaults to the page rotation.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be\n *   flipped. The default value is `false`.\n */\n\n/**\n * Page getTextContent parameters.\n *\n * @typedef {Object} getTextContentParameters\n * @property {boolean} disableCombineTextItems - Do not attempt to combine\n *   same line {@link TextItem}'s. The default value is `false`.\n * @property {boolean} [includeMarkedContent] - When true include marked\n *   content items in the items array of TextContent. The default is `false`.\n */\n\n/**\n * Page text content.\n *\n * @typedef {Object} TextContent\n * @property {Array<TextItem | TextMarkedContent>} items - Array of\n *   {@link TextItem} and {@link TextMarkedContent} objects. TextMarkedContent\n *   items are included when includeMarkedContent is true.\n * @property {Object<string, TextStyle>} styles - {@link TextStyle} objects,\n *   indexed by font name.\n */\n\n/**\n * Page text content part.\n *\n * @typedef {Object} TextItem\n * @property {string} str - Text content.\n * @property {string} dir - Text direction: 'ttb', 'ltr' or 'rtl'.\n * @property {Array<any>} transform - Transformation matrix.\n * @property {number} width - Width in device space.\n * @property {number} height - Height in device space.\n * @property {string} fontName - Font name used by PDF.js for converted font.\n * @property {boolean} hasEOL - Indicating if the text content is followed by a\n *   line-break.\n */\n\n/**\n * Page text marked content part.\n *\n * @typedef {Object} TextMarkedContent\n * @property {string} type - Either 'beginMarkedContent',\n *   'beginMarkedContentProps', or 'endMarkedContent'.\n * @property {string} id - The marked content identifier. Only used for type\n *   'beginMarkedContentProps'.\n */\n\n/**\n * Text style.\n *\n * @typedef {Object} TextStyle\n * @property {number} ascent - Font ascent.\n * @property {number} descent - Font descent.\n * @property {boolean} vertical - Whether or not the text is in vertical mode.\n * @property {string} fontFamily - The possible font family.\n */\n\n/**\n * Page annotation parameters.\n *\n * @typedef {Object} GetAnnotationsParameters\n * @property {string} [intent] - Determines the annotations that are fetched,\n *   can be 'display' (viewable annotations), 'print' (printable annotations),\n *   or 'any' (all annotations). The default value is 'display'.\n */\n\n/**\n * Page render parameters.\n *\n * @typedef {Object} RenderParameters\n * @property {Object} canvasContext - A 2D context of a DOM Canvas object.\n * @property {PageViewport} viewport - Rendering viewport obtained by calling\n *   the `PDFPageProxy.getViewport` method.\n * @property {string} [intent] - Rendering intent, can be 'display', 'print',\n *   or 'any'. The default value is 'display'.\n * @property {number} [annotationMode] Controls which annotations are rendered\n *   onto the canvas, for annotations with appearance-data; the values from\n *   {@link AnnotationMode} should be used. The following values are supported:\n *    - `AnnotationMode.DISABLE`, which disables all annotations.\n *    - `AnnotationMode.ENABLE`, which includes all possible annotations (thus\n *      it also depends on the `intent`-option, see above).\n *    - `AnnotationMode.ENABLE_FORMS`, which excludes annotations that contain\n *      interactive form elements (those will be rendered in the display layer).\n *    - `AnnotationMode.ENABLE_STORAGE`, which includes all possible annotations\n *      (as above) but where interactive form elements are updated with data\n *      from the {@link AnnotationStorage}-instance; useful e.g. for printing.\n *   The default value is `AnnotationMode.ENABLE`.\n * @property {Array<any>} [transform] - Additional transform, applied just\n *   before viewport transform.\n * @property {Object} [imageLayer] - An object that has `beginLayout`,\n *   `endLayout` and `appendImage` functions.\n * @property {Object} [canvasFactory] - The factory instance that will be used\n *   when creating canvases. The default value is {new DOMCanvasFactory()}.\n * @property {Object | string} [background] - Background to use for the canvas.\n *   Any valid `canvas.fillStyle` can be used: a `DOMString` parsed as CSS\n *   <color> value, a `CanvasGradient` object (a linear or radial gradient) or\n *   a `CanvasPattern` object (a repetitive image). The default value is\n *   'rgb(255,255,255)'.\n *\n *   NOTE: This option may be partially, or completely, ignored when the\n *   `pageColors`-option is used.\n * @property {Object} [pageColors] - Overwrites background and foreground colors\n *   with user defined ones in order to improve readability in high contrast\n *   mode.\n * @property {Promise<OptionalContentConfig>} [optionalContentConfigPromise] -\n *   A promise that should resolve with an {@link OptionalContentConfig}\n *   created from `PDFDocumentProxy.getOptionalContentConfig`. If `null`,\n *   the configuration will be fetched automatically with the default visibility\n *   states set.\n * @property {Map<string, HTMLCanvasElement>} [annotationCanvasMap] - Map some\n *   annotation ids with canvases used to render them.\n */\n\n/**\n * Page getOperatorList parameters.\n *\n * @typedef {Object} GetOperatorListParameters\n * @property {string} [intent] - Rendering intent, can be 'display', 'print',\n *   or 'any'. The default value is 'display'.\n * @property {number} [annotationMode] Controls which annotations are included\n *   in the operatorList, for annotations with appearance-data; the values from\n *   {@link AnnotationMode} should be used. The following values are supported:\n *    - `AnnotationMode.DISABLE`, which disables all annotations.\n *    - `AnnotationMode.ENABLE`, which includes all possible annotations (thus\n *      it also depends on the `intent`-option, see above).\n *    - `AnnotationMode.ENABLE_FORMS`, which excludes annotations that contain\n *      interactive form elements (those will be rendered in the display layer).\n *    - `AnnotationMode.ENABLE_STORAGE`, which includes all possible annotations\n *      (as above) but where interactive form elements are updated with data\n *      from the {@link AnnotationStorage}-instance; useful e.g. for printing.\n *   The default value is `AnnotationMode.ENABLE`.\n */\n\n/**\n * Structure tree node. The root node will have a role \"Root\".\n *\n * @typedef {Object} StructTreeNode\n * @property {Array<StructTreeNode | StructTreeContent>} children - Array of\n *   {@link StructTreeNode} and {@link StructTreeContent} objects.\n * @property {string} role - element's role, already mapped if a role map exists\n * in the PDF.\n */\n\n/**\n * Structure tree content.\n *\n * @typedef {Object} StructTreeContent\n * @property {string} type - either \"content\" for page and stream structure\n *   elements or \"object\" for object references.\n * @property {string} id - unique id that will map to the text layer.\n */\n\n/**\n * PDF page operator list.\n *\n * @typedef {Object} PDFOperatorList\n * @property {Array<number>} fnArray - Array containing the operator functions.\n * @property {Array<any>} argsArray - Array containing the arguments of the\n *   functions.\n */\n\n/**\n * Proxy to a `PDFPage` in the worker thread.\n */\nclass PDFPageProxy {\n  constructor(pageIndex, pageInfo, transport, ownerDocument, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._ownerDocument = ownerDocument;\n    this._transport = transport;\n    this._stats = pdfBug ? new StatTimer() : null;\n    this._pdfBug = pdfBug;\n    /** @type {PDFObjects} */\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n\n    this._bitmaps = new Set();\n\n    this.cleanupAfterRender = false;\n    this.pendingCleanup = false;\n    this._intentStates = new Map();\n    this._annotationPromises = new Map();\n    this.destroyed = false;\n  }\n\n  /**\n   * @type {number} Page number of the page. First page is 1.\n   */\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  /**\n   * @type {number} The number of degrees the page is rotated clockwise.\n   */\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  /**\n   * @type {RefProxy | null} The reference that points to this page.\n   */\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  /**\n   * @type {number} The default size of units in 1/72nds of an inch.\n   */\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  /**\n   * @type {Array<number>} An array of the visible portion of the PDF page in\n   *   user space units [x1, y1, x2, y2].\n   */\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  /**\n   * @param {GetViewportParameters} params - Viewport parameters.\n   * @returns {PageViewport} Contains 'width' and 'height' properties\n   *   along with transforms required for rendering.\n   */\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * @param {GetAnnotationsParameters} params - Annotation parameters.\n   * @returns {Promise<Array<any>>} A promise that is resolved with an\n   *   {Array} of the annotation objects.\n   */\n  getAnnotations({ intent = \"display\" } = {}) {\n    const intentArgs = this._transport.getRenderingIntent(intent);\n\n    let promise = this._annotationPromises.get(intentArgs.cacheKey);\n    if (!promise) {\n      promise = this._transport.getAnnotations(\n        this._pageIndex,\n        intentArgs.renderingIntent\n      );\n      this._annotationPromises.set(intentArgs.cacheKey, promise);\n\n      if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n        promise = promise.then(annotations => {\n          for (const annotation of annotations) {\n            if (annotation.titleObj !== undefined) {\n              Object.defineProperty(annotation, \"title\", {\n                get() {\n                  deprecated(\n                    \"`title`-property on annotation, please use `titleObj` instead.\"\n                  );\n                  return annotation.titleObj.str;\n                },\n              });\n            }\n            if (annotation.contentsObj !== undefined) {\n              Object.defineProperty(annotation, \"contents\", {\n                get() {\n                  deprecated(\n                    \"`contents`-property on annotation, please use `contentsObj` instead.\"\n                  );\n                  return annotation.contentsObj.str;\n                },\n              });\n            }\n          }\n          return annotations;\n        });\n      }\n    }\n    return promise;\n  }\n\n  /**\n   * @returns {Promise<Object>} A promise that is resolved with an\n   *   {Object} with JS actions.\n   */\n  getJSActions() {\n    return (this._jsActionsPromise ||= this._transport.getPageJSActions(\n      this._pageIndex\n    ));\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with a fake DOM object (a tree structure where elements\n   *   are {Object} with a name, attributes (class, style, ...), value and\n   *   children, very similar to a HTML DOM tree), or `null` if no XFA exists.\n   */\n  async getXfa() {\n    return this._transport._htmlForXfa?.children[this._pageIndex] || null;\n  }\n\n  /**\n   * Begins the process of rendering a page to the desired context.\n   *\n   * @param {RenderParameters} params - Page render parameters.\n   * @returns {RenderTask} An object that contains a promise that is\n   *   resolved when the page finishes rendering.\n   */\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    annotationMode = AnnotationMode.ENABLE,\n    transform = null,\n    imageLayer = null,\n    canvasFactory = null,\n    background = null,\n    optionalContentConfigPromise = null,\n    annotationCanvasMap = null,\n    pageColors = null,\n  }) {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n      if (arguments[0]?.renderInteractiveForms !== undefined) {\n        deprecated(\n          \"render no longer accepts the `renderInteractiveForms`-option, \" +\n            \"please use the `annotationMode`-option instead.\"\n        );\n        if (\n          arguments[0].renderInteractiveForms === true &&\n          annotationMode === AnnotationMode.ENABLE\n        ) {\n          annotationMode = AnnotationMode.ENABLE_FORMS;\n        }\n      }\n      if (arguments[0]?.includeAnnotationStorage !== undefined) {\n        deprecated(\n          \"render no longer accepts the `includeAnnotationStorage`-option, \" +\n            \"please use the `annotationMode`-option instead.\"\n        );\n        if (\n          arguments[0].includeAnnotationStorage === true &&\n          annotationMode === AnnotationMode.ENABLE\n        ) {\n          annotationMode = AnnotationMode.ENABLE_STORAGE;\n        }\n      }\n    }\n\n    if (this._stats) {\n      this._stats.time(\"Overall\");\n    }\n\n    const intentArgs = this._transport.getRenderingIntent(\n      intent,\n      annotationMode\n    );\n    // If there was a pending destroy, cancel it so no cleanup happens during\n    // this call to render.\n    this.pendingCleanup = false;\n\n    if (!optionalContentConfigPromise) {\n      optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n    }\n\n    let intentState = this._intentStates.get(intentArgs.cacheKey);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(intentArgs.cacheKey, intentState);\n    }\n\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const canvasFactoryInstance =\n      canvasFactory ||\n      new DefaultCanvasFactory({ ownerDocument: this._ownerDocument });\n    const intentPrint = !!(\n      intentArgs.renderingIntent & RenderingIntentFlag.PRINT\n    );\n\n    // If there's no displayReadyCapability yet, then the operatorList\n    // was never requested before. Make the request and create the promise.\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = createPromiseCapability();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList(intentArgs);\n    }\n\n    const complete = error => {\n      intentState.renderTasks.delete(internalRenderTask);\n\n      // Attempt to reduce memory usage during *printing*, by always running\n      // cleanup once rendering has finished (regardless of cleanupAfterRender).\n      if (this.cleanupAfterRender || intentPrint) {\n        this.pendingCleanup = true;\n      }\n      this._tryCleanup();\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error instanceof Error ? error : new Error(error),\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n      if (this._stats) {\n        this._stats.timeEnd(\"Rendering\");\n        this._stats.timeEnd(\"Overall\");\n      }\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      // Only include the required properties, and *not* the entire object.\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      annotationCanvasMap,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: canvasFactoryInstance,\n      useRequestAnimationFrame: !intentPrint,\n      pdfBug: this._pdfBug,\n      pageColors,\n    });\n\n    (intentState.renderTasks ||= new Set()).add(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n\n    Promise.all([\n      intentState.displayReadyCapability.promise,\n      optionalContentConfigPromise,\n    ])\n      .then(([transparency, optionalContentConfig]) => {\n        if (this.pendingCleanup) {\n          complete();\n          return;\n        }\n        if (this._stats) {\n          this._stats.time(\"Rendering\");\n        }\n        internalRenderTask.initializeGraphics({\n          transparency,\n          optionalContentConfig,\n        });\n        internalRenderTask.operatorListChanged();\n      })\n      .catch(complete);\n\n    return renderTask;\n  }\n\n  /**\n   * @param {GetOperatorListParameters} params - Page getOperatorList\n   *   parameters.\n   * @returns {Promise<PDFOperatorList>} A promise resolved with an\n   *   {@link PDFOperatorList} object that represents the page's operator list.\n   */\n  getOperatorList({\n    intent = \"display\",\n    annotationMode = AnnotationMode.ENABLE,\n  } = {}) {\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n\n        intentState.renderTasks.delete(opListTask);\n      }\n    }\n\n    const intentArgs = this._transport.getRenderingIntent(\n      intent,\n      annotationMode,\n      /* isOpList = */ true\n    );\n    let intentState = this._intentStates.get(intentArgs.cacheKey);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(intentArgs.cacheKey, intentState);\n    }\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = Object.create(null);\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = createPromiseCapability();\n      (intentState.renderTasks ||= new Set()).add(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList(intentArgs);\n    }\n    return intentState.opListReadCapability.promise;\n  }\n\n  /**\n   * NOTE: All occurrences of whitespace will be replaced by\n   * standard spaces (0x20).\n   *\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {ReadableStream} Stream for reading text content chunks.\n   */\n  streamTextContent({\n    disableCombineTextItems = false,\n    includeMarkedContent = false,\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n\n    return this._transport.messageHandler.sendWithStream(\n      \"GetTextContent\",\n      {\n        pageIndex: this._pageIndex,\n        combineTextItems: disableCombineTextItems !== true,\n        includeMarkedContent: includeMarkedContent === true,\n      },\n      {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n        size(textContent) {\n          return textContent.items.length;\n        },\n      }\n    );\n  }\n\n  /**\n   * NOTE: All occurrences of whitespace will be replaced by\n   * standard spaces (0x20).\n   *\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {Promise<TextContent>} A promise that is resolved with a\n   *   {@link TextContent} object that represents the page's text content.\n   */\n  getTextContent(params = {}) {\n    if (this._transport._htmlForXfa) {\n      // TODO: We need to revisit this once the XFA foreground patch lands and\n      // only do this for non-foreground XFA.\n      return this.getXfa().then(xfa => {\n        return XfaText.textContent(xfa);\n      });\n    }\n    const readableStream = this.streamTextContent(params);\n\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({ value, done }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null),\n      };\n      pump();\n    });\n  }\n\n  /**\n   * @returns {Promise<StructTreeNode>} A promise that is resolved with a\n   *   {@link StructTreeNode} object that represents the page's structure tree,\n   *   or `null` when no structure tree is present for the current page.\n   */\n  getStructTree() {\n    return (this._structTreePromise ||= this._transport.getStructTree(\n      this._pageIndex\n    ));\n  }\n\n  /**\n   * Destroys the page object.\n   * @private\n   */\n  _destroy() {\n    this.destroyed = true;\n\n    const waitOn = [];\n    for (const intentState of this._intentStates.values()) {\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true,\n      });\n\n      if (intentState.opListReadCapability) {\n        // Avoid errors below, since the renderTasks are just stubs.\n        continue;\n      }\n      for (const internalRenderTask of intentState.renderTasks) {\n        waitOn.push(internalRenderTask.completed);\n        internalRenderTask.cancel();\n      }\n    }\n    this.objs.clear();\n    for (const bitmap of this._bitmaps) {\n      bitmap.close();\n    }\n    this._bitmaps.clear();\n    this._annotationPromises.clear();\n    this._jsActionsPromise = null;\n    this._structTreePromise = null;\n    this.pendingCleanup = false;\n    return Promise.all(waitOn);\n  }\n\n  /**\n   * Cleans up resources allocated by the page.\n   *\n   * @param {boolean} [resetStats] - Reset page stats, if enabled.\n   *   The default value is `false`.\n   * @returns {boolean} Indicates if clean-up was successfully run.\n   */\n  cleanup(resetStats = false) {\n    this.pendingCleanup = true;\n    return this._tryCleanup(resetStats);\n  }\n\n  /**\n   * Attempts to clean up if rendering is in a state where that's possible.\n   * @private\n   */\n  _tryCleanup(resetStats = false) {\n    if (!this.pendingCleanup) {\n      return false;\n    }\n    for (const { renderTasks, operatorList } of this._intentStates.values()) {\n      if (renderTasks.size > 0 || !operatorList.lastChunk) {\n        return false;\n      }\n    }\n\n    this._intentStates.clear();\n    this.objs.clear();\n    this._annotationPromises.clear();\n    this._jsActionsPromise = null;\n    this._structTreePromise = null;\n    if (resetStats && this._stats) {\n      this._stats = new StatTimer();\n    }\n    for (const bitmap of this._bitmaps) {\n      bitmap.close();\n    }\n    this._bitmaps.clear();\n    this.pendingCleanup = false;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _startRenderPage(transparency, cacheKey) {\n    const intentState = this._intentStates.get(cacheKey);\n    if (!intentState) {\n      return; // Rendering was cancelled.\n    }\n    if (this._stats) {\n      this._stats.timeEnd(\"Page Request\");\n    }\n    // TODO Refactor RenderPageRequest to separate rendering\n    // and operator list logic\n    if (intentState.displayReadyCapability) {\n      intentState.displayReadyCapability.resolve(transparency);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _renderPageChunk(operatorListChunk, intentState) {\n    // Add the new chunk to the current operator list.\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n    // Notify all the rendering tasks there are more operators to be consumed.\n    for (const internalRenderTask of intentState.renderTasks) {\n      internalRenderTask.operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this._tryCleanup();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _pumpOperatorList({ renderingIntent, cacheKey }) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        Number.isInteger(renderingIntent) && renderingIntent > 0,\n        '_pumpOperatorList: Expected valid \"renderingIntent\" argument.'\n      );\n    }\n\n    const readableStream = this._transport.messageHandler.sendWithStream(\n      \"GetOperatorList\",\n      {\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n        cacheKey,\n        annotationStorage:\n          renderingIntent & RenderingIntentFlag.ANNOTATIONS_STORAGE\n            ? this._transport.annotationStorage.serializable\n            : null,\n      }\n    );\n    const reader = readableStream.getReader();\n\n    const intentState = this._intentStates.get(cacheKey);\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(\n        ({ value, done }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          this._renderPageChunk(value, intentState);\n          pump();\n        },\n        reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          if (intentState.operatorList) {\n            // Mark operator list as complete.\n            intentState.operatorList.lastChunk = true;\n\n            for (const internalRenderTask of intentState.renderTasks) {\n              internalRenderTask.operatorListChanged();\n            }\n            this._tryCleanup();\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        }\n      );\n    };\n    pump();\n  }\n\n  /**\n   * @private\n   */\n  _abortOperatorList({ intentState, reason, force = false }) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        reason instanceof Error,\n        '_abortOperatorList: Expected valid \"reason\" argument.'\n      );\n    }\n\n    if (!intentState.streamReader) {\n      return;\n    }\n    if (!force) {\n      // Ensure that an Error occurring in *only* one `InternalRenderTask`, e.g.\n      // multiple render() calls on the same canvas, won't break all rendering.\n      if (intentState.renderTasks.size > 0) {\n        return;\n      }\n      // Don't immediately abort parsing on the worker-thread when rendering is\n      // cancelled, since that will unnecessarily delay re-rendering when (for\n      // partially parsed pages) e.g. zooming/rotation occurs in the viewer.\n      if (reason instanceof RenderingCancelledException) {\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          this._abortOperatorList({ intentState, reason, force: true });\n          intentState.streamReaderCancelTimeout = null;\n        }, RENDERING_CANCELLED_TIMEOUT);\n        return;\n      }\n    }\n    intentState.streamReader\n      .cancel(new AbortException(reason.message))\n      .catch(() => {\n        // Avoid \"Uncaught promise\" messages in the console.\n      });\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    // Remove the current `intentState`, since a cancelled `getOperatorList`\n    // call on the worker-thread cannot be re-started...\n    for (const [curCacheKey, curIntentState] of this._intentStates) {\n      if (curIntentState === intentState) {\n        this._intentStates.delete(curCacheKey);\n        break;\n      }\n    }\n    // ... and force clean-up to ensure that any old state is always removed.\n    this.cleanup();\n  }\n\n  /**\n   * @type {Object} Returns page stats, if enabled; returns `null` otherwise.\n   */\n  get stats() {\n    return this._stats;\n  }\n}\n\nclass LoopbackPort {\n  constructor() {\n    this._listeners = [];\n    this._deferred = Promise.resolve();\n  }\n\n  postMessage(obj, transfers) {\n    const event = {\n      data: structuredClone(obj, transfers),\n    };\n\n    this._deferred.then(() => {\n      for (const listener of this._listeners) {\n        listener.call(this, event);\n      }\n    });\n  }\n\n  addEventListener(name, listener) {\n    this._listeners.push(listener);\n  }\n\n  removeEventListener(name, listener) {\n    const i = this._listeners.indexOf(listener);\n    this._listeners.splice(i, 1);\n  }\n\n  terminate() {\n    this._listeners.length = 0;\n  }\n}\n\n/**\n * @typedef {Object} PDFWorkerParameters\n * @property {string} [name] - The name of the worker.\n * @property {Object} [port] - The `workerPort` object.\n * @property {number} [verbosity] - Controls the logging level;\n *   the constants from {@link VerbosityLevel} should be used.\n */\n\nconst PDFWorkerUtil = {\n  isWorkerDisabled: false,\n  fallbackWorkerSrc: null,\n  fakeWorkerId: 0,\n};\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  // eslint-disable-next-line no-undef\n  if (isNodeJS && typeof __non_webpack_require__ === \"function\") {\n    // Workers aren't supported in Node.js, force-disabling them there.\n    PDFWorkerUtil.isWorkerDisabled = true;\n\n    PDFWorkerUtil.fallbackWorkerSrc = PDFJSDev.test(\"LIB\")\n      ? \"../pdf.worker.js\"\n      : \"./pdf.worker.js\";\n  } else if (typeof document === \"object\") {\n    const pdfjsFilePath = document?.currentScript?.src;\n    if (pdfjsFilePath) {\n      PDFWorkerUtil.fallbackWorkerSrc = pdfjsFilePath.replace(\n        /(\\.(?:min\\.)?js)(\\?.*)?$/i,\n        \".worker$1$2\"\n      );\n    }\n  }\n\n  // Check if URLs have the same origin. For non-HTTP based URLs, returns false.\n  PDFWorkerUtil.isSameOrigin = function (baseUrl, otherUrl) {\n    let base;\n    try {\n      base = new URL(baseUrl);\n      if (!base.origin || base.origin === \"null\") {\n        return false; // non-HTTP url\n      }\n    } catch (e) {\n      return false;\n    }\n\n    const other = new URL(otherUrl, base);\n    return base.origin === other.origin;\n  };\n\n  PDFWorkerUtil.createCDNWrapper = function (url) {\n    // We will rely on blob URL's property to specify origin.\n    // We want this function to fail in case if createObjectURL or Blob do not\n    // exist or fail for some reason -- our Worker creation will fail anyway.\n    const wrapper = `importScripts(\"${url}\");`;\n    return URL.createObjectURL(new Blob([wrapper]));\n  };\n}\n\n/**\n * PDF.js web worker abstraction that controls the instantiation of PDF\n * documents. Message handlers are used to pass information from the main\n * thread to the worker thread and vice versa. If the creation of a web\n * worker is not possible, a \"fake\" worker will be used instead.\n *\n * @param {PDFWorkerParameters} params - The worker initialization parameters.\n */\nclass PDFWorker {\n  static #workerPorts = new WeakMap();\n\n  constructor({\n    name = null,\n    port = null,\n    verbosity = getVerbosityLevel(),\n  } = {}) {\n    if (port && PDFWorker.#workerPorts.has(port)) {\n      throw new Error(\"Cannot use more than one PDFWorker per port.\");\n    }\n\n    this.name = name;\n    this.destroyed = false;\n    this.verbosity = verbosity;\n\n    this._readyCapability = createPromiseCapability();\n    this._port = null;\n    this._webWorker = null;\n    this._messageHandler = null;\n\n    if (port) {\n      PDFWorker.#workerPorts.set(port, this);\n      this._initializeFromPort(port);\n      return;\n    }\n    this._initialize();\n  }\n\n  /**\n   * Promise for worker initialization completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._readyCapability.promise;\n  }\n\n  /**\n   * The current `workerPort`, when it exists.\n   * @type {Worker}\n   */\n  get port() {\n    return this._port;\n  }\n\n  /**\n   * The current MessageHandler-instance.\n   * @type {MessageHandler}\n   */\n  get messageHandler() {\n    return this._messageHandler;\n  }\n\n  _initializeFromPort(port) {\n    this._port = port;\n    this._messageHandler = new MessageHandler(\"main\", \"worker\", port);\n    this._messageHandler.on(\"ready\", function () {\n      // Ignoring \"ready\" event -- MessageHandler should already be initialized\n      // and ready to accept messages.\n    });\n    this._readyCapability.resolve();\n  }\n\n  _initialize() {\n    // If worker support isn't disabled explicit and the browser has worker\n    // support, create a new web worker and test if it/the browser fulfills\n    // all requirements to run parts of pdf.js in a web worker.\n    // Right now, the requirement is, that an Uint8Array is still an\n    // Uint8Array as it arrives on the worker. (Chrome added this with v.15.)\n    if (\n      typeof Worker !== \"undefined\" &&\n      !PDFWorkerUtil.isWorkerDisabled &&\n      !PDFWorker._mainThreadWorkerMessageHandler\n    ) {\n      let workerSrc = PDFWorker.workerSrc;\n\n      try {\n        // Wraps workerSrc path into blob URL, if the former does not belong\n        // to the same origin.\n        if (\n          typeof PDFJSDev !== \"undefined\" &&\n          PDFJSDev.test(\"GENERIC\") &&\n          !PDFWorkerUtil.isSameOrigin(window.location.href, workerSrc)\n        ) {\n          workerSrc = PDFWorkerUtil.createCDNWrapper(\n            new URL(workerSrc, window.location).href\n          );\n        }\n\n        // Some versions of FF can't create a worker on localhost, see:\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=683280\n        const worker = new Worker(workerSrc);\n        const messageHandler = new MessageHandler(\"main\", \"worker\", worker);\n        const terminateEarly = () => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          messageHandler.destroy();\n          worker.terminate();\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n          } else {\n            // Fall back to fake worker if the termination is caused by an\n            // error (e.g. NetworkError / SecurityError).\n            this._setupFakeWorker();\n          }\n        };\n\n        const onWorkerError = () => {\n          if (!this._webWorker) {\n            // Worker failed to initialize due to an error. Clean up and fall\n            // back to the fake worker.\n            terminateEarly();\n          }\n        };\n        worker.addEventListener(\"error\", onWorkerError);\n\n        messageHandler.on(\"test\", data => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          if (this.destroyed) {\n            terminateEarly();\n            return; // worker was destroyed\n          }\n          if (data) {\n            this._messageHandler = messageHandler;\n            this._port = worker;\n            this._webWorker = worker;\n\n            this._readyCapability.resolve();\n            // Send global setting, e.g. verbosity level.\n            messageHandler.send(\"configure\", {\n              verbosity: this.verbosity,\n            });\n          } else {\n            this._setupFakeWorker();\n            messageHandler.destroy();\n            worker.terminate();\n          }\n        });\n\n        messageHandler.on(\"ready\", data => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          if (this.destroyed) {\n            terminateEarly();\n            return; // worker was destroyed\n          }\n          try {\n            sendTest();\n          } catch (e) {\n            // We need fallback to a faked worker.\n            this._setupFakeWorker();\n          }\n        });\n\n        const sendTest = () => {\n          const testObj = new Uint8Array();\n          // Ensure that we can use `postMessage` transfers.\n          messageHandler.send(\"test\", testObj, [testObj.buffer]);\n        };\n\n        // It might take time for the worker to initialize. We will try to send\n        // the \"test\" message immediately, and once the \"ready\" message arrives.\n        // The worker shall process only the first received \"test\" message.\n        sendTest();\n        return;\n      } catch (e) {\n        info(\"The worker has been disabled.\");\n      }\n    }\n    // Either workers are disabled, not supported or have thrown an exception.\n    // Thus, we fallback to a faked worker.\n    this._setupFakeWorker();\n  }\n\n  _setupFakeWorker() {\n    if (!PDFWorkerUtil.isWorkerDisabled) {\n      warn(\"Setting up fake worker.\");\n      PDFWorkerUtil.isWorkerDisabled = true;\n    }\n\n    PDFWorker._setupFakeWorkerGlobal\n      .then(WorkerMessageHandler => {\n        if (this.destroyed) {\n          this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n          return;\n        }\n        const port = new LoopbackPort();\n        this._port = port;\n\n        // All fake workers use the same port, making id unique.\n        const id = `fake${PDFWorkerUtil.fakeWorkerId++}`;\n\n        // If the main thread is our worker, setup the handling for the\n        // messages -- the main thread sends to it self.\n        const workerHandler = new MessageHandler(id + \"_worker\", id, port);\n        WorkerMessageHandler.setup(workerHandler, port);\n\n        const messageHandler = new MessageHandler(id, id + \"_worker\", port);\n        this._messageHandler = messageHandler;\n        this._readyCapability.resolve();\n        // Send global setting, e.g. verbosity level.\n        messageHandler.send(\"configure\", {\n          verbosity: this.verbosity,\n        });\n      })\n      .catch(reason => {\n        this._readyCapability.reject(\n          new Error(`Setting up fake worker failed: \"${reason.message}\".`)\n        );\n      });\n  }\n\n  /**\n   * Destroys the worker instance.\n   */\n  destroy() {\n    this.destroyed = true;\n    if (this._webWorker) {\n      // We need to terminate only web worker created resource.\n      this._webWorker.terminate();\n      this._webWorker = null;\n    }\n    PDFWorker.#workerPorts.delete(this._port);\n    this._port = null;\n    if (this._messageHandler) {\n      this._messageHandler.destroy();\n      this._messageHandler = null;\n    }\n  }\n\n  /**\n   * @param {PDFWorkerParameters} params - The worker initialization parameters.\n   */\n  static fromPort(params) {\n    if (!params?.port) {\n      throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n    }\n    if (this.#workerPorts.has(params.port)) {\n      return this.#workerPorts.get(params.port);\n    }\n    return new PDFWorker(params);\n  }\n\n  /**\n   * The current `workerSrc`, when it exists.\n   * @type {string}\n   */\n  static get workerSrc() {\n    if (GlobalWorkerOptions.workerSrc) {\n      return GlobalWorkerOptions.workerSrc;\n    }\n    if (PDFWorkerUtil.fallbackWorkerSrc !== null) {\n      if (!isNodeJS) {\n        deprecated('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      return PDFWorkerUtil.fallbackWorkerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  static get _mainThreadWorkerMessageHandler() {\n    try {\n      return globalThis.pdfjsWorker?.WorkerMessageHandler || null;\n    } catch (ex) {\n      return null;\n    }\n  }\n\n  // Loads worker code into the main-thread.\n  static get _setupFakeWorkerGlobal() {\n    const loader = async () => {\n      const mainWorkerMessageHandler = this._mainThreadWorkerMessageHandler;\n\n      if (mainWorkerMessageHandler) {\n        // The worker was already loaded using e.g. a `<script>` tag.\n        return mainWorkerMessageHandler;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n        const worker = await import(\"pdfjs/core/worker.js\");\n        return worker.WorkerMessageHandler;\n      }\n      if (\n        PDFJSDev.test(\"GENERIC\") &&\n        isNodeJS &&\n        // eslint-disable-next-line no-undef\n        typeof __non_webpack_require__ === \"function\"\n      ) {\n        // Since bundlers, such as Webpack, cannot be told to leave `require`\n        // statements alone we are thus forced to jump through hoops in order\n        // to prevent `Critical dependency: ...` warnings in third-party\n        // deployments of the built `pdf.js`/`pdf.worker.js` files; see\n        // https://github.com/webpack/webpack/issues/8826\n        //\n        // The following hack is based on the assumption that code running in\n        // Node.js won't ever be affected by e.g. Content Security Policies that\n        // prevent the use of `eval`. If that ever occurs, we should revert this\n        // to a normal `__non_webpack_require__` statement and simply document\n        // the Webpack warnings instead (telling users to ignore them).\n        //\n        // eslint-disable-next-line no-eval\n        const worker = eval(\"require\")(this.workerSrc);\n        return worker.WorkerMessageHandler;\n      }\n      await loadScript(this.workerSrc);\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n\n    return shadow(this, \"_setupFakeWorkerGlobal\", loader());\n  }\n}\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n  PDFWorker.getWorkerSrc = function () {\n    deprecated(\n      \"`PDFWorker.getWorkerSrc()`, please use `PDFWorker.workerSrc` instead.\"\n    );\n    return this.workerSrc;\n  };\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nclass WorkerTransport {\n  #docStats = null;\n\n  #pageCache = new Map();\n\n  #pagePromises = new Map();\n\n  #metadataPromise = null;\n\n  constructor(messageHandler, loadingTask, networkStream, params) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new FontLoader({\n      docId: loadingTask.docId,\n      onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n      ownerDocument: params.ownerDocument,\n      styleElement: params.styleElement,\n    });\n    this._params = params;\n\n    if (!params.useWorkerFetch) {\n      this.CMapReaderFactory = new params.CMapReaderFactory({\n        baseUrl: params.cMapUrl,\n        isCompressed: params.cMapPacked,\n      });\n      this.StandardFontDataFactory = new params.StandardFontDataFactory({\n        baseUrl: params.standardFontDataUrl,\n      });\n    }\n\n    this.destroyed = false;\n    this.destroyCapability = null;\n    this._passwordCapability = null;\n\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n    this.downloadInfoCapability = createPromiseCapability();\n\n    this.setupMessageHandler();\n  }\n\n  get annotationStorage() {\n    return shadow(this, \"annotationStorage\", new AnnotationStorage());\n  }\n\n  get stats() {\n    return this.#docStats;\n  }\n\n  getRenderingIntent(\n    intent,\n    annotationMode = AnnotationMode.ENABLE,\n    isOpList = false\n  ) {\n    let renderingIntent = RenderingIntentFlag.DISPLAY; // Default value.\n    let annotationHash = \"\";\n\n    switch (intent) {\n      case \"any\":\n        renderingIntent = RenderingIntentFlag.ANY;\n        break;\n      case \"display\":\n        break;\n      case \"print\":\n        renderingIntent = RenderingIntentFlag.PRINT;\n        break;\n      default:\n        warn(`getRenderingIntent - invalid intent: ${intent}`);\n    }\n\n    switch (annotationMode) {\n      case AnnotationMode.DISABLE:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_DISABLE;\n        break;\n      case AnnotationMode.ENABLE:\n        break;\n      case AnnotationMode.ENABLE_FORMS:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_FORMS;\n        break;\n      case AnnotationMode.ENABLE_STORAGE:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_STORAGE;\n\n        annotationHash = this.annotationStorage.hash;\n        break;\n      default:\n        warn(`getRenderingIntent - invalid annotationMode: ${annotationMode}`);\n    }\n\n    if (isOpList) {\n      renderingIntent += RenderingIntentFlag.OPLIST;\n    }\n\n    return {\n      renderingIntent,\n      cacheKey: `${renderingIntent}_${annotationHash}`,\n    };\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = createPromiseCapability();\n\n    if (this._passwordCapability) {\n      this._passwordCapability.reject(\n        new Error(\"Worker was destroyed during onPassword callback\")\n      );\n    }\n\n    const waitOn = [];\n    // We need to wait for all renderings to be completed, e.g.\n    // timeout/rAF can take a long time.\n    for (const page of this.#pageCache.values()) {\n      waitOn.push(page._destroy());\n    }\n    this.#pageCache.clear();\n    this.#pagePromises.clear();\n    // Allow `AnnotationStorage`-related clean-up when destroying the document.\n    if (this.hasOwnProperty(\"annotationStorage\")) {\n      this.annotationStorage.resetModified();\n    }\n    // We also need to wait for the worker to finish its long running tasks.\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n\n    Promise.all(waitOn).then(() => {\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n      this.#metadataPromise = null;\n      this._getFieldObjectsPromise = null;\n      this._hasJSActionsPromise = null;\n\n      if (this._networkStream) {\n        this._networkStream.cancelAllRequests(\n          new AbortException(\"Worker was terminated.\")\n        );\n      }\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const { messageHandler, loadingTask } = this;\n\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetReader - no `IPDFStream` instance available.\"\n      );\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total,\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetReader - expected an ArrayBuffer.\"\n            );\n            // Enqueue data chunk into sink, and transfer it\n            // to other side as `Transferable` object.\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = createPromiseCapability();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        // If stream or range are disabled, it's our only way to report\n        // loading progress.\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress) {\n            loadingTask.onProgress?.(this._lastProgress);\n          }\n          fullReader.onProgress = evt => {\n            loadingTask.onProgress?.({\n              loaded: evt.loaded,\n              total: evt.total,\n            });\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength,\n        });\n      }, headersCapability.reject);\n\n      return headersCapability.promise;\n    });\n\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetRangeReader - no `IPDFStream` instance available.\"\n      );\n      const rangeReader = this._networkStream.getRangeReader(\n        data.begin,\n        data.end\n      );\n\n      // When streaming is enabled, it's possible that the data requested here\n      // has already been fetched via the `_fullRequestReader` implementation.\n      // However, given that the PDF data is loaded asynchronously on the\n      // main-thread and then sent via `postMessage` to the worker-thread,\n      // it may not have been available during parsing (hence the attempt to\n      // use range requests here).\n      //\n      // To avoid wasting time and resources here, we'll thus *not* dispatch\n      // range requests if the data was already loaded but has not been sent to\n      // the worker-thread yet (which will happen via the `_fullRequestReader`).\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetRangeReader - expected an ArrayBuffer.\"\n            );\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"GetDoc\", ({ pdfInfo }) => {\n      this._numPages = pdfInfo.numPages;\n      this._htmlForXfa = pdfInfo.htmlForXfa;\n      delete pdfInfo.htmlForXfa;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n\n    messageHandler.on(\"DocException\", function (ex) {\n      let reason;\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new PasswordException(ex.message, ex.code);\n          break;\n        case \"InvalidPDFException\":\n          reason = new InvalidPDFException(ex.message);\n          break;\n        case \"MissingPDFException\":\n          reason = new MissingPDFException(ex.message);\n          break;\n        case \"UnexpectedResponseException\":\n          reason = new UnexpectedResponseException(ex.message, ex.status);\n          break;\n        case \"UnknownErrorException\":\n          reason = new UnknownErrorException(ex.message, ex.details);\n          break;\n        default:\n          unreachable(\"DocException - expected a valid Error.\");\n      }\n      loadingTask._capability.reject(reason);\n    });\n\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this._passwordCapability = createPromiseCapability();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          if (password instanceof Error) {\n            this._passwordCapability.reject(password);\n          } else {\n            this._passwordCapability.resolve({ password });\n          }\n        };\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this._passwordCapability.reject(ex);\n        }\n      } else {\n        this._passwordCapability.reject(\n          new PasswordException(exception.message, exception.code)\n        );\n      }\n      return this._passwordCapability.promise;\n    });\n\n    messageHandler.on(\"DataLoaded\", data => {\n      // For consistency: Ensure that progress is always reported when the\n      // entire PDF file has been loaded, regardless of how it was fetched.\n      loadingTask.onProgress?.({\n        loaded: data.length,\n        total: data.length,\n      });\n\n      this.downloadInfoCapability.resolve(data);\n    });\n\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const page = this.#pageCache.get(data.pageIndex);\n      page._startRenderPage(data.transparency, data.cacheKey);\n    });\n\n    messageHandler.on(\"commonobj\", ([id, type, exportedData]) => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            warn(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          let fontRegistry = null;\n          if (params.pdfBug && globalThis.FontInspector?.enabled) {\n            fontRegistry = {\n              registerFont(font, url) {\n                globalThis.FontInspector.fontAdded(font, url);\n              },\n            };\n          }\n          const font = new FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n            fontRegistry,\n          });\n\n          this.fontLoader\n            .bind(font)\n            .catch(reason => {\n              return messageHandler.sendWithPromise(\"FontFallback\", { id });\n            })\n            .finally(() => {\n              if (!params.fontExtraProperties && font.data) {\n                // Immediately release the `font.data` property once the font\n                // has been attached to the DOM, since it's no longer needed,\n                // rather than waiting for a `PDFDocumentProxy.cleanup` call.\n                // Since `font.data` could be very large, e.g. in some cases\n                // multiple megabytes, this will help reduce memory usage.\n                font.data = null;\n              }\n              this.commonObjs.resolve(id, font);\n            });\n          break;\n        case \"FontPath\":\n        case \"Image\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"obj\", ([id, pageIndex, type, imageData]) => {\n      if (this.destroyed) {\n        // Ignore any pending requests if the worker was terminated.\n        return;\n      }\n\n      const pageProxy = this.#pageCache.get(pageIndex);\n      if (pageProxy.objs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n\n          // Heuristic that will allow us not to store large data.\n          const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n          if (imageData) {\n            let length;\n            if (imageData.bitmap) {\n              const { bitmap, width, height } = imageData;\n              length = width * height * 4;\n              pageProxy._bitmaps.add(bitmap);\n            } else {\n              length = imageData.data?.length || 0;\n            }\n\n            if (length > MAX_IMAGE_SIZE_TO_STORE) {\n              pageProxy.cleanupAfterRender = true;\n            }\n          }\n          break;\n        case \"Pattern\":\n          pageProxy.objs.resolve(id, imageData);\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n      loadingTask.onProgress?.({\n        loaded: data.loaded,\n        total: data.total,\n      });\n    });\n\n    messageHandler.on(\"DocStats\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n      // Ensure that a `PDFDocumentProxy.stats` call-site cannot accidentally\n      // modify this internal data.\n      this.#docStats = Object.freeze({\n        streamTypes: Object.freeze(data.streamTypes),\n        fontTypes: Object.freeze(data.fontTypes),\n      });\n    });\n\n    messageHandler.on(\n      \"UnsupportedFeature\",\n      this._onUnsupportedFeature.bind(this)\n    );\n\n    messageHandler.on(\"FetchBuiltInCMap\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n      if (!this.CMapReaderFactory) {\n        return Promise.reject(\n          new Error(\n            \"CMapReaderFactory not initialized, see the `useWorkerFetch` parameter.\"\n          )\n        );\n      }\n      return this.CMapReaderFactory.fetch(data);\n    });\n\n    messageHandler.on(\"FetchStandardFontData\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n      if (!this.StandardFontDataFactory) {\n        return Promise.reject(\n          new Error(\n            \"StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter.\"\n          )\n        );\n      }\n      return this.StandardFontDataFactory.fetch(data);\n    });\n  }\n\n  _onUnsupportedFeature({ featureId }) {\n    if (this.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    this.loadingTask.onUnsupportedFeature?.(featureId);\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  getPage(pageNumber) {\n    if (\n      !Number.isInteger(pageNumber) ||\n      pageNumber <= 0 ||\n      pageNumber > this._numPages\n    ) {\n      return Promise.reject(new Error(\"Invalid page request.\"));\n    }\n\n    const pageIndex = pageNumber - 1,\n      cachedPromise = this.#pagePromises.get(pageIndex);\n    if (cachedPromise) {\n      return cachedPromise;\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(\"GetPage\", {\n        pageIndex,\n      })\n      .then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n        const page = new PDFPageProxy(\n          pageIndex,\n          pageInfo,\n          this,\n          this._params.ownerDocument,\n          this._params.pdfBug\n        );\n        this.#pageCache.set(pageIndex, page);\n        return page;\n      });\n    this.#pagePromises.set(pageIndex, promise);\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    if (\n      typeof ref !== \"object\" ||\n      ref === null ||\n      !Number.isInteger(ref.num) ||\n      ref.num < 0 ||\n      !Number.isInteger(ref.gen) ||\n      ref.gen < 0\n    ) {\n      return Promise.reject(new Error(\"Invalid pageIndex request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n      num: ref.num,\n      gen: ref.gen,\n    });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent,\n    });\n  }\n\n  saveDocument() {\n    return this.messageHandler\n      .sendWithPromise(\"SaveDocument\", {\n        isPureXfa: !!this._htmlForXfa,\n        numPages: this._numPages,\n        annotationStorage: this.annotationStorage.serializable,\n        filename: this._fullReader?.filename ?? null,\n      })\n      .finally(() => {\n        this.annotationStorage.resetModified();\n      });\n  }\n\n  getFieldObjects() {\n    return (this._getFieldObjectsPromise ||=\n      this.messageHandler.sendWithPromise(\"GetFieldObjects\", null));\n  }\n\n  hasJSActions() {\n    return (this._hasJSActionsPromise ||= this.messageHandler.sendWithPromise(\n      \"HasJSActions\",\n      null\n    ));\n  }\n\n  getCalculationOrderIds() {\n    return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id,\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getJavaScript() {\n    return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n  }\n\n  getDocJSActions() {\n    return this.messageHandler.sendWithPromise(\"GetDocJSActions\", null);\n  }\n\n  getPageJSActions(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n      pageIndex,\n    });\n  }\n\n  getStructTree(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetStructTree\", {\n      pageIndex,\n    });\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getOptionalContentConfig() {\n    return this.messageHandler\n      .sendWithPromise(\"GetOptionalContentConfig\", null)\n      .then(results => {\n        return new OptionalContentConfig(results);\n      });\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    return (this.#metadataPromise ||= this.messageHandler\n      .sendWithPromise(\"GetMetadata\", null)\n      .then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader?.filename ?? null,\n          contentLength: this._fullReader?.contentLength ?? null,\n        };\n      }));\n  }\n\n  getMarkInfo() {\n    return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n  }\n\n  async startCleanup(keepLoadedFonts = false) {\n    await this.messageHandler.sendWithPromise(\"Cleanup\", null);\n\n    if (this.destroyed) {\n      return; // No need to manually clean-up when destruction has started.\n    }\n    for (const page of this.#pageCache.values()) {\n      const cleanupSuccessful = page.cleanup();\n\n      if (!cleanupSuccessful) {\n        throw new Error(\n          `startCleanup: Page ${page.pageNumber} is currently rendering.`\n        );\n      }\n    }\n    this.commonObjs.clear();\n    if (!keepLoadedFonts) {\n      this.fontLoader.clear();\n    }\n    this.#metadataPromise = null;\n    this._getFieldObjectsPromise = null;\n    this._hasJSActionsPromise = null;\n  }\n\n  get loadingParams() {\n    const params = this._params;\n    return shadow(this, \"loadingParams\", {\n      disableAutoFetch: params.disableAutoFetch,\n      enableXfa: params.enableXfa,\n    });\n  }\n}\n\n/**\n * A PDF document and page is built of many objects. E.g. there are objects for\n * fonts, images, rendering code, etc. These objects may get processed inside of\n * a worker. This class implements some basic methods to manage these objects.\n */\nclass PDFObjects {\n  #objs = Object.create(null);\n\n  /**\n   * Ensures there is an object defined for `objId`.\n   *\n   * @param {string} objId\n   * @returns {Object}\n   */\n  #ensureObj(objId) {\n    const obj = this.#objs[objId];\n    if (obj) {\n      return obj;\n    }\n    return (this.#objs[objId] = {\n      capability: createPromiseCapability(),\n      data: null,\n    });\n  }\n\n  /**\n   * If called *without* callback, this returns the data of `objId` but the\n   * object needs to be resolved. If it isn't, this method throws.\n   *\n   * If called *with* a callback, the callback is called with the data of the\n   * object once the object is resolved. That means, if you call this method\n   * and the object is already resolved, the callback gets called right away.\n   *\n   * @param {string} objId\n   * @param {function} [callback]\n   * @returns {any}\n   */\n  get(objId, callback = null) {\n    // If there is a callback, then the get can be async and the object is\n    // not required to be resolved right now.\n    if (callback) {\n      const obj = this.#ensureObj(objId);\n      obj.capability.promise.then(() => callback(obj.data));\n      return null;\n    }\n    // If there isn't a callback, the user expects to get the resolved data\n    // directly.\n    const obj = this.#objs[objId];\n    // If there isn't an object yet or the object isn't resolved, then the\n    // data isn't ready yet!\n    if (!obj?.capability.settled) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n\n  /**\n   * @param {string} objId\n   * @returns {boolean}\n   */\n  has(objId) {\n    const obj = this.#objs[objId];\n    return obj?.capability.settled || false;\n  }\n\n  /**\n   * Resolves the object `objId` with optional `data`.\n   *\n   * @param {string} objId\n   * @param {any} [data]\n   */\n  resolve(objId, data = null) {\n    const obj = this.#ensureObj(objId);\n    obj.data = data;\n    obj.capability.resolve();\n  }\n\n  clear() {\n    this.#objs = Object.create(null);\n  }\n}\n\n/**\n * Allows controlling of the rendering tasks.\n */\nclass RenderTask {\n  constructor(internalRenderTask) {\n    this._internalRenderTask = internalRenderTask;\n\n    /**\n     * Callback for incremental rendering -- a function that will be called\n     * each time the rendering is paused.  To continue rendering call the\n     * function that is the first argument to the callback.\n     * @type {function}\n     */\n    this.onContinue = null;\n  }\n\n  /**\n   * Promise for rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._internalRenderTask.capability.promise;\n  }\n\n  /**\n   * Cancels the rendering task. If the task is currently rendering it will\n   * not be cancelled until graphics pauses with a timeout. The promise that\n   * this object extends will be rejected when cancelled.\n   */\n  cancel() {\n    this._internalRenderTask.cancel();\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nclass InternalRenderTask {\n  static #canvasInUse = new WeakSet();\n\n  constructor({\n    callback,\n    params,\n    objs,\n    commonObjs,\n    annotationCanvasMap,\n    operatorList,\n    pageIndex,\n    canvasFactory,\n    useRequestAnimationFrame = false,\n    pdfBug = false,\n    pageColors = null,\n  }) {\n    this.callback = callback;\n    this.params = params;\n    this.objs = objs;\n    this.commonObjs = commonObjs;\n    this.annotationCanvasMap = annotationCanvasMap;\n    this.operatorListIdx = null;\n    this.operatorList = operatorList;\n    this._pageIndex = pageIndex;\n    this.canvasFactory = canvasFactory;\n    this._pdfBug = pdfBug;\n    this.pageColors = pageColors;\n\n    this.running = false;\n    this.graphicsReadyCallback = null;\n    this.graphicsReady = false;\n    this._useRequestAnimationFrame =\n      useRequestAnimationFrame === true && typeof window !== \"undefined\";\n    this.cancelled = false;\n    this.capability = createPromiseCapability();\n    this.task = new RenderTask(this);\n    // caching this-bound methods\n    this._cancelBound = this.cancel.bind(this);\n    this._continueBound = this._continue.bind(this);\n    this._scheduleNextBound = this._scheduleNext.bind(this);\n    this._nextBound = this._next.bind(this);\n    this._canvas = params.canvasContext.canvas;\n  }\n\n  get completed() {\n    return this.capability.promise.catch(function () {\n      // Ignoring errors, since we only want to know when rendering is\n      // no longer pending.\n    });\n  }\n\n  initializeGraphics({ transparency = false, optionalContentConfig }) {\n    if (this.cancelled) {\n      return;\n    }\n    if (this._canvas) {\n      if (InternalRenderTask.#canvasInUse.has(this._canvas)) {\n        throw new Error(\n          \"Cannot use the same canvas during multiple render() operations. \" +\n            \"Use different canvas or ensure previous operations were \" +\n            \"cancelled or completed.\"\n        );\n      }\n      InternalRenderTask.#canvasInUse.add(this._canvas);\n    }\n\n    if (this._pdfBug && globalThis.StepperManager?.enabled) {\n      this.stepper = globalThis.StepperManager.create(this._pageIndex);\n      this.stepper.init(this.operatorList);\n      this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n    }\n    const { canvasContext, viewport, transform, imageLayer, background } =\n      this.params;\n\n    this.gfx = new CanvasGraphics(\n      canvasContext,\n      this.commonObjs,\n      this.objs,\n      this.canvasFactory,\n      imageLayer,\n      optionalContentConfig,\n      this.annotationCanvasMap,\n      this.pageColors\n    );\n    this.gfx.beginDrawing({\n      transform,\n      viewport,\n      transparency,\n      background,\n    });\n    this.operatorListIdx = 0;\n    this.graphicsReady = true;\n    if (this.graphicsReadyCallback) {\n      this.graphicsReadyCallback();\n    }\n  }\n\n  cancel(error = null) {\n    this.running = false;\n    this.cancelled = true;\n    if (this.gfx) {\n      this.gfx.endDrawing();\n    }\n    if (this._canvas) {\n      InternalRenderTask.#canvasInUse.delete(this._canvas);\n    }\n    this.callback(\n      error ||\n        new RenderingCancelledException(\n          `Rendering cancelled, page ${this._pageIndex + 1}`,\n          \"canvas\"\n        )\n    );\n  }\n\n  operatorListChanged() {\n    if (!this.graphicsReady) {\n      if (!this.graphicsReadyCallback) {\n        this.graphicsReadyCallback = this._continueBound;\n      }\n      return;\n    }\n\n    if (this.stepper) {\n      this.stepper.updateOperatorList(this.operatorList);\n    }\n\n    if (this.running) {\n      return;\n    }\n    this._continue();\n  }\n\n  _continue() {\n    this.running = true;\n    if (this.cancelled) {\n      return;\n    }\n    if (this.task.onContinue) {\n      this.task.onContinue(this._scheduleNextBound);\n    } else {\n      this._scheduleNext();\n    }\n  }\n\n  _scheduleNext() {\n    if (this._useRequestAnimationFrame) {\n      window.requestAnimationFrame(() => {\n        this._nextBound().catch(this._cancelBound);\n      });\n    } else {\n      Promise.resolve().then(this._nextBound).catch(this._cancelBound);\n    }\n  }\n\n  async _next() {\n    if (this.cancelled) {\n      return;\n    }\n    this.operatorListIdx = this.gfx.executeOperatorList(\n      this.operatorList,\n      this.operatorListIdx,\n      this._continueBound,\n      this.stepper\n    );\n    if (this.operatorListIdx === this.operatorList.argsArray.length) {\n      this.running = false;\n      if (this.operatorList.lastChunk) {\n        this.gfx.endDrawing();\n        if (this._canvas) {\n          InternalRenderTask.#canvasInUse.delete(this._canvas);\n        }\n        this.callback();\n      }\n    }\n  }\n}\n\n/** @type {string} */\nconst version =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\n/** @type {string} */\nconst build =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : null;\n\nexport {\n  build,\n  DefaultCanvasFactory,\n  DefaultCMapReaderFactory,\n  DefaultStandardFontDataFactory,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFDocumentLoadingTask,\n  PDFDocumentProxy,\n  PDFPageProxy,\n  PDFWorker,\n  PDFWorkerUtil,\n  RenderTask,\n  setPDFNetworkStreamFactory,\n  version,\n};\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n  BaseSVGFactory,\n} from \"./base_factory.js\";\nimport { BaseException, stringToBytes, Util, warn } from \"../shared/util.js\";\n\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nclass PixelsPerInch {\n  static CSS = 96.0;\n\n  static PDF = 72.0;\n\n  static PDF_TO_CSS_UNITS = this.CSS / this.PDF;\n}\n\nclass DOMCanvasFactory extends BaseCanvasFactory {\n  constructor({ ownerDocument = globalThis.document } = {}) {\n    super();\n    this._document = ownerDocument;\n  }\n\n  /**\n   * @ignore\n   */\n  _createCanvas(width, height) {\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.width = width;\n    canvas.height = height;\n    return canvas;\n  }\n}\n\nasync function fetchData(url, asTypedArray = false) {\n  if (\n    (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n    isValidFetchUrl(url, document.baseURI)\n  ) {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return asTypedArray\n      ? new Uint8Array(await response.arrayBuffer())\n      : stringToBytes(await response.text());\n  }\n\n  // The Fetch API is not supported.\n  return new Promise((resolve, reject) => {\n    const request = new XMLHttpRequest();\n    request.open(\"GET\", url, /* asTypedArray = */ true);\n\n    if (asTypedArray) {\n      request.responseType = \"arraybuffer\";\n    }\n    request.onreadystatechange = () => {\n      if (request.readyState !== XMLHttpRequest.DONE) {\n        return;\n      }\n      if (request.status === 200 || request.status === 0) {\n        let data;\n        if (asTypedArray && request.response) {\n          data = new Uint8Array(request.response);\n        } else if (!asTypedArray && request.responseText) {\n          data = stringToBytes(request.responseText);\n        }\n        if (data) {\n          resolve(data);\n          return;\n        }\n      }\n      reject(new Error(request.statusText));\n    };\n\n    request.send(null);\n  });\n}\n\nclass DOMCMapReaderFactory extends BaseCMapReaderFactory {\n  /**\n   * @ignore\n   */\n  _fetchData(url, compressionType) {\n    return fetchData(url, /* asTypedArray = */ this.isCompressed).then(data => {\n      return { cMapData: data, compressionType };\n    });\n  }\n}\n\nclass DOMStandardFontDataFactory extends BaseStandardFontDataFactory {\n  /**\n   * @ignore\n   */\n  _fetchData(url) {\n    return fetchData(url, /* asTypedArray = */ true);\n  }\n}\n\nclass DOMSVGFactory extends BaseSVGFactory {\n  /**\n   * @ignore\n   */\n  _createSVG(type) {\n    return document.createElementNS(SVG_NS, type);\n  }\n}\n\n/**\n * @typedef {Object} PageViewportParameters\n * @property {Array<number>} viewBox - The xMin, yMin, xMax and\n *   yMax coordinates.\n * @property {number} scale - The scale of the viewport.\n * @property {number} rotation - The rotation, in degrees, of the viewport.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\n *   default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\n *   default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * @typedef {Object} PageViewportCloneParameters\n * @property {number} [scale] - The scale, overriding the one in the cloned\n *   viewport. The default value is `this.scale`.\n * @property {number} [rotation] - The rotation, in degrees, overriding the one\n *   in the cloned viewport. The default value is `this.rotation`.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `this.offsetX`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `this.offsetY`.\n * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * PDF page viewport created based on scale, rotation and offset.\n */\nclass PageViewport {\n  /**\n   * @param {PageViewportParameters}\n   */\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    // Normalize the rotation, by clamping it to the [0, 360) range.\n    rotation %= 360;\n    if (rotation < 0) {\n      rotation += 360;\n    }\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      case 0:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n      default:\n        throw new Error(\n          \"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\"\n        );\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY,\n    ];\n\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Clones viewport, with optional additional properties.\n   * @param {PageViewportCloneParameters} [params]\n   * @returns {PageViewport} Cloned viewport.\n   */\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * Converts PDF point to the viewport coordinates. For examples, useful for\n   * converting PDF location into canvas pixel coordinates.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the viewport coordinate space.\n   * @see {@link convertToPdfPoint}\n   * @see {@link convertToViewportRectangle}\n   */\n  convertToViewportPoint(x, y) {\n    return Util.applyTransform([x, y], this.transform);\n  }\n\n  /**\n   * Converts PDF rectangle to the viewport coordinates.\n   * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\n   * @returns {Array} Array containing corresponding coordinates of the\n   *   rectangle in the viewport coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToViewportRectangle(rect) {\n    const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\n    const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  /**\n   * Converts viewport coordinates to the PDF location. For examples, useful\n   * for converting canvas pixel location into PDF one.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the PDF coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToPdfPoint(x, y) {\n    return Util.applyInverseTransform([x, y], this.transform);\n  }\n}\n\nclass RenderingCancelledException extends BaseException {\n  constructor(msg, type) {\n    super(msg, \"RenderingCancelledException\");\n    this.type = type;\n  }\n}\n\nfunction isDataScheme(url) {\n  const ii = url.length;\n  let i = 0;\n  while (i < ii && url[i].trim() === \"\") {\n    i++;\n  }\n  return url.substring(i, i + 5).toLowerCase() === \"data:\";\n}\n\nfunction isPdfFile(filename) {\n  return typeof filename === \"string\" && /\\.pdf$/i.test(filename);\n}\n\n/**\n * Gets the filename from a given URL.\n * @param {string} url\n * @returns {string}\n */\nfunction getFilenameFromUrl(url) {\n  const anchor = url.indexOf(\"#\");\n  const query = url.indexOf(\"?\");\n  const end = Math.min(\n    anchor > 0 ? anchor : url.length,\n    query > 0 ? query : url.length\n  );\n  return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n}\n\n/**\n * Returns the filename or guessed filename from the url (see issue 3455).\n * @param {string} url - The original PDF location.\n * @param {string} defaultFilename - The value returned if the filename is\n *   unknown, or the protocol is unsupported.\n * @returns {string} Guessed PDF filename.\n */\nfunction getPdfFilenameFromUrl(url, defaultFilename = \"document.pdf\") {\n  if (typeof url !== \"string\") {\n    return defaultFilename;\n  }\n  if (isDataScheme(url)) {\n    warn('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');\n    return defaultFilename;\n  }\n  const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n  //              SCHEME        HOST        1.PATH  2.QUERY   3.REF\n  // Pattern to get last matching NAME.pdf\n  const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n  const splitURI = reURI.exec(url);\n  let suggestedFilename =\n    reFilename.exec(splitURI[1]) ||\n    reFilename.exec(splitURI[2]) ||\n    reFilename.exec(splitURI[3]);\n  if (suggestedFilename) {\n    suggestedFilename = suggestedFilename[0];\n    if (suggestedFilename.includes(\"%\")) {\n      // URL-encoded %2Fpath%2Fto%2Ffile.pdf should be file.pdf\n      try {\n        suggestedFilename = reFilename.exec(\n          decodeURIComponent(suggestedFilename)\n        )[0];\n      } catch (ex) {\n        // Possible (extremely rare) errors:\n        // URIError \"Malformed URI\", e.g. for \"%AA.pdf\"\n        // TypeError \"null has no properties\", e.g. for \"%2F.pdf\"\n      }\n    }\n  }\n  return suggestedFilename || defaultFilename;\n}\n\nclass StatTimer {\n  constructor() {\n    this.started = Object.create(null);\n    this.times = [];\n  }\n\n  time(name) {\n    if (name in this.started) {\n      warn(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      warn(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now(),\n    });\n    // Remove timer from started so it can be called again.\n    delete this.started[name];\n  }\n\n  toString() {\n    // Find the longest name for padding purposes.\n    const outBuf = [];\n    let longest = 0;\n    for (const time of this.times) {\n      const name = time.name;\n      if (name.length > longest) {\n        longest = name.length;\n      }\n    }\n    for (const time of this.times) {\n      const duration = time.end - time.start;\n      outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\n\nfunction isValidFetchUrl(url, baseUrl) {\n  try {\n    const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    // The Fetch API only supports the http/https protocols, and not file/ftp.\n    return protocol === \"http:\" || protocol === \"https:\";\n  } catch (ex) {\n    return false; // `new URL()` will throw on incorrect data.\n  }\n}\n\n/**\n * @param {string} src\n * @param {boolean} [removeScriptElement]\n * @returns {Promise<void>}\n */\nfunction loadScript(src, removeScriptElement = false) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n\n    script.onload = function (evt) {\n      if (removeScriptElement) {\n        script.remove();\n      }\n      resolve(evt);\n    };\n    script.onerror = function () {\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n    (document.head || document.documentElement).appendChild(script);\n  });\n}\n\n// Deprecated API function -- display regardless of the `verbosity` setting.\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  /**\n   * Convert a PDF date string to a JavaScript `Date` object.\n   *\n   * The PDF date string format is described in section 7.9.4 of the official\n   * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\n   * edition) Adobe describes the same format including a trailing apostrophe.\n   * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\n   * them. We ignore all apostrophes as they are not necessary for date parsing.\n   *\n   * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\n   * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\n   * parts of the date string).\n   *\n   * @param {string} input\n   * @returns {Date|null}\n   */\n  static toDateObject(input) {\n    if (!input || typeof input !== \"string\") {\n      return null;\n    }\n\n    // Lazily initialize the regular expression.\n    if (!pdfDateStringRegex) {\n      pdfDateStringRegex = new RegExp(\n        \"^D:\" + // Prefix (required)\n          \"(\\\\d{4})\" + // Year (required)\n          \"(\\\\d{2})?\" + // Month (optional)\n          \"(\\\\d{2})?\" + // Day (optional)\n          \"(\\\\d{2})?\" + // Hour (optional)\n          \"(\\\\d{2})?\" + // Minute (optional)\n          \"(\\\\d{2})?\" + // Second (optional)\n          \"([Z|+|-])?\" + // Universal time relation (optional)\n          \"(\\\\d{2})?\" + // Offset hour (optional)\n          \"'?\" + // Splitting apostrophe (optional)\n          \"(\\\\d{2})?\" + // Offset minute (optional)\n          \"'?\" // Trailing apostrophe (optional)\n      );\n    }\n\n    // Optional fields that don't satisfy the requirements from the regular\n    // expression (such as incorrect digit counts or numbers that are out of\n    // range) will fall back the defaults from the specification.\n    const matches = pdfDateStringRegex.exec(input);\n    if (!matches) {\n      return null;\n    }\n\n    // JavaScript's `Date` object expects the month to be between 0 and 11\n    // instead of 1 and 12, so we have to correct for that.\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    // Universal time relation 'Z' means that the local time is equal to the\n    // universal time, whereas the relations '+'/'-' indicate that the local\n    // time is later respectively earlier than the universal time. Every date\n    // is normalized to universal time.\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\n\n/**\n * NOTE: This is (mostly) intended to support printing of XFA forms.\n */\nfunction getXfaPageViewport(xfaPage, { scale = 1, rotation = 0 }) {\n  const { width, height } = xfaPage.attributes.style;\n  const viewBox = [0, 0, parseInt(width), parseInt(height)];\n\n  return new PageViewport({\n    viewBox,\n    scale,\n    rotation,\n  });\n}\n\nexport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMStandardFontDataFactory,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  isDataScheme,\n  isPdfFile,\n  isValidFetchUrl,\n  loadScript,\n  PageViewport,\n  PDFDateString,\n  PixelsPerInch,\n  RenderingCancelledException,\n  StatTimer,\n};\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CMapCompressionType, unreachable } from \"../shared/util.js\";\n\nclass BaseCanvasFactory {\n  constructor() {\n    if (this.constructor === BaseCanvasFactory) {\n      unreachable(\"Cannot initialize BaseCanvasFactory.\");\n    }\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = this._createCanvas(width, height);\n    return {\n      canvas,\n      context: canvas.getContext(\"2d\"),\n    };\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    // Zeroing the width and height cause Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n\n  /**\n   * @ignore\n   */\n  _createCanvas(width, height) {\n    unreachable(\"Abstract method `_createCanvas` called.\");\n  }\n}\n\nclass BaseCMapReaderFactory {\n  constructor({ baseUrl = null, isCompressed = false }) {\n    if (this.constructor === BaseCMapReaderFactory) {\n      unreachable(\"Cannot initialize BaseCMapReaderFactory.\");\n    }\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({ name }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The CMap \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.'\n      );\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed\n      ? CMapCompressionType.BINARY\n      : CMapCompressionType.NONE;\n\n    return this._fetchData(url, compressionType).catch(reason => {\n      throw new Error(\n        `Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`\n      );\n    });\n  }\n\n  /**\n   * @ignore\n   */\n  _fetchData(url, compressionType) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass BaseStandardFontDataFactory {\n  constructor({ baseUrl = null }) {\n    if (this.constructor === BaseStandardFontDataFactory) {\n      unreachable(\"Cannot initialize BaseStandardFontDataFactory.\");\n    }\n    this.baseUrl = baseUrl;\n  }\n\n  async fetch({ filename }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The standard font \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"standardFontDataUrl\" API parameter is provided.'\n      );\n    }\n    if (!filename) {\n      throw new Error(\"Font filename must be specified.\");\n    }\n    const url = `${this.baseUrl}${filename}`;\n\n    return this._fetchData(url).catch(reason => {\n      throw new Error(`Unable to load font data at: ${url}`);\n    });\n  }\n\n  /**\n   * @ignore\n   */\n  _fetchData(url) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass BaseSVGFactory {\n  constructor() {\n    if (this.constructor === BaseSVGFactory) {\n      unreachable(\"Cannot initialize BaseSVGFactory.\");\n    }\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid SVG dimensions\");\n    }\n    const svg = this._createSVG(\"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n    svg.setAttribute(\"width\", `${width}px`);\n    svg.setAttribute(\"height\", `${height}px`);\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n\n    return svg;\n  }\n\n  createElement(type) {\n    if (typeof type !== \"string\") {\n      throw new Error(\"Invalid SVG element type\");\n    }\n    return this._createSVG(type);\n  }\n\n  /**\n   * @ignore\n   */\n  _createSVG(type) {\n    unreachable(\"Abstract method `_createSVG` called.\");\n  }\n}\n\nexport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n  BaseSVGFactory,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  bytesToString,\n  FeatureTest,\n  shadow,\n  string32,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  warn,\n} from \"../shared/util.js\";\n\nclass BaseFontLoader {\n  constructor({\n    docId,\n    onUnsupportedFeature,\n    ownerDocument = globalThis.document,\n    // For testing only.\n    styleElement = null,\n  }) {\n    if (this.constructor === BaseFontLoader) {\n      unreachable(\"Cannot initialize BaseFontLoader.\");\n    }\n    this.docId = docId;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this._document = ownerDocument;\n\n    this.nativeFontFaces = [];\n    this.styleElement =\n      typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"!PRODUCTION || TESTING\")\n        ? styleElement\n        : null;\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.push(nativeFontFace);\n    this._document.fonts.add(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    let styleElement = this.styleElement;\n    if (!styleElement) {\n      styleElement = this.styleElement = this._document.createElement(\"style\");\n      styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n      this._document.documentElement\n        .getElementsByTagName(\"head\")[0]\n        .appendChild(styleElement);\n    }\n    const styleSheet = styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    for (const nativeFontFace of this.nativeFontFaces) {\n      this._document.fonts.delete(nativeFontFace);\n    }\n    this.nativeFontFaces.length = 0;\n\n    if (this.styleElement) {\n      // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async bind(font) {\n    // Add the font to the DOM only once; skip if the font is already loaded.\n    if (font.attached || font.missingFile) {\n      return;\n    }\n    font.attached = true;\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          this._onUnsupportedFeature({\n            featureId: UNSUPPORTED_FEATURES.errorFontLoadNative,\n          });\n          warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n\n          // When font loading failed, fall back to the built-in font renderer.\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return; // The font was, asynchronously, loaded.\n    }\n\n    // !this.isFontLoadingAPISupported\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return; // The font was, synchronously, loaded.\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent([rule], [font], request);\n      });\n      // The font was, asynchronously, loaded.\n    }\n  }\n\n  _queueLoadingCallback(callback) {\n    unreachable(\"Abstract method `_queueLoadingCallback`.\");\n  }\n\n  get isFontLoadingAPISupported() {\n    const hasFonts = !!this._document?.fonts;\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      return shadow(\n        this,\n        \"isFontLoadingAPISupported\",\n        hasFonts && !this.styleElement\n      );\n    }\n    return shadow(this, \"isFontLoadingAPISupported\", hasFonts);\n  }\n\n  // eslint-disable-next-line getter-return\n  get isSyncFontLoadingSupported() {\n    unreachable(\"Abstract method `isSyncFontLoadingSupported`.\");\n  }\n\n  // eslint-disable-next-line getter-return\n  get _loadTestFont() {\n    unreachable(\"Abstract method `_loadTestFont`.\");\n  }\n\n  _prepareFontLoadEvent(rules, fontsToLoad, request) {\n    unreachable(\"Abstract method `_prepareFontLoadEvent`.\");\n  }\n}\n\nlet FontLoader;\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  FontLoader = class MozcentralFontLoader extends BaseFontLoader {\n    get isSyncFontLoadingSupported() {\n      return shadow(this, \"isSyncFontLoadingSupported\", true);\n    }\n  };\n} else {\n  // PDFJSDev.test('CHROME || GENERIC')\n\n  FontLoader = class GenericFontLoader extends BaseFontLoader {\n    constructor(params) {\n      super(params);\n      this.loadingContext = {\n        requests: [],\n        nextRequestId: 0,\n      };\n      this.loadTestFontId = 0;\n    }\n\n    get isSyncFontLoadingSupported() {\n      let supported = false;\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\n        if (typeof navigator === \"undefined\") {\n          // Node.js - we can pretend that sync font loading is supported.\n          supported = true;\n        } else {\n          // User agent string sniffing is bad, but there is no reliable way to\n          // tell if the font is fully loaded and ready to be used with canvas.\n          const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(\n            navigator.userAgent\n          );\n          if (m?.[1] >= 14) {\n            supported = true;\n          }\n          // TODO - other browsers...\n        }\n      }\n      return shadow(this, \"isSyncFontLoadingSupported\", supported);\n    }\n\n    _queueLoadingCallback(callback) {\n      function completeRequest() {\n        assert(!request.done, \"completeRequest() cannot be called twice.\");\n        request.done = true;\n\n        // Sending all completed requests in order of how they were queued.\n        while (context.requests.length > 0 && context.requests[0].done) {\n          const otherRequest = context.requests.shift();\n          setTimeout(otherRequest.callback, 0);\n        }\n      }\n\n      const context = this.loadingContext;\n      const request = {\n        id: `pdfjs-font-loading-${context.nextRequestId++}`,\n        done: false,\n        complete: completeRequest,\n        callback,\n      };\n      context.requests.push(request);\n      return request;\n    }\n\n    get _loadTestFont() {\n      const getLoadTestFont = function () {\n        // This is a CFF font with 1 glyph for '.' that fills its entire width\n        // and height.\n        return atob(\n          \"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" +\n            \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" +\n            \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" +\n            \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" +\n            \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" +\n            \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" +\n            \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" +\n            \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" +\n            \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" +\n            \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" +\n            \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" +\n            \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" +\n            \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" +\n            \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" +\n            \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" +\n            \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" +\n            \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\"\n        );\n      };\n      return shadow(this, \"_loadTestFont\", getLoadTestFont());\n    }\n\n    _prepareFontLoadEvent(rules, fonts, request) {\n      /** Hack begin */\n      // There's currently no event when a font has finished downloading so the\n      // following code is a dirty hack to 'guess' when a font is ready.\n      // It's assumed fonts are loaded in order, so add a known test font after\n      // the desired fonts and then test for the loading of that test font.\n\n      function int32(data, offset) {\n        return (\n          (data.charCodeAt(offset) << 24) |\n          (data.charCodeAt(offset + 1) << 16) |\n          (data.charCodeAt(offset + 2) << 8) |\n          (data.charCodeAt(offset + 3) & 0xff)\n        );\n      }\n      function spliceString(s, offset, remove, insert) {\n        const chunk1 = s.substring(0, offset);\n        const chunk2 = s.substring(offset + remove);\n        return chunk1 + insert + chunk2;\n      }\n      let i, ii;\n\n      // The temporary canvas is used to determine if fonts are loaded.\n      const canvas = this._document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = 1;\n      const ctx = canvas.getContext(\"2d\");\n\n      let called = 0;\n      function isFontReady(name, callback) {\n        called++;\n        // With setTimeout clamping this gives the font ~100ms to load.\n        if (called > 30) {\n          warn(\"Load test font never loaded.\");\n          callback();\n          return;\n        }\n        ctx.font = \"30px \" + name;\n        ctx.fillText(\".\", 0, 20);\n        const imageData = ctx.getImageData(0, 0, 1, 1);\n        if (imageData.data[3] > 0) {\n          callback();\n          return;\n        }\n        setTimeout(isFontReady.bind(null, name, callback));\n      }\n\n      const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n      // Chromium seems to cache fonts based on a hash of the actual font data,\n      // so the font must be modified for each load test else it will appear to\n      // be loaded already.\n      // TODO: This could maybe be made faster by avoiding the btoa of the full\n      // font by splitting it in chunks before hand and padding the font id.\n      let data = this._loadTestFont;\n      const COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\n      data = spliceString(\n        data,\n        COMMENT_OFFSET,\n        loadTestFontId.length,\n        loadTestFontId\n      );\n      // CFF checksum is important for IE, adjusting it\n      const CFF_CHECKSUM_OFFSET = 16;\n      const XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\n      let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n      for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n        checksum = (checksum - XXXX_VALUE + int32(loadTestFontId, i)) | 0;\n      }\n      if (i < loadTestFontId.length) {\n        // align to 4 bytes boundary\n        checksum =\n          (checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i)) | 0;\n      }\n      data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n\n      const url = `url(data:font/opentype;base64,${btoa(data)});`;\n      const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n      this.insertRule(rule);\n\n      const names = [];\n      for (const font of fonts) {\n        names.push(font.loadedName);\n      }\n      names.push(loadTestFontId);\n\n      const div = this._document.createElement(\"div\");\n      div.style.visibility = \"hidden\";\n      div.style.width = div.style.height = \"10px\";\n      div.style.position = \"absolute\";\n      div.style.top = div.style.left = \"0px\";\n\n      for (const name of names) {\n        const span = this._document.createElement(\"span\");\n        span.textContent = \"Hi\";\n        span.style.fontFamily = name;\n        div.appendChild(span);\n      }\n      this._document.body.appendChild(div);\n\n      isFontReady(loadTestFontId, () => {\n        div.remove();\n        request.complete();\n      });\n      /** Hack end */\n    }\n  };\n} // End of PDFJSDev.test('CHROME || GENERIC')\n\nclass FontFaceObject {\n  constructor(\n    translatedData,\n    {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      onUnsupportedFeature,\n      fontRegistry = null,\n    }\n  ) {\n    this.compiledGlyphs = Object.create(null);\n    // importing translated data\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this.fontRegistry = fontRegistry;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    let nativeFontFace;\n    if (!this.cssFontInfo) {\n      nativeFontFace = new FontFace(this.loadedName, this.data, {});\n    } else {\n      const css = {\n        weight: this.cssFontInfo.fontWeight,\n      };\n      if (this.cssFontInfo.italicAngle) {\n        css.style = `oblique ${this.cssFontInfo.italicAngle}deg`;\n      }\n      nativeFontFace = new FontFace(\n        this.cssFontInfo.fontFamily,\n        this.data,\n        css\n      );\n    }\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this);\n    }\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const data = bytesToString(this.data);\n    // Add the @font-face rule to the document.\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    let rule;\n    if (!this.cssFontInfo) {\n      rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n    } else {\n      let css = `font-weight: ${this.cssFontInfo.fontWeight};`;\n      if (this.cssFontInfo.italicAngle) {\n        css += `font-style: oblique ${this.cssFontInfo.italicAngle}deg;`;\n      }\n      rule = `@font-face {font-family:\"${this.cssFontInfo.fontFamily}\";${css}src:${url}}`;\n    }\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this, url);\n    }\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds;\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n      this._onUnsupportedFeature({\n        featureId: UNSUPPORTED_FEATURES.errorFontGetPath,\n      });\n      warn(`getPathGenerator - ignoring character: \"${ex}\".`);\n\n      return (this.compiledGlyphs[character] = function (c, size) {\n        // No-op function, to allow rendering to continue.\n      });\n    }\n\n    // If we can, compile cmds into JS for MAXIMUM SPEED...\n    if (this.isEvalSupported && FeatureTest.isEvalSupported) {\n      const jsBuf = [];\n      for (const current of cmds) {\n        const args = current.args !== undefined ? current.args.join(\",\") : \"\";\n        jsBuf.push(\"c.\", current.cmd, \"(\", args, \");\\n\");\n      }\n      // eslint-disable-next-line no-new-func\n      return (this.compiledGlyphs[character] = new Function(\n        \"c\",\n        \"size\",\n        jsBuf.join(\"\")\n      ));\n    }\n    // ... but fall back on using Function.prototype.apply() if we're\n    // blocked from using eval() for whatever reason (like CSP policies).\n    return (this.compiledGlyphs[character] = function (c, size) {\n      for (const current of cmds) {\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n        c[current.cmd].apply(c, current.args);\n      }\n    });\n  }\n}\n\nexport { FontFaceObject, FontLoader };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MurmurHash3_64 } from \"../shared/murmurhash3.js\";\nimport { objectFromMap } from \"../shared/util.js\";\n\n/**\n * Key/value storage for annotation data in forms.\n */\nclass AnnotationStorage {\n  constructor() {\n    this._storage = new Map();\n    this._modified = false;\n\n    // Callbacks to signal when the modification state is set or reset.\n    // This is used by the viewer to only bind on `beforeunload` if forms\n    // are actually edited to prevent doing so unconditionally since that\n    // can have undesirable effects.\n    this.onSetModified = null;\n    this.onResetModified = null;\n  }\n\n  /**\n   * Get the value for a given key if it exists, or return the default value.\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {Object} defaultValue\n   * @returns {Object}\n   */\n  getValue(key, defaultValue) {\n    const value = this._storage.get(key);\n    if (value === undefined) {\n      return defaultValue;\n    }\n\n    return Object.assign(defaultValue, value);\n  }\n\n  /**\n   * Get the value for a given key.\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @returns {Object}\n   */\n  getRawValue(key) {\n    return this._storage.get(key);\n  }\n\n  /**\n   * Set the value for a given key\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {Object} value\n   */\n  setValue(key, value) {\n    const obj = this._storage.get(key);\n    let modified = false;\n    if (obj !== undefined) {\n      for (const [entry, val] of Object.entries(value)) {\n        if (obj[entry] !== val) {\n          modified = true;\n          obj[entry] = val;\n        }\n      }\n    } else {\n      modified = true;\n      this._storage.set(key, value);\n    }\n    if (modified) {\n      this._setModified();\n    }\n  }\n\n  getAll() {\n    return this._storage.size > 0 ? objectFromMap(this._storage) : null;\n  }\n\n  get size() {\n    return this._storage.size;\n  }\n\n  /**\n   * @private\n   */\n  _setModified() {\n    if (!this._modified) {\n      this._modified = true;\n      if (typeof this.onSetModified === \"function\") {\n        this.onSetModified();\n      }\n    }\n  }\n\n  resetModified() {\n    if (this._modified) {\n      this._modified = false;\n      if (typeof this.onResetModified === \"function\") {\n        this.onResetModified();\n      }\n    }\n  }\n\n  /**\n   * PLEASE NOTE: Only intended for usage within the API itself.\n   * @ignore\n   */\n  get serializable() {\n    return this._storage.size > 0 ? this._storage : null;\n  }\n\n  /**\n   * PLEASE NOTE: Only intended for usage within the API itself.\n   * @ignore\n   */\n  get hash() {\n    const hash = new MurmurHash3_64();\n\n    for (const [key, value] of this._storage) {\n      hash.update(`${key}:${JSON.stringify(value)}`);\n    }\n    return hash.hexdigest();\n  }\n}\n\nexport { AnnotationStorage };\n","/* Copyright 2014 Opera Software ASA\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n * Based on https://code.google.com/p/smhasher/wiki/MurmurHash3.\n * Hashes roughly 100 KB per millisecond on i7 3.4 GHz.\n */\n\nimport { isArrayBuffer } from \"./util.js\";\n\nconst SEED = 0xc3d2e1f0;\n// Workaround for missing math precision in JS.\nconst MASK_HIGH = 0xffff0000;\nconst MASK_LOW = 0xffff;\n\nclass MurmurHash3_64 {\n  constructor(seed) {\n    this.h1 = seed ? seed & 0xffffffff : SEED;\n    this.h2 = seed ? seed & 0xffffffff : SEED;\n  }\n\n  update(input) {\n    let data, length;\n    if (typeof input === \"string\") {\n      data = new Uint8Array(input.length * 2);\n      length = 0;\n      for (let i = 0, ii = input.length; i < ii; i++) {\n        const code = input.charCodeAt(i);\n        if (code <= 0xff) {\n          data[length++] = code;\n        } else {\n          data[length++] = code >>> 8;\n          data[length++] = code & 0xff;\n        }\n      }\n    } else if (isArrayBuffer(input)) {\n      data = input.slice();\n      length = data.byteLength;\n    } else {\n      throw new Error(\n        \"Wrong data format in MurmurHash3_64_update. \" +\n          \"Input must be a string or array.\"\n      );\n    }\n\n    const blockCounts = length >> 2;\n    const tailLength = length - blockCounts * 4;\n    // We don't care about endianness here.\n    const dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n    let k1 = 0,\n      k2 = 0;\n    let h1 = this.h1,\n      h2 = this.h2;\n    const C1 = 0xcc9e2d51,\n      C2 = 0x1b873593;\n    const C1_LOW = C1 & MASK_LOW,\n      C2_LOW = C2 & MASK_LOW;\n\n    for (let i = 0; i < blockCounts; i++) {\n      if (i & 1) {\n        k1 = dataUint32[i];\n        k1 = ((k1 * C1) & MASK_HIGH) | ((k1 * C1_LOW) & MASK_LOW);\n        k1 = (k1 << 15) | (k1 >>> 17);\n        k1 = ((k1 * C2) & MASK_HIGH) | ((k1 * C2_LOW) & MASK_LOW);\n        h1 ^= k1;\n        h1 = (h1 << 13) | (h1 >>> 19);\n        h1 = h1 * 5 + 0xe6546b64;\n      } else {\n        k2 = dataUint32[i];\n        k2 = ((k2 * C1) & MASK_HIGH) | ((k2 * C1_LOW) & MASK_LOW);\n        k2 = (k2 << 15) | (k2 >>> 17);\n        k2 = ((k2 * C2) & MASK_HIGH) | ((k2 * C2_LOW) & MASK_LOW);\n        h2 ^= k2;\n        h2 = (h2 << 13) | (h2 >>> 19);\n        h2 = h2 * 5 + 0xe6546b64;\n      }\n    }\n\n    k1 = 0;\n\n    switch (tailLength) {\n      case 3:\n        k1 ^= data[blockCounts * 4 + 2] << 16;\n      /* falls through */\n      case 2:\n        k1 ^= data[blockCounts * 4 + 1] << 8;\n      /* falls through */\n      case 1:\n        k1 ^= data[blockCounts * 4];\n        /* falls through */\n\n        k1 = ((k1 * C1) & MASK_HIGH) | ((k1 * C1_LOW) & MASK_LOW);\n        k1 = (k1 << 15) | (k1 >>> 17);\n        k1 = ((k1 * C2) & MASK_HIGH) | ((k1 * C2_LOW) & MASK_LOW);\n        if (blockCounts & 1) {\n          h1 ^= k1;\n        } else {\n          h2 ^= k1;\n        }\n    }\n\n    this.h1 = h1;\n    this.h2 = h2;\n  }\n\n  hexdigest() {\n    let h1 = this.h1,\n      h2 = this.h2;\n\n    h1 ^= h2 >>> 1;\n    h1 = ((h1 * 0xed558ccd) & MASK_HIGH) | ((h1 * 0x8ccd) & MASK_LOW);\n    h2 =\n      ((h2 * 0xff51afd7) & MASK_HIGH) |\n      (((((h2 << 16) | (h1 >>> 16)) * 0xafd7ed55) & MASK_HIGH) >>> 16);\n    h1 ^= h2 >>> 1;\n    h1 = ((h1 * 0x1a85ec53) & MASK_HIGH) | ((h1 * 0xec53) & MASK_LOW);\n    h2 =\n      ((h2 * 0xc4ceb9fe) & MASK_HIGH) |\n      (((((h2 << 16) | (h1 >>> 16)) * 0xb9fe1a85) & MASK_HIGH) >>> 16);\n    h1 ^= h2 >>> 1;\n\n    const hex1 = (h1 >>> 0).toString(16),\n      hex2 = (h2 >>> 0).toString(16);\n    return hex1.padStart(8, \"0\") + hex2.padStart(8, \"0\");\n  }\n}\n\nexport { MurmurHash3_64 };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FeatureTest,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  OPS,\n  shadow,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  getShadingPattern,\n  PathType,\n  TilingPattern,\n} from \"./pattern_helper.js\";\nimport { applyMaskImageData } from \"../shared/image_utils.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { PixelsPerInch } from \"./display_utils.js\";\n\n// <canvas> contexts store most of the state we need natively.\n// However, PDF needs a bit more state, which we store here.\n// Minimal font size that would be used during canvas fillText operations.\nconst MIN_FONT_SIZE = 16;\n// Maximum font size that would be used during canvas fillText operations.\nconst MAX_FONT_SIZE = 100;\nconst MAX_GROUP_SIZE = 4096;\n\n// Defines the time the `executeOperatorList`-method is going to be executing\n// before it stops and schedules a continue of execution.\nconst EXECUTION_TIME = 15; // ms\n// Defines the number of steps before checking the execution time.\nconst EXECUTION_STEPS = 10;\n\nconst COMPILE_TYPE3_GLYPHS = true;\nconst MAX_SIZE_TO_COMPILE = 1000;\n\nconst FULL_CHUNK_HEIGHT = 16;\n\n// Because of https://bugs.chromium.org/p/chromium/issues/detail?id=1170396\n// some curves aren't rendered correctly.\n// Multiplying lineWidth by this factor should help to have \"correct\"\n// rendering with no artifacts.\n// Once the bug is fixed upstream, we can remove this constant and its use.\nconst LINEWIDTH_SCALE_FACTOR = 1.000001;\n\n/**\n * Overrides certain methods on a 2d ctx so that when they are called they\n * will also call the same method on the destCtx. The methods that are\n * overridden are all the transformation state modifiers, path creation, and\n * save/restore. We only forward these specific methods because they are the\n * only state modifiers that we cannot copy over when we switch contexts.\n *\n * To remove mirroring call `ctx._removeMirroring()`.\n *\n * @param {Object} ctx - The 2d canvas context that will duplicate its calls on\n *   the destCtx.\n * @param {Object} destCtx - The 2d canvas context that will receive the\n *   forwarded calls.\n */\nfunction mirrorContextOperations(ctx, destCtx) {\n  if (ctx._removeMirroring) {\n    throw new Error(\"Context is already forwarding operations.\");\n  }\n  ctx.__originalSave = ctx.save;\n  ctx.__originalRestore = ctx.restore;\n  ctx.__originalRotate = ctx.rotate;\n  ctx.__originalScale = ctx.scale;\n  ctx.__originalTranslate = ctx.translate;\n  ctx.__originalTransform = ctx.transform;\n  ctx.__originalSetTransform = ctx.setTransform;\n  ctx.__originalResetTransform = ctx.resetTransform;\n  ctx.__originalClip = ctx.clip;\n  ctx.__originalMoveTo = ctx.moveTo;\n  ctx.__originalLineTo = ctx.lineTo;\n  ctx.__originalBezierCurveTo = ctx.bezierCurveTo;\n  ctx.__originalRect = ctx.rect;\n  ctx.__originalClosePath = ctx.closePath;\n  ctx.__originalBeginPath = ctx.beginPath;\n\n  ctx._removeMirroring = () => {\n    ctx.save = ctx.__originalSave;\n    ctx.restore = ctx.__originalRestore;\n    ctx.rotate = ctx.__originalRotate;\n    ctx.scale = ctx.__originalScale;\n    ctx.translate = ctx.__originalTranslate;\n    ctx.transform = ctx.__originalTransform;\n    ctx.setTransform = ctx.__originalSetTransform;\n    ctx.resetTransform = ctx.__originalResetTransform;\n\n    ctx.clip = ctx.__originalClip;\n    ctx.moveTo = ctx.__originalMoveTo;\n    ctx.lineTo = ctx.__originalLineTo;\n    ctx.bezierCurveTo = ctx.__originalBezierCurveTo;\n    ctx.rect = ctx.__originalRect;\n    ctx.closePath = ctx.__originalClosePath;\n    ctx.beginPath = ctx.__originalBeginPath;\n    delete ctx._removeMirroring;\n  };\n\n  ctx.save = function ctxSave() {\n    destCtx.save();\n    this.__originalSave();\n  };\n\n  ctx.restore = function ctxRestore() {\n    destCtx.restore();\n    this.__originalRestore();\n  };\n\n  ctx.translate = function ctxTranslate(x, y) {\n    destCtx.translate(x, y);\n    this.__originalTranslate(x, y);\n  };\n\n  ctx.scale = function ctxScale(x, y) {\n    destCtx.scale(x, y);\n    this.__originalScale(x, y);\n  };\n\n  ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n    destCtx.transform(a, b, c, d, e, f);\n    this.__originalTransform(a, b, c, d, e, f);\n  };\n\n  ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n    destCtx.setTransform(a, b, c, d, e, f);\n    this.__originalSetTransform(a, b, c, d, e, f);\n  };\n\n  ctx.resetTransform = function ctxResetTransform() {\n    destCtx.resetTransform();\n    this.__originalResetTransform();\n  };\n\n  ctx.rotate = function ctxRotate(angle) {\n    destCtx.rotate(angle);\n    this.__originalRotate(angle);\n  };\n\n  ctx.clip = function ctxRotate(rule) {\n    destCtx.clip(rule);\n    this.__originalClip(rule);\n  };\n\n  ctx.moveTo = function (x, y) {\n    destCtx.moveTo(x, y);\n    this.__originalMoveTo(x, y);\n  };\n\n  ctx.lineTo = function (x, y) {\n    destCtx.lineTo(x, y);\n    this.__originalLineTo(x, y);\n  };\n\n  ctx.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\n    destCtx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n    this.__originalBezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n  };\n\n  ctx.rect = function (x, y, width, height) {\n    destCtx.rect(x, y, width, height);\n    this.__originalRect(x, y, width, height);\n  };\n\n  ctx.closePath = function () {\n    destCtx.closePath();\n    this.__originalClosePath();\n  };\n\n  ctx.beginPath = function () {\n    destCtx.beginPath();\n    this.__originalBeginPath();\n  };\n}\n\nfunction addContextCurrentTransform(ctx) {\n  if (ctx._transformStack) {\n    // Reset the transform stack.\n    ctx._transformStack = [];\n  }\n  // If the context doesn't expose a `mozCurrentTransform`, add a JS based one.\n  if (ctx.mozCurrentTransform) {\n    return;\n  }\n  ctx._originalSave = ctx.save;\n  ctx._originalRestore = ctx.restore;\n  ctx._originalRotate = ctx.rotate;\n  ctx._originalScale = ctx.scale;\n  ctx._originalTranslate = ctx.translate;\n  ctx._originalTransform = ctx.transform;\n  ctx._originalSetTransform = ctx.setTransform;\n  ctx._originalResetTransform = ctx.resetTransform;\n\n  ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n  ctx._transformStack = [];\n\n  try {\n    // The call to getOwnPropertyDescriptor throws an exception in Node.js:\n    // \"TypeError: Method lineWidth called on incompatible receiver\n    //  #<CanvasRenderingContext2D>\".\n    const desc = Object.getOwnPropertyDescriptor(\n      Object.getPrototypeOf(ctx),\n      \"lineWidth\"\n    );\n\n    ctx._setLineWidth = desc.set;\n    ctx._getLineWidth = desc.get;\n\n    Object.defineProperty(ctx, \"lineWidth\", {\n      set: function setLineWidth(width) {\n        this._setLineWidth(width * LINEWIDTH_SCALE_FACTOR);\n      },\n      get: function getLineWidth() {\n        return this._getLineWidth();\n      },\n    });\n  } catch (_) {}\n\n  Object.defineProperty(ctx, \"mozCurrentTransform\", {\n    get: function getCurrentTransform() {\n      return this._transformMatrix;\n    },\n  });\n\n  Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n    get: function getCurrentTransformInverse() {\n      // Calculation done using WolframAlpha:\n      // http://www.wolframalpha.com/input/?\n      //   i=Inverse+{{a%2C+c%2C+e}%2C+{b%2C+d%2C+f}%2C+{0%2C+0%2C+1}}\n\n      const [a, b, c, d, e, f] = this._transformMatrix;\n      const ad_bc = a * d - b * c;\n      const bc_ad = b * c - a * d;\n\n      return [\n        d / ad_bc,\n        b / bc_ad,\n        c / bc_ad,\n        a / ad_bc,\n        (d * e - c * f) / bc_ad,\n        (b * e - a * f) / ad_bc,\n      ];\n    },\n  });\n\n  ctx.save = function ctxSave() {\n    const old = this._transformMatrix;\n    this._transformStack.push(old);\n    this._transformMatrix = old.slice(0, 6);\n\n    this._originalSave();\n  };\n\n  ctx.restore = function ctxRestore() {\n    if (this._transformStack.length === 0) {\n      warn(\"Tried to restore a ctx when the stack was already empty.\");\n    }\n    const prev = this._transformStack.pop();\n    if (prev) {\n      this._transformMatrix = prev;\n      this._originalRestore();\n    }\n  };\n\n  ctx.translate = function ctxTranslate(x, y) {\n    const m = this._transformMatrix;\n    m[4] = m[0] * x + m[2] * y + m[4];\n    m[5] = m[1] * x + m[3] * y + m[5];\n\n    this._originalTranslate(x, y);\n  };\n\n  ctx.scale = function ctxScale(x, y) {\n    const m = this._transformMatrix;\n    m[0] *= x;\n    m[1] *= x;\n    m[2] *= y;\n    m[3] *= y;\n\n    this._originalScale(x, y);\n  };\n\n  ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n    const m = this._transformMatrix;\n    this._transformMatrix = [\n      m[0] * a + m[2] * b,\n      m[1] * a + m[3] * b,\n      m[0] * c + m[2] * d,\n      m[1] * c + m[3] * d,\n      m[0] * e + m[2] * f + m[4],\n      m[1] * e + m[3] * f + m[5],\n    ];\n\n    ctx._originalTransform(a, b, c, d, e, f);\n  };\n\n  ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n    this._transformMatrix = [a, b, c, d, e, f];\n\n    ctx._originalSetTransform(a, b, c, d, e, f);\n  };\n\n  ctx.resetTransform = function ctxResetTransform() {\n    this._transformMatrix = [1, 0, 0, 1, 0, 0];\n\n    ctx._originalResetTransform();\n  };\n\n  ctx.rotate = function ctxRotate(angle) {\n    const cosValue = Math.cos(angle);\n    const sinValue = Math.sin(angle);\n\n    const m = this._transformMatrix;\n    this._transformMatrix = [\n      m[0] * cosValue + m[2] * sinValue,\n      m[1] * cosValue + m[3] * sinValue,\n      m[0] * -sinValue + m[2] * cosValue,\n      m[1] * -sinValue + m[3] * cosValue,\n      m[4],\n      m[5],\n    ];\n\n    this._originalRotate(angle);\n  };\n}\n\nclass CachedCanvases {\n  constructor(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n\n  getCanvas(id, width, height, trackTransform) {\n    let canvasEntry;\n    if (this.cache[id] !== undefined) {\n      canvasEntry = this.cache[id];\n      this.canvasFactory.reset(canvasEntry, width, height);\n      // reset canvas transform for emulated mozCurrentTransform, if needed\n      canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n    } else {\n      canvasEntry = this.canvasFactory.create(width, height);\n      this.cache[id] = canvasEntry;\n    }\n    if (trackTransform) {\n      addContextCurrentTransform(canvasEntry.context);\n    }\n    return canvasEntry;\n  }\n\n  delete(id) {\n    delete this.cache[id];\n  }\n\n  clear() {\n    for (const id in this.cache) {\n      const canvasEntry = this.cache[id];\n      this.canvasFactory.destroy(canvasEntry);\n      delete this.cache[id];\n    }\n  }\n}\n\nfunction drawImageAtIntegerCoords(\n  ctx,\n  srcImg,\n  srcX,\n  srcY,\n  srcW,\n  srcH,\n  destX,\n  destY,\n  destW,\n  destH\n) {\n  const [a, b, c, d, tx, ty] = ctx.mozCurrentTransform;\n  if (b === 0 && c === 0) {\n    // top-left corner is at (X, Y) and\n    // bottom-right one is at (X + width, Y + height).\n\n    // If leftX is 4.321 then it's rounded to 4.\n    // If width is 10.432 then it's rounded to 11 because\n    // rightX = leftX + width = 14.753 which is rounded to 15\n    // so after rounding the total width is 11 (15 - 4).\n    // It's why we can't just floor/ceil uniformly, it just depends\n    // on the values we've.\n\n    const tlX = destX * a + tx;\n    const rTlX = Math.round(tlX);\n    const tlY = destY * d + ty;\n    const rTlY = Math.round(tlY);\n    const brX = (destX + destW) * a + tx;\n\n    // Some pdf contains images with 1x1 images so in case of 0-width after\n    // scaling we must fallback on 1 to be sure there is something.\n    const rWidth = Math.abs(Math.round(brX) - rTlX) || 1;\n    const brY = (destY + destH) * d + ty;\n    const rHeight = Math.abs(Math.round(brY) - rTlY) || 1;\n\n    // We must apply a transformation in order to apply it on the image itself.\n    // For example if a == 1 && d == -1, it means that the image itself is\n    // mirrored w.r.t. the x-axis.\n    ctx.setTransform(Math.sign(a), 0, 0, Math.sign(d), rTlX, rTlY);\n    ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, 0, 0, rWidth, rHeight);\n    ctx.setTransform(a, b, c, d, tx, ty);\n\n    return [rWidth, rHeight];\n  }\n\n  if (a === 0 && d === 0) {\n    // This path is taken in issue9462.pdf (page 3).\n    const tlX = destY * c + tx;\n    const rTlX = Math.round(tlX);\n    const tlY = destX * b + ty;\n    const rTlY = Math.round(tlY);\n    const brX = (destY + destH) * c + tx;\n    const rWidth = Math.abs(Math.round(brX) - rTlX) || 1;\n    const brY = (destX + destW) * b + ty;\n    const rHeight = Math.abs(Math.round(brY) - rTlY) || 1;\n\n    ctx.setTransform(0, Math.sign(b), Math.sign(c), 0, rTlX, rTlY);\n    ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, 0, 0, rHeight, rWidth);\n    ctx.setTransform(a, b, c, d, tx, ty);\n\n    return [rHeight, rWidth];\n  }\n\n  // Not a scale matrix so let the render handle the case without rounding.\n  ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, destX, destY, destW, destH);\n\n  const scaleX = Math.hypot(a, b);\n  const scaleY = Math.hypot(c, d);\n  return [scaleX * destW, scaleY * destH];\n}\n\nfunction compileType3Glyph(imgData) {\n  const { width, height } = imgData;\n  if (\n    !COMPILE_TYPE3_GLYPHS ||\n    width > MAX_SIZE_TO_COMPILE ||\n    height > MAX_SIZE_TO_COMPILE\n  ) {\n    return null;\n  }\n\n  const POINT_TO_PROCESS_LIMIT = 1000;\n  const POINT_TYPES = new Uint8Array([\n    0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0,\n  ]);\n\n  const width1 = width + 1;\n  let points = new Uint8Array(width1 * (height + 1));\n  let i, j, j0;\n\n  // decodes bit-packed mask data\n  const lineSize = (width + 7) & ~7;\n  let data = new Uint8Array(lineSize * height),\n    pos = 0;\n  for (const elem of imgData.data) {\n    let mask = 128;\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  // finding interesting points: every point is located between mask pixels,\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\n  // will have flags assigned based on neighboring mask pixels:\n  //   4 | 8\n  //   --P--\n  //   2 | 1\n  // We are interested only in points with the flags:\n  //   - outside corners: 1, 2, 4, 8;\n  //   - inside corners: 7, 11, 13, 14;\n  //   - and, intersections: 5, 10.\n  let count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    // 'sum' is the position of the current pixel configuration in the 'TYPES'\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\n    let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum =\n        (sum >> 2) +\n        (data[pos + 1] ? 4 : 0) +\n        (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  // building outlines\n  const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  let path, outlines, coords;\n  if (!isNodeJS) {\n    path = new Path2D();\n  } else {\n    outlines = [];\n  }\n\n  for (i = 0; count && i <= height; i++) {\n    let p = i * width1;\n    const end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n\n    if (path) {\n      path.moveTo(p % width1, i);\n    } else {\n      coords = [p % width1, i];\n    }\n\n    const p0 = p;\n    let type = points[p];\n    do {\n      const step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n\n      const pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        // set new direction\n        type = pp;\n        // delete mark\n        points[p] = 0;\n      } else {\n        // type is 5 or 10, ie, a crossing\n        // set new direction\n        type = pp & ((0x33 * type) >> 4);\n        // set new type for \"future hit\"\n        points[p] &= (type >> 2) | (type << 2);\n      }\n\n      if (path) {\n        path.lineTo(p % width1, (p / width1) | 0);\n      } else {\n        coords.push(p % width1, (p / width1) | 0);\n      }\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n\n    if (!path) {\n      outlines.push(coords);\n    }\n    --i;\n  }\n\n  // Immediately release the, potentially large, `Uint8Array`s after parsing.\n  data = null;\n  points = null;\n\n  const drawOutline = function (c) {\n    c.save();\n    // the path shall be painted in [0..1]x[0..1] space\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    if (path) {\n      c.fill(path);\n    } else {\n      c.beginPath();\n      for (const o of outlines) {\n        c.moveTo(o[0], o[1]);\n        for (let l = 2, ll = o.length; l < ll; l += 2) {\n          c.lineTo(o[l], o[l + 1]);\n        }\n      }\n      c.fill();\n    }\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nclass CanvasExtraState {\n  constructor(width, height) {\n    // Are soft masks and alpha values shapes or opacities?\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textRise = 0;\n    // Default fore and background colors\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    // Note: fill alpha applies to all non-stroking operations\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.transferMaps = null;\n\n    this.startNewPathAndClipBox([0, 0, width, height]);\n  }\n\n  clone() {\n    const clone = Object.create(this);\n    clone.clipBox = this.clipBox.slice();\n    return clone;\n  }\n\n  setCurrentPoint(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  updatePathMinMax(transform, x, y) {\n    [x, y] = Util.applyTransform([x, y], transform);\n    this.minX = Math.min(this.minX, x);\n    this.minY = Math.min(this.minY, y);\n    this.maxX = Math.max(this.maxX, x);\n    this.maxY = Math.max(this.maxY, y);\n  }\n\n  updateRectMinMax(transform, rect) {\n    const p1 = Util.applyTransform(rect, transform);\n    const p2 = Util.applyTransform(rect.slice(2), transform);\n    this.minX = Math.min(this.minX, p1[0], p2[0]);\n    this.minY = Math.min(this.minY, p1[1], p2[1]);\n    this.maxX = Math.max(this.maxX, p1[0], p2[0]);\n    this.maxY = Math.max(this.maxY, p1[1], p2[1]);\n  }\n\n  updateScalingPathMinMax(transform, minMax) {\n    Util.scaleMinMax(transform, minMax);\n    this.minX = Math.min(this.minX, minMax[0]);\n    this.maxX = Math.max(this.maxX, minMax[1]);\n    this.minY = Math.min(this.minY, minMax[2]);\n    this.maxY = Math.max(this.maxY, minMax[3]);\n  }\n\n  updateCurvePathMinMax(transform, x0, y0, x1, y1, x2, y2, x3, y3, minMax) {\n    const box = Util.bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3);\n    if (minMax) {\n      minMax[0] = Math.min(minMax[0], box[0], box[2]);\n      minMax[1] = Math.max(minMax[1], box[0], box[2]);\n      minMax[2] = Math.min(minMax[2], box[1], box[3]);\n      minMax[3] = Math.max(minMax[3], box[1], box[3]);\n      return;\n    }\n    this.updateRectMinMax(transform, box);\n  }\n\n  getPathBoundingBox(pathType = PathType.FILL, transform = null) {\n    const box = [this.minX, this.minY, this.maxX, this.maxY];\n    if (pathType === PathType.STROKE) {\n      if (!transform) {\n        unreachable(\"Stroke bounding box must include transform.\");\n      }\n      // Stroked paths can be outside of the path bounding box by 1/2 the line\n      // width.\n      const scale = Util.singularValueDecompose2dScale(transform);\n      const xStrokePad = (scale[0] * this.lineWidth) / 2;\n      const yStrokePad = (scale[1] * this.lineWidth) / 2;\n      box[0] -= xStrokePad;\n      box[1] -= yStrokePad;\n      box[2] += xStrokePad;\n      box[3] += yStrokePad;\n    }\n    return box;\n  }\n\n  updateClipFromPath() {\n    const intersect = Util.intersect(this.clipBox, this.getPathBoundingBox());\n    this.startNewPathAndClipBox(intersect || [0, 0, 0, 0]);\n  }\n\n  isEmptyClip() {\n    return this.minX === Infinity;\n  }\n\n  startNewPathAndClipBox(box) {\n    this.clipBox = box;\n    this.minX = Infinity;\n    this.minY = Infinity;\n    this.maxX = 0;\n    this.maxY = 0;\n  }\n\n  getClippedPathBoundingBox(pathType = PathType.FILL, transform = null) {\n    return Util.intersect(\n      this.clipBox,\n      this.getPathBoundingBox(pathType, transform)\n    );\n  }\n}\n\nfunction putBinaryImageData(ctx, imgData, transferMaps = null) {\n  if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n    ctx.putImageData(imgData, 0, 0);\n    return;\n  }\n\n  // Put the image data to the canvas in chunks, rather than putting the\n  // whole image at once.  This saves JS memory, because the ImageData object\n  // is smaller. It also possibly saves C++ memory within the implementation\n  // of putImageData(). (E.g. in Firefox we make two short-lived copies of\n  // the data passed to putImageData()). |n| shouldn't be too small, however,\n  // because too many putImageData() calls will slow things down.\n  //\n  // Note: as written, if the last chunk is partial, the putImageData() call\n  // will (conceptually) put pixels past the bounds of the canvas.  But\n  // that's ok; any such pixels are ignored.\n\n  const height = imgData.height,\n    width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0,\n    destPos;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n  let i, j, thisChunkHeight, elemsInThisChunk;\n\n  let transferMapRed, transferMapGreen, transferMapBlue, transferMapGray;\n  if (transferMaps) {\n    switch (transferMaps.length) {\n      case 1:\n        transferMapRed = transferMaps[0];\n        transferMapGreen = transferMaps[0];\n        transferMapBlue = transferMaps[0];\n        transferMapGray = transferMaps[0];\n        break;\n      case 4:\n        transferMapRed = transferMaps[0];\n        transferMapGreen = transferMaps[1];\n        transferMapBlue = transferMaps[2];\n        transferMapGray = transferMaps[3];\n        break;\n    }\n  }\n\n  // There are multiple forms in which the pixel data can be passed, and\n  // imgData.kind tells us which one this is.\n  if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {\n    // Grayscale, 1 bit per pixel (i.e. black-and-white).\n    const srcLength = src.byteLength;\n    const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n    const dest32DataLength = dest32.length;\n    const fullSrcDiff = (width + 7) >> 3;\n    let white = 0xffffffff;\n    let black = FeatureTest.isLittleEndian ? 0xff000000 : 0x000000ff;\n\n    if (transferMapGray) {\n      if (transferMapGray[0] === 0xff && transferMapGray[0xff] === 0) {\n        [white, black] = [black, white];\n      }\n    }\n\n    for (i = 0; i < totalChunks; i++) {\n      thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n      destPos = 0;\n      for (j = 0; j < thisChunkHeight; j++) {\n        const srcDiff = srcLength - srcPos;\n        let k = 0;\n        const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n        const kEndUnrolled = kEnd & ~7;\n        let mask = 0;\n        let srcByte = 0;\n        for (; k < kEndUnrolled; k += 8) {\n          srcByte = src[srcPos++];\n          dest32[destPos++] = srcByte & 128 ? white : black;\n          dest32[destPos++] = srcByte & 64 ? white : black;\n          dest32[destPos++] = srcByte & 32 ? white : black;\n          dest32[destPos++] = srcByte & 16 ? white : black;\n          dest32[destPos++] = srcByte & 8 ? white : black;\n          dest32[destPos++] = srcByte & 4 ? white : black;\n          dest32[destPos++] = srcByte & 2 ? white : black;\n          dest32[destPos++] = srcByte & 1 ? white : black;\n        }\n        for (; k < kEnd; k++) {\n          if (mask === 0) {\n            srcByte = src[srcPos++];\n            mask = 128;\n          }\n\n          dest32[destPos++] = srcByte & mask ? white : black;\n          mask >>= 1;\n        }\n      }\n      // We ran out of input. Make all remaining pixels transparent.\n      while (destPos < dest32DataLength) {\n        dest32[destPos++] = 0;\n      }\n\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else if (imgData.kind === ImageKind.RGBA_32BPP) {\n    // RGBA, 32-bits per pixel.\n    const hasTransferMaps = !!(\n      transferMapRed ||\n      transferMapGreen ||\n      transferMapBlue\n    );\n\n    j = 0;\n    elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n    for (i = 0; i < fullChunks; i++) {\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n      srcPos += elemsInThisChunk;\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < elemsInThisChunk; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, j);\n      j += FULL_CHUNK_HEIGHT;\n    }\n    if (i < totalChunks) {\n      elemsInThisChunk = width * partialChunkHeight * 4;\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < elemsInThisChunk; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, j);\n    }\n  } else if (imgData.kind === ImageKind.RGB_24BPP) {\n    // RGB, 24-bits per pixel.\n    const hasTransferMaps = !!(\n      transferMapRed ||\n      transferMapGreen ||\n      transferMapBlue\n    );\n\n    thisChunkHeight = FULL_CHUNK_HEIGHT;\n    elemsInThisChunk = width * thisChunkHeight;\n    for (i = 0; i < totalChunks; i++) {\n      if (i >= fullChunks) {\n        thisChunkHeight = partialChunkHeight;\n        elemsInThisChunk = width * thisChunkHeight;\n      }\n\n      destPos = 0;\n      for (j = elemsInThisChunk; j--; ) {\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = 255;\n      }\n\n      if (hasTransferMaps) {\n        for (let k = 0; k < destPos; k += 4) {\n          if (transferMapRed) {\n            dest[k + 0] = transferMapRed[dest[k + 0]];\n          }\n          if (transferMapGreen) {\n            dest[k + 1] = transferMapGreen[dest[k + 1]];\n          }\n          if (transferMapBlue) {\n            dest[k + 2] = transferMapBlue[dest[k + 2]];\n          }\n        }\n      }\n\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else {\n    throw new Error(`bad image kind: ${imgData.kind}`);\n  }\n}\n\nfunction putBinaryImageMask(ctx, imgData) {\n  if (imgData.bitmap) {\n    // The bitmap has been created in the worker.\n    ctx.drawImage(imgData.bitmap, 0, 0);\n    return;\n  }\n\n  // Slow path: OffscreenCanvas isn't available in the worker.\n  const height = imgData.height,\n    width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n\n  for (let i = 0; i < totalChunks; i++) {\n    const thisChunkHeight =\n      i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n\n    // Expand the mask so it can be used by the canvas.  Any required\n    // inversion has already been handled.\n\n    ({ srcPos } = applyMaskImageData({\n      src,\n      srcPos,\n      dest,\n      width,\n      height: thisChunkHeight,\n    }));\n\n    ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n  }\n}\n\nfunction copyCtxState(sourceCtx, destCtx) {\n  const properties = [\n    \"strokeStyle\",\n    \"fillStyle\",\n    \"fillRule\",\n    \"globalAlpha\",\n    \"lineWidth\",\n    \"lineCap\",\n    \"lineJoin\",\n    \"miterLimit\",\n    \"globalCompositeOperation\",\n    \"font\",\n  ];\n  for (let i = 0, ii = properties.length; i < ii; i++) {\n    const property = properties[i];\n    if (sourceCtx[property] !== undefined) {\n      destCtx[property] = sourceCtx[property];\n    }\n  }\n  if (sourceCtx.setLineDash !== undefined) {\n    destCtx.setLineDash(sourceCtx.getLineDash());\n    destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n  }\n}\n\nfunction resetCtxToDefault(ctx, foregroundColor) {\n  ctx.strokeStyle = ctx.fillStyle = foregroundColor || \"#000000\";\n  ctx.fillRule = \"nonzero\";\n  ctx.globalAlpha = 1;\n  ctx.lineWidth = 1;\n  ctx.lineCap = \"butt\";\n  ctx.lineJoin = \"miter\";\n  ctx.miterLimit = 10;\n  ctx.globalCompositeOperation = \"source-over\";\n  ctx.font = \"10px sans-serif\";\n  if (ctx.setLineDash !== undefined) {\n    ctx.setLineDash([]);\n    ctx.lineDashOffset = 0;\n  }\n}\n\nfunction composeSMaskBackdrop(bytes, r0, g0, b0) {\n  const length = bytes.length;\n  for (let i = 3; i < length; i += 4) {\n    const alpha = bytes[i];\n    if (alpha === 0) {\n      bytes[i - 3] = r0;\n      bytes[i - 2] = g0;\n      bytes[i - 1] = b0;\n    } else if (alpha < 255) {\n      const alpha_ = 255 - alpha;\n      bytes[i - 3] = (bytes[i - 3] * alpha + r0 * alpha_) >> 8;\n      bytes[i - 2] = (bytes[i - 2] * alpha + g0 * alpha_) >> 8;\n      bytes[i - 1] = (bytes[i - 1] * alpha + b0 * alpha_) >> 8;\n    }\n  }\n}\n\nfunction composeSMaskAlpha(maskData, layerData, transferMap) {\n  const length = maskData.length;\n  const scale = 1 / 255;\n  for (let i = 3; i < length; i += 4) {\n    const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n    layerData[i] = (layerData[i] * alpha * scale) | 0;\n  }\n}\n\nfunction composeSMaskLuminosity(maskData, layerData, transferMap) {\n  const length = maskData.length;\n  for (let i = 3; i < length; i += 4) {\n    const y =\n      maskData[i - 3] * 77 + // * 0.3 / 255 * 0x10000\n      maskData[i - 2] * 152 + // * 0.59 ....\n      maskData[i - 1] * 28; // * 0.11 ....\n    layerData[i] = transferMap\n      ? (layerData[i] * transferMap[y >> 8]) >> 8\n      : (layerData[i] * y) >> 16;\n  }\n}\n\nfunction genericComposeSMask(\n  maskCtx,\n  layerCtx,\n  width,\n  height,\n  subtype,\n  backdrop,\n  transferMap,\n  layerOffsetX,\n  layerOffsetY,\n  maskOffsetX,\n  maskOffsetY\n) {\n  const hasBackdrop = !!backdrop;\n  const r0 = hasBackdrop ? backdrop[0] : 0;\n  const g0 = hasBackdrop ? backdrop[1] : 0;\n  const b0 = hasBackdrop ? backdrop[2] : 0;\n\n  let composeFn;\n  if (subtype === \"Luminosity\") {\n    composeFn = composeSMaskLuminosity;\n  } else {\n    composeFn = composeSMaskAlpha;\n  }\n\n  // processing image in chunks to save memory\n  const PIXELS_TO_PROCESS = 1048576;\n  const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n  for (let row = 0; row < height; row += chunkSize) {\n    const chunkHeight = Math.min(chunkSize, height - row);\n    const maskData = maskCtx.getImageData(\n      layerOffsetX - maskOffsetX,\n      row + (layerOffsetY - maskOffsetY),\n      width,\n      chunkHeight\n    );\n    const layerData = layerCtx.getImageData(\n      layerOffsetX,\n      row + layerOffsetY,\n      width,\n      chunkHeight\n    );\n\n    if (hasBackdrop) {\n      composeSMaskBackdrop(maskData.data, r0, g0, b0);\n    }\n    composeFn(maskData.data, layerData.data, transferMap);\n\n    layerCtx.putImageData(layerData, layerOffsetX, row + layerOffsetY);\n  }\n}\n\nfunction composeSMask(ctx, smask, layerCtx, layerBox) {\n  const layerOffsetX = layerBox[0];\n  const layerOffsetY = layerBox[1];\n  const layerWidth = layerBox[2] - layerOffsetX;\n  const layerHeight = layerBox[3] - layerOffsetY;\n  if (layerWidth === 0 || layerHeight === 0) {\n    return;\n  }\n  genericComposeSMask(\n    smask.context,\n    layerCtx,\n    layerWidth,\n    layerHeight,\n    smask.subtype,\n    smask.backdrop,\n    smask.transferMap,\n    layerOffsetX,\n    layerOffsetY,\n    smask.offsetX,\n    smask.offsetY\n  );\n  ctx.save();\n  ctx.globalAlpha = 1;\n  ctx.globalCompositeOperation = \"source-over\";\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\n  ctx.drawImage(layerCtx.canvas, 0, 0);\n  ctx.restore();\n}\n\nfunction getImageSmoothingEnabled(transform, interpolate) {\n  const scale = Util.singularValueDecompose2dScale(transform);\n  // Round to a 32bit float so that `<=` check below will pass for numbers that\n  // are very close, but not exactly the same 64bit floats.\n  scale[0] = Math.fround(scale[0]);\n  scale[1] = Math.fround(scale[1]);\n  const actualScale = Math.fround(\n    (globalThis.devicePixelRatio || 1) * PixelsPerInch.PDF_TO_CSS_UNITS\n  );\n  if (interpolate !== undefined) {\n    // If the value is explicitly set use it.\n    return interpolate;\n  } else if (scale[0] <= actualScale || scale[1] <= actualScale) {\n    // Smooth when downscaling.\n    return true;\n  }\n  // Don't smooth when upscaling.\n  return false;\n}\n\nconst LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\nconst LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\nconst NORMAL_CLIP = {};\nconst EO_CLIP = {};\n\nclass CanvasGraphics {\n  constructor(\n    canvasCtx,\n    commonObjs,\n    objs,\n    canvasFactory,\n    imageLayer,\n    optionalContentConfig,\n    annotationCanvasMap,\n    pageColors\n  ) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState(\n      this.ctx.canvas.width,\n      this.ctx.canvas.height\n    );\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.canvasFactory = canvasFactory;\n    this.imageLayer = imageLayer;\n    this.groupStack = [];\n    this.processingType3 = null;\n    // Patterns are painted relative to the initial page/form transform, see\n    // PDF spec 8.7.2 NOTE 1.\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    this.suspendedCtx = null;\n    this.contentVisible = true;\n    this.markedContentStack = [];\n    this.optionalContentConfig = optionalContentConfig;\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n    this.cachedPatterns = new Map();\n    this.annotationCanvasMap = annotationCanvasMap;\n    this.viewportScale = 1;\n    this.outputScaleX = 1;\n    this.outputScaleY = 1;\n    this.backgroundColor = pageColors?.background || null;\n    this.foregroundColor = pageColors?.foreground || null;\n    if (canvasCtx) {\n      // NOTE: if mozCurrentTransform is polyfilled, then the current state of\n      // the transformation must already be set in canvasCtx._transformMatrix.\n      addContextCurrentTransform(canvasCtx);\n    }\n    this._cachedScaleForStroking = null;\n    this._cachedGetSinglePixelWidth = null;\n    this._cachedBitmapsMap = new Map();\n  }\n\n  getObject(data, fallback = null) {\n    if (typeof data === \"string\") {\n      return data.startsWith(\"g_\")\n        ? this.commonObjs.get(data)\n        : this.objs.get(data);\n    }\n    return fallback;\n  }\n\n  beginDrawing({\n    transform,\n    viewport,\n    transparency = false,\n    background = null,\n  }) {\n    // For pdfs that use blend modes we have to clear the canvas else certain\n    // blend modes can look wrong since we'd be blending with a white\n    // backdrop. The problem with a transparent backdrop though is we then\n    // don't get sub pixel anti aliasing on text, creating temporary\n    // transparent canvas when we have blend modes.\n    const width = this.ctx.canvas.width;\n    const height = this.ctx.canvas.height;\n    const defaultBackgroundColor = background || \"#ffffff\";\n    this.ctx.save();\n\n    if (this.foregroundColor && this.backgroundColor) {\n      // Get the #RRGGBB value of the color. If it's a name (e.g. CanvasText)\n      // then it'll be converted to its rgb value.\n      this.ctx.fillStyle = this.foregroundColor;\n      const fg = (this.foregroundColor = this.ctx.fillStyle);\n      this.ctx.fillStyle = this.backgroundColor;\n      const bg = (this.backgroundColor = this.ctx.fillStyle);\n      let isValidDefaultBg = true;\n      let defaultBg = defaultBackgroundColor;\n\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n        this.ctx.fillStyle = defaultBackgroundColor;\n        defaultBg = this.ctx.fillStyle;\n        isValidDefaultBg =\n          typeof defaultBg === \"string\" && /^#[0-9A-Fa-f]{6}$/.test(defaultBg);\n      }\n\n      if (\n        (fg === \"#000000\" && bg === \"#ffffff\") ||\n        fg === bg ||\n        !isValidDefaultBg\n      ) {\n        // Ignore the `pageColors`-option when:\n        //  - The computed background/foreground colors have their default\n        //    values, i.e. white/black.\n        //  - The computed background/foreground colors are identical,\n        //    since that'd render the `canvas` mostly blank.\n        //  - The `background`-option has a value that's incompatible with\n        //    the `pageColors`-values.\n        //\n        this.foregroundColor = this.backgroundColor = null;\n      } else {\n        // https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_Colors_and_Luminance\n        //\n        // Relative luminance:\n        // https://www.w3.org/TR/WCAG20/#relativeluminancedef\n        //\n        // We compute the rounded luminance of the default background color.\n        // Then for every color in the pdf, if its rounded luminance is the\n        // same as the background one then it's replaced by the new\n        // background color else by the foreground one.\n        const cB = parseInt(defaultBg.slice(1), 16);\n        const rB = (cB && 0xff0000) >> 16;\n        const gB = (cB && 0x00ff00) >> 8;\n        const bB = cB && 0x0000ff;\n        const newComp = x => {\n          x /= 255;\n          return x <= 0.03928 ? x / 12.92 : ((x + 0.055) / 1.055) ** 2.4;\n        };\n        const lumB = Math.round(\n          0.2126 * newComp(rB) + 0.7152 * newComp(gB) + 0.0722 * newComp(bB)\n        );\n        this.selectColor = (r, g, b) => {\n          const lumC =\n            0.2126 * newComp(r) + 0.7152 * newComp(g) + 0.0722 * newComp(b);\n          return Math.round(lumC) === lumB ? bg : fg;\n        };\n      }\n    }\n\n    this.ctx.fillStyle = this.backgroundColor || defaultBackgroundColor;\n    this.ctx.fillRect(0, 0, width, height);\n    this.ctx.restore();\n\n    if (transparency) {\n      const transparentCanvas = this.cachedCanvases.getCanvas(\n        \"transparent\",\n        width,\n        height,\n        /* trackTransform */ true\n      );\n      this.compositeCtx = this.ctx;\n      this.transparentCanvas = transparentCanvas.canvas;\n      this.ctx = transparentCanvas.context;\n      this.ctx.save();\n      // The transform can be applied before rendering, transferring it to\n      // the new canvas.\n      this.ctx.transform.apply(this.ctx, this.compositeCtx.mozCurrentTransform);\n    }\n\n    this.ctx.save();\n    resetCtxToDefault(this.ctx, this.foregroundColor);\n    if (transform) {\n      this.ctx.transform.apply(this.ctx, transform);\n      this.outputScaleX = transform[0];\n      this.outputScaleY = transform[0];\n    }\n    this.ctx.transform.apply(this.ctx, viewport.transform);\n    this.viewportScale = viewport.scale;\n\n    this.baseTransform = this.ctx.mozCurrentTransform.slice();\n\n    if (this.imageLayer) {\n      this.imageLayer.beginLayout();\n    }\n  }\n\n  executeOperatorList(\n    operatorList,\n    executionStartIdx,\n    continueCallback,\n    stepper\n  ) {\n    const argsArray = operatorList.argsArray;\n    const fnArray = operatorList.fnArray;\n    let i = executionStartIdx || 0;\n    const argsArrayLen = argsArray.length;\n\n    // Sometimes the OperatorList to execute is empty.\n    if (argsArrayLen === i) {\n      return i;\n    }\n\n    const chunkOperations =\n      argsArrayLen - i > EXECUTION_STEPS &&\n      typeof continueCallback === \"function\";\n    const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n    let steps = 0;\n\n    const commonObjs = this.commonObjs;\n    const objs = this.objs;\n    let fnId;\n\n    while (true) {\n      if (stepper !== undefined && i === stepper.nextBreakPoint) {\n        stepper.breakIt(i, continueCallback);\n        return i;\n      }\n\n      fnId = fnArray[i];\n\n      if (fnId !== OPS.dependency) {\n        this[fnId].apply(this, argsArray[i]);\n      } else {\n        for (const depObjId of argsArray[i]) {\n          const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n          // If the promise isn't resolved yet, add the continueCallback\n          // to the promise and bail out.\n          if (!objsPool.has(depObjId)) {\n            objsPool.get(depObjId, continueCallback);\n            return i;\n          }\n        }\n      }\n\n      i++;\n\n      // If the entire operatorList was executed, stop as were done.\n      if (i === argsArrayLen) {\n        return i;\n      }\n\n      // If the execution took longer then a certain amount of time and\n      // `continueCallback` is specified, interrupt the execution.\n      if (chunkOperations && ++steps > EXECUTION_STEPS) {\n        if (Date.now() > endTime) {\n          continueCallback();\n          return i;\n        }\n        steps = 0;\n      }\n\n      // If the operatorList isn't executed completely yet OR the execution\n      // time was short enough, do another execution round.\n    }\n  }\n\n  endDrawing() {\n    // Finishing all opened operations such as SMask group painting.\n    while (this.stateStack.length || this.inSMaskMode) {\n      this.restore();\n    }\n\n    this.ctx.restore();\n\n    if (this.transparentCanvas) {\n      this.ctx = this.compositeCtx;\n      this.ctx.save();\n      this.ctx.setTransform(1, 0, 0, 1, 0, 0); // Avoid apply transform twice\n      this.ctx.drawImage(this.transparentCanvas, 0, 0);\n      this.ctx.restore();\n      this.transparentCanvas = null;\n    }\n\n    this.cachedCanvases.clear();\n    this.cachedPatterns.clear();\n\n    for (const cache of this._cachedBitmapsMap.values()) {\n      for (const canvas of cache.values()) {\n        if (\n          typeof HTMLCanvasElement !== \"undefined\" &&\n          canvas instanceof HTMLCanvasElement\n        ) {\n          canvas.width = canvas.height = 0;\n        }\n      }\n      cache.clear();\n    }\n    this._cachedBitmapsMap.clear();\n\n    if (this.imageLayer) {\n      this.imageLayer.endLayout();\n    }\n  }\n\n  _scaleImage(img, inverseTransform) {\n    // Vertical or horizontal scaling shall not be more than 2 to not lose the\n    // pixels during drawImage operation, painting on the temporary canvas(es)\n    // that are twice smaller in size.\n    const width = img.width;\n    const height = img.height;\n    let widthScale = Math.max(\n      Math.hypot(inverseTransform[0], inverseTransform[1]),\n      1\n    );\n    let heightScale = Math.max(\n      Math.hypot(inverseTransform[2], inverseTransform[3]),\n      1\n    );\n\n    let paintWidth = width,\n      paintHeight = height;\n    let tmpCanvasId = \"prescale1\";\n    let tmpCanvas, tmpCtx;\n    while (\n      (widthScale > 2 && paintWidth > 1) ||\n      (heightScale > 2 && paintHeight > 1)\n    ) {\n      let newWidth = paintWidth,\n        newHeight = paintHeight;\n      if (widthScale > 2 && paintWidth > 1) {\n        newWidth = Math.ceil(paintWidth / 2);\n        widthScale /= paintWidth / newWidth;\n      }\n      if (heightScale > 2 && paintHeight > 1) {\n        newHeight = Math.ceil(paintHeight / 2);\n        heightScale /= paintHeight / newHeight;\n      }\n      tmpCanvas = this.cachedCanvases.getCanvas(\n        tmpCanvasId,\n        newWidth,\n        newHeight,\n        /* trackTransform */ false\n      );\n      tmpCtx = tmpCanvas.context;\n      tmpCtx.clearRect(0, 0, newWidth, newHeight);\n      tmpCtx.drawImage(\n        img,\n        0,\n        0,\n        paintWidth,\n        paintHeight,\n        0,\n        0,\n        newWidth,\n        newHeight\n      );\n      img = tmpCanvas.canvas;\n      paintWidth = newWidth;\n      paintHeight = newHeight;\n      tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n    }\n    return {\n      img,\n      paintWidth,\n      paintHeight,\n    };\n  }\n\n  _createMaskCanvas(img) {\n    const ctx = this.ctx;\n    const { width, height } = img;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    const currentTransform = ctx.mozCurrentTransform;\n\n    let cache, cacheKey, scaled, maskCanvas;\n    if ((img.bitmap || img.data) && img.count > 1) {\n      const mainKey = img.bitmap || img.data.buffer;\n      // We're reusing the same image several times, so we can cache it.\n      // In case we've a pattern fill we just keep the scaled version of\n      // the image.\n      // Only the scaling part matters, the translation part is just used\n      // to compute offsets.\n      // TODO: handle the case of a pattern fill if it's possible.\n      const withoutTranslation = currentTransform.slice(0, 4);\n      cacheKey = JSON.stringify(\n        isPatternFill ? withoutTranslation : [withoutTranslation, fillColor]\n      );\n\n      cache = this._cachedBitmapsMap.get(mainKey);\n      if (!cache) {\n        cache = new Map();\n        this._cachedBitmapsMap.set(mainKey, cache);\n      }\n      const cachedImage = cache.get(cacheKey);\n      if (cachedImage && !isPatternFill) {\n        const offsetX = Math.round(\n          Math.min(currentTransform[0], currentTransform[2]) +\n            currentTransform[4]\n        );\n        const offsetY = Math.round(\n          Math.min(currentTransform[1], currentTransform[3]) +\n            currentTransform[5]\n        );\n        return {\n          canvas: cachedImage,\n          offsetX,\n          offsetY,\n        };\n      }\n      scaled = cachedImage;\n    }\n\n    if (!scaled) {\n      maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height,\n        /* trackTransform */ false\n      );\n      putBinaryImageMask(maskCanvas.context, img);\n    }\n\n    // Create the mask canvas at the size it will be drawn at and also set\n    // its transform to match the current transform so if there are any\n    // patterns applied they will be applied relative to the correct\n    // transform.\n\n    let maskToCanvas = Util.transform(currentTransform, [\n      1 / width,\n      0,\n      0,\n      -1 / height,\n      0,\n      0,\n    ]);\n    maskToCanvas = Util.transform(maskToCanvas, [1, 0, 0, 1, 0, -height]);\n    const cord1 = Util.applyTransform([0, 0], maskToCanvas);\n    const cord2 = Util.applyTransform([width, height], maskToCanvas);\n    const rect = Util.normalizeRect([cord1[0], cord1[1], cord2[0], cord2[1]]);\n    const drawnWidth = Math.round(rect[2] - rect[0]) || 1;\n    const drawnHeight = Math.round(rect[3] - rect[1]) || 1;\n    const fillCanvas = this.cachedCanvases.getCanvas(\n      \"fillCanvas\",\n      drawnWidth,\n      drawnHeight,\n      /* trackTransform */ true\n    );\n    const fillCtx = fillCanvas.context;\n\n    // The offset will be the top-left cordinate mask.\n    // If objToCanvas is [a,b,c,d,e,f] then:\n    //   - offsetX = min(a, c) + e\n    //   - offsetY = min(b, d) + f\n    const offsetX = Math.min(cord1[0], cord2[0]);\n    const offsetY = Math.min(cord1[1], cord2[1]);\n    fillCtx.translate(-offsetX, -offsetY);\n    fillCtx.transform.apply(fillCtx, maskToCanvas);\n\n    if (!scaled) {\n      // Pre-scale if needed to improve image smoothing.\n      scaled = this._scaleImage(\n        maskCanvas.canvas,\n        fillCtx.mozCurrentTransformInverse\n      );\n      scaled = scaled.img;\n      if (cache && isPatternFill) {\n        cache.set(cacheKey, scaled);\n      }\n    }\n\n    fillCtx.imageSmoothingEnabled = getImageSmoothingEnabled(\n      fillCtx.mozCurrentTransform,\n      img.interpolate\n    );\n\n    drawImageAtIntegerCoords(\n      fillCtx,\n      scaled,\n      0,\n      0,\n      scaled.width,\n      scaled.height,\n      0,\n      0,\n      width,\n      height\n    );\n    fillCtx.globalCompositeOperation = \"source-in\";\n\n    const inverse = Util.transform(fillCtx.mozCurrentTransformInverse, [\n      1,\n      0,\n      0,\n      1,\n      -offsetX,\n      -offsetY,\n    ]);\n    fillCtx.fillStyle = isPatternFill\n      ? fillColor.getPattern(ctx, this, inverse, PathType.FILL)\n      : fillColor;\n\n    fillCtx.fillRect(0, 0, width, height);\n\n    if (cache && !isPatternFill) {\n      // The fill canvas is put in the cache associated to the mask image\n      // so we must remove from the cached canvas: it mustn't be used again.\n      this.cachedCanvases.delete(\"fillCanvas\");\n      cache.set(cacheKey, fillCanvas.canvas);\n    }\n\n    // Round the offsets to avoid drawing fractional pixels.\n    return {\n      canvas: fillCanvas.canvas,\n      offsetX: Math.round(offsetX),\n      offsetY: Math.round(offsetY),\n    };\n  }\n\n  // Graphics state\n  setLineWidth(width) {\n    if (width !== this.current.lineWidth) {\n      this._cachedScaleForStroking = null;\n    }\n    this.current.lineWidth = width;\n    this.ctx.lineWidth = width;\n  }\n\n  setLineCap(style) {\n    this.ctx.lineCap = LINE_CAP_STYLES[style];\n  }\n\n  setLineJoin(style) {\n    this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n  }\n\n  setMiterLimit(limit) {\n    this.ctx.miterLimit = limit;\n  }\n\n  setDash(dashArray, dashPhase) {\n    const ctx = this.ctx;\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash(dashArray);\n      ctx.lineDashOffset = dashPhase;\n    }\n  }\n\n  setRenderingIntent(intent) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setFlatness(flatness) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setGState(states) {\n    for (let i = 0, ii = states.length; i < ii; i++) {\n      const state = states[i];\n      const key = state[0];\n      const value = state[1];\n\n      switch (key) {\n        case \"LW\":\n          this.setLineWidth(value);\n          break;\n        case \"LC\":\n          this.setLineCap(value);\n          break;\n        case \"LJ\":\n          this.setLineJoin(value);\n          break;\n        case \"ML\":\n          this.setMiterLimit(value);\n          break;\n        case \"D\":\n          this.setDash(value[0], value[1]);\n          break;\n        case \"RI\":\n          this.setRenderingIntent(value);\n          break;\n        case \"FL\":\n          this.setFlatness(value);\n          break;\n        case \"Font\":\n          this.setFont(value[0], value[1]);\n          break;\n        case \"CA\":\n          this.current.strokeAlpha = state[1];\n          break;\n        case \"ca\":\n          this.current.fillAlpha = state[1];\n          this.ctx.globalAlpha = state[1];\n          break;\n        case \"BM\":\n          this.ctx.globalCompositeOperation = value;\n          break;\n        case \"SMask\":\n          this.current.activeSMask = value ? this.tempSMask : null;\n          this.tempSMask = null;\n          this.checkSMaskState();\n          break;\n        case \"TR\":\n          this.current.transferMaps = value;\n      }\n    }\n  }\n\n  get inSMaskMode() {\n    return !!this.suspendedCtx;\n  }\n\n  checkSMaskState() {\n    const inSMaskMode = this.inSMaskMode;\n    if (this.current.activeSMask && !inSMaskMode) {\n      this.beginSMaskMode();\n    } else if (!this.current.activeSMask && inSMaskMode) {\n      this.endSMaskMode();\n    }\n    // Else, the state is okay and nothing needs to be done.\n  }\n\n  /**\n   * Soft mask mode takes the current main drawing canvas and replaces it with\n   * a temporary canvas. Any drawing operations that happen on the temporary\n   * canvas need to be composed with the main canvas that was suspended (see\n   * `compose()`). The temporary canvas also duplicates many of its operations\n   * on the suspended canvas to keep them in sync, so that when the soft mask\n   * mode ends any clipping paths or transformations will still be active and in\n   * the right order on the canvas' graphics state stack.\n   */\n  beginSMaskMode() {\n    if (this.inSMaskMode) {\n      throw new Error(\"beginSMaskMode called while already in smask mode\");\n    }\n    const drawnWidth = this.ctx.canvas.width;\n    const drawnHeight = this.ctx.canvas.height;\n    const cacheId = \"smaskGroupAt\" + this.groupLevel;\n    const scratchCanvas = this.cachedCanvases.getCanvas(\n      cacheId,\n      drawnWidth,\n      drawnHeight,\n      /* trackTransform */ true\n    );\n    this.suspendedCtx = this.ctx;\n    this.ctx = scratchCanvas.context;\n    const ctx = this.ctx;\n    ctx.setTransform.apply(ctx, this.suspendedCtx.mozCurrentTransform);\n    copyCtxState(this.suspendedCtx, ctx);\n    mirrorContextOperations(ctx, this.suspendedCtx);\n\n    this.setGState([\n      [\"BM\", \"source-over\"],\n      [\"ca\", 1],\n      [\"CA\", 1],\n    ]);\n  }\n\n  endSMaskMode() {\n    if (!this.inSMaskMode) {\n      throw new Error(\"endSMaskMode called while not in smask mode\");\n    }\n    // The soft mask is done, now restore the suspended canvas as the main\n    // drawing canvas.\n    this.ctx._removeMirroring();\n    copyCtxState(this.ctx, this.suspendedCtx);\n    this.ctx = this.suspendedCtx;\n\n    this.suspendedCtx = null;\n  }\n\n  compose(dirtyBox) {\n    if (!this.current.activeSMask) {\n      return;\n    }\n\n    if (!dirtyBox) {\n      dirtyBox = [0, 0, this.ctx.canvas.width, this.ctx.canvas.height];\n    } else {\n      dirtyBox[0] = Math.floor(dirtyBox[0]);\n      dirtyBox[1] = Math.floor(dirtyBox[1]);\n      dirtyBox[2] = Math.ceil(dirtyBox[2]);\n      dirtyBox[3] = Math.ceil(dirtyBox[3]);\n    }\n    const smask = this.current.activeSMask;\n    const suspendedCtx = this.suspendedCtx;\n\n    composeSMask(suspendedCtx, smask, this.ctx, dirtyBox);\n    // Whatever was drawn has been moved to the suspended canvas, now clear it\n    // out of the current canvas.\n    this.ctx.save();\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n    this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n    this.ctx.restore();\n  }\n\n  save() {\n    if (this.inSMaskMode) {\n      // SMask mode may be turned on/off causing us to lose graphics state.\n      // Copy the temporary canvas state to the main(suspended) canvas to keep\n      // it in sync.\n      copyCtxState(this.ctx, this.suspendedCtx);\n      // Don't bother calling save on the temporary canvas since state is not\n      // saved there.\n      this.suspendedCtx.save();\n    } else {\n      this.ctx.save();\n    }\n    const old = this.current;\n    this.stateStack.push(old);\n    this.current = old.clone();\n  }\n\n  restore() {\n    if (this.stateStack.length === 0 && this.inSMaskMode) {\n      this.endSMaskMode();\n    }\n    if (this.stateStack.length !== 0) {\n      this.current = this.stateStack.pop();\n      if (this.inSMaskMode) {\n        // Graphics state is stored on the main(suspended) canvas. Restore its\n        // state then copy it over to the temporary canvas.\n        this.suspendedCtx.restore();\n        copyCtxState(this.suspendedCtx, this.ctx);\n      } else {\n        this.ctx.restore();\n      }\n      this.checkSMaskState();\n\n      // Ensure that the clipping path is reset (fixes issue6413.pdf).\n      this.pendingClip = null;\n\n      this._cachedScaleForStroking = null;\n      this._cachedGetSinglePixelWidth = null;\n    }\n  }\n\n  transform(a, b, c, d, e, f) {\n    this.ctx.transform(a, b, c, d, e, f);\n\n    this._cachedScaleForStroking = null;\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  // Path\n  constructPath(ops, args, minMax) {\n    const ctx = this.ctx;\n    const current = this.current;\n    let x = current.x,\n      y = current.y;\n    let startX, startY;\n    const currentTransform = ctx.mozCurrentTransform;\n\n    // Most of the time the current transform is a scaling matrix\n    // so we don't need to transform points before computing min/max:\n    // we can compute min/max first and then smartly \"apply\" the\n    // transform (see Util.scaleMinMax).\n    // For rectangle, moveTo and lineTo, min/max are computed in the\n    // worker (see evaluator.js).\n    const isScalingMatrix =\n      (currentTransform[0] === 0 && currentTransform[3] === 0) ||\n      (currentTransform[1] === 0 && currentTransform[2] === 0);\n    const minMaxForBezier = isScalingMatrix ? minMax.slice(0) : null;\n\n    for (let i = 0, j = 0, ii = ops.length; i < ii; i++) {\n      switch (ops[i] | 0) {\n        case OPS.rectangle:\n          x = args[j++];\n          y = args[j++];\n          const width = args[j++];\n          const height = args[j++];\n\n          const xw = x + width;\n          const yh = y + height;\n          ctx.moveTo(x, y);\n          if (width === 0 || height === 0) {\n            ctx.lineTo(xw, yh);\n          } else {\n            ctx.lineTo(xw, y);\n            ctx.lineTo(xw, yh);\n            ctx.lineTo(x, yh);\n          }\n          if (!isScalingMatrix) {\n            current.updateRectMinMax(currentTransform, [x, y, xw, yh]);\n          }\n          ctx.closePath();\n          break;\n        case OPS.moveTo:\n          x = args[j++];\n          y = args[j++];\n          ctx.moveTo(x, y);\n          if (!isScalingMatrix) {\n            current.updatePathMinMax(currentTransform, x, y);\n          }\n          break;\n        case OPS.lineTo:\n          x = args[j++];\n          y = args[j++];\n          ctx.lineTo(x, y);\n          if (!isScalingMatrix) {\n            current.updatePathMinMax(currentTransform, x, y);\n          }\n          break;\n        case OPS.curveTo:\n          startX = x;\n          startY = y;\n          x = args[j + 4];\n          y = args[j + 5];\n          ctx.bezierCurveTo(\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3],\n            x,\n            y\n          );\n          current.updateCurvePathMinMax(\n            currentTransform,\n            startX,\n            startY,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3],\n            x,\n            y,\n            minMaxForBezier\n          );\n          j += 6;\n          break;\n        case OPS.curveTo2:\n          startX = x;\n          startY = y;\n          ctx.bezierCurveTo(\n            x,\n            y,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3]\n          );\n          current.updateCurvePathMinMax(\n            currentTransform,\n            startX,\n            startY,\n            x,\n            y,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3],\n            minMaxForBezier\n          );\n          x = args[j + 2];\n          y = args[j + 3];\n          j += 4;\n          break;\n        case OPS.curveTo3:\n          startX = x;\n          startY = y;\n          x = args[j + 2];\n          y = args[j + 3];\n          ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n          current.updateCurvePathMinMax(\n            currentTransform,\n            startX,\n            startY,\n            args[j],\n            args[j + 1],\n            x,\n            y,\n            x,\n            y,\n            minMaxForBezier\n          );\n          j += 4;\n          break;\n        case OPS.closePath:\n          ctx.closePath();\n          break;\n      }\n    }\n\n    if (isScalingMatrix) {\n      current.updateScalingPathMinMax(currentTransform, minMaxForBezier);\n    }\n\n    current.setCurrentPoint(x, y);\n  }\n\n  closePath() {\n    this.ctx.closePath();\n  }\n\n  stroke(consumePath) {\n    consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n    const ctx = this.ctx;\n    const strokeColor = this.current.strokeColor;\n    // For stroke we want to temporarily change the global alpha to the\n    // stroking alpha.\n    ctx.globalAlpha = this.current.strokeAlpha;\n    if (this.contentVisible) {\n      if (typeof strokeColor === \"object\" && strokeColor?.getPattern) {\n        ctx.save();\n        ctx.strokeStyle = strokeColor.getPattern(\n          ctx,\n          this,\n          ctx.mozCurrentTransformInverse,\n          PathType.STROKE\n        );\n        this.rescaleAndStroke(/* saveRestore */ false);\n        ctx.restore();\n      } else {\n        this.rescaleAndStroke(/* saveRestore */ true);\n      }\n    }\n    if (consumePath) {\n      this.consumePath(this.current.getClippedPathBoundingBox());\n    }\n    // Restore the global alpha to the fill alpha\n    ctx.globalAlpha = this.current.fillAlpha;\n  }\n\n  closeStroke() {\n    this.closePath();\n    this.stroke();\n  }\n\n  fill(consumePath) {\n    consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n    const ctx = this.ctx;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    let needRestore = false;\n\n    if (isPatternFill) {\n      ctx.save();\n      ctx.fillStyle = fillColor.getPattern(\n        ctx,\n        this,\n        ctx.mozCurrentTransformInverse,\n        PathType.FILL\n      );\n      needRestore = true;\n    }\n\n    const intersect = this.current.getClippedPathBoundingBox();\n    if (this.contentVisible && intersect !== null) {\n      if (this.pendingEOFill) {\n        ctx.fill(\"evenodd\");\n        this.pendingEOFill = false;\n      } else {\n        ctx.fill();\n      }\n    }\n\n    if (needRestore) {\n      ctx.restore();\n    }\n    if (consumePath) {\n      this.consumePath(intersect);\n    }\n  }\n\n  eoFill() {\n    this.pendingEOFill = true;\n    this.fill();\n  }\n\n  fillStroke() {\n    this.fill(false);\n    this.stroke(false);\n\n    this.consumePath();\n  }\n\n  eoFillStroke() {\n    this.pendingEOFill = true;\n    this.fillStroke();\n  }\n\n  closeFillStroke() {\n    this.closePath();\n    this.fillStroke();\n  }\n\n  closeEOFillStroke() {\n    this.pendingEOFill = true;\n    this.closePath();\n    this.fillStroke();\n  }\n\n  endPath() {\n    this.consumePath();\n  }\n\n  // Clipping\n  clip() {\n    this.pendingClip = NORMAL_CLIP;\n  }\n\n  eoClip() {\n    this.pendingClip = EO_CLIP;\n  }\n\n  // Text\n  beginText() {\n    this.current.textMatrix = IDENTITY_MATRIX;\n    this.current.textMatrixScale = 1;\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n  }\n\n  endText() {\n    const paths = this.pendingTextPaths;\n    const ctx = this.ctx;\n    if (paths === undefined) {\n      ctx.beginPath();\n      return;\n    }\n\n    ctx.save();\n    ctx.beginPath();\n    for (let i = 0; i < paths.length; i++) {\n      const path = paths[i];\n      ctx.setTransform.apply(ctx, path.transform);\n      ctx.translate(path.x, path.y);\n      path.addToPath(ctx, path.fontSize);\n    }\n    ctx.restore();\n    ctx.clip();\n    ctx.beginPath();\n    delete this.pendingTextPaths;\n  }\n\n  setCharSpacing(spacing) {\n    this.current.charSpacing = spacing;\n  }\n\n  setWordSpacing(spacing) {\n    this.current.wordSpacing = spacing;\n  }\n\n  setHScale(scale) {\n    this.current.textHScale = scale / 100;\n  }\n\n  setLeading(leading) {\n    this.current.leading = -leading;\n  }\n\n  setFont(fontRefName, size) {\n    const fontObj = this.commonObjs.get(fontRefName);\n    const current = this.current;\n\n    if (!fontObj) {\n      throw new Error(`Can't find font for ${fontRefName}`);\n    }\n    current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n    // A valid matrix needs all main diagonal elements to be non-zero\n    // This also ensures we bypass FF bugzilla bug #719844.\n    if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n      warn(\"Invalid font matrix for font \" + fontRefName);\n    }\n\n    // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\n    // and in some docs this can be negative (inverted x-y axes).\n    if (size < 0) {\n      size = -size;\n      current.fontDirection = -1;\n    } else {\n      current.fontDirection = 1;\n    }\n\n    this.current.font = fontObj;\n    this.current.fontSize = size;\n\n    if (fontObj.isType3Font) {\n      return; // we don't need ctx.font for Type3 fonts\n    }\n\n    const name = fontObj.loadedName || \"sans-serif\";\n\n    let bold = \"normal\";\n    if (fontObj.black) {\n      bold = \"900\";\n    } else if (fontObj.bold) {\n      bold = \"bold\";\n    }\n    const italic = fontObj.italic ? \"italic\" : \"normal\";\n    const typeface = `\"${name}\", ${fontObj.fallbackName}`;\n\n    // Some font backends cannot handle fonts below certain size.\n    // Keeping the font at minimal size and using the fontSizeScale to change\n    // the current transformation matrix before the fillText/strokeText.\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\n    let browserFontSize = size;\n    if (size < MIN_FONT_SIZE) {\n      browserFontSize = MIN_FONT_SIZE;\n    } else if (size > MAX_FONT_SIZE) {\n      browserFontSize = MAX_FONT_SIZE;\n    }\n    this.current.fontSizeScale = size / browserFontSize;\n\n    this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n  }\n\n  setTextRenderingMode(mode) {\n    this.current.textRenderingMode = mode;\n  }\n\n  setTextRise(rise) {\n    this.current.textRise = rise;\n  }\n\n  moveText(x, y) {\n    this.current.x = this.current.lineX += x;\n    this.current.y = this.current.lineY += y;\n  }\n\n  setLeadingMoveText(x, y) {\n    this.setLeading(-y);\n    this.moveText(x, y);\n  }\n\n  setTextMatrix(a, b, c, d, e, f) {\n    this.current.textMatrix = [a, b, c, d, e, f];\n    this.current.textMatrixScale = Math.hypot(a, b);\n\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n  }\n\n  nextLine() {\n    this.moveText(0, this.current.leading);\n  }\n\n  paintChar(character, x, y, patternTransform) {\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const textRenderingMode = current.textRenderingMode;\n    const fontSize = current.fontSize / current.fontSizeScale;\n    const fillStrokeMode =\n      textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n    const isAddToPathSet = !!(\n      textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG\n    );\n    const patternFill = current.patternFill && !font.missingFile;\n\n    let addToPath;\n    if (font.disableFontFace || isAddToPathSet || patternFill) {\n      addToPath = font.getPathGenerator(this.commonObjs, character);\n    }\n\n    if (font.disableFontFace || patternFill) {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.beginPath();\n      addToPath(ctx, fontSize);\n      if (patternTransform) {\n        ctx.setTransform.apply(ctx, patternTransform);\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.fill();\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.stroke();\n      }\n      ctx.restore();\n    } else {\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.fillText(character, x, y);\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.strokeText(character, x, y);\n      }\n    }\n\n    if (isAddToPathSet) {\n      const paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n      paths.push({\n        transform: ctx.mozCurrentTransform,\n        x,\n        y,\n        fontSize,\n        addToPath,\n      });\n    }\n  }\n\n  get isFontSubpixelAAEnabled() {\n    // Checks if anti-aliasing is enabled when scaled text is painted.\n    // On Windows GDI scaled fonts looks bad.\n    const { context: ctx } = this.cachedCanvases.getCanvas(\n      \"isFontSubpixelAAEnabled\",\n      10,\n      10,\n      /* trackTransform */ false\n    );\n    ctx.scale(1.5, 1);\n    ctx.fillText(\"I\", 0, 10);\n    const data = ctx.getImageData(0, 0, 10, 10).data;\n    let enabled = false;\n    for (let i = 3; i < data.length; i += 4) {\n      if (data[i] > 0 && data[i] < 255) {\n        enabled = true;\n        break;\n      }\n    }\n    return shadow(this, \"isFontSubpixelAAEnabled\", enabled);\n  }\n\n  showText(glyphs) {\n    const current = this.current;\n    const font = current.font;\n    if (font.isType3Font) {\n      return this.showType3Text(glyphs);\n    }\n\n    const fontSize = current.fontSize;\n    if (fontSize === 0) {\n      return undefined;\n    }\n\n    const ctx = this.ctx;\n    const fontSizeScale = current.fontSizeScale;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const fontDirection = current.fontDirection;\n    const textHScale = current.textHScale * fontDirection;\n    const glyphsLength = glyphs.length;\n    const vertical = font.vertical;\n    const spacingDir = vertical ? 1 : -1;\n    const defaultVMetrics = font.defaultVMetrics;\n    const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n    const simpleFillText =\n      current.textRenderingMode === TextRenderingMode.FILL &&\n      !font.disableFontFace &&\n      !current.patternFill;\n\n    ctx.save();\n    ctx.transform.apply(ctx, current.textMatrix);\n    ctx.translate(current.x, current.y + current.textRise);\n\n    if (fontDirection > 0) {\n      ctx.scale(textHScale, -1);\n    } else {\n      ctx.scale(textHScale, 1);\n    }\n\n    let patternTransform;\n    if (current.patternFill) {\n      ctx.save();\n      const pattern = current.fillColor.getPattern(\n        ctx,\n        this,\n        ctx.mozCurrentTransformInverse,\n        PathType.FILL\n      );\n      patternTransform = ctx.mozCurrentTransform;\n      ctx.restore();\n      ctx.fillStyle = pattern;\n    }\n\n    let lineWidth = current.lineWidth;\n    const scale = current.textMatrixScale;\n    if (scale === 0 || lineWidth === 0) {\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        lineWidth = this.getSinglePixelWidth();\n      }\n    } else {\n      lineWidth /= scale;\n    }\n\n    if (fontSizeScale !== 1.0) {\n      ctx.scale(fontSizeScale, fontSizeScale);\n      lineWidth /= fontSizeScale;\n    }\n\n    ctx.lineWidth = lineWidth;\n\n    let x = 0,\n      i;\n    for (i = 0; i < glyphsLength; ++i) {\n      const glyph = glyphs[i];\n      if (typeof glyph === \"number\") {\n        x += (spacingDir * glyph * fontSize) / 1000;\n        continue;\n      }\n\n      let restoreNeeded = false;\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const character = glyph.fontChar;\n      const accent = glyph.accent;\n      let scaledX, scaledY;\n      let width = glyph.width;\n      if (vertical) {\n        const vmetric = glyph.vmetric || defaultVMetrics;\n        const vx =\n          -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n        const vy = vmetric[2] * widthAdvanceScale;\n\n        width = vmetric ? -vmetric[0] : width;\n        scaledX = vx / fontSizeScale;\n        scaledY = (x + vy) / fontSizeScale;\n      } else {\n        scaledX = x / fontSizeScale;\n        scaledY = 0;\n      }\n\n      if (font.remeasure && width > 0) {\n        // Some standard fonts may not have the exact width: rescale per\n        // character if measured width is greater than expected glyph width\n        // and subpixel-aa is enabled, otherwise just center the glyph.\n        const measuredWidth =\n          ((ctx.measureText(character).width * 1000) / fontSize) *\n          fontSizeScale;\n        if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n          const characterScaleX = width / measuredWidth;\n          restoreNeeded = true;\n          ctx.save();\n          ctx.scale(characterScaleX, 1);\n          scaledX /= characterScaleX;\n        } else if (width !== measuredWidth) {\n          scaledX +=\n            (((width - measuredWidth) / 2000) * fontSize) / fontSizeScale;\n        }\n      }\n\n      // Only attempt to draw the glyph if it is actually in the embedded font\n      // file or if there isn't a font file so the fallback font is shown.\n      if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n        if (simpleFillText && !accent) {\n          // common case\n          ctx.fillText(character, scaledX, scaledY);\n        } else {\n          this.paintChar(character, scaledX, scaledY, patternTransform);\n          if (accent) {\n            const scaledAccentX =\n              scaledX + (fontSize * accent.offset.x) / fontSizeScale;\n            const scaledAccentY =\n              scaledY - (fontSize * accent.offset.y) / fontSizeScale;\n            this.paintChar(\n              accent.fontChar,\n              scaledAccentX,\n              scaledAccentY,\n              patternTransform\n            );\n          }\n        }\n      }\n\n      let charWidth;\n      if (vertical) {\n        charWidth = width * widthAdvanceScale - spacing * fontDirection;\n      } else {\n        charWidth = width * widthAdvanceScale + spacing * fontDirection;\n      }\n      x += charWidth;\n\n      if (restoreNeeded) {\n        ctx.restore();\n      }\n    }\n    if (vertical) {\n      current.y -= x;\n    } else {\n      current.x += x * textHScale;\n    }\n    ctx.restore();\n    this.compose();\n\n    return undefined;\n  }\n\n  showType3Text(glyphs) {\n    // Type3 fonts - each glyph is a \"mini-PDF\"\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const fontSize = current.fontSize;\n    const fontDirection = current.fontDirection;\n    const spacingDir = font.vertical ? 1 : -1;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const textHScale = current.textHScale * fontDirection;\n    const fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n    const glyphsLength = glyphs.length;\n    const isTextInvisible =\n      current.textRenderingMode === TextRenderingMode.INVISIBLE;\n    let i, glyph, width, spacingLength;\n\n    if (isTextInvisible || fontSize === 0) {\n      return;\n    }\n    this._cachedScaleForStroking = null;\n    this._cachedGetSinglePixelWidth = null;\n\n    ctx.save();\n    ctx.transform.apply(ctx, current.textMatrix);\n    ctx.translate(current.x, current.y);\n\n    ctx.scale(textHScale, fontDirection);\n\n    for (i = 0; i < glyphsLength; ++i) {\n      glyph = glyphs[i];\n      if (typeof glyph === \"number\") {\n        spacingLength = (spacingDir * glyph * fontSize) / 1000;\n        this.ctx.translate(spacingLength, 0);\n        current.x += spacingLength * textHScale;\n        continue;\n      }\n\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const operatorList = font.charProcOperatorList[glyph.operatorListId];\n      if (!operatorList) {\n        warn(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n        continue;\n      }\n      if (this.contentVisible) {\n        this.processingType3 = glyph;\n        this.save();\n        ctx.scale(fontSize, fontSize);\n        ctx.transform.apply(ctx, fontMatrix);\n        this.executeOperatorList(operatorList);\n        this.restore();\n      }\n\n      const transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\n      width = transformed[0] * fontSize + spacing;\n\n      ctx.translate(width, 0);\n      current.x += width * textHScale;\n    }\n    ctx.restore();\n    this.processingType3 = null;\n  }\n\n  // Type3 fonts\n  setCharWidth(xWidth, yWidth) {\n    // We can safely ignore this since the width should be the same\n    // as the width in the Widths array.\n  }\n\n  setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n    // TODO According to the spec we're also suppose to ignore any operators\n    // that set color or include images while processing this type3 font.\n    this.ctx.rect(llx, lly, urx - llx, ury - lly);\n    this.ctx.clip();\n    this.endPath();\n  }\n\n  // Color\n  getColorN_Pattern(IR) {\n    let pattern;\n    if (IR[0] === \"TilingPattern\") {\n      const color = IR[1];\n      const baseTransform =\n        this.baseTransform || this.ctx.mozCurrentTransform.slice();\n      const canvasGraphicsFactory = {\n        createCanvasGraphics: ctx => {\n          return new CanvasGraphics(\n            ctx,\n            this.commonObjs,\n            this.objs,\n            this.canvasFactory\n          );\n        },\n      };\n      pattern = new TilingPattern(\n        IR,\n        color,\n        this.ctx,\n        canvasGraphicsFactory,\n        baseTransform\n      );\n    } else {\n      pattern = this._getPattern(IR[1], IR[2]);\n    }\n    return pattern;\n  }\n\n  setStrokeColorN() {\n    this.current.strokeColor = this.getColorN_Pattern(arguments);\n  }\n\n  setFillColorN() {\n    this.current.fillColor = this.getColorN_Pattern(arguments);\n    this.current.patternFill = true;\n  }\n\n  setStrokeRGBColor(r, g, b) {\n    const color = this.selectColor?.(r, g, b) || Util.makeHexColor(r, g, b);\n    this.ctx.strokeStyle = color;\n    this.current.strokeColor = color;\n  }\n\n  setFillRGBColor(r, g, b) {\n    const color = this.selectColor?.(r, g, b) || Util.makeHexColor(r, g, b);\n    this.ctx.fillStyle = color;\n    this.current.fillColor = color;\n    this.current.patternFill = false;\n  }\n\n  _getPattern(objId, matrix = null) {\n    let pattern;\n    if (this.cachedPatterns.has(objId)) {\n      pattern = this.cachedPatterns.get(objId);\n    } else {\n      pattern = getShadingPattern(this.objs.get(objId));\n      this.cachedPatterns.set(objId, pattern);\n    }\n    if (matrix) {\n      pattern.matrix = matrix;\n    }\n    return pattern;\n  }\n\n  shadingFill(objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n\n    this.save();\n    const pattern = this._getPattern(objId);\n    ctx.fillStyle = pattern.getPattern(\n      ctx,\n      this,\n      ctx.mozCurrentTransformInverse,\n      PathType.SHADING\n    );\n\n    const inv = ctx.mozCurrentTransformInverse;\n    if (inv) {\n      const canvas = ctx.canvas;\n      const width = canvas.width;\n      const height = canvas.height;\n\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n    } else {\n      // HACK to draw the gradient onto an infinite rectangle.\n      // PDF gradients are drawn across the entire image while\n      // Canvas only allows gradients to be drawn in a rectangle\n      // The following bug should allow us to remove this.\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\n\n      this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n    }\n\n    this.compose(this.current.getClippedPathBoundingBox());\n    this.restore();\n  }\n\n  // Images\n  beginInlineImage() {\n    unreachable(\"Should not call beginInlineImage\");\n  }\n\n  beginImageData() {\n    unreachable(\"Should not call beginImageData\");\n  }\n\n  paintFormXObjectBegin(matrix, bbox) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.save();\n    this.baseTransformStack.push(this.baseTransform);\n\n    if (Array.isArray(matrix) && matrix.length === 6) {\n      this.transform.apply(this, matrix);\n    }\n\n    this.baseTransform = this.ctx.mozCurrentTransform;\n\n    if (bbox) {\n      const width = bbox[2] - bbox[0];\n      const height = bbox[3] - bbox[1];\n      this.ctx.rect(bbox[0], bbox[1], width, height);\n      this.current.updateRectMinMax(this.ctx.mozCurrentTransform, bbox);\n      this.clip();\n      this.endPath();\n    }\n  }\n\n  paintFormXObjectEnd() {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.restore();\n    this.baseTransform = this.baseTransformStack.pop();\n  }\n\n  beginGroup(group) {\n    if (!this.contentVisible) {\n      return;\n    }\n\n    this.save();\n    // If there's an active soft mask we don't want it enabled for the group, so\n    // clear it out. The mask and suspended canvas will be restored in endGroup.\n    if (this.inSMaskMode) {\n      this.endSMaskMode();\n      this.current.activeSMask = null;\n    }\n\n    const currentCtx = this.ctx;\n    // TODO non-isolated groups - according to Rik at adobe non-isolated\n    // group results aren't usually that different and they even have tools\n    // that ignore this setting. Notes from Rik on implementing:\n    // - When you encounter an transparency group, create a new canvas with\n    // the dimensions of the bbox\n    // - copy the content from the previous canvas to the new canvas\n    // - draw as usual\n    // - remove the backdrop alpha:\n    // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\n    // value of your transparency group and 'alphaBackdrop' the alpha of the\n    // backdrop\n    // - remove background color:\n    // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\n    if (!group.isolated) {\n      info(\"TODO: Support non-isolated groups.\");\n    }\n\n    // TODO knockout - supposedly possible with the clever use of compositing\n    // modes.\n    if (group.knockout) {\n      warn(\"Knockout groups not supported.\");\n    }\n\n    const currentTransform = currentCtx.mozCurrentTransform;\n    if (group.matrix) {\n      currentCtx.transform.apply(currentCtx, group.matrix);\n    }\n    if (!group.bbox) {\n      throw new Error(\"Bounding box is required.\");\n    }\n\n    // Based on the current transform figure out how big the bounding box\n    // will actually be.\n    let bounds = Util.getAxialAlignedBoundingBox(\n      group.bbox,\n      currentCtx.mozCurrentTransform\n    );\n    // Clip the bounding box to the current canvas.\n    const canvasBounds = [\n      0,\n      0,\n      currentCtx.canvas.width,\n      currentCtx.canvas.height,\n    ];\n    bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n    // Use ceil in case we're between sizes so we don't create canvas that is\n    // too small and make the canvas at least 1x1 pixels.\n    const offsetX = Math.floor(bounds[0]);\n    const offsetY = Math.floor(bounds[1]);\n    let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n    let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n    let scaleX = 1,\n      scaleY = 1;\n    if (drawnWidth > MAX_GROUP_SIZE) {\n      scaleX = drawnWidth / MAX_GROUP_SIZE;\n      drawnWidth = MAX_GROUP_SIZE;\n    }\n    if (drawnHeight > MAX_GROUP_SIZE) {\n      scaleY = drawnHeight / MAX_GROUP_SIZE;\n      drawnHeight = MAX_GROUP_SIZE;\n    }\n\n    this.current.startNewPathAndClipBox([0, 0, drawnWidth, drawnHeight]);\n\n    let cacheId = \"groupAt\" + this.groupLevel;\n    if (group.smask) {\n      // Using two cache entries is case if masks are used one after another.\n      cacheId += \"_smask_\" + (this.smaskCounter++ % 2);\n    }\n    const scratchCanvas = this.cachedCanvases.getCanvas(\n      cacheId,\n      drawnWidth,\n      drawnHeight,\n      /* trackTransform */ true\n    );\n    const groupCtx = scratchCanvas.context;\n\n    // Since we created a new canvas that is just the size of the bounding box\n    // we have to translate the group ctx.\n    groupCtx.scale(1 / scaleX, 1 / scaleY);\n    groupCtx.translate(-offsetX, -offsetY);\n    groupCtx.transform.apply(groupCtx, currentTransform);\n\n    if (group.smask) {\n      // Saving state and cached mask to be used in setGState.\n      this.smaskStack.push({\n        canvas: scratchCanvas.canvas,\n        context: groupCtx,\n        offsetX,\n        offsetY,\n        scaleX,\n        scaleY,\n        subtype: group.smask.subtype,\n        backdrop: group.smask.backdrop,\n        transferMap: group.smask.transferMap || null,\n        startTransformInverse: null, // used during suspend operation\n      });\n    } else {\n      // Setup the current ctx so when the group is popped we draw it at the\n      // right location.\n      currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n      currentCtx.translate(offsetX, offsetY);\n      currentCtx.scale(scaleX, scaleY);\n      currentCtx.save();\n    }\n    // The transparency group inherits all off the current graphics state\n    // except the blend mode, soft mask, and alpha constants.\n    copyCtxState(currentCtx, groupCtx);\n    this.ctx = groupCtx;\n    this.setGState([\n      [\"BM\", \"source-over\"],\n      [\"ca\", 1],\n      [\"CA\", 1],\n    ]);\n    this.groupStack.push(currentCtx);\n    this.groupLevel++;\n  }\n\n  endGroup(group) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.groupLevel--;\n    const groupCtx = this.ctx;\n    const ctx = this.groupStack.pop();\n    this.ctx = ctx;\n    // Turn off image smoothing to avoid sub pixel interpolation which can\n    // look kind of blurry for some pdfs.\n    this.ctx.imageSmoothingEnabled = false;\n\n    if (group.smask) {\n      this.tempSMask = this.smaskStack.pop();\n      this.restore();\n    } else {\n      this.ctx.restore();\n      const currentMtx = this.ctx.mozCurrentTransform;\n      this.restore();\n      this.ctx.save();\n      this.ctx.setTransform.apply(this.ctx, currentMtx);\n      const dirtyBox = Util.getAxialAlignedBoundingBox(\n        [0, 0, groupCtx.canvas.width, groupCtx.canvas.height],\n        currentMtx\n      );\n      this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      this.ctx.restore();\n      this.compose(dirtyBox);\n    }\n  }\n\n  beginAnnotations() {\n    this.save();\n    if (this.baseTransform) {\n      this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n    }\n  }\n\n  endAnnotations() {\n    this.restore();\n  }\n\n  beginAnnotation(id, rect, transform, matrix, hasOwnCanvas) {\n    this.save();\n\n    if (Array.isArray(rect) && rect.length === 4) {\n      const width = rect[2] - rect[0];\n      const height = rect[3] - rect[1];\n\n      if (hasOwnCanvas && this.annotationCanvasMap) {\n        transform = transform.slice();\n        transform[4] -= rect[0];\n        transform[5] -= rect[1];\n\n        rect = rect.slice();\n        rect[0] = rect[1] = 0;\n        rect[2] = width;\n        rect[3] = height;\n\n        const [scaleX, scaleY] = Util.singularValueDecompose2dScale(\n          this.ctx.mozCurrentTransform\n        );\n        const { viewportScale } = this;\n        const canvasWidth = Math.ceil(\n          width * this.outputScaleX * viewportScale\n        );\n        const canvasHeight = Math.ceil(\n          height * this.outputScaleY * viewportScale\n        );\n\n        this.annotationCanvas = this.canvasFactory.create(\n          canvasWidth,\n          canvasHeight\n        );\n        const { canvas, context } = this.annotationCanvas;\n        const viewportScaleFactorStr = `var(--zoom-factor) * ${PixelsPerInch.PDF_TO_CSS_UNITS}`;\n        canvas.style.width = `calc(${width}px * ${viewportScaleFactorStr})`;\n        canvas.style.height = `calc(${height}px * ${viewportScaleFactorStr})`;\n        this.annotationCanvasMap.set(id, canvas);\n        this.annotationCanvas.savedCtx = this.ctx;\n        this.ctx = context;\n        this.ctx.setTransform(scaleX, 0, 0, -scaleY, 0, height * scaleY);\n        addContextCurrentTransform(this.ctx);\n\n        resetCtxToDefault(this.ctx, this.foregroundColor);\n      } else {\n        resetCtxToDefault(this.ctx, this.foregroundColor);\n\n        this.ctx.rect(rect[0], rect[1], width, height);\n        this.ctx.clip();\n        this.endPath();\n      }\n    }\n\n    this.current = new CanvasExtraState(\n      this.ctx.canvas.width,\n      this.ctx.canvas.height\n    );\n\n    this.transform.apply(this, transform);\n    this.transform.apply(this, matrix);\n  }\n\n  endAnnotation() {\n    if (this.annotationCanvas) {\n      this.ctx = this.annotationCanvas.savedCtx;\n      delete this.annotationCanvas.savedCtx;\n      delete this.annotationCanvas;\n    }\n    this.restore();\n  }\n\n  paintImageMaskXObject(img) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const count = img.count;\n    img = this.getObject(img.data, img);\n    img.count = count;\n\n    const ctx = this.ctx;\n    const glyph = this.processingType3;\n\n    if (glyph) {\n      if (glyph.compiled === undefined) {\n        glyph.compiled = compileType3Glyph(img);\n      }\n\n      if (glyph.compiled) {\n        glyph.compiled(ctx);\n        return;\n      }\n    }\n    const mask = this._createMaskCanvas(img);\n    const maskCanvas = mask.canvas;\n\n    ctx.save();\n    // The mask is drawn with the transform applied. Reset the current\n    // transform to draw to the identity.\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.drawImage(maskCanvas, mask.offsetX, mask.offsetY);\n    ctx.restore();\n    this.compose();\n  }\n\n  paintImageMaskXObjectRepeat(\n    img,\n    scaleX,\n    skewX = 0,\n    skewY = 0,\n    scaleY,\n    positions\n  ) {\n    if (!this.contentVisible) {\n      return;\n    }\n\n    img = this.getObject(img.data, img);\n\n    const ctx = this.ctx;\n    ctx.save();\n    const currentTransform = ctx.mozCurrentTransform;\n    ctx.transform(scaleX, skewX, skewY, scaleY, 0, 0);\n    const mask = this._createMaskCanvas(img);\n\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      const trans = Util.transform(currentTransform, [\n        scaleX,\n        skewX,\n        skewY,\n        scaleY,\n        positions[i],\n        positions[i + 1],\n      ]);\n\n      const [x, y] = Util.applyTransform([0, 0], trans);\n      ctx.drawImage(mask.canvas, x, y);\n    }\n    ctx.restore();\n    this.compose();\n  }\n\n  paintImageMaskXObjectGroup(images) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    for (let i = 0, ii = images.length; i < ii; i++) {\n      const image = images[i];\n      const width = image.width,\n        height = image.height;\n\n      const maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height,\n        /* trackTransform */ false\n      );\n      const maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, image);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(\n            maskCtx,\n            this,\n            ctx.mozCurrentTransformInverse,\n            PathType.FILL\n          )\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      ctx.save();\n      ctx.transform.apply(ctx, image.transform);\n      ctx.scale(1, -1);\n      drawImageAtIntegerCoords(\n        ctx,\n        maskCanvas.canvas,\n        0,\n        0,\n        width,\n        height,\n        0,\n        -1,\n        1,\n        1\n      );\n      ctx.restore();\n    }\n    this.compose();\n  }\n\n  paintImageXObject(objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const imgData = this.getObject(objId);\n    if (!imgData) {\n      warn(\"Dependent image isn't ready yet\");\n      return;\n    }\n\n    this.paintInlineImageXObject(imgData);\n  }\n\n  paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const imgData = this.getObject(objId);\n    if (!imgData) {\n      warn(\"Dependent image isn't ready yet\");\n      return;\n    }\n\n    const width = imgData.width;\n    const height = imgData.height;\n    const map = [];\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      map.push({\n        transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n        x: 0,\n        y: 0,\n        w: width,\n        h: height,\n      });\n    }\n    this.paintInlineImageXObjectGroup(imgData, map);\n  }\n\n  paintInlineImageXObject(imgData) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const width = imgData.width;\n    const height = imgData.height;\n    const ctx = this.ctx;\n\n    this.save();\n    // scale the image to the unit square\n    ctx.scale(1 / width, -1 / height);\n\n    let imgToPaint;\n    // typeof check is needed due to node.js support, see issue #8489\n    if (\n      (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement) ||\n      !imgData.data\n    ) {\n      imgToPaint = imgData;\n    } else {\n      const tmpCanvas = this.cachedCanvases.getCanvas(\n        \"inlineImage\",\n        width,\n        height,\n        /* trackTransform */ false\n      );\n      const tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n      imgToPaint = tmpCanvas.canvas;\n    }\n\n    const scaled = this._scaleImage(imgToPaint, ctx.mozCurrentTransformInverse);\n    ctx.imageSmoothingEnabled = getImageSmoothingEnabled(\n      ctx.mozCurrentTransform,\n      imgData.interpolate\n    );\n\n    const [rWidth, rHeight] = drawImageAtIntegerCoords(\n      ctx,\n      scaled.img,\n      0,\n      0,\n      scaled.paintWidth,\n      scaled.paintHeight,\n      0,\n      -height,\n      width,\n      height\n    );\n\n    if (this.imageLayer) {\n      const position = this.getCanvasPosition(0, -height);\n      this.imageLayer.appendImage({\n        imgData,\n        left: position[0],\n        top: position[1],\n        width: rWidth,\n        height: rHeight,\n      });\n    }\n    this.compose();\n    this.restore();\n  }\n\n  paintInlineImageXObjectGroup(imgData, map) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    const w = imgData.width;\n    const h = imgData.height;\n\n    const tmpCanvas = this.cachedCanvases.getCanvas(\n      \"inlineImage\",\n      w,\n      h,\n      /* trackTransform */ false\n    );\n    const tmpCtx = tmpCanvas.context;\n    putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n\n    for (let i = 0, ii = map.length; i < ii; i++) {\n      const entry = map[i];\n      ctx.save();\n      ctx.transform.apply(ctx, entry.transform);\n      ctx.scale(1, -1);\n      drawImageAtIntegerCoords(\n        ctx,\n        tmpCanvas.canvas,\n        entry.x,\n        entry.y,\n        entry.w,\n        entry.h,\n        0,\n        -1,\n        1,\n        1\n      );\n      if (this.imageLayer) {\n        const position = this.getCanvasPosition(entry.x, entry.y);\n        this.imageLayer.appendImage({\n          imgData,\n          left: position[0],\n          top: position[1],\n          width: w,\n          height: h,\n        });\n      }\n      ctx.restore();\n    }\n    this.compose();\n  }\n\n  paintSolidColorImageMask() {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.ctx.fillRect(0, 0, 1, 1);\n    this.compose();\n  }\n\n  // Marked content\n\n  markPoint(tag) {\n    // TODO Marked content.\n  }\n\n  markPointProps(tag, properties) {\n    // TODO Marked content.\n  }\n\n  beginMarkedContent(tag) {\n    this.markedContentStack.push({\n      visible: true,\n    });\n  }\n\n  beginMarkedContentProps(tag, properties) {\n    if (tag === \"OC\") {\n      this.markedContentStack.push({\n        visible: this.optionalContentConfig.isVisible(properties),\n      });\n    } else {\n      this.markedContentStack.push({\n        visible: true,\n      });\n    }\n    this.contentVisible = this.isContentVisible();\n  }\n\n  endMarkedContent() {\n    this.markedContentStack.pop();\n    this.contentVisible = this.isContentVisible();\n  }\n\n  // Compatibility\n\n  beginCompat() {\n    // TODO ignore undefined operators (should we do that anyway?)\n  }\n\n  endCompat() {\n    // TODO stop ignoring undefined operators\n  }\n\n  // Helper functions\n\n  consumePath(clipBox) {\n    const isEmpty = this.current.isEmptyClip();\n    if (this.pendingClip) {\n      this.current.updateClipFromPath();\n    }\n    if (!this.pendingClip) {\n      this.compose(clipBox);\n    }\n    const ctx = this.ctx;\n    if (this.pendingClip) {\n      if (!isEmpty) {\n        if (this.pendingClip === EO_CLIP) {\n          ctx.clip(\"evenodd\");\n        } else {\n          ctx.clip();\n        }\n      }\n      this.pendingClip = null;\n    }\n    this.current.startNewPathAndClipBox(this.current.clipBox);\n    ctx.beginPath();\n  }\n\n  getSinglePixelWidth() {\n    if (!this._cachedGetSinglePixelWidth) {\n      const m = this.ctx.mozCurrentTransform;\n      if (m[1] === 0 && m[2] === 0) {\n        // Fast path\n        this._cachedGetSinglePixelWidth =\n          1 / Math.min(Math.abs(m[0]), Math.abs(m[3]));\n      } else {\n        const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n        const normX = Math.hypot(m[0], m[2]);\n        const normY = Math.hypot(m[1], m[3]);\n        this._cachedGetSinglePixelWidth = Math.max(normX, normY) / absDet;\n      }\n    }\n    return this._cachedGetSinglePixelWidth;\n  }\n\n  getScaleForStroking() {\n    // A pixel has thicknessX = thicknessY = 1;\n    // A transformed pixel is a parallelogram and the thicknesses\n    // corresponds to the heights.\n    // The goal of this function is to rescale before setting the\n    // lineWidth in order to have both thicknesses greater or equal\n    // to 1 after transform.\n    if (!this._cachedScaleForStroking) {\n      const { lineWidth } = this.current;\n      const m = this.ctx.mozCurrentTransform;\n      let scaleX, scaleY;\n\n      if (m[1] === 0 && m[2] === 0) {\n        // Fast path\n        const normX = Math.abs(m[0]);\n        const normY = Math.abs(m[3]);\n        if (lineWidth === 0) {\n          scaleX = 1 / normX;\n          scaleY = 1 / normY;\n        } else {\n          const scaledXLineWidth = normX * lineWidth;\n          const scaledYLineWidth = normY * lineWidth;\n          scaleX = scaledXLineWidth < 1 ? 1 / scaledXLineWidth : 1;\n          scaleY = scaledYLineWidth < 1 ? 1 / scaledYLineWidth : 1;\n        }\n      } else {\n        // A pixel (base (x, y)) is transformed by M into a parallelogram:\n        //  - its area is |det(M)|;\n        //  - heightY (orthogonal to Mx) has a length: |det(M)| / norm(Mx);\n        //  - heightX (orthogonal to My) has a length: |det(M)| / norm(My).\n        // heightX and heightY are the thicknesses of the transformed pixel\n        // and they must be both greater or equal to 1.\n        const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n        const normX = Math.hypot(m[0], m[1]);\n        const normY = Math.hypot(m[2], m[3]);\n        if (lineWidth === 0) {\n          scaleX = normY / absDet;\n          scaleY = normX / absDet;\n        } else {\n          const baseArea = lineWidth * absDet;\n          scaleX = normY > baseArea ? normY / baseArea : 1;\n          scaleY = normX > baseArea ? normX / baseArea : 1;\n        }\n      }\n      this._cachedScaleForStroking = [scaleX, scaleY];\n    }\n    return this._cachedScaleForStroking;\n  }\n\n  // Rescale before stroking in order to have a final lineWidth\n  // with both thicknesses greater or equal to 1.\n  rescaleAndStroke(saveRestore) {\n    const { ctx } = this;\n    const { lineWidth } = this.current;\n    const [scaleX, scaleY] = this.getScaleForStroking();\n\n    ctx.lineWidth = lineWidth || 1;\n\n    if (scaleX === 1 && scaleY === 1) {\n      ctx.stroke();\n      return;\n    }\n\n    let savedMatrix, savedDashes, savedDashOffset;\n    if (saveRestore) {\n      savedMatrix = ctx.mozCurrentTransform.slice();\n      savedDashes = ctx.getLineDash().slice();\n      savedDashOffset = ctx.lineDashOffset;\n    }\n\n    ctx.scale(scaleX, scaleY);\n\n    // How the dashed line is rendered depends on the current transform...\n    // so we added a rescale to handle too thin lines and consequently\n    // the way the line is dashed will be modified.\n    // If scaleX === scaleY, the dashed lines will be rendered correctly\n    // else we'll have some bugs (but only with too thin lines).\n    // Here we take the max... why not taking the min... or something else.\n    // Anyway, as said it's buggy when scaleX !== scaleY.\n    const scale = Math.max(scaleX, scaleY);\n    ctx.setLineDash(ctx.getLineDash().map(x => x / scale));\n    ctx.lineDashOffset /= scale;\n\n    ctx.stroke();\n\n    if (saveRestore) {\n      ctx.setTransform(...savedMatrix);\n      ctx.setLineDash(savedDashes);\n      ctx.lineDashOffset = savedDashOffset;\n    }\n  }\n\n  getCanvasPosition(x, y) {\n    const transform = this.ctx.mozCurrentTransform;\n    return [\n      transform[0] * x + transform[2] * y + transform[4],\n      transform[1] * x + transform[3] * y + transform[5],\n    ];\n  }\n\n  isContentVisible() {\n    for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n      if (!this.markedContentStack[i].visible) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nfor (const op in OPS) {\n  if (CanvasGraphics.prototype[op] !== undefined) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n}\n\nexport { CanvasGraphics };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FormatError,\n  info,\n  shadow,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\n\nconst PathType = {\n  FILL: \"Fill\",\n  STROKE: \"Stroke\",\n  SHADING: \"Shading\",\n};\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox || isNodeJS) {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nclass BaseShadingPattern {\n  constructor() {\n    if (this.constructor === BaseShadingPattern) {\n      unreachable(\"Cannot initialize BaseShadingPattern.\");\n    }\n  }\n\n  getPattern() {\n    unreachable(\"Abstract method `getPattern` called.\");\n  }\n}\n\nclass RadialAxialShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._type = IR[1];\n    this._bbox = IR[2];\n    this._colorStops = IR[3];\n    this._p0 = IR[4];\n    this._p1 = IR[5];\n    this._r0 = IR[6];\n    this._r1 = IR[7];\n    this.matrix = null;\n  }\n\n  _createGradient(ctx) {\n    let grad;\n    if (this._type === \"axial\") {\n      grad = ctx.createLinearGradient(\n        this._p0[0],\n        this._p0[1],\n        this._p1[0],\n        this._p1[1]\n      );\n    } else if (this._type === \"radial\") {\n      grad = ctx.createRadialGradient(\n        this._p0[0],\n        this._p0[1],\n        this._r0,\n        this._p1[0],\n        this._p1[1],\n        this._r1\n      );\n    }\n\n    for (const colorStop of this._colorStops) {\n      grad.addColorStop(colorStop[0], colorStop[1]);\n    }\n    return grad;\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    let pattern;\n    if (pathType === PathType.STROKE || pathType === PathType.FILL) {\n      const ownerBBox = owner.current.getClippedPathBoundingBox(\n        pathType,\n        ctx.mozCurrentTransform\n      ) || [0, 0, 0, 0];\n      // Create a canvas that is only as big as the current path. This doesn't\n      // allow us to cache the pattern, but it generally creates much smaller\n      // canvases and saves memory use. See bug 1722807 for an example.\n      const width = Math.ceil(ownerBBox[2] - ownerBBox[0]) || 1;\n      const height = Math.ceil(ownerBBox[3] - ownerBBox[1]) || 1;\n\n      const tmpCanvas = owner.cachedCanvases.getCanvas(\n        \"pattern\",\n        width,\n        height,\n        true\n      );\n\n      const tmpCtx = tmpCanvas.context;\n      tmpCtx.clearRect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n      tmpCtx.beginPath();\n      tmpCtx.rect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n      // Non shading fill patterns are positioned relative to the base transform\n      // (usually the page's initial transform), but we may have created a\n      // smaller canvas based on the path, so we must account for the shift.\n      tmpCtx.translate(-ownerBBox[0], -ownerBBox[1]);\n      inverse = Util.transform(inverse, [\n        1,\n        0,\n        0,\n        1,\n        ownerBBox[0],\n        ownerBBox[1],\n      ]);\n\n      tmpCtx.transform.apply(tmpCtx, owner.baseTransform);\n      if (this.matrix) {\n        tmpCtx.transform.apply(tmpCtx, this.matrix);\n      }\n      applyBoundingBox(tmpCtx, this._bbox);\n\n      tmpCtx.fillStyle = this._createGradient(tmpCtx);\n      tmpCtx.fill();\n\n      pattern = ctx.createPattern(tmpCanvas.canvas, \"no-repeat\");\n      const domMatrix = new DOMMatrix(inverse);\n      try {\n        pattern.setTransform(domMatrix);\n      } catch (ex) {\n        // Avoid rendering breaking completely in Firefox 78 ESR,\n        // and in Node.js (see issue 13724).\n        warn(`RadialAxialShadingPattern.getPattern: \"${ex?.message}\".`);\n      }\n    } else {\n      // Shading fills are applied relative to the current matrix which is also\n      // how canvas gradients work, so there's no need to do anything special\n      // here.\n      applyBoundingBox(ctx, this._bbox);\n      pattern = this._createGradient(ctx);\n    }\n    return pattern;\n  }\n}\n\nfunction drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n  // Very basic Gouraud-shaded triangle rasterization algorithm.\n  const coords = context.coords,\n    colors = context.colors;\n  const bytes = data.data,\n    rowSize = data.width * 4;\n  let tmp;\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  if (coords[p2 + 1] > coords[p3 + 1]) {\n    tmp = p2;\n    p2 = p3;\n    p3 = tmp;\n    tmp = c2;\n    c2 = c3;\n    c3 = tmp;\n  }\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n  const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n  const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n  const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n  const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n  const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n  if (y1 >= y3) {\n    return;\n  }\n  const c1r = colors[c1],\n    c1g = colors[c1 + 1],\n    c1b = colors[c1 + 2];\n  const c2r = colors[c2],\n    c2g = colors[c2 + 1],\n    c2b = colors[c2 + 2];\n  const c3r = colors[c3],\n    c3g = colors[c3 + 1],\n    c3b = colors[c3 + 2];\n\n  const minY = Math.round(y1),\n    maxY = Math.round(y3);\n  let xa, car, cag, cab;\n  let xb, cbr, cbg, cbb;\n  for (let y = minY; y <= maxY; y++) {\n    if (y < y2) {\n      let k;\n      if (y < y1) {\n        k = 0;\n      } else {\n        k = (y1 - y) / (y1 - y2);\n      }\n      xa = x1 - (x1 - x2) * k;\n      car = c1r - (c1r - c2r) * k;\n      cag = c1g - (c1g - c2g) * k;\n      cab = c1b - (c1b - c2b) * k;\n    } else {\n      let k;\n      if (y > y3) {\n        k = 1;\n      } else if (y2 === y3) {\n        k = 0;\n      } else {\n        k = (y2 - y) / (y2 - y3);\n      }\n      xa = x2 - (x2 - x3) * k;\n      car = c2r - (c2r - c3r) * k;\n      cag = c2g - (c2g - c3g) * k;\n      cab = c2b - (c2b - c3b) * k;\n    }\n\n    let k;\n    if (y < y1) {\n      k = 0;\n    } else if (y > y3) {\n      k = 1;\n    } else {\n      k = (y1 - y) / (y1 - y3);\n    }\n    xb = x1 - (x1 - x3) * k;\n    cbr = c1r - (c1r - c3r) * k;\n    cbg = c1g - (c1g - c3g) * k;\n    cbb = c1b - (c1b - c3b) * k;\n    const x1_ = Math.round(Math.min(xa, xb));\n    const x2_ = Math.round(Math.max(xa, xb));\n    let j = rowSize * y + x1_ * 4;\n    for (let x = x1_; x <= x2_; x++) {\n      k = (xa - x) / (xa - xb);\n      if (k < 0) {\n        k = 0;\n      } else if (k > 1) {\n        k = 1;\n      }\n      bytes[j++] = (car - (car - cbr) * k) | 0;\n      bytes[j++] = (cag - (cag - cbg) * k) | 0;\n      bytes[j++] = (cab - (cab - cbb) * k) | 0;\n      bytes[j++] = 255;\n    }\n  }\n}\n\nfunction drawFigure(data, figure, context) {\n  const ps = figure.coords;\n  const cs = figure.colors;\n  let i, ii;\n  switch (figure.type) {\n    case \"lattice\":\n      const verticesPerRow = figure.verticesPerRow;\n      const rows = Math.floor(ps.length / verticesPerRow) - 1;\n      const cols = verticesPerRow - 1;\n      for (i = 0; i < rows; i++) {\n        let q = i * verticesPerRow;\n        for (let j = 0; j < cols; j++, q++) {\n          drawTriangle(\n            data,\n            context,\n            ps[q],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n          drawTriangle(\n            data,\n            context,\n            ps[q + verticesPerRow + 1],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q + verticesPerRow + 1],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n        }\n      }\n      break;\n    case \"triangles\":\n      for (i = 0, ii = ps.length; i < ii; i += 3) {\n        drawTriangle(\n          data,\n          context,\n          ps[i],\n          ps[i + 1],\n          ps[i + 2],\n          cs[i],\n          cs[i + 1],\n          cs[i + 2]\n        );\n      }\n      break;\n    default:\n      throw new Error(\"illegal figure\");\n  }\n}\n\nclass MeshShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._coords = IR[2];\n    this._colors = IR[3];\n    this._figures = IR[4];\n    this._bounds = IR[5];\n    this._bbox = IR[7];\n    this._background = IR[8];\n    this.matrix = null;\n  }\n\n  _createMeshCanvas(combinedScale, backgroundColor, cachedCanvases) {\n    // we will increase scale on some weird factor to let antialiasing take\n    // care of \"rough\" edges\n    const EXPECTED_SCALE = 1.1;\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    const MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n    // We need to keep transparent border around our pattern for fill():\n    // createPattern with 'no-repeat' will bleed edges across entire area.\n    const BORDER_SIZE = 2;\n\n    const offsetX = Math.floor(this._bounds[0]);\n    const offsetY = Math.floor(this._bounds[1]);\n    const boundsWidth = Math.ceil(this._bounds[2]) - offsetX;\n    const boundsHeight = Math.ceil(this._bounds[3]) - offsetY;\n\n    const width = Math.min(\n      Math.ceil(Math.abs(boundsWidth * combinedScale[0] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const height = Math.min(\n      Math.ceil(Math.abs(boundsHeight * combinedScale[1] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const scaleX = boundsWidth / width;\n    const scaleY = boundsHeight / height;\n\n    const context = {\n      coords: this._coords,\n      colors: this._colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY,\n    };\n\n    const paddedWidth = width + BORDER_SIZE * 2;\n    const paddedHeight = height + BORDER_SIZE * 2;\n\n    const tmpCanvas = cachedCanvases.getCanvas(\n      \"mesh\",\n      paddedWidth,\n      paddedHeight,\n      false\n    );\n    const tmpCtx = tmpCanvas.context;\n\n    const data = tmpCtx.createImageData(width, height);\n    if (backgroundColor) {\n      const bytes = data.data;\n      for (let i = 0, ii = bytes.length; i < ii; i += 4) {\n        bytes[i] = backgroundColor[0];\n        bytes[i + 1] = backgroundColor[1];\n        bytes[i + 2] = backgroundColor[2];\n        bytes[i + 3] = 255;\n      }\n    }\n    for (const figure of this._figures) {\n      drawFigure(data, figure, context);\n    }\n    tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n    const canvas = tmpCanvas.canvas;\n\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY,\n    };\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    applyBoundingBox(ctx, this._bbox);\n    let scale;\n    if (pathType === PathType.SHADING) {\n      scale = Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n    } else {\n      // Obtain scale from matrix and current transformation matrix.\n      scale = Util.singularValueDecompose2dScale(owner.baseTransform);\n      if (this.matrix) {\n        const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n        scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n      }\n    }\n\n    // Rasterizing on the main thread since sending/queue large canvases\n    // might cause OOM.\n    const temporaryPatternCanvas = this._createMeshCanvas(\n      scale,\n      pathType === PathType.SHADING ? null : this._background,\n      owner.cachedCanvases\n    );\n\n    if (pathType !== PathType.SHADING) {\n      ctx.setTransform.apply(ctx, owner.baseTransform);\n      if (this.matrix) {\n        ctx.transform.apply(ctx, this.matrix);\n      }\n    }\n\n    ctx.translate(\n      temporaryPatternCanvas.offsetX,\n      temporaryPatternCanvas.offsetY\n    );\n    ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n\n    return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n  }\n}\n\nclass DummyShadingPattern extends BaseShadingPattern {\n  getPattern() {\n    return \"hotpink\";\n  }\n}\n\nfunction getShadingPattern(IR) {\n  switch (IR[0]) {\n    case \"RadialAxial\":\n      return new RadialAxialShadingPattern(IR);\n    case \"Mesh\":\n      return new MeshShadingPattern(IR);\n    case \"Dummy\":\n      return new DummyShadingPattern();\n  }\n  throw new Error(`Unknown IR type: ${IR[0]}`);\n}\n\nconst PaintType = {\n  COLORED: 1,\n  UNCOLORED: 2,\n};\n\nclass TilingPattern {\n  // 10in @ 300dpi shall be enough.\n  static get MAX_PATTERN_SIZE() {\n    return shadow(this, \"MAX_PATTERN_SIZE\", 3000);\n  }\n\n  constructor(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.ctx = ctx;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n  }\n\n  createPatternCanvas(owner) {\n    const operatorList = this.operatorList;\n    const bbox = this.bbox;\n    const xstep = this.xstep;\n    const ystep = this.ystep;\n    const paintType = this.paintType;\n    const tilingType = this.tilingType;\n    const color = this.color;\n    const canvasGraphicsFactory = this.canvasGraphicsFactory;\n\n    info(\"TilingType: \" + tilingType);\n\n    // A tiling pattern as defined by PDF spec 8.7.2 is a cell whose size is\n    // described by bbox, and may repeat regularly by shifting the cell by\n    // xstep and ystep.\n    // Because the HTML5 canvas API does not support pattern repetition with\n    // gaps in between, we use the xstep/ystep instead of the bbox's size.\n    //\n    // This has the following consequences (similarly for ystep):\n    //\n    // - If xstep is the same as bbox, then there is no observable difference.\n    //\n    // - If xstep is larger than bbox, then the pattern canvas is partially\n    //   empty: the area bounded by bbox is painted, the outside area is void.\n    //\n    // - If xstep is smaller than bbox, then the pixels between xstep and the\n    //   bbox boundary will be missing. This is INCORRECT behavior.\n    //   \"Figures on adjacent tiles should not overlap\" (PDF spec 8.7.3.1),\n    //   but overlapping cells without common pixels are still valid.\n    //   TODO: Fix the implementation, to allow this scenario to be painted\n    //   correctly.\n\n    const x0 = bbox[0],\n      y0 = bbox[1],\n      x1 = bbox[2],\n      y1 = bbox[3];\n\n    // Obtain scale from matrix and current transformation matrix.\n    const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n    const curMatrixScale = Util.singularValueDecompose2dScale(\n      this.baseTransform\n    );\n    const combinedScale = [\n      matrixScale[0] * curMatrixScale[0],\n      matrixScale[1] * curMatrixScale[1],\n    ];\n\n    // Use width and height values that are as close as possible to the end\n    // result when the pattern is used. Too low value makes the pattern look\n    // blurry. Too large value makes it look too crispy.\n    const dimx = this.getSizeAndScale(\n      xstep,\n      this.ctx.canvas.width,\n      combinedScale[0]\n    );\n    const dimy = this.getSizeAndScale(\n      ystep,\n      this.ctx.canvas.height,\n      combinedScale[1]\n    );\n\n    const tmpCanvas = owner.cachedCanvases.getCanvas(\n      \"pattern\",\n      dimx.size,\n      dimy.size,\n      true\n    );\n    const tmpCtx = tmpCanvas.context;\n    const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n    graphics.groupLevel = owner.groupLevel;\n\n    this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n\n    let adjustedX0 = x0;\n    let adjustedY0 = y0;\n    let adjustedX1 = x1;\n    let adjustedY1 = y1;\n    // Some bounding boxes have negative x0/y0 coordinates which will cause the\n    // some of the drawing to be off of the canvas. To avoid this shift the\n    // bounding box over.\n    if (x0 < 0) {\n      adjustedX0 = 0;\n      adjustedX1 += Math.abs(x0);\n    }\n    if (y0 < 0) {\n      adjustedY0 = 0;\n      adjustedY1 += Math.abs(y0);\n    }\n    tmpCtx.translate(-(dimx.scale * adjustedX0), -(dimy.scale * adjustedY0));\n    graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n\n    // To match CanvasGraphics beginDrawing we must save the context here or\n    // else we end up with unbalanced save/restores.\n    tmpCtx.save();\n\n    this.clipBbox(graphics, adjustedX0, adjustedY0, adjustedX1, adjustedY1);\n\n    graphics.baseTransform = graphics.ctx.mozCurrentTransform.slice();\n\n    graphics.executeOperatorList(operatorList);\n\n    graphics.endDrawing();\n\n    return {\n      canvas: tmpCanvas.canvas,\n      scaleX: dimx.scale,\n      scaleY: dimy.scale,\n      offsetX: adjustedX0,\n      offsetY: adjustedY0,\n    };\n  }\n\n  getSizeAndScale(step, realOutputSize, scale) {\n    // xstep / ystep may be negative -- normalize.\n    step = Math.abs(step);\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    // Use the destination canvas's size if it is bigger than the hard-coded\n    // limit of MAX_PATTERN_SIZE to avoid clipping patterns that cover the\n    // whole canvas.\n    const maxSize = Math.max(TilingPattern.MAX_PATTERN_SIZE, realOutputSize);\n    let size = Math.ceil(step * scale);\n    if (size >= maxSize) {\n      size = maxSize;\n    } else {\n      scale = size / step;\n    }\n    return { scale, size };\n  }\n\n  clipBbox(graphics, x0, y0, x1, y1) {\n    const bboxWidth = x1 - x0;\n    const bboxHeight = y1 - y0;\n    graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n    graphics.current.updateRectMinMax(graphics.ctx.mozCurrentTransform, [\n      x0,\n      y0,\n      x1,\n      y1,\n    ]);\n    graphics.clip();\n    graphics.endPath();\n  }\n\n  setFillAndStrokeStyleToContext(graphics, paintType, color) {\n    const context = graphics.ctx,\n      current = graphics.current;\n    switch (paintType) {\n      case PaintType.COLORED:\n        const ctx = this.ctx;\n        context.fillStyle = ctx.fillStyle;\n        context.strokeStyle = ctx.strokeStyle;\n        current.fillColor = ctx.fillStyle;\n        current.strokeColor = ctx.strokeStyle;\n        break;\n      case PaintType.UNCOLORED:\n        const cssColor = Util.makeHexColor(color[0], color[1], color[2]);\n        context.fillStyle = cssColor;\n        context.strokeStyle = cssColor;\n        // Set color needed by image masks (fixes issues 3226 and 8741).\n        current.fillColor = cssColor;\n        current.strokeColor = cssColor;\n        break;\n      default:\n        throw new FormatError(`Unsupported paint type: ${paintType}`);\n    }\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    // PDF spec 8.7.2 NOTE 1: pattern's matrix is relative to initial matrix.\n    let matrix = inverse;\n    if (pathType !== PathType.SHADING) {\n      matrix = Util.transform(matrix, owner.baseTransform);\n      if (this.matrix) {\n        matrix = Util.transform(matrix, this.matrix);\n      }\n    }\n\n    const temporaryPatternCanvas = this.createPatternCanvas(owner);\n\n    let domMatrix = new DOMMatrix(matrix);\n    // Rescale and so that the ctx.createPattern call generates a pattern with\n    // the desired size.\n    domMatrix = domMatrix.translate(\n      temporaryPatternCanvas.offsetX,\n      temporaryPatternCanvas.offsetY\n    );\n    domMatrix = domMatrix.scale(\n      1 / temporaryPatternCanvas.scaleX,\n      1 / temporaryPatternCanvas.scaleY\n    );\n\n    const pattern = ctx.createPattern(temporaryPatternCanvas.canvas, \"repeat\");\n    try {\n      pattern.setTransform(domMatrix);\n    } catch (ex) {\n      // Avoid rendering breaking completely in Firefox 78 ESR,\n      // and in Node.js (see issue 13724).\n      warn(`TilingPattern.getPattern: \"${ex?.message}\".`);\n    }\n    return pattern;\n  }\n}\n\nexport { getShadingPattern, PathType, TilingPattern };\n","/* Copyright 2022 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FeatureTest } from \"./util.js\";\n\nfunction applyMaskImageData({\n  src,\n  srcPos = 0,\n  dest,\n  destPos = 0,\n  width,\n  height,\n  inverseDecode = false,\n}) {\n  const opaque = FeatureTest.isLittleEndian ? 0xff000000 : 0x000000ff;\n  const [zeroMapping, oneMapping] = !inverseDecode ? [opaque, 0] : [0, opaque];\n  const widthInSource = width >> 3;\n  const widthRemainder = width & 7;\n  const srcLength = src.length;\n  dest = new Uint32Array(dest.buffer);\n\n  for (let i = 0; i < height; i++) {\n    for (const max = srcPos + widthInSource; srcPos < max; srcPos++) {\n      const elem = srcPos < srcLength ? src[srcPos] : 255;\n      dest[destPos++] = elem & 0b10000000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b1000000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b100000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b10000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b1000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b100 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b10 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b1 ? oneMapping : zeroMapping;\n    }\n    if (widthRemainder === 0) {\n      continue;\n    }\n    const elem = srcPos < srcLength ? src[srcPos++] : 255;\n    for (let j = 0; j < widthRemainder; j++) {\n      dest[destPos++] = elem & (1 << (7 - j)) ? oneMapping : zeroMapping;\n    }\n  }\n\n  return { srcPos, destPos };\n}\n\nexport { applyMaskImageData };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {Object} GlobalWorkerOptionsType\n * @property {Worker | null} workerPort - Defines global port for worker\n *   process. Overrides the `workerSrc` option.\n * @property {string} workerSrc - A string containing the path and filename\n *   of the worker file.\n *\n *   NOTE: The `workerSrc` option should always be set, in order to prevent any\n *         issues when using the PDF.js library.\n */\n\n/** @type {GlobalWorkerOptionsType} */\nconst GlobalWorkerOptions = Object.create(null);\n\nGlobalWorkerOptions.workerPort =\n  GlobalWorkerOptions.workerPort === undefined\n    ? null\n    : GlobalWorkerOptions.workerPort;\n\nGlobalWorkerOptions.workerSrc =\n  GlobalWorkerOptions.workerSrc === undefined\n    ? \"\"\n    : GlobalWorkerOptions.workerSrc;\n\nexport { GlobalWorkerOptions };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n  PasswordException,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n} from \"./util.js\";\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2,\n};\n\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8,\n};\n\nfunction wrapReason(reason) {\n  if (\n    !(\n      reason instanceof Error ||\n      (typeof reason === \"object\" && reason !== null)\n    )\n  ) {\n    unreachable(\n      'wrapReason: Expected \"reason\" to be a (possibly cloned) Error.'\n    );\n  }\n  switch (reason.name) {\n    case \"AbortException\":\n      return new AbortException(reason.message);\n    case \"MissingPDFException\":\n      return new MissingPDFException(reason.message);\n    case \"PasswordException\":\n      return new PasswordException(reason.message, reason.code);\n    case \"UnexpectedResponseException\":\n      return new UnexpectedResponseException(reason.message, reason.status);\n    case \"UnknownErrorException\":\n      return new UnknownErrorException(reason.message, reason.details);\n    default:\n      return new UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n      if (data.stream) {\n        this._processStreamMessage(data);\n        return;\n      }\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n        return;\n      }\n      const action = this.actionHandler[data.action];\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n      if (data.callbackId) {\n        const cbSourceName = this.sourceName;\n        const cbTargetName = data.sourceName;\n\n        new Promise(function (resolve) {\n          resolve(action(data.data));\n        }).then(\n          function (result) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        return;\n      }\n      if (data.streamId) {\n        this._createStreamSink(data);\n        return;\n      }\n      action(data.data);\n    };\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        typeof handler === \"function\",\n        'MessageHandler.on: Expected \"handler\" to be a function.'\n      );\n    }\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   */\n  send(actionName, data, transfers) {\n    this.comObj.postMessage(\n      {\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data,\n      },\n      transfers\n    );\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expects that the other side will callback with the response.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {Promise} Promise to be resolved with response data.\n   */\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = createPromiseCapability();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this.comObj.postMessage(\n        {\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data,\n        },\n        transfers\n      );\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expect that the other side will callback to signal 'start_complete'.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Object} queueingStrategy - Strategy to signal backpressure based on\n   *                 internal queue.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {ReadableStream} ReadableStream to read data in chunks.\n   */\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++,\n      sourceName = this.sourceName,\n      targetName = this.targetName,\n      comObj = this.comObj;\n\n    return new ReadableStream(\n      {\n        start: controller => {\n          const startCapability = createPromiseCapability();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false,\n          };\n          comObj.postMessage(\n            {\n              sourceName,\n              targetName,\n              action: actionName,\n              streamId,\n              data,\n              desiredSize: controller.desiredSize,\n            },\n            transfers\n          );\n          // Return Promise for Async process, to signal success/failure.\n          return startCapability.promise;\n        },\n\n        pull: controller => {\n          const pullCapability = createPromiseCapability();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize,\n          });\n          // Returning Promise will not call \"pull\"\n          // again until current pull is resolved.\n          return pullCapability.promise;\n        },\n\n        cancel: reason => {\n          assert(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = createPromiseCapability();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason),\n          });\n          // Return Promise to signal success or failure.\n          return cancelCapability.promise;\n        },\n      },\n      queueingStrategy\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createStreamSink(data) {\n    const streamId = data.streamId,\n      sourceName = this.sourceName,\n      targetName = data.sourceName,\n      comObj = this.comObj;\n    const self = this,\n      action = this.actionHandler[data.action];\n\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        // Enqueue decreases the desiredSize property of sink,\n        // so when it changes from positive to negative,\n        // set ready as unresolved promise.\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        comObj.postMessage(\n          {\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk,\n          },\n          transfers\n        );\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId,\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        assert(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      },\n\n      sinkCapability: createPromiseCapability(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null,\n    };\n\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n\n    new Promise(function (resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(\n      function () {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true,\n        });\n      },\n      function (reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      }\n    );\n  }\n\n  /**\n   * @private\n   */\n  _processStreamMessage(data) {\n    const streamId = data.streamId,\n      sourceName = this.sourceName,\n      targetName = data.sourceName,\n      comObj = this.comObj;\n    const streamController = this.streamControllers[streamId],\n      streamSink = this.streamSinks[streamId];\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          streamController.startCall.resolve();\n        } else {\n          streamController.startCall.reject(wrapReason(data.reason));\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          streamController.pullCall.resolve();\n        } else {\n          streamController.pullCall.reject(wrapReason(data.reason));\n        }\n        break;\n      case StreamKind.PULL:\n        // Ignore any pull after close is called.\n        if (!streamSink) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true,\n          });\n          break;\n        }\n        // Pull increases the desiredSize property of sink, so when it changes\n        // from negative to positive, set ready property as resolved promise.\n        if (streamSink.desiredSize <= 0 && data.desiredSize > 0) {\n          streamSink.sinkCapability.resolve();\n        }\n        // Reset desiredSize property of sink on every pull.\n        streamSink.desiredSize = data.desiredSize;\n\n        new Promise(function (resolve) {\n          resolve(streamSink.onPull && streamSink.onPull());\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        break;\n      case StreamKind.ENQUEUE:\n        assert(streamController, \"enqueue should have stream controller\");\n        if (streamController.isClosed) {\n          break;\n        }\n        streamController.controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        assert(streamController, \"close should have stream controller\");\n        if (streamController.isClosed) {\n          break;\n        }\n        streamController.isClosed = true;\n        streamController.controller.close();\n        this._deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.ERROR:\n        assert(streamController, \"error should have stream controller\");\n        streamController.controller.error(wrapReason(data.reason));\n        this._deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          streamController.cancelCall.resolve();\n        } else {\n          streamController.cancelCall.reject(wrapReason(data.reason));\n        }\n        this._deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!streamSink) {\n          break;\n        }\n\n        new Promise(function (resolve) {\n          resolve(\n            streamSink.onCancel && streamSink.onCancel(wrapReason(data.reason))\n          );\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        streamSink.sinkCapability.reject(wrapReason(data.reason));\n        streamSink.isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _deleteStreamController(streamController, streamId) {\n    // Delete the `streamController` only when the start, pull, and cancel\n    // capabilities have settled, to prevent `TypeError`s.\n    await Promise.allSettled([\n      streamController.startCall && streamController.startCall.promise,\n      streamController.pullCall && streamController.pullCall.promise,\n      streamController.cancelCall && streamController.cancelCall.promise,\n    ]);\n    delete this.streamControllers[streamId];\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n}\n\nexport { MessageHandler };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap } from \"../shared/util.js\";\n\nclass Metadata {\n  #metadataMap;\n\n  #data;\n\n  constructor({ parsedData, rawData }) {\n    this.#metadataMap = parsedData;\n    this.#data = rawData;\n  }\n\n  getRaw() {\n    return this.#data;\n  }\n\n  get(name) {\n    return this.#metadataMap.get(name) ?? null;\n  }\n\n  getAll() {\n    return objectFromMap(this.#metadataMap);\n  }\n\n  has(name) {\n    return this.#metadataMap.has(name);\n  }\n}\n\nexport { Metadata };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { objectFromMap, warn } from \"../shared/util.js\";\n\nclass OptionalContentGroup {\n  constructor(name, intent) {\n    this.visible = true;\n    this.name = name;\n    this.intent = intent;\n  }\n}\n\nclass OptionalContentConfig {\n  constructor(data) {\n    this.name = null;\n    this.creator = null;\n    this._order = null;\n    this._groups = new Map();\n\n    if (data === null) {\n      return;\n    }\n    this.name = data.name;\n    this.creator = data.creator;\n    this._order = data.order;\n    for (const group of data.groups) {\n      this._groups.set(\n        group.id,\n        new OptionalContentGroup(group.name, group.intent)\n      );\n    }\n\n    if (data.baseState === \"OFF\") {\n      for (const group of this._groups) {\n        group.visible = false;\n      }\n    }\n\n    for (const on of data.on) {\n      this._groups.get(on).visible = true;\n    }\n\n    for (const off of data.off) {\n      this._groups.get(off).visible = false;\n    }\n  }\n\n  _evaluateVisibilityExpression(array) {\n    const length = array.length;\n    if (length < 2) {\n      return true;\n    }\n    const operator = array[0];\n    for (let i = 1; i < length; i++) {\n      const element = array[i];\n      let state;\n      if (Array.isArray(element)) {\n        state = this._evaluateVisibilityExpression(element);\n      } else if (this._groups.has(element)) {\n        state = this._groups.get(element).visible;\n      } else {\n        warn(`Optional content group not found: ${element}`);\n        return true;\n      }\n      switch (operator) {\n        case \"And\":\n          if (!state) {\n            return false;\n          }\n          break;\n        case \"Or\":\n          if (state) {\n            return true;\n          }\n          break;\n        case \"Not\":\n          return !state;\n        default:\n          return true;\n      }\n    }\n    return operator === \"And\";\n  }\n\n  isVisible(group) {\n    if (this._groups.size === 0) {\n      return true;\n    }\n    if (!group) {\n      warn(\"Optional content group not defined.\");\n      return true;\n    }\n    if (group.type === \"OCG\") {\n      if (!this._groups.has(group.id)) {\n        warn(`Optional content group not found: ${group.id}`);\n        return true;\n      }\n      return this._groups.get(group.id).visible;\n    } else if (group.type === \"OCMD\") {\n      // Per the spec, the expression should be preferred if available.\n      if (group.expression) {\n        return this._evaluateVisibilityExpression(group.expression);\n      }\n      if (!group.policy || group.policy === \"AnyOn\") {\n        // Default\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOn\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      } else if (group.policy === \"AnyOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      }\n      warn(`Unknown optional content policy ${group.policy}.`);\n      return true;\n    }\n    warn(`Unknown group type ${group.type}.`);\n    return true;\n  }\n\n  setVisibility(id, visible = true) {\n    if (!this._groups.has(id)) {\n      warn(`Optional content group not found: ${id}`);\n      return;\n    }\n    this._groups.get(id).visible = !!visible;\n  }\n\n  getOrder() {\n    if (!this._groups.size) {\n      return null;\n    }\n    if (this._order) {\n      return this._order.slice();\n    }\n    return Array.from(this._groups.keys());\n  }\n\n  getGroups() {\n    return this._groups.size > 0 ? objectFromMap(this._groups) : null;\n  }\n\n  getGroup(id) {\n    return this._groups.get(id) || null;\n  }\n}\n\nexport { OptionalContentConfig };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, createPromiseCapability } from \"../shared/util.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\n/** @implements {IPDFStream} */\nclass PDFDataTransportStream {\n  constructor(params, pdfDataRangeTransport) {\n    assert(\n      pdfDataRangeTransport,\n      'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.'\n    );\n\n    this._queuedChunks = [];\n    this._progressiveDone = params.progressiveDone || false;\n    this._contentDispositionFilename =\n      params.contentDispositionFilename || null;\n\n    const initialData = params.initialData;\n    if (initialData?.length > 0) {\n      const buffer = new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !params.disableStream;\n    this._isRangeSupported = !params.disableRange;\n    this._contentLength = params.length;\n\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({ begin, chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({ loaded, total });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({ chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData(args) {\n    const buffer = new Uint8Array(args.chunk).buffer;\n    if (args.begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== args.begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      assert(\n        found,\n        \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\"\n      );\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      // Reporting to first range reader, if it exists.\n      const firstReader = this._rangeReaders[0];\n      if (firstReader?.onProgress) {\n        firstReader.onProgress({ loaded: evt.loaded });\n      }\n    } else {\n      const fullReader = this._fullRequestReader;\n      if (fullReader?.onProgress) {\n        fullReader.onProgress({ loaded: evt.loaded, total: evt.total });\n      }\n    }\n  }\n\n  _onProgressiveDone() {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.progressiveDone();\n    }\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFDataTransportStream.getFullReader can only be called once.\"\n    );\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(\n      this,\n      queuedChunks,\n      this._progressiveDone,\n      this._contentDispositionFilename\n    );\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n    this._pdfDataRangeTransport.abort();\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFDataTransportStreamReader {\n  constructor(\n    stream,\n    queuedChunks,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = isPdfFile(contentDispositionFilename)\n      ? contentDispositionFilename\n      : null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // Ignore new data.\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // ignore new data\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({ value: chunk, done: false });\n      for (const requestCapability of this._requests) {\n        requestCapability.resolve({ value: undefined, done: true });\n      }\n      this._requests.length = 0;\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._stream._removeRangeReader(this);\n  }\n}\n\nexport { PDFDataTransportStream };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass XfaText {\n  /**\n   * Walk an XFA tree and create an array of text nodes that is compatible\n   * with a regular PDFs TextContent. Currently, only TextItem.str is supported,\n   * all other fields and styles haven't been implemented.\n   *\n   * @param {Object} xfa - An XFA fake DOM object.\n   *\n   * @returns {TextContent}\n   */\n  static textContent(xfa) {\n    const items = [];\n    const output = {\n      items,\n      styles: Object.create(null),\n    };\n    function walk(node) {\n      if (!node) {\n        return;\n      }\n      let str = null;\n      const name = node.name;\n      if (name === \"#text\") {\n        str = node.value;\n      } else if (!XfaText.shouldBuildText(name)) {\n        return;\n      } else if (node?.attributes?.textContent) {\n        str = node.attributes.textContent;\n      } else if (node.value) {\n        str = node.value;\n      }\n      if (str !== null) {\n        items.push({\n          str,\n        });\n      }\n      if (!node.children) {\n        return;\n      }\n      for (const child of node.children) {\n        walk(child);\n      }\n    }\n    walk(xfa);\n    return output;\n  }\n\n  /**\n   * @param {string} name - DOM node name. (lower case)\n   *\n   * @returns {boolean} true if the DOM node should have a corresponding text\n   * node.\n   */\n  static shouldBuildText(name) {\n    return !(\n      name === \"textarea\" ||\n      name === \"input\" ||\n      name === \"option\" ||\n      name === \"select\"\n    );\n  }\n}\n\nexport { XfaText };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n} from \"./base_factory.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./node_utils.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst fetchData = function (url) {\n  return new Promise((resolve, reject) => {\n    const fs = __non_webpack_require__(\"fs\");\n    fs.readFile(url, (error, data) => {\n      if (error || !data) {\n        reject(new Error(error));\n        return;\n      }\n      resolve(new Uint8Array(data));\n    });\n  });\n};\n\nclass NodeCanvasFactory extends BaseCanvasFactory {\n  /**\n   * @ignore\n   */\n  _createCanvas(width, height) {\n    const Canvas = __non_webpack_require__(\"canvas\");\n    return Canvas.createCanvas(width, height);\n  }\n}\n\nclass NodeCMapReaderFactory extends BaseCMapReaderFactory {\n  /**\n   * @ignore\n   */\n  _fetchData(url, compressionType) {\n    return fetchData(url).then(data => {\n      return { cMapData: data, compressionType };\n    });\n  }\n}\n\nclass NodeStandardFontDataFactory extends BaseStandardFontDataFactory {\n  /**\n   * @ignore\n   */\n  _fetchData(url) {\n    return fetchData(url);\n  }\n}\n\nexport {\n  NodeCanvasFactory,\n  NodeCMapReaderFactory,\n  NodeStandardFontDataFactory,\n};\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./api\").PDFPageProxy} PDFPageProxy */\n/** @typedef {import(\"./display_utils\").PageViewport} PageViewport */\n/** @typedef {import(\"./interfaces\").IDownloadManager} IDownloadManager */\n/** @typedef {import(\"../../web/interfaces\").IPDFLinkService} IPDFLinkService */\n\nimport {\n  AnnotationBorderStyleType,\n  AnnotationType,\n  assert,\n  shadow,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  PDFDateString,\n} from \"./display_utils.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { ColorConverters } from \"../shared/scripting_utils.js\";\nimport { XfaLayer } from \"./xfa_layer.js\";\n\nconst DEFAULT_TAB_INDEX = 1000;\nconst GetElementsByNameSet = new WeakSet();\n\nfunction getRectDims(rect) {\n  return {\n    width: rect[2] - rect[0],\n    height: rect[3] - rect[1],\n  };\n}\n\n/**\n * @typedef {Object} AnnotationElementParameters\n * @property {Object} data\n * @property {HTMLDivElement} layer\n * @property {PDFPageProxy} page\n * @property {PageViewport} viewport\n * @property {IPDFLinkService} linkService\n * @property {IDownloadManager} downloadManager\n * @property {AnnotationStorage} [annotationStorage]\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderForms\n * @property {Object} svgFactory\n * @property {boolean} [enableScripting]\n * @property {boolean} [hasJSActions]\n * @property {Object} [fieldObjects]\n * @property {Object} [mouseState]\n */\n\nclass AnnotationElementFactory {\n  /**\n   * @param {AnnotationElementParameters} parameters\n   * @returns {AnnotationElement}\n   */\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n\n      case AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\n\nclass AnnotationElement {\n  constructor(\n    parameters,\n    {\n      isRenderable = false,\n      ignoreBorder = false,\n      createQuadrilaterals = false,\n    } = {}\n  ) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.page = parameters.page;\n    this.viewport = parameters.viewport;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderForms = parameters.renderForms;\n    this.svgFactory = parameters.svgFactory;\n    this.annotationStorage = parameters.annotationStorage;\n    this.enableScripting = parameters.enableScripting;\n    this.hasJSActions = parameters.hasJSActions;\n    this._fieldObjects = parameters.fieldObjects;\n    this._mouseState = parameters.mouseState;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n    if (createQuadrilaterals) {\n      this.quadrilaterals = this._createQuadrilaterals(ignoreBorder);\n    }\n  }\n\n  /**\n   * Create an empty container for the annotation's HTML element.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  _createContainer(ignoreBorder = false) {\n    const data = this.data,\n      page = this.page,\n      viewport = this.viewport;\n    const container = document.createElement(\"section\");\n    let { width, height } = getRectDims(data.rect);\n\n    container.setAttribute(\"data-annotation-id\", data.id);\n\n    // Do *not* modify `data.rect`, since that will corrupt the annotation\n    // position on subsequent calls to `_createContainer` (see issue 6804).\n    const rect = Util.normalizeRect([\n      data.rect[0],\n      page.view[3] - data.rect[1] + page.view[1],\n      data.rect[2],\n      page.view[3] - data.rect[3] + page.view[1],\n    ]);\n\n    if (data.hasOwnCanvas) {\n      const transform = viewport.transform.slice();\n      const [scaleX, scaleY] = Util.singularValueDecompose2dScale(transform);\n      width = Math.ceil(width * scaleX);\n      height = Math.ceil(height * scaleY);\n      rect[0] *= scaleX;\n      rect[1] *= scaleY;\n      // Reset the scale part of the transform matrix (which must be diagonal\n      // or anti-diagonal) in order to avoid to rescale the canvas.\n      // The canvas for the annotation is correctly scaled when it is drawn\n      // (see `beginAnnotation` in canvas.js).\n      for (let i = 0; i < 4; i++) {\n        transform[i] = Math.sign(transform[i]);\n      }\n      container.style.transform = `matrix(${transform.join(\",\")})`;\n    } else {\n      container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n    }\n\n    container.style.transformOrigin = `${-rect[0]}px ${-rect[1]}px`;\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n      if (data.borderStyle.style !== AnnotationBorderStyleType.UNDERLINE) {\n        // Underline styles only have a bottom border, so we do not need\n        // to adjust for all borders. This yields a similar result as\n        // Adobe Acrobat/Reader.\n        width -= 2 * data.borderStyle.width;\n        height -= 2 * data.borderStyle.width;\n      }\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case AnnotationBorderStyleType.BEVELED:\n          warn(\"Unimplemented border style: beveled\");\n          break;\n\n        case AnnotationBorderStyleType.INSET:\n          warn(\"Unimplemented border style: inset\");\n          break;\n\n        case AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      const borderColor = data.borderColor || data.color || null;\n      if (borderColor) {\n        container.style.borderColor = Util.makeHexColor(\n          data.color[0] | 0,\n          data.color[1] | 0,\n          data.color[2] | 0\n        );\n      } else {\n        // Transparent (invisible) border, so do not draw it at all.\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${rect[0]}px`;\n    container.style.top = `${rect[1]}px`;\n\n    if (data.hasOwnCanvas) {\n      container.style.width = container.style.height = \"auto\";\n    } else {\n      container.style.width = `${width}px`;\n      container.style.height = `${height}px`;\n    }\n    return container;\n  }\n\n  get _commonActions() {\n    const setColor = (jsName, styleName, event) => {\n      const color = event.detail[jsName];\n      event.target.style[styleName] = ColorConverters[`${color[0]}_HTML`](\n        color.slice(1)\n      );\n    };\n\n    return shadow(this, \"_commonActions\", {\n      display: event => {\n        const hidden = event.detail.display % 2 === 1;\n        event.target.style.visibility = hidden ? \"hidden\" : \"visible\";\n        this.annotationStorage.setValue(this.data.id, {\n          hidden,\n          print: event.detail.display === 0 || event.detail.display === 3,\n        });\n      },\n      print: event => {\n        this.annotationStorage.setValue(this.data.id, {\n          print: event.detail.print,\n        });\n      },\n      hidden: event => {\n        event.target.style.visibility = event.detail.hidden\n          ? \"hidden\"\n          : \"visible\";\n        this.annotationStorage.setValue(this.data.id, {\n          hidden: event.detail.hidden,\n        });\n      },\n      focus: event => {\n        setTimeout(() => event.target.focus({ preventScroll: false }), 0);\n      },\n      userName: event => {\n        // tooltip\n        event.target.title = event.detail.userName;\n      },\n      readonly: event => {\n        if (event.detail.readonly) {\n          event.target.setAttribute(\"readonly\", \"\");\n        } else {\n          event.target.removeAttribute(\"readonly\");\n        }\n      },\n      required: event => {\n        if (event.detail.required) {\n          event.target.setAttribute(\"required\", \"\");\n        } else {\n          event.target.removeAttribute(\"required\");\n        }\n      },\n      bgColor: event => {\n        setColor(\"bgColor\", \"backgroundColor\", event);\n      },\n      fillColor: event => {\n        setColor(\"fillColor\", \"backgroundColor\", event);\n      },\n      fgColor: event => {\n        setColor(\"fgColor\", \"color\", event);\n      },\n      textColor: event => {\n        setColor(\"textColor\", \"color\", event);\n      },\n      borderColor: event => {\n        setColor(\"borderColor\", \"borderColor\", event);\n      },\n      strokeColor: event => {\n        setColor(\"strokeColor\", \"borderColor\", event);\n      },\n    });\n  }\n\n  _dispatchEventFromSandbox(actions, jsEvent) {\n    const commonActions = this._commonActions;\n    for (const name of Object.keys(jsEvent.detail)) {\n      const action = actions[name] || commonActions[name];\n      if (action) {\n        action(jsEvent);\n      }\n    }\n  }\n\n  _setDefaultPropertiesFromJS(element) {\n    if (!this.enableScripting) {\n      return;\n    }\n\n    // Some properties may have been updated thanks to JS.\n    const storedData = this.annotationStorage.getRawValue(this.data.id);\n    if (!storedData) {\n      return;\n    }\n\n    const commonActions = this._commonActions;\n    for (const [actionName, detail] of Object.entries(storedData)) {\n      const action = commonActions[actionName];\n      if (action) {\n        action({ detail, target: element });\n        // The action has been consumed: no need to keep it.\n        delete storedData[actionName];\n      }\n    }\n  }\n\n  /**\n   * Create quadrilaterals from the annotation's quadpoints.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _createQuadrilaterals(ignoreBorder = false) {\n    if (!this.data.quadPoints) {\n      return null;\n    }\n\n    const quadrilaterals = [];\n    const savedRect = this.data.rect;\n    for (const quadPoint of this.data.quadPoints) {\n      this.data.rect = [\n        quadPoint[2].x,\n        quadPoint[2].y,\n        quadPoint[1].x,\n        quadPoint[1].y,\n      ];\n      quadrilaterals.push(this._createContainer(ignoreBorder));\n    }\n    this.data.rect = savedRect;\n    return quadrilaterals;\n  }\n\n  /**\n   * Create a popup for the annotation's HTML element. This is used for\n   * annotations that do not have a Popup entry in the dictionary, but\n   * are of a type that works with popups (such as Highlight annotations).\n   *\n   * @private\n   * @param {HTMLDivElement|HTMLImageElement|null} trigger\n   * @param {Object} data\n   * @memberof AnnotationElement\n   */\n  _createPopup(trigger, data) {\n    let container = this.container;\n    if (this.quadrilaterals) {\n      trigger = trigger || this.quadrilaterals;\n      container = this.quadrilaterals[0];\n    }\n\n    // If no trigger element is specified, create it.\n    if (!trigger) {\n      trigger = document.createElement(\"div\");\n      trigger.style.height = container.style.height;\n      trigger.style.width = container.style.width;\n      container.appendChild(trigger);\n    }\n\n    const popupElement = new PopupElement({\n      container,\n      trigger,\n      color: data.color,\n      titleObj: data.titleObj,\n      modificationDate: data.modificationDate,\n      contentsObj: data.contentsObj,\n      richText: data.richText,\n      hideWrapper: true,\n    });\n    const popup = popupElement.render();\n\n    // Position the popup next to the annotation's container.\n    popup.style.left = container.style.width;\n\n    container.appendChild(popup);\n  }\n\n  /**\n   * Render the quadrilaterals of the annotation.\n   *\n   * @private\n   * @param {string} className\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _renderQuadrilaterals(className) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(this.quadrilaterals, \"Missing quadrilaterals during rendering\");\n    }\n\n    for (const quadrilateral of this.quadrilaterals) {\n      quadrilateral.className = className;\n    }\n    return this.quadrilaterals;\n  }\n\n  /**\n   * Render the annotation's HTML element(s).\n   *\n   * @public\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement|Array<HTMLSectionElement>}\n   */\n  render() {\n    unreachable(\"Abstract method `AnnotationElement.render` called\");\n  }\n\n  /**\n   * @private\n   * @returns {Array}\n   */\n  _getElementsByName(name, skipId = null) {\n    const fields = [];\n\n    if (this._fieldObjects) {\n      const fieldObj = this._fieldObjects[name];\n      if (fieldObj) {\n        for (const { page, id, exportValues } of fieldObj) {\n          if (page === -1) {\n            continue;\n          }\n          if (id === skipId) {\n            continue;\n          }\n          const exportValue =\n            typeof exportValues === \"string\" ? exportValues : null;\n\n          const domElement = document.getElementById(id);\n          if (domElement && !GetElementsByNameSet.has(domElement)) {\n            warn(`_getElementsByName - element not allowed: ${id}`);\n            continue;\n          }\n          fields.push({ id, exportValue, domElement });\n        }\n      }\n      return fields;\n    }\n    // Fallback to a regular DOM lookup, to ensure that the standalone\n    // viewer components won't break.\n    for (const domElement of document.getElementsByName(name)) {\n      const { id, exportValue } = domElement;\n      if (id === skipId) {\n        continue;\n      }\n      if (!GetElementsByNameSet.has(domElement)) {\n        continue;\n      }\n      fields.push({ id, exportValue, domElement });\n    }\n    return fields;\n  }\n\n  static get platform() {\n    const platform = typeof navigator !== \"undefined\" ? navigator.platform : \"\";\n\n    return shadow(this, \"platform\", {\n      isWin: platform.includes(\"Win\"),\n      isMac: platform.includes(\"Mac\"),\n    });\n  }\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters, options = null) {\n    const isRenderable = !!(\n      parameters.data.url ||\n      parameters.data.dest ||\n      parameters.data.action ||\n      parameters.data.isTooltipOnly ||\n      parameters.data.resetForm ||\n      (parameters.data.actions &&\n        (parameters.data.actions.Action ||\n          parameters.data.actions[\"Mouse Up\"] ||\n          parameters.data.actions[\"Mouse Down\"]))\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: !!options?.ignoreBorder,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    const { data, linkService } = this;\n    const link = document.createElement(\"a\");\n\n    if (data.url) {\n      linkService.addLinkAttributes(link, data.url, data.newWindow);\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n    } else if (data.dest) {\n      this._bindLink(link, data.dest);\n    } else {\n      let hasClickAction = false;\n      if (\n        data.actions &&\n        (data.actions.Action ||\n          data.actions[\"Mouse Up\"] ||\n          data.actions[\"Mouse Down\"]) &&\n        this.enableScripting &&\n        this.hasJSActions\n      ) {\n        hasClickAction = true;\n        this._bindJSAction(link, data);\n      }\n\n      if (data.resetForm) {\n        this._bindResetFormAction(link, data.resetForm);\n      } else if (!hasClickAction) {\n        this._bindLink(link, \"\");\n      }\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"linkAnnotation\").map(\n        (quadrilateral, index) => {\n          const linkElement = index === 0 ? link : link.cloneNode();\n          quadrilateral.appendChild(linkElement);\n          return quadrilateral;\n        }\n      );\n    }\n\n    this.container.className = \"linkAnnotation\";\n    this.container.appendChild(link);\n    return this.container;\n  }\n\n  /**\n   * Bind internal links to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} destination\n   * @memberof LinkAnnotationElement\n   */\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.goToDestination(destination);\n      }\n      return false;\n    };\n    if (destination || destination === /* isTooltipOnly = */ \"\") {\n      link.className = \"internalLink\";\n    }\n  }\n\n  /**\n   * Bind named actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} action\n   * @memberof LinkAnnotationElement\n   */\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    link.className = \"internalLink\";\n  }\n\n  /**\n   * Bind JS actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} data\n   * @memberof LinkAnnotationElement\n   */\n  _bindJSAction(link, data) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    const map = new Map([\n      [\"Action\", \"onclick\"],\n      [\"Mouse Up\", \"onmouseup\"],\n      [\"Mouse Down\", \"onmousedown\"],\n    ]);\n    for (const name of Object.keys(data.actions)) {\n      const jsName = map.get(name);\n      if (!jsName) {\n        continue;\n      }\n      link[jsName] = () => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: data.id,\n            name,\n          },\n        });\n        return false;\n      };\n    }\n\n    if (!link.onclick) {\n      link.onclick = () => false;\n    }\n    link.className = \"internalLink\";\n  }\n\n  _bindResetFormAction(link, resetForm) {\n    const otherClickAction = link.onclick;\n    if (!otherClickAction) {\n      link.href = this.linkService.getAnchorUrl(\"\");\n    }\n    link.className = \"internalLink\";\n\n    if (!this._fieldObjects) {\n      warn(\n        `_bindResetFormAction - \"resetForm\" action not supported, ` +\n          \"ensure that the `fieldObjects` parameter is provided.\"\n      );\n      if (!otherClickAction) {\n        link.onclick = () => false;\n      }\n      return;\n    }\n\n    link.onclick = () => {\n      if (otherClickAction) {\n        otherClickAction();\n      }\n\n      const {\n        fields: resetFormFields,\n        refs: resetFormRefs,\n        include,\n      } = resetForm;\n\n      const allFields = [];\n      if (resetFormFields.length !== 0 || resetFormRefs.length !== 0) {\n        const fieldIds = new Set(resetFormRefs);\n        for (const fieldName of resetFormFields) {\n          const fields = this._fieldObjects[fieldName] || [];\n          for (const { id } of fields) {\n            fieldIds.add(id);\n          }\n        }\n        for (const fields of Object.values(this._fieldObjects)) {\n          for (const field of fields) {\n            if (fieldIds.has(field.id) === include) {\n              allFields.push(field);\n            }\n          }\n        }\n      } else {\n        for (const fields of Object.values(this._fieldObjects)) {\n          allFields.push(...fields);\n        }\n      }\n\n      const storage = this.annotationStorage;\n      const allIds = [];\n      for (const field of allFields) {\n        const { id } = field;\n        allIds.push(id);\n        switch (field.type) {\n          case \"text\": {\n            const value = field.defaultValue || \"\";\n            storage.setValue(id, { value });\n            break;\n          }\n          case \"checkbox\":\n          case \"radiobutton\": {\n            const value = field.defaultValue === field.exportValues;\n            storage.setValue(id, { value });\n            break;\n          }\n          case \"combobox\":\n          case \"listbox\": {\n            const value = field.defaultValue || \"\";\n            storage.setValue(id, { value });\n            break;\n          }\n          default:\n            continue;\n        }\n        const domElement = document.getElementById(id);\n        if (!domElement || !GetElementsByNameSet.has(domElement)) {\n          continue;\n        }\n        domElement.dispatchEvent(new Event(\"resetform\"));\n      }\n\n      if (this.enableScripting) {\n        // Update the values in the sandbox.\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: \"app\",\n            ids: allIds,\n            name: \"ResetForm\",\n          },\n        });\n      }\n\n      return false;\n    };\n  }\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    this.container.className = \"textAnnotation\";\n\n    const image = document.createElement(\"img\");\n    image.style.height = this.container.style.height;\n    image.style.width = this.container.style.width;\n    image.src =\n      this.imageResourcesPath +\n      \"annotation-\" +\n      this.data.name.toLowerCase() +\n      \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });\n\n    if (!this.data.hasPopup) {\n      this._createPopup(image, this.data);\n    }\n\n    this.container.appendChild(image);\n    return this.container;\n  }\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  render() {\n    // Show only the container for unsupported field types.\n    if (this.data.alternativeText) {\n      this.container.title = this.data.alternativeText;\n    }\n\n    return this.container;\n  }\n\n  _getKeyModifier(event) {\n    const { isWin, isMac } = AnnotationElement.platform;\n    return (isWin && event.ctrlKey) || (isMac && event.metaKey);\n  }\n\n  _setEventListener(element, baseName, eventName, valueGetter) {\n    if (baseName.includes(\"mouse\")) {\n      // Mouse events\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event),\n            shift: event.shiftKey,\n            modifier: this._getKeyModifier(event),\n          },\n        });\n      });\n    } else {\n      // Non mouse event\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event),\n          },\n        });\n      });\n    }\n  }\n\n  _setEventListeners(element, names, getter) {\n    for (const [baseName, eventName] of names) {\n      if (eventName === \"Action\" || this.data.actions?.[eventName]) {\n        this._setEventListener(element, baseName, eventName, getter);\n      }\n    }\n  }\n\n  _setBackgroundColor(element) {\n    const color = this.data.backgroundColor || null;\n    element.style.backgroundColor =\n      color === null\n        ? \"transparent\"\n        : Util.makeHexColor(color[0], color[1], color[2]);\n  }\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable =\n      parameters.renderForms ||\n      (!parameters.data.hasAppearance && !!parameters.data.fieldValue);\n    super(parameters, { isRenderable });\n  }\n\n  setPropertyOnSiblings(base, key, value, keyInStorage) {\n    const storage = this.annotationStorage;\n    for (const element of this._getElementsByName(\n      base.name,\n      /* skipId = */ base.id\n    )) {\n      if (element.domElement) {\n        element.domElement[key] = value;\n      }\n      storage.setValue(element.id, { [keyInStorage]: value });\n    }\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    this.container.className = \"textWidgetAnnotation\";\n\n    let element = null;\n    if (this.renderForms) {\n      // NOTE: We cannot set the values using `element.value` below, since it\n      //       prevents the AnnotationLayer rasterizer in `test/driver.js`\n      //       from parsing the elements correctly for the reference tests.\n      const storedData = storage.getValue(id, {\n        value: this.data.fieldValue,\n      });\n      const textContent = storedData.formattedValue || storedData.value || \"\";\n      const elementData = {\n        userValue: null,\n        formattedValue: null,\n        valueOnFocus: \"\",\n      };\n\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = textContent;\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", textContent);\n      }\n      GetElementsByNameSet.add(element);\n      element.disabled = this.data.readOnly;\n      element.name = this.data.fieldName;\n      element.tabIndex = DEFAULT_TAB_INDEX;\n\n      elementData.userValue = textContent;\n      element.setAttribute(\"id\", id);\n\n      element.addEventListener(\"input\", event => {\n        storage.setValue(id, { value: event.target.value });\n        this.setPropertyOnSiblings(\n          element,\n          \"value\",\n          event.target.value,\n          \"value\"\n        );\n      });\n\n      element.addEventListener(\"resetform\", event => {\n        const defaultValue = this.data.defaultFieldValue ?? \"\";\n        element.value = elementData.userValue = defaultValue;\n        elementData.formattedValue = null;\n      });\n\n      let blurListener = event => {\n        const { formattedValue } = elementData;\n        if (formattedValue !== null && formattedValue !== undefined) {\n          event.target.value = formattedValue;\n        }\n        // Reset the cursor position to the start of the field (issue 12359).\n        event.target.scrollLeft = 0;\n      };\n\n      if (this.enableScripting && this.hasJSActions) {\n        element.addEventListener(\"focus\", event => {\n          if (elementData.userValue) {\n            event.target.value = elementData.userValue;\n          }\n          elementData.valueOnFocus = event.target.value;\n        });\n\n        element.addEventListener(\"updatefromsandbox\", jsEvent => {\n          const actions = {\n            value(event) {\n              elementData.userValue = event.detail.value ?? \"\";\n              storage.setValue(id, { value: elementData.userValue.toString() });\n              event.target.value = elementData.userValue;\n            },\n            formattedValue(event) {\n              const { formattedValue } = event.detail;\n              elementData.formattedValue = formattedValue;\n              if (\n                formattedValue !== null &&\n                formattedValue !== undefined &&\n                event.target !== document.activeElement\n              ) {\n                // Input hasn't the focus so display formatted string\n                event.target.value = formattedValue;\n              }\n              storage.setValue(id, {\n                formattedValue,\n              });\n            },\n            selRange(event) {\n              event.target.setSelectionRange(...event.detail.selRange);\n            },\n          };\n          this._dispatchEventFromSandbox(actions, jsEvent);\n        });\n\n        // Even if the field hasn't any actions\n        // leaving it can still trigger some actions with Calculate\n        element.addEventListener(\"keydown\", event => {\n          // if the key is one of Escape, Enter or Tab\n          // then the data are committed\n          let commitKey = -1;\n          if (event.key === \"Escape\") {\n            commitKey = 0;\n          } else if (event.key === \"Enter\") {\n            commitKey = 2;\n          } else if (event.key === \"Tab\") {\n            commitKey = 3;\n          }\n          if (commitKey === -1) {\n            return;\n          }\n          const { value } = event.target;\n          if (elementData.valueOnFocus === value) {\n            return;\n          }\n          // Save the entered value\n          elementData.userValue = value;\n          this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n            source: this,\n            detail: {\n              id,\n              name: \"Keystroke\",\n              value,\n              willCommit: true,\n              commitKey,\n              selStart: event.target.selectionStart,\n              selEnd: event.target.selectionEnd,\n            },\n          });\n        });\n        const _blurListener = blurListener;\n        blurListener = null;\n        element.addEventListener(\"blur\", event => {\n          const { value } = event.target;\n          elementData.userValue = value;\n          if (this._mouseState.isDown && elementData.valueOnFocus !== value) {\n            // Focus out using the mouse: data are committed\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value,\n                willCommit: true,\n                commitKey: 1,\n                selStart: event.target.selectionStart,\n                selEnd: event.target.selectionEnd,\n              },\n            });\n          }\n          _blurListener(event);\n        });\n\n        if (this.data.actions?.Keystroke) {\n          element.addEventListener(\"beforeinput\", event => {\n            const { data, target } = event;\n            const { value, selectionStart, selectionEnd } = target;\n\n            let selStart = selectionStart,\n              selEnd = selectionEnd;\n\n            switch (event.inputType) {\n              // https://rawgit.com/w3c/input-events/v1/index.html#interface-InputEvent-Attributes\n              case \"deleteWordBackward\": {\n                const match = value\n                  .substring(0, selectionStart)\n                  .match(/\\w*[^\\w]*$/);\n                if (match) {\n                  selStart -= match[0].length;\n                }\n                break;\n              }\n              case \"deleteWordForward\": {\n                const match = value\n                  .substring(selectionStart)\n                  .match(/^[^\\w]*\\w*/);\n                if (match) {\n                  selEnd += match[0].length;\n                }\n                break;\n              }\n              case \"deleteContentBackward\":\n                if (selectionStart === selectionEnd) {\n                  selStart -= 1;\n                }\n                break;\n              case \"deleteContentForward\":\n                if (selectionStart === selectionEnd) {\n                  selEnd += 1;\n                }\n                break;\n            }\n\n            // We handle the event ourselves.\n            event.preventDefault();\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value,\n                change: data || \"\",\n                willCommit: false,\n                selStart,\n                selEnd,\n              },\n            });\n          });\n        }\n\n        this._setEventListeners(\n          element,\n          [\n            [\"focus\", \"Focus\"],\n            [\"blur\", \"Blur\"],\n            [\"mousedown\", \"Mouse Down\"],\n            [\"mouseenter\", \"Mouse Enter\"],\n            [\"mouseleave\", \"Mouse Exit\"],\n            [\"mouseup\", \"Mouse Up\"],\n          ],\n          event => event.target.value\n        );\n      }\n\n      if (blurListener) {\n        element.addEventListener(\"blur\", blurListener);\n      }\n\n      if (this.data.maxLen !== null) {\n        element.maxLength = this.data.maxLen;\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / this.data.maxLen;\n\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n    }\n\n    this._setTextStyle(element);\n    this._setBackgroundColor(element);\n    this._setDefaultPropertiesFromJS(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n  /**\n   * Apply text styles to the text in the element.\n   *\n   * @private\n   * @param {HTMLDivElement} element\n   * @memberof TextWidgetAnnotationElement\n   */\n  _setTextStyle(element) {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n    const { fontSize, fontColor } = this.data.defaultAppearanceData;\n    const style = element.style;\n\n    // TODO: If the font-size is zero, calculate it based on the height and\n    //       width of the element.\n    // Not setting `style.fontSize` will use the default font-size for now.\n    if (fontSize) {\n      style.fontSize = `${fontSize}px`;\n    }\n\n    style.color = Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n\n    if (this.data.textAlignment !== null) {\n      style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n  }\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, {\n      value: data.exportValue === data.fieldValue,\n    }).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== \"Off\";\n      storage.setValue(id, { value });\n    }\n\n    this.container.className = \"buttonWidgetAnnotation checkBox\";\n\n    const element = document.createElement(\"input\");\n    GetElementsByNameSet.add(element);\n    element.disabled = data.readOnly;\n    element.type = \"checkbox\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"id\", id);\n    element.setAttribute(\"exportValue\", data.exportValue);\n    element.tabIndex = DEFAULT_TAB_INDEX;\n\n    element.addEventListener(\"change\", event => {\n      const { name, checked } = event.target;\n      for (const checkbox of this._getElementsByName(name, /* skipId = */ id)) {\n        const curChecked = checked && checkbox.exportValue === data.exportValue;\n        if (checkbox.domElement) {\n          checkbox.domElement.checked = curChecked;\n        }\n        storage.setValue(checkbox.id, { value: curChecked });\n      }\n      storage.setValue(id, { value: checked });\n    });\n\n    element.addEventListener(\"resetform\", event => {\n      const defaultValue = data.defaultFieldValue || \"Off\";\n      event.target.checked = defaultValue === data.exportValue;\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            event.target.checked = event.detail.value !== \"Off\";\n            storage.setValue(id, { value: event.target.checked });\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this._setBackgroundColor(element);\n    this._setDefaultPropertiesFromJS(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    this.container.className = \"buttonWidgetAnnotation radioButton\";\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, {\n      value: data.fieldValue === data.buttonValue,\n    }).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== data.buttonValue;\n      storage.setValue(id, { value });\n    }\n\n    const element = document.createElement(\"input\");\n    GetElementsByNameSet.add(element);\n    element.disabled = data.readOnly;\n    element.type = \"radio\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"id\", id);\n    element.tabIndex = DEFAULT_TAB_INDEX;\n\n    element.addEventListener(\"change\", event => {\n      const { name, checked } = event.target;\n      for (const radio of this._getElementsByName(name, /* skipId = */ id)) {\n        storage.setValue(radio.id, { value: false });\n      }\n      storage.setValue(id, { value: checked });\n    });\n\n    element.addEventListener(\"resetform\", event => {\n      const defaultValue = data.defaultFieldValue;\n      event.target.checked =\n        defaultValue !== null &&\n        defaultValue !== undefined &&\n        defaultValue === data.buttonValue;\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      const pdfButtonValue = data.buttonValue;\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value: event => {\n            const checked = pdfButtonValue === event.detail.value;\n            for (const radio of this._getElementsByName(event.target.name)) {\n              const curChecked = checked && radio.id === id;\n              if (radio.domElement) {\n                radio.domElement.checked = curChecked;\n              }\n              storage.setValue(radio.id, { value: curChecked });\n            }\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this._setBackgroundColor(element);\n    this._setDefaultPropertiesFromJS(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { ignoreBorder: parameters.data.hasAppearance });\n  }\n\n  render() {\n    // The rendering and functionality of a push button widget annotation is\n    // equal to that of a link annotation, but may have more functionality, such\n    // as performing actions on form fields (resetting, submitting, et cetera).\n    const container = super.render();\n    container.className = \"buttonWidgetAnnotation pushButton\";\n\n    if (this.data.alternativeText) {\n      container.title = this.data.alternativeText;\n    }\n\n    this._setDefaultPropertiesFromJS(container);\n\n    return container;\n  }\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    this.container.className = \"choiceWidgetAnnotation\";\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    const storedData = storage.getValue(id, {\n      value: this.data.fieldValue,\n    });\n\n    let { fontSize } = this.data.defaultAppearanceData;\n    if (!fontSize) {\n      fontSize = 9;\n    }\n    const fontSizeStyle = `calc(${fontSize}px * var(--zoom-factor))`;\n\n    const selectElement = document.createElement(\"select\");\n    GetElementsByNameSet.add(selectElement);\n    selectElement.disabled = this.data.readOnly;\n    selectElement.name = this.data.fieldName;\n    selectElement.setAttribute(\"id\", id);\n    selectElement.tabIndex = DEFAULT_TAB_INDEX;\n\n    selectElement.style.fontSize = `${fontSize}px`;\n\n    if (!this.data.combo) {\n      // List boxes have a size and (optionally) multiple selection.\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    selectElement.addEventListener(\"resetform\", event => {\n      const defaultValue = this.data.defaultFieldValue;\n      for (const option of selectElement.options) {\n        option.selected = option.value === defaultValue;\n      }\n    });\n\n    // Insert the options into the choice field.\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (this.data.combo) {\n        optionElement.style.fontSize = fontSizeStyle;\n      }\n      if (storedData.value.includes(option.exportValue)) {\n        optionElement.setAttribute(\"selected\", true);\n      }\n      selectElement.appendChild(optionElement);\n    }\n\n    const getValue = (event, isExport) => {\n      const name = isExport ? \"value\" : \"textContent\";\n      const options = event.target.options;\n      if (!event.target.multiple) {\n        return options.selectedIndex === -1\n          ? null\n          : options[options.selectedIndex][name];\n      }\n      return Array.prototype.filter\n        .call(options, option => option.selected)\n        .map(option => option[name]);\n    };\n\n    const getItems = event => {\n      const options = event.target.options;\n      return Array.prototype.map.call(options, option => {\n        return { displayValue: option.textContent, exportValue: option.value };\n      });\n    };\n\n    if (this.enableScripting && this.hasJSActions) {\n      selectElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            const value = event.detail.value;\n            const values = new Set(Array.isArray(value) ? value : [value]);\n            for (const option of selectElement.options) {\n              option.selected = values.has(option.value);\n            }\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n            });\n          },\n          multipleSelection(event) {\n            selectElement.multiple = true;\n          },\n          remove(event) {\n            const options = selectElement.options;\n            const index = event.detail.remove;\n            options[index].selected = false;\n            selectElement.remove(index);\n            if (options.length > 0) {\n              const i = Array.prototype.findIndex.call(\n                options,\n                option => option.selected\n              );\n              if (i === -1) {\n                options[0].selected = true;\n              }\n            }\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          clear(event) {\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            storage.setValue(id, { value: null, items: [] });\n          },\n          insert(event) {\n            const { index, displayValue, exportValue } = event.detail.insert;\n            const optionElement = document.createElement(\"option\");\n            optionElement.textContent = displayValue;\n            optionElement.value = exportValue;\n            selectElement.insertBefore(\n              optionElement,\n              selectElement.children[index]\n            );\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          items(event) {\n            const { items } = event.detail;\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            for (const item of items) {\n              const { displayValue, exportValue } = item;\n              const optionElement = document.createElement(\"option\");\n              optionElement.textContent = displayValue;\n              optionElement.value = exportValue;\n              selectElement.appendChild(optionElement);\n            }\n            if (selectElement.options.length > 0) {\n              selectElement.options[0].selected = true;\n            }\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          indices(event) {\n            const indices = new Set(event.detail.indices);\n            for (const option of event.target.options) {\n              option.selected = indices.has(option.index);\n            }\n            storage.setValue(id, {\n              value: getValue(event, /* isExport */ true),\n            });\n          },\n          editable(event) {\n            event.target.disabled = !event.detail.editable;\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      selectElement.addEventListener(\"input\", event => {\n        const exportValue = getValue(event, /* isExport */ true);\n        const value = getValue(event, /* isExport */ false);\n        storage.setValue(id, { value: exportValue });\n\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id,\n            name: \"Keystroke\",\n            value,\n            changeEx: exportValue,\n            willCommit: true,\n            commitKey: 1,\n            keyDown: false,\n          },\n        });\n      });\n\n      this._setEventListeners(\n        selectElement,\n        [\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n          [\"input\", \"Action\"],\n        ],\n        event => event.target.checked\n      );\n    } else {\n      selectElement.addEventListener(\"input\", function (event) {\n        storage.setValue(id, { value: getValue(event, /* isExport */ true) });\n      });\n    }\n\n    this._setBackgroundColor(selectElement);\n    this._setDefaultPropertiesFromJS(selectElement);\n\n    this.container.appendChild(selectElement);\n    return this.container;\n  }\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    // Do not render popup annotations for parent elements with these types as\n    // they create the popups themselves (because of custom trigger divs).\n    const IGNORE_TYPES = [\n      \"Line\",\n      \"Square\",\n      \"Circle\",\n      \"PolyLine\",\n      \"Polygon\",\n      \"Ink\",\n    ];\n\n    this.container.className = \"popupAnnotation\";\n\n    if (IGNORE_TYPES.includes(this.data.parentType)) {\n      return this.container;\n    }\n\n    const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n    const parentElements = this.layer.querySelectorAll(selector);\n    if (parentElements.length === 0) {\n      return this.container;\n    }\n\n    const popup = new PopupElement({\n      container: this.container,\n      trigger: Array.from(parentElements),\n      color: this.data.color,\n      titleObj: this.data.titleObj,\n      modificationDate: this.data.modificationDate,\n      contentsObj: this.data.contentsObj,\n      richText: this.data.richText,\n    });\n\n    // Position the popup next to the parent annotation's container.\n    // PDF viewers ignore a popup annotation's rectangle.\n    const page = this.page;\n    const rect = Util.normalizeRect([\n      this.data.parentRect[0],\n      page.view[3] - this.data.parentRect[1] + page.view[1],\n      this.data.parentRect[2],\n      page.view[3] - this.data.parentRect[3] + page.view[1],\n    ]);\n    const popupLeft =\n      rect[0] + this.data.parentRect[2] - this.data.parentRect[0];\n    const popupTop = rect[1];\n\n    this.container.style.transformOrigin = `${-popupLeft}px ${-popupTop}px`;\n    this.container.style.left = `${popupLeft}px`;\n    this.container.style.top = `${popupTop}px`;\n\n    this.container.appendChild(popup.render());\n    return this.container;\n  }\n}\n\nclass PopupElement {\n  constructor(parameters) {\n    this.container = parameters.container;\n    this.trigger = parameters.trigger;\n    this.color = parameters.color;\n    this.titleObj = parameters.titleObj;\n    this.modificationDate = parameters.modificationDate;\n    this.contentsObj = parameters.contentsObj;\n    this.richText = parameters.richText;\n    this.hideWrapper = parameters.hideWrapper || false;\n\n    this.pinned = false;\n  }\n\n  render() {\n    const BACKGROUND_ENLIGHT = 0.7;\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = \"popupWrapper\";\n\n    // For Popup annotations we hide the entire section because it contains\n    // only the popup. However, for Text annotations without a separate Popup\n    // annotation, we cannot hide the entire container as the image would\n    // disappear too. In that special case, hiding the wrapper suffices.\n    this.hideElement = this.hideWrapper ? wrapper : this.container;\n    this.hideElement.hidden = true;\n\n    const popup = document.createElement(\"div\");\n    popup.className = \"popup\";\n\n    const color = this.color;\n    if (color) {\n      // Enlighten the color.\n      const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n      const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n      const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n      popup.style.backgroundColor = Util.makeHexColor(r | 0, g | 0, b | 0);\n    }\n\n    const title = document.createElement(\"h1\");\n    title.dir = this.titleObj.dir;\n    title.textContent = this.titleObj.str;\n    popup.appendChild(title);\n\n    // The modification date is shown in the popup instead of the creation\n    // date if it is available and can be parsed correctly, which is\n    // consistent with other viewers such as Adobe Acrobat.\n    const dateObject = PDFDateString.toDateObject(this.modificationDate);\n    if (dateObject) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.className = \"popupDate\";\n      modificationDate.textContent = \"{{date}}, {{time}}\";\n      modificationDate.dataset.l10nId = \"annotation_date_string\";\n      modificationDate.dataset.l10nArgs = JSON.stringify({\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString(),\n      });\n      popup.appendChild(modificationDate);\n    }\n\n    if (\n      this.richText?.str &&\n      (!this.contentsObj?.str || this.contentsObj.str === this.richText.str)\n    ) {\n      XfaLayer.render({\n        xfaHtml: this.richText.html,\n        intent: \"richText\",\n        div: popup,\n      });\n      popup.lastChild.className = \"richText popupContent\";\n    } else {\n      const contents = this._formatContents(this.contentsObj);\n      popup.appendChild(contents);\n    }\n\n    if (!Array.isArray(this.trigger)) {\n      this.trigger = [this.trigger];\n    }\n\n    // Attach the event listeners to the trigger element.\n    for (const element of this.trigger) {\n      element.addEventListener(\"click\", this._toggle.bind(this));\n      element.addEventListener(\"mouseover\", this._show.bind(this, false));\n      element.addEventListener(\"mouseout\", this._hide.bind(this, false));\n    }\n    popup.addEventListener(\"click\", this._hide.bind(this, true));\n\n    wrapper.appendChild(popup);\n    return wrapper;\n  }\n\n  /**\n   * Format the contents of the popup by adding newlines where necessary.\n   *\n   * @private\n   * @param {Object<string, string>} contentsObj\n   * @memberof PopupElement\n   * @returns {HTMLParagraphElement}\n   */\n  _formatContents({ str, dir }) {\n    const p = document.createElement(\"p\");\n    p.className = \"popupContent\";\n    p.dir = dir;\n    const lines = str.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.appendChild(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.appendChild(document.createElement(\"br\"));\n      }\n    }\n    return p;\n  }\n\n  /**\n   * Toggle the visibility of the popup.\n   *\n   * @private\n   * @memberof PopupElement\n   */\n  _toggle() {\n    if (this.pinned) {\n      this._hide(true);\n    } else {\n      this._show(true);\n    }\n  }\n\n  /**\n   * Show the popup.\n   *\n   * @private\n   * @param {boolean} pin\n   * @memberof PopupElement\n   */\n  _show(pin = false) {\n    if (pin) {\n      this.pinned = true;\n    }\n    if (this.hideElement.hidden) {\n      this.hideElement.hidden = false;\n      this.container.style.zIndex += 1;\n    }\n  }\n\n  /**\n   * Hide the popup.\n   *\n   * @private\n   * @param {boolean} unpin\n   * @memberof PopupElement\n   */\n  _hide(unpin = true) {\n    if (unpin) {\n      this.pinned = false;\n    }\n    if (!this.hideElement.hidden && !this.pinned) {\n      this.hideElement.hidden = true;\n      this.container.style.zIndex -= 1;\n    }\n  }\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"freeTextAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"lineAnnotation\";\n\n    // Create an invisible line with the same starting and ending coordinates\n    // that acts as the trigger for the popup. Only the line itself should\n    // trigger the popup, not the entire container.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(width, height);\n\n    // PDF coordinates are calculated from a bottom left origin, so transform\n    // the line coordinates to a top left origin for the SVG element.\n    const line = this.svgFactory.createElement(\"svg:line\");\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n    line.setAttribute(\"fill\", \"transparent\");\n\n    svg.appendChild(line);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the line instead\n    // of to the entire container (which is the default).\n    this._createPopup(line, data);\n\n    return this.container;\n  }\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"squareAnnotation\";\n\n    // Create an invisible square with the same rectangle that acts as the\n    // trigger for the popup. Only the square itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the square and half of\n    // the borders outside the square by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const square = this.svgFactory.createElement(\"svg:rect\");\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"transparent\");\n\n    svg.appendChild(square);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the square instead\n    // of to the entire container (which is the default).\n    this._createPopup(square, data);\n\n    return this.container;\n  }\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"circleAnnotation\";\n\n    // Create an invisible circle with the same ellipse that acts as the\n    // trigger for the popup. Only the circle itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the circle and half of\n    // the borders outside the circle by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const circle = this.svgFactory.createElement(\"svg:ellipse\");\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"transparent\");\n\n    svg.appendChild(circle);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the circle instead\n    // of to the entire container (which is the default).\n    this._createPopup(circle, data);\n\n    return this.container;\n  }\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup. Only the polyline itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(width, height);\n\n    // Convert the vertices array to a single points string that the SVG\n    // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n    // calculated from a bottom left origin, so transform the polyline\n    // coordinates to a top left origin for the SVG element.\n    let points = [];\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n    points = points.join(\" \");\n\n    const polyline = this.svgFactory.createElement(this.svgElementName);\n    polyline.setAttribute(\"points\", points);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"transparent\");\n\n    svg.appendChild(polyline);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the polyline\n    // instead of to the entire container (which is the default).\n    this._createPopup(polyline, data);\n\n    return this.container;\n  }\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    // Polygons are specific forms of polylines, so reuse their logic.\n    super(parameters);\n\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"caretAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"inkAnnotation\";\n\n    // Use the polyline SVG element since it allows us to use coordinates\n    // directly and to draw both straight lines and curves.\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(width, height);\n\n    for (const inkList of data.inkLists) {\n      // Convert the ink list to a single points string that the SVG\n      // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n      // calculated from a bottom left origin, so transform the polyline\n      // coordinates to a top left origin for the SVG element.\n      let points = [];\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n      points = points.join(\" \");\n\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      polyline.setAttribute(\"points\", points);\n      // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n      // won't be possible to open/close the popup (note e.g. issue 11122).\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"transparent\");\n\n      // Create the popup ourselves so that we can bind it to the polyline\n      // instead of to the entire container (which is the default).\n      this._createPopup(polyline, data);\n\n      svg.appendChild(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"highlightAnnotation\");\n    }\n\n    this.container.className = \"highlightAnnotation\";\n    return this.container;\n  }\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"underlineAnnotation\");\n    }\n\n    this.container.className = \"underlineAnnotation\";\n    return this.container;\n  }\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"squigglyAnnotation\");\n    }\n\n    this.container.className = \"squigglyAnnotation\";\n    return this.container;\n  }\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"strikeoutAnnotation\");\n    }\n\n    this.container.className = \"strikeoutAnnotation\";\n    return this.container;\n  }\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.titleObj?.str ||\n      parameters.data.contentsObj?.str ||\n      parameters.data.richText?.str\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"stampAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: true });\n\n    const { filename, content } = this.data.file;\n    this.filename = getFilenameFromUrl(filename);\n    this.content = content;\n\n    this.linkService.eventBus?.dispatch(\"fileattachmentannotation\", {\n      source: this,\n      filename,\n      content,\n    });\n  }\n\n  render() {\n    this.container.className = \"fileAttachmentAnnotation\";\n\n    const trigger = document.createElement(\"div\");\n    trigger.style.height = this.container.style.height;\n    trigger.style.width = this.container.style.width;\n    trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n    if (\n      !this.data.hasPopup &&\n      (this.data.titleObj?.str ||\n        this.data.contentsObj?.str ||\n        this.data.richText)\n    ) {\n      this._createPopup(trigger, this.data);\n    }\n\n    this.container.appendChild(trigger);\n    return this.container;\n  }\n\n  /**\n   * Download the file attachment associated with this annotation.\n   *\n   * @private\n   * @memberof FileAttachmentAnnotationElement\n   */\n  _download() {\n    this.downloadManager?.openOrDownloadData(\n      this.container,\n      this.content,\n      this.filename\n    );\n  }\n}\n\n/**\n * @typedef {Object} AnnotationLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Array} annotations\n * @property {PDFPageProxy} page\n * @property {IPDFLinkService} linkService\n * @property {IDownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderForms\n * @property {boolean} [enableScripting] - Enable embedded script execution.\n * @property {boolean} [hasJSActions] - Some fields have JS actions.\n *   The default value is `false`.\n * @property {Map<string, HTMLCanvasElement>} [annotationCanvasMap]\n */\n\nclass AnnotationLayer {\n  /**\n   * Render a new annotation layer with all annotation elements.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static render(parameters) {\n    const sortedAnnotations = [],\n      popupAnnotations = [];\n    // Ensure that Popup annotations are handled last, since they're dependant\n    // upon the parent annotation having already been rendered (please refer to\n    // the `PopupAnnotationElement.render` method); fixes issue 11362.\n    for (const data of parameters.annotations) {\n      if (!data) {\n        continue;\n      }\n      const { width, height } = getRectDims(data.rect);\n      if (width <= 0 || height <= 0) {\n        continue;\n      }\n      if (data.annotationType === AnnotationType.POPUP) {\n        popupAnnotations.push(data);\n        continue;\n      }\n      sortedAnnotations.push(data);\n    }\n    if (popupAnnotations.length) {\n      sortedAnnotations.push(...popupAnnotations);\n    }\n\n    const div = parameters.div;\n\n    for (const data of sortedAnnotations) {\n      const element = AnnotationElementFactory.create({\n        data,\n        layer: div,\n        page: parameters.page,\n        viewport: parameters.viewport,\n        linkService: parameters.linkService,\n        downloadManager: parameters.downloadManager,\n        imageResourcesPath: parameters.imageResourcesPath || \"\",\n        renderForms: parameters.renderForms !== false,\n        svgFactory: new DOMSVGFactory(),\n        annotationStorage:\n          parameters.annotationStorage || new AnnotationStorage(),\n        enableScripting: parameters.enableScripting,\n        hasJSActions: parameters.hasJSActions,\n        fieldObjects: parameters.fieldObjects,\n        mouseState: parameters.mouseState || { isDown: false },\n      });\n      if (element.isRenderable) {\n        const rendered = element.render();\n        if (data.hidden) {\n          rendered.style.visibility = \"hidden\";\n        }\n        if (Array.isArray(rendered)) {\n          for (const renderedElement of rendered) {\n            div.appendChild(renderedElement);\n          }\n        } else {\n          if (element instanceof PopupAnnotationElement) {\n            // Popup annotation elements should not be on top of other\n            // annotation elements to prevent interfering with mouse events.\n            div.prepend(rendered);\n          } else {\n            div.appendChild(rendered);\n          }\n        }\n      }\n    }\n\n    this.#setAnnotationCanvasMap(div, parameters.annotationCanvasMap);\n  }\n\n  /**\n   * Update the annotation elements on existing annotation layer.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static update(parameters) {\n    const { page, viewport, annotations, annotationCanvasMap, div } =\n      parameters;\n    const transform = viewport.transform;\n    const matrix = `matrix(${transform.join(\",\")})`;\n\n    let scale, ownMatrix;\n    for (const data of annotations) {\n      const elements = div.querySelectorAll(\n        `[data-annotation-id=\"${data.id}\"]`\n      );\n      if (elements) {\n        for (const element of elements) {\n          if (data.hasOwnCanvas) {\n            const rect = Util.normalizeRect([\n              data.rect[0],\n              page.view[3] - data.rect[1] + page.view[1],\n              data.rect[2],\n              page.view[3] - data.rect[3] + page.view[1],\n            ]);\n\n            if (!ownMatrix) {\n              // When an annotation has its own canvas, then\n              // the scale has been already applied to the canvas,\n              // so we musn't scale it twice.\n              scale = Math.abs(transform[0] || transform[1]);\n              const ownTransform = transform.slice();\n              for (let i = 0; i < 4; i++) {\n                ownTransform[i] = Math.sign(ownTransform[i]);\n              }\n              ownMatrix = `matrix(${ownTransform.join(\",\")})`;\n            }\n\n            const left = rect[0] * scale;\n            const top = rect[1] * scale;\n            element.style.left = `${left}px`;\n            element.style.top = `${top}px`;\n            element.style.transformOrigin = `${-left}px ${-top}px`;\n            element.style.transform = ownMatrix;\n          } else {\n            element.style.transform = matrix;\n          }\n        }\n      }\n    }\n\n    this.#setAnnotationCanvasMap(div, annotationCanvasMap);\n    div.hidden = false;\n  }\n\n  static #setAnnotationCanvasMap(div, annotationCanvasMap) {\n    if (!annotationCanvasMap) {\n      return;\n    }\n    for (const [id, canvas] of annotationCanvasMap) {\n      const element = div.querySelector(`[data-annotation-id=\"${id}\"]`);\n      if (!element) {\n        continue;\n      }\n\n      const { firstChild } = element;\n      if (firstChild.nodeName === \"CANVAS\") {\n        element.replaceChild(canvas, firstChild);\n      } else {\n        element.insertBefore(canvas, firstChild);\n      }\n    }\n    annotationCanvasMap.clear();\n  }\n}\n\nexport { AnnotationLayer };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * PLEASE NOTE: This file is currently imported in both the `../display/` and\n *              `../scripting_api/` folders, hence be EXTREMELY careful about\n *              introducing any dependencies here since that can lead to an\n *              unexpected/unnecessary size increase of the *built* files.\n */\n\nfunction makeColorComp(n) {\n  return Math.floor(Math.max(0, Math.min(1, n)) * 255)\n    .toString(16)\n    .padStart(2, \"0\");\n}\n\n// PDF specifications section 10.3\nclass ColorConverters {\n  static CMYK_G([c, y, m, k]) {\n    return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n  }\n\n  static G_CMYK([g]) {\n    return [\"CMYK\", 0, 0, 0, 1 - g];\n  }\n\n  static G_RGB([g]) {\n    return [\"RGB\", g, g, g];\n  }\n\n  static G_HTML([g]) {\n    const G = makeColorComp(g);\n    return `#${G}${G}${G}`;\n  }\n\n  static RGB_G([r, g, b]) {\n    return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n  }\n\n  static RGB_HTML([r, g, b]) {\n    const R = makeColorComp(r);\n    const G = makeColorComp(g);\n    const B = makeColorComp(b);\n    return `#${R}${G}${B}`;\n  }\n\n  static T_HTML() {\n    return \"#00000000\";\n  }\n\n  static CMYK_RGB([c, y, m, k]) {\n    return [\n      \"RGB\",\n      1 - Math.min(1, c + k),\n      1 - Math.min(1, m + k),\n      1 - Math.min(1, y + k),\n    ];\n  }\n\n  static CMYK_HTML(components) {\n    return this.RGB_HTML(this.CMYK_RGB(components));\n  }\n\n  static RGB_CMYK([r, g, b]) {\n    const c = 1 - r;\n    const m = 1 - g;\n    const y = 1 - b;\n    const k = Math.min(c, m, y);\n    return [\"CMYK\", c, m, y, k];\n  }\n}\n\nexport { ColorConverters };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./display_utils\").PageViewport} PageViewport */\n/** @typedef {import(\"../../web/interfaces\").IPDFLinkService} IPDFLinkService */\n\nimport { XfaText } from \"./xfa_text.js\";\n\n/**\n * @typedef {Object} XfaLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Object} xfaHtml\n * @property {AnnotationStorage} [annotationStorage]\n * @property {IPDFLinkService} linkService\n * @property {string} [intent] - (default value is 'display').\n */\n\nclass XfaLayer {\n  static setupStorage(html, id, element, storage, intent) {\n    const storedData = storage.getValue(id, { value: null });\n    switch (element.name) {\n      case \"textarea\":\n        if (storedData.value !== null) {\n          html.textContent = storedData.value;\n        }\n        if (intent === \"print\") {\n          break;\n        }\n        html.addEventListener(\"input\", event => {\n          storage.setValue(id, { value: event.target.value });\n        });\n        break;\n      case \"input\":\n        if (\n          element.attributes.type === \"radio\" ||\n          element.attributes.type === \"checkbox\"\n        ) {\n          if (storedData.value === element.attributes.xfaOn) {\n            html.setAttribute(\"checked\", true);\n          } else if (storedData.value === element.attributes.xfaOff) {\n            // The checked attribute may have been set when opening the file,\n            // unset through the UI and we're here because of printing.\n            html.removeAttribute(\"checked\");\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"change\", event => {\n            storage.setValue(id, {\n              value: event.target.checked\n                ? event.target.getAttribute(\"xfaOn\")\n                : event.target.getAttribute(\"xfaOff\"),\n            });\n          });\n        } else {\n          if (storedData.value !== null) {\n            html.setAttribute(\"value\", storedData.value);\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"input\", event => {\n            storage.setValue(id, { value: event.target.value });\n          });\n        }\n        break;\n      case \"select\":\n        if (storedData.value !== null) {\n          for (const option of element.children) {\n            if (option.attributes.value === storedData.value) {\n              option.attributes.selected = true;\n            }\n          }\n        }\n        html.addEventListener(\"input\", event => {\n          const options = event.target.options;\n          const value =\n            options.selectedIndex === -1\n              ? \"\"\n              : options[options.selectedIndex].value;\n          storage.setValue(id, { value });\n        });\n        break;\n    }\n  }\n\n  static setAttributes({ html, element, storage = null, intent, linkService }) {\n    const { attributes } = element;\n    const isHTMLAnchorElement = html instanceof HTMLAnchorElement;\n\n    if (attributes.type === \"radio\") {\n      // Avoid to have a radio group when printing with the same as one\n      // already displayed.\n      attributes.name = `${attributes.name}-${intent}`;\n    }\n    for (const [key, value] of Object.entries(attributes)) {\n      // We don't need to add dataId in the html object but it can\n      // be useful to know its value when writing printing tests:\n      // in this case, don't skip dataId to have its value.\n      if (value === null || value === undefined || key === \"dataId\") {\n        continue;\n      }\n\n      if (key !== \"style\") {\n        if (key === \"textContent\") {\n          html.textContent = value;\n        } else if (key === \"class\") {\n          if (value.length) {\n            html.setAttribute(key, value.join(\" \"));\n          }\n        } else {\n          if (isHTMLAnchorElement && (key === \"href\" || key === \"newWindow\")) {\n            continue; // Handled below.\n          }\n          html.setAttribute(key, value);\n        }\n      } else {\n        Object.assign(html.style, value);\n      }\n    }\n\n    if (isHTMLAnchorElement) {\n      linkService.addLinkAttributes(\n        html,\n        attributes.href,\n        attributes.newWindow\n      );\n    }\n\n    // Set the value after the others to be sure overwrite\n    // any other values.\n    if (storage && attributes.dataId) {\n      this.setupStorage(html, attributes.dataId, element, storage);\n    }\n  }\n\n  /**\n   * Render the XFA layer.\n   *\n   * @param {XfaLayerParameters} parameters\n   */\n  static render(parameters) {\n    const storage = parameters.annotationStorage;\n    const linkService = parameters.linkService;\n    const root = parameters.xfaHtml;\n    const intent = parameters.intent || \"display\";\n    const rootHtml = document.createElement(root.name);\n    if (root.attributes) {\n      this.setAttributes({\n        html: rootHtml,\n        element: root,\n        intent,\n        linkService,\n      });\n    }\n    const stack = [[root, -1, rootHtml]];\n\n    const rootDiv = parameters.div;\n    rootDiv.appendChild(rootHtml);\n\n    if (parameters.viewport) {\n      const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n      rootDiv.style.transform = transform;\n    }\n\n    // Set defaults.\n    if (intent !== \"richText\") {\n      rootDiv.setAttribute(\"class\", \"xfaLayer xfaFont\");\n    }\n\n    // Text nodes used for the text highlighter.\n    const textDivs = [];\n\n    while (stack.length > 0) {\n      const [parent, i, html] = stack[stack.length - 1];\n      if (i + 1 === parent.children.length) {\n        stack.pop();\n        continue;\n      }\n\n      const child = parent.children[++stack[stack.length - 1][1]];\n      if (child === null) {\n        continue;\n      }\n\n      const { name } = child;\n      if (name === \"#text\") {\n        const node = document.createTextNode(child.value);\n        textDivs.push(node);\n        html.appendChild(node);\n        continue;\n      }\n\n      let childHtml;\n      if (child?.attributes?.xmlns) {\n        childHtml = document.createElementNS(child.attributes.xmlns, name);\n      } else {\n        childHtml = document.createElement(name);\n      }\n\n      html.appendChild(childHtml);\n      if (child.attributes) {\n        this.setAttributes({\n          html: childHtml,\n          element: child,\n          storage,\n          intent,\n          linkService,\n        });\n      }\n\n      if (child.children && child.children.length > 0) {\n        stack.push([child, -1, childHtml]);\n      } else if (child.value) {\n        const node = document.createTextNode(child.value);\n        if (XfaText.shouldBuildText(name)) {\n          textDivs.push(node);\n        }\n        childHtml.appendChild(node);\n      }\n    }\n\n    /**\n     * TODO: re-enable that stuff once we've JS implementation.\n     * See https://bugzilla.mozilla.org/show_bug.cgi?id=1719465.\n     *\n     * for (const el of rootDiv.querySelectorAll(\n     * \".xfaDisabled input, .xfaDisabled textarea\"\n     * )) {\n     * el.setAttribute(\"disabled\", true);\n     * }\n     * for (const el of rootDiv.querySelectorAll(\n     * \".xfaReadOnly input, .xfaReadOnly textarea\"\n     * )) {\n     * el.setAttribute(\"readOnly\", true);\n     * }\n     */\n\n    for (const el of rootDiv.querySelectorAll(\n      \".xfaNonInteractive input, .xfaNonInteractive textarea\"\n    )) {\n      el.setAttribute(\"readOnly\", true);\n    }\n\n    return {\n      textDivs,\n    };\n  }\n\n  /**\n   * Update the XFA layer.\n   *\n   * @param {XfaLayerParameters} parameters\n   */\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    parameters.div.style.transform = transform;\n    parameters.div.hidden = false;\n  }\n}\n\nexport { XfaLayer };\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  createPromiseCapability,\n  Util,\n} from \"../shared/util.js\";\n\n/**\n * Text layer render parameters.\n *\n * @typedef {Object} TextLayerRenderParameters\n * @property {import(\"./api\").TextContent} [textContent] - Text content to\n *   render (the object is returned by the page's `getTextContent` method).\n * @property {ReadableStream} [textContentStream] - Text content stream to\n *   render (the stream is returned by the page's `streamTextContent` method).\n * @property {DocumentFragment} container - The DOM node that will contain the\n *   text runs.\n * @property {import(\"./display_utils\").PageViewport} viewport - The target\n *   viewport to properly layout the text runs.\n * @property {Array<HTMLElement>} [textDivs] - HTML elements that correspond to\n *   the text items of the textContent input.\n *   This is output and shall initially be set to an empty array.\n * @property {Array<string>} [textContentItemsStr] - Strings that correspond to\n *   the `str` property of the text items of the textContent input.\n *   This is output and shall initially be set to an empty array.\n * @property {number} [timeout] - Delay in milliseconds before rendering of the\n *   text runs occurs.\n * @property {boolean} [enhanceTextSelection] - Whether to turn on the text\n *   selection enhancement.\n */\n\nconst MAX_TEXT_DIVS_TO_RENDER = 100000;\nconst DEFAULT_FONT_SIZE = 30;\nconst DEFAULT_FONT_ASCENT = 0.8;\nconst ascentCache = new Map();\nconst AllWhitespaceRegexp = /^\\s+$/g;\n\nfunction getAscent(fontFamily, ctx) {\n  const cachedAscent = ascentCache.get(fontFamily);\n  if (cachedAscent) {\n    return cachedAscent;\n  }\n\n  ctx.save();\n  ctx.font = `${DEFAULT_FONT_SIZE}px ${fontFamily}`;\n  const metrics = ctx.measureText(\"\");\n\n  // Both properties aren't available by default in Firefox.\n  let ascent = metrics.fontBoundingBoxAscent;\n  let descent = Math.abs(metrics.fontBoundingBoxDescent);\n  if (ascent) {\n    ctx.restore();\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n\n  // Try basic heuristic to guess ascent/descent.\n  // Draw a g with baseline at 0,0 and then get the line\n  // number where a pixel has non-null red component (starting\n  // from bottom).\n  ctx.strokeStyle = \"red\";\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"g\", 0, 0);\n  let pixels = ctx.getImageData(\n    0,\n    0,\n    DEFAULT_FONT_SIZE,\n    DEFAULT_FONT_SIZE\n  ).data;\n  descent = 0;\n  for (let i = pixels.length - 1 - 3; i >= 0; i -= 4) {\n    if (pixels[i] > 0) {\n      descent = Math.ceil(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  // Draw an A with baseline at 0,DEFAULT_FONT_SIZE and then get the line\n  // number where a pixel has non-null red component (starting\n  // from top).\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"A\", 0, DEFAULT_FONT_SIZE);\n  pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n  ascent = 0;\n  for (let i = 0, ii = pixels.length; i < ii; i += 4) {\n    if (pixels[i] > 0) {\n      ascent = DEFAULT_FONT_SIZE - Math.floor(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  ctx.restore();\n\n  if (ascent) {\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n\n  ascentCache.set(fontFamily, DEFAULT_FONT_ASCENT);\n  return DEFAULT_FONT_ASCENT;\n}\n\nfunction appendText(task, geom, styles, ctx) {\n  // Initialize all used properties to keep the caches monomorphic.\n  const textDiv = document.createElement(\"span\");\n  const textDivProperties = task._enhanceTextSelection\n    ? {\n        angle: 0,\n        canvasWidth: 0,\n        hasText: geom.str !== \"\",\n        hasEOL: geom.hasEOL,\n        originalTransform: null,\n        paddingBottom: 0,\n        paddingLeft: 0,\n        paddingRight: 0,\n        paddingTop: 0,\n        scale: 1,\n      }\n    : {\n        angle: 0,\n        canvasWidth: 0,\n        hasText: geom.str !== \"\",\n        hasEOL: geom.hasEOL,\n      };\n\n  task._textDivs.push(textDiv);\n\n  const tx = Util.transform(task._viewport.transform, geom.transform);\n  let angle = Math.atan2(tx[1], tx[0]);\n  const style = styles[geom.fontName];\n  if (style.vertical) {\n    angle += Math.PI / 2;\n  }\n  const fontHeight = Math.hypot(tx[2], tx[3]);\n  const fontAscent = fontHeight * getAscent(style.fontFamily, ctx);\n\n  let left, top;\n  if (angle === 0) {\n    left = tx[4];\n    top = tx[5] - fontAscent;\n  } else {\n    left = tx[4] + fontAscent * Math.sin(angle);\n    top = tx[5] - fontAscent * Math.cos(angle);\n  }\n  // Setting the style properties individually, rather than all at once,\n  // should be OK since the `textDiv` isn't appended to the document yet.\n  textDiv.style.left = `${left}px`;\n  textDiv.style.top = `${top}px`;\n  textDiv.style.fontSize = `${fontHeight}px`;\n  textDiv.style.fontFamily = style.fontFamily;\n\n  // Keeps screen readers from pausing on every new text span.\n  textDiv.setAttribute(\"role\", \"presentation\");\n\n  textDiv.textContent = geom.str;\n  // geom.dir may be 'ttb' for vertical texts.\n  textDiv.dir = geom.dir;\n\n  // `fontName` is only used by the FontInspector, and we only use `dataset`\n  // here to make the font name available in the debugger.\n  if (task._fontInspectorEnabled) {\n    textDiv.dataset.fontName = geom.fontName;\n  }\n  if (angle !== 0) {\n    textDivProperties.angle = angle * (180 / Math.PI);\n  }\n  // We don't bother scaling single-char text divs, because it has very\n  // little effect on text highlighting. This makes scrolling on docs with\n  // lots of such divs a lot faster.\n  let shouldScaleText = false;\n  if (\n    geom.str.length > 1 ||\n    (task._enhanceTextSelection && AllWhitespaceRegexp.test(geom.str))\n  ) {\n    shouldScaleText = true;\n  } else if (geom.str !== \" \" && geom.transform[0] !== geom.transform[3]) {\n    const absScaleX = Math.abs(geom.transform[0]),\n      absScaleY = Math.abs(geom.transform[3]);\n    // When the horizontal/vertical scaling differs significantly, also scale\n    // even single-char text to improve highlighting (fixes issue11713.pdf).\n    if (\n      absScaleX !== absScaleY &&\n      Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5\n    ) {\n      shouldScaleText = true;\n    }\n  }\n  if (shouldScaleText) {\n    if (style.vertical) {\n      textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n    } else {\n      textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n    }\n  }\n  task._textDivProperties.set(textDiv, textDivProperties);\n  if (task._textContentStream) {\n    task._layoutText(textDiv);\n  }\n\n  if (task._enhanceTextSelection && textDivProperties.hasText) {\n    let angleCos = 1,\n      angleSin = 0;\n    if (angle !== 0) {\n      angleCos = Math.cos(angle);\n      angleSin = Math.sin(angle);\n    }\n    const divWidth =\n      (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n    const divHeight = fontHeight;\n\n    let m, b;\n    if (angle !== 0) {\n      m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n      b = Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n    } else {\n      b = [left, top, left + divWidth, top + divHeight];\n    }\n\n    task._bounds.push({\n      left: b[0],\n      top: b[1],\n      right: b[2],\n      bottom: b[3],\n      div: textDiv,\n      size: [divWidth, divHeight],\n      m,\n    });\n  }\n}\n\nfunction render(task) {\n  if (task._canceled) {\n    return;\n  }\n  const textDivs = task._textDivs;\n  const capability = task._capability;\n  const textDivsLength = textDivs.length;\n\n  // No point in rendering many divs as it would make the browser\n  // unusable even after the divs are rendered.\n  if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n    task._renderingDone = true;\n    capability.resolve();\n    return;\n  }\n\n  if (!task._textContentStream) {\n    for (let i = 0; i < textDivsLength; i++) {\n      task._layoutText(textDivs[i]);\n    }\n  }\n\n  task._renderingDone = true;\n  capability.resolve();\n}\n\nfunction findPositiveMin(ts, offset, count) {\n  let result = 0;\n  for (let i = 0; i < count; i++) {\n    const t = ts[offset++];\n    if (t > 0) {\n      result = result ? Math.min(t, result) : t;\n    }\n  }\n  return result;\n}\n\nfunction expand(task) {\n  const bounds = task._bounds;\n  const viewport = task._viewport;\n\n  const expanded = expandBounds(viewport.width, viewport.height, bounds);\n  for (let i = 0; i < expanded.length; i++) {\n    const div = bounds[i].div;\n    const divProperties = task._textDivProperties.get(div);\n    if (divProperties.angle === 0) {\n      divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n      divProperties.paddingTop = bounds[i].top - expanded[i].top;\n      divProperties.paddingRight = expanded[i].right - bounds[i].right;\n      divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n      task._textDivProperties.set(div, divProperties);\n      continue;\n    }\n    // Box is rotated -- trying to find padding so rotated div will not\n    // exceed its expanded bounds.\n    const e = expanded[i],\n      b = bounds[i];\n    const m = b.m,\n      c = m[0],\n      s = m[1];\n    // Finding intersections with expanded box.\n    const points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n    const ts = new Float64Array(64);\n    for (let j = 0, jj = points.length; j < jj; j++) {\n      const t = Util.applyTransform(points[j], m);\n      ts[j + 0] = c && (e.left - t[0]) / c;\n      ts[j + 4] = s && (e.top - t[1]) / s;\n      ts[j + 8] = c && (e.right - t[0]) / c;\n      ts[j + 12] = s && (e.bottom - t[1]) / s;\n\n      ts[j + 16] = s && (e.left - t[0]) / -s;\n      ts[j + 20] = c && (e.top - t[1]) / c;\n      ts[j + 24] = s && (e.right - t[0]) / -s;\n      ts[j + 28] = c && (e.bottom - t[1]) / c;\n\n      ts[j + 32] = c && (e.left - t[0]) / -c;\n      ts[j + 36] = s && (e.top - t[1]) / -s;\n      ts[j + 40] = c && (e.right - t[0]) / -c;\n      ts[j + 44] = s && (e.bottom - t[1]) / -s;\n\n      ts[j + 48] = s && (e.left - t[0]) / s;\n      ts[j + 52] = c && (e.top - t[1]) / -c;\n      ts[j + 56] = s && (e.right - t[0]) / s;\n      ts[j + 60] = c && (e.bottom - t[1]) / -c;\n    }\n    // Not based on math, but to simplify calculations, using cos and sin\n    // absolute values to not exceed the box (it can but insignificantly).\n    const boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n    divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n    divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n    divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n    divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n    task._textDivProperties.set(div, divProperties);\n  }\n}\n\nfunction expandBounds(width, height, boxes) {\n  const bounds = boxes.map(function (box, i) {\n    return {\n      x1: box.left,\n      y1: box.top,\n      x2: box.right,\n      y2: box.bottom,\n      index: i,\n      x1New: undefined,\n      x2New: undefined,\n    };\n  });\n  expandBoundsLTR(width, bounds);\n\n  const expanded = new Array(boxes.length);\n  for (const b of bounds) {\n    const i = b.index;\n    expanded[i] = {\n      left: b.x1New,\n      top: 0,\n      right: b.x2New,\n      bottom: 0,\n    };\n  }\n\n  // Rotating on 90 degrees and extending extended boxes. Reusing the bounds\n  // array and objects.\n  boxes.map(function (box, i) {\n    const e = expanded[i],\n      b = bounds[i];\n    b.x1 = box.top;\n    b.y1 = width - e.right;\n    b.x2 = box.bottom;\n    b.y2 = width - e.left;\n    b.index = i;\n    b.x1New = undefined;\n    b.x2New = undefined;\n  });\n  expandBoundsLTR(height, bounds);\n\n  for (const b of bounds) {\n    const i = b.index;\n    expanded[i].top = b.x1New;\n    expanded[i].bottom = b.x2New;\n  }\n  return expanded;\n}\n\nfunction expandBoundsLTR(width, bounds) {\n  // Sorting by x1 coordinate and walk by the bounds in the same order.\n  bounds.sort(function (a, b) {\n    return a.x1 - b.x1 || a.index - b.index;\n  });\n\n  // First we see on the horizon is a fake boundary.\n  const fakeBoundary = {\n    x1: -Infinity,\n    y1: -Infinity,\n    x2: 0,\n    y2: Infinity,\n    index: -1,\n    x1New: 0,\n    x2New: 0,\n  };\n  const horizon = [\n    {\n      start: -Infinity,\n      end: Infinity,\n      boundary: fakeBoundary,\n    },\n  ];\n\n  for (const boundary of bounds) {\n    // Searching for the affected part of horizon.\n    // TODO red-black tree or simple binary search\n    let i = 0;\n    while (i < horizon.length && horizon[i].end <= boundary.y1) {\n      i++;\n    }\n    let j = horizon.length - 1;\n    while (j >= 0 && horizon[j].start >= boundary.y2) {\n      j--;\n    }\n\n    let horizonPart, affectedBoundary;\n    let q,\n      k,\n      maxXNew = -Infinity;\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      let xNew;\n      if (affectedBoundary.x2 > boundary.x1) {\n        // In the middle of the previous element, new x shall be at the\n        // boundary start. Extending if further if the affected boundary\n        // placed on top of the current one.\n        xNew =\n          affectedBoundary.index > boundary.index\n            ? affectedBoundary.x1New\n            : boundary.x1;\n      } else if (affectedBoundary.x2New === undefined) {\n        // We have some space in between, new x in middle will be a fair\n        // choice.\n        xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n      } else {\n        // Affected boundary has x2new set, using it as new x.\n        xNew = affectedBoundary.x2New;\n      }\n      if (xNew > maxXNew) {\n        maxXNew = xNew;\n      }\n    }\n\n    // Set new x1 for current boundary.\n    boundary.x1New = maxXNew;\n\n    // Adjusts new x2 for the affected boundaries.\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New === undefined) {\n        // Was not set yet, choosing new x if possible.\n        if (affectedBoundary.x2 > boundary.x1) {\n          // Current and affected boundaries intersect. If affected boundary\n          // is placed on top of the current, shrinking the affected.\n          if (affectedBoundary.index > boundary.index) {\n            affectedBoundary.x2New = affectedBoundary.x2;\n          }\n        } else {\n          affectedBoundary.x2New = maxXNew;\n        }\n      } else if (affectedBoundary.x2New > maxXNew) {\n        // Affected boundary is touching new x, pushing it back.\n        affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n      }\n    }\n\n    // Fixing the horizon.\n    const changedHorizon = [];\n    let lastBoundary = null;\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      // Checking which boundary will be visible.\n      const useBoundary =\n        affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n      if (lastBoundary === useBoundary) {\n        // Merging with previous.\n        changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n      } else {\n        changedHorizon.push({\n          start: horizonPart.start,\n          end: horizonPart.end,\n          boundary: useBoundary,\n        });\n        lastBoundary = useBoundary;\n      }\n    }\n    if (horizon[i].start < boundary.y1) {\n      changedHorizon[0].start = boundary.y1;\n      changedHorizon.unshift({\n        start: horizon[i].start,\n        end: boundary.y1,\n        boundary: horizon[i].boundary,\n      });\n    }\n    if (boundary.y2 < horizon[j].end) {\n      changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n      changedHorizon.push({\n        start: boundary.y2,\n        end: horizon[j].end,\n        boundary: horizon[j].boundary,\n      });\n    }\n\n    // Set x2 new of boundary that is no longer visible (see overlapping case\n    // above).\n    // TODO more efficient, e.g. via reference counting.\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New !== undefined) {\n        continue;\n      }\n      let used = false;\n      for (\n        k = i - 1;\n        !used && k >= 0 && horizon[k].start >= affectedBoundary.y1;\n        k--\n      ) {\n        used = horizon[k].boundary === affectedBoundary;\n      }\n      for (\n        k = j + 1;\n        !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2;\n        k++\n      ) {\n        used = horizon[k].boundary === affectedBoundary;\n      }\n      for (k = 0; !used && k < changedHorizon.length; k++) {\n        used = changedHorizon[k].boundary === affectedBoundary;\n      }\n      if (!used) {\n        affectedBoundary.x2New = maxXNew;\n      }\n    }\n\n    Array.prototype.splice.apply(\n      horizon,\n      [i, j - i + 1].concat(changedHorizon)\n    );\n  }\n\n  // Set new x2 for all unset boundaries.\n  for (const horizonPart of horizon) {\n    const affectedBoundary = horizonPart.boundary;\n    if (affectedBoundary.x2New === undefined) {\n      affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n    }\n  }\n}\n\nclass TextLayerRenderTask {\n  constructor({\n    textContent,\n    textContentStream,\n    container,\n    viewport,\n    textDivs,\n    textContentItemsStr,\n    enhanceTextSelection,\n  }) {\n    this._textContent = textContent;\n    this._textContentStream = textContentStream;\n    this._container = container;\n    this._document = container.ownerDocument;\n    this._viewport = viewport;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._enhanceTextSelection = !!enhanceTextSelection;\n    this._fontInspectorEnabled = !!globalThis.FontInspector?.enabled;\n\n    this._reader = null;\n    this._layoutTextLastFontSize = null;\n    this._layoutTextLastFontFamily = null;\n    this._layoutTextCtx = null;\n    this._textDivProperties = new WeakMap();\n    this._renderingDone = false;\n    this._canceled = false;\n    this._capability = createPromiseCapability();\n    this._renderTimer = null;\n    this._bounds = [];\n\n    // Always clean-up the temporary canvas once rendering is no longer pending.\n    this._capability.promise\n      .finally(() => {\n        if (!this._enhanceTextSelection) {\n          // The `textDiv` properties are no longer needed.\n          this._textDivProperties = null;\n        }\n\n        if (this._layoutTextCtx) {\n          // Zeroing the width and height cause Firefox to release graphics\n          // resources immediately, which can greatly reduce memory consumption.\n          this._layoutTextCtx.canvas.width = 0;\n          this._layoutTextCtx.canvas.height = 0;\n          this._layoutTextCtx = null;\n        }\n      })\n      .catch(() => {\n        // Avoid \"Uncaught promise\" messages in the console.\n      });\n  }\n\n  /**\n   * Promise for textLayer rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._capability.promise;\n  }\n\n  /**\n   * Cancel rendering of the textLayer.\n   */\n  cancel() {\n    this._canceled = true;\n    if (this._reader) {\n      this._reader\n        .cancel(new AbortException(\"TextLayer task cancelled.\"))\n        .catch(() => {\n          // Avoid \"Uncaught promise\" messages in the console.\n        });\n      this._reader = null;\n    }\n    if (this._renderTimer !== null) {\n      clearTimeout(this._renderTimer);\n      this._renderTimer = null;\n    }\n    this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n  }\n\n  /**\n   * @private\n   */\n  _processItems(items, styleCache) {\n    for (let i = 0, len = items.length; i < len; i++) {\n      if (items[i].str === undefined) {\n        if (\n          items[i].type === \"beginMarkedContentProps\" ||\n          items[i].type === \"beginMarkedContent\"\n        ) {\n          const parent = this._container;\n          this._container = document.createElement(\"span\");\n          this._container.classList.add(\"markedContent\");\n          if (items[i].id !== null) {\n            this._container.setAttribute(\"id\", `${items[i].id}`);\n          }\n          parent.appendChild(this._container);\n        } else if (items[i].type === \"endMarkedContent\") {\n          this._container = this._container.parentNode;\n        }\n        continue;\n      }\n      this._textContentItemsStr.push(items[i].str);\n      appendText(this, items[i], styleCache, this._layoutTextCtx);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _layoutText(textDiv) {\n    const textDivProperties = this._textDivProperties.get(textDiv);\n\n    let transform = \"\";\n    if (textDivProperties.canvasWidth !== 0 && textDivProperties.hasText) {\n      const { fontSize, fontFamily } = textDiv.style;\n\n      // Only build font string and set to context if different from last.\n      if (\n        fontSize !== this._layoutTextLastFontSize ||\n        fontFamily !== this._layoutTextLastFontFamily\n      ) {\n        this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n        this._layoutTextLastFontSize = fontSize;\n        this._layoutTextLastFontFamily = fontFamily;\n      }\n      // Only measure the width for multi-char text divs, see `appendText`.\n      const { width } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n      if (width > 0) {\n        const scale = textDivProperties.canvasWidth / width;\n        if (this._enhanceTextSelection) {\n          textDivProperties.scale = scale;\n        }\n        transform = `scaleX(${scale})`;\n      }\n    }\n    if (textDivProperties.angle !== 0) {\n      transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n    }\n    if (transform.length > 0) {\n      if (this._enhanceTextSelection) {\n        textDivProperties.originalTransform = transform;\n      }\n      textDiv.style.transform = transform;\n    }\n\n    if (textDivProperties.hasText) {\n      this._container.appendChild(textDiv);\n    }\n    if (textDivProperties.hasEOL) {\n      const br = document.createElement(\"br\");\n      br.setAttribute(\"role\", \"presentation\");\n      this._container.appendChild(br);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _render(timeout = 0) {\n    const capability = createPromiseCapability();\n    let styleCache = Object.create(null);\n\n    // The temporary canvas is used to measure text length in the DOM.\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.height = canvas.width = DEFAULT_FONT_SIZE;\n\n    this._layoutTextCtx = canvas.getContext(\"2d\", { alpha: false });\n\n    if (this._textContent) {\n      const textItems = this._textContent.items;\n      const textStyles = this._textContent.styles;\n      this._processItems(textItems, textStyles);\n      capability.resolve();\n    } else if (this._textContentStream) {\n      const pump = () => {\n        this._reader.read().then(({ value, done }) => {\n          if (done) {\n            capability.resolve();\n            return;\n          }\n\n          Object.assign(styleCache, value.styles);\n          this._processItems(value.items, styleCache);\n          pump();\n        }, capability.reject);\n      };\n\n      this._reader = this._textContentStream.getReader();\n      pump();\n    } else {\n      throw new Error(\n        'Neither \"textContent\" nor \"textContentStream\" parameters specified.'\n      );\n    }\n\n    capability.promise.then(() => {\n      styleCache = null;\n      if (!timeout) {\n        // Render right away\n        render(this);\n      } else {\n        // Schedule\n        this._renderTimer = setTimeout(() => {\n          render(this);\n          this._renderTimer = null;\n        }, timeout);\n      }\n    }, this._capability.reject);\n  }\n\n  /**\n   * @param {boolean} [expandDivs]\n   */\n  expandTextDivs(expandDivs = false) {\n    if (!this._enhanceTextSelection || !this._renderingDone) {\n      return;\n    }\n    if (this._bounds !== null) {\n      expand(this);\n      this._bounds = null;\n    }\n    const transformBuf = [],\n      paddingBuf = [];\n\n    for (let i = 0, ii = this._textDivs.length; i < ii; i++) {\n      const div = this._textDivs[i];\n      const divProps = this._textDivProperties.get(div);\n\n      if (!divProps.hasText) {\n        continue;\n      }\n      if (expandDivs) {\n        transformBuf.length = 0;\n        paddingBuf.length = 0;\n\n        if (divProps.originalTransform) {\n          transformBuf.push(divProps.originalTransform);\n        }\n        if (divProps.paddingTop > 0) {\n          paddingBuf.push(`${divProps.paddingTop}px`);\n          transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingRight > 0) {\n          paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingBottom > 0) {\n          paddingBuf.push(`${divProps.paddingBottom}px`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingLeft > 0) {\n          paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n          transformBuf.push(\n            `translateX(${-divProps.paddingLeft / divProps.scale}px)`\n          );\n        } else {\n          paddingBuf.push(0);\n        }\n\n        div.style.padding = paddingBuf.join(\" \");\n        if (transformBuf.length) {\n          div.style.transform = transformBuf.join(\" \");\n        }\n      } else {\n        div.style.padding = null;\n        div.style.transform = divProps.originalTransform;\n      }\n    }\n  }\n}\n\n/**\n * @param {TextLayerRenderParameters} renderParameters\n * @returns {TextLayerRenderTask}\n */\nfunction renderTextLayer(renderParameters) {\n  const task = new TextLayerRenderTask({\n    textContent: renderParameters.textContent,\n    textContentStream: renderParameters.textContentStream,\n    container: renderParameters.container,\n    viewport: renderParameters.viewport,\n    textDivs: renderParameters.textDivs,\n    textContentItemsStr: renderParameters.textContentItemsStr,\n    enhanceTextSelection: renderParameters.enhanceTextSelection,\n  });\n  task._render(renderParameters.timeout);\n  return task;\n}\n\nexport { renderTextLayer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  OPS,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { DOMSVGFactory } from \"./display_utils.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\n\n/** @type {any} */\nlet SVGGraphics = class {\n  constructor() {\n    unreachable(\"Not implemented: SVGGraphics\");\n  }\n};\n\nif (\n  typeof PDFJSDev === \"undefined\" ||\n  PDFJSDev.test(\"!PRODUCTION || GENERIC\")\n) {\n  const SVG_DEFAULTS = {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fillColor: \"#000000\",\n  };\n  const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n  const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n  const createObjectURL = function (\n    data,\n    contentType = \"\",\n    forceDataSchema = false\n  ) {\n    if (\n      URL.createObjectURL &&\n      typeof Blob !== \"undefined\" &&\n      !forceDataSchema\n    ) {\n      return URL.createObjectURL(new Blob([data], { type: contentType }));\n    }\n    // Blob/createObjectURL is not available, falling back to data schema.\n    const digits =\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n    let buffer = `data:${contentType};base64,`;\n    for (let i = 0, ii = data.length; i < ii; i += 3) {\n      const b1 = data[i] & 0xff;\n      const b2 = data[i + 1] & 0xff;\n      const b3 = data[i + 2] & 0xff;\n      const d1 = b1 >> 2,\n        d2 = ((b1 & 3) << 4) | (b2 >> 4);\n      const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n      const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n    }\n    return buffer;\n  };\n\n  const convertImgDataToPng = (function () {\n    const PNG_HEADER = new Uint8Array([\n      0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,\n    ]);\n    const CHUNK_WRAPPER_SIZE = 12;\n\n    const crcTable = new Int32Array(256);\n    for (let i = 0; i < 256; i++) {\n      let c = i;\n      for (let h = 0; h < 8; h++) {\n        if (c & 1) {\n          c = 0xedb88320 ^ ((c >> 1) & 0x7fffffff);\n        } else {\n          c = (c >> 1) & 0x7fffffff;\n        }\n      }\n      crcTable[i] = c;\n    }\n\n    function crc32(data, start, end) {\n      let crc = -1;\n      for (let i = start; i < end; i++) {\n        const a = (crc ^ data[i]) & 0xff;\n        const b = crcTable[a];\n        crc = (crc >>> 8) ^ b;\n      }\n      return crc ^ -1;\n    }\n\n    function writePngChunk(type, body, data, offset) {\n      let p = offset;\n      const len = body.length;\n\n      data[p] = (len >> 24) & 0xff;\n      data[p + 1] = (len >> 16) & 0xff;\n      data[p + 2] = (len >> 8) & 0xff;\n      data[p + 3] = len & 0xff;\n      p += 4;\n\n      data[p] = type.charCodeAt(0) & 0xff;\n      data[p + 1] = type.charCodeAt(1) & 0xff;\n      data[p + 2] = type.charCodeAt(2) & 0xff;\n      data[p + 3] = type.charCodeAt(3) & 0xff;\n      p += 4;\n\n      data.set(body, p);\n      p += body.length;\n\n      const crc = crc32(data, offset + 4, p);\n      data[p] = (crc >> 24) & 0xff;\n      data[p + 1] = (crc >> 16) & 0xff;\n      data[p + 2] = (crc >> 8) & 0xff;\n      data[p + 3] = crc & 0xff;\n    }\n\n    function adler32(data, start, end) {\n      let a = 1;\n      let b = 0;\n      for (let i = start; i < end; ++i) {\n        a = (a + (data[i] & 0xff)) % 65521;\n        b = (b + a) % 65521;\n      }\n      return (b << 16) | a;\n    }\n\n    /**\n     * @param {Uint8Array} literals The input data.\n     * @returns {Uint8Array} The DEFLATE-compressed data stream in zlib format.\n     *   This is the required format for compressed streams in the PNG format:\n     *   http://www.libpng.org/pub/png/spec/1.2/PNG-Compression.html\n     */\n    function deflateSync(literals) {\n      if (!isNodeJS) {\n        // zlib is certainly not available outside of Node.js. We can either use\n        // the pako library for client-side DEFLATE compression, or use the\n        // canvas API of the browser to obtain a more optimal PNG file.\n        return deflateSyncUncompressed(literals);\n      }\n      try {\n        // NOTE: This implementation is far from perfect, but already way better\n        // than not applying any compression.\n        //\n        // A better algorithm will try to choose a good predictor/filter and\n        // then choose a suitable zlib compression strategy (e.g. 3,Z_RLE).\n        //\n        // Node v0.11.12 zlib.deflateSync is introduced (and returns a Buffer).\n        // Node v3.0.0   Buffer inherits from Uint8Array.\n        // Node v8.0.0   zlib.deflateSync accepts Uint8Array as input.\n        let input;\n        // eslint-disable-next-line no-undef\n        if (parseInt(process.versions.node) >= 8) {\n          input = literals;\n        } else {\n          // eslint-disable-next-line no-undef\n          input = Buffer.from(literals);\n        }\n        const output = __non_webpack_require__(\"zlib\").deflateSync(input, {\n          level: 9,\n        });\n        return output instanceof Uint8Array ? output : new Uint8Array(output);\n      } catch (e) {\n        warn(\n          \"Not compressing PNG because zlib.deflateSync is unavailable: \" + e\n        );\n      }\n\n      return deflateSyncUncompressed(literals);\n    }\n\n    // An implementation of DEFLATE with compression level 0 (Z_NO_COMPRESSION).\n    function deflateSyncUncompressed(literals) {\n      let len = literals.length;\n      const maxBlockLength = 0xffff;\n\n      const deflateBlocks = Math.ceil(len / maxBlockLength);\n      const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n      let pi = 0;\n      idat[pi++] = 0x78; // compression method and flags\n      idat[pi++] = 0x9c; // flags\n\n      let pos = 0;\n      while (len > maxBlockLength) {\n        // writing non-final DEFLATE blocks type 0 and length of 65535\n        idat[pi++] = 0x00;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0x00;\n        idat[pi++] = 0x00;\n        idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n        pi += maxBlockLength;\n        pos += maxBlockLength;\n        len -= maxBlockLength;\n      }\n\n      // writing non-final DEFLATE blocks type 0\n      idat[pi++] = 0x01;\n      idat[pi++] = len & 0xff;\n      idat[pi++] = (len >> 8) & 0xff;\n      idat[pi++] = ~len & 0xffff & 0xff;\n      idat[pi++] = ((~len & 0xffff) >> 8) & 0xff;\n      idat.set(literals.subarray(pos), pi);\n      pi += literals.length - pos;\n\n      const adler = adler32(literals, 0, literals.length); // checksum\n      idat[pi++] = (adler >> 24) & 0xff;\n      idat[pi++] = (adler >> 16) & 0xff;\n      idat[pi++] = (adler >> 8) & 0xff;\n      idat[pi++] = adler & 0xff;\n      return idat;\n    }\n\n    function encode(imgData, kind, forceDataSchema, isMask) {\n      const width = imgData.width;\n      const height = imgData.height;\n      let bitDepth, colorType, lineSize;\n      const bytes = imgData.data;\n\n      switch (kind) {\n        case ImageKind.GRAYSCALE_1BPP:\n          colorType = 0;\n          bitDepth = 1;\n          lineSize = (width + 7) >> 3;\n          break;\n        case ImageKind.RGB_24BPP:\n          colorType = 2;\n          bitDepth = 8;\n          lineSize = width * 3;\n          break;\n        case ImageKind.RGBA_32BPP:\n          colorType = 6;\n          bitDepth = 8;\n          lineSize = width * 4;\n          break;\n        default:\n          throw new Error(\"invalid format\");\n      }\n\n      // prefix every row with predictor 0\n      const literals = new Uint8Array((1 + lineSize) * height);\n      let offsetLiterals = 0,\n        offsetBytes = 0;\n      for (let y = 0; y < height; ++y) {\n        literals[offsetLiterals++] = 0; // no prediction\n        literals.set(\n          bytes.subarray(offsetBytes, offsetBytes + lineSize),\n          offsetLiterals\n        );\n        offsetBytes += lineSize;\n        offsetLiterals += lineSize;\n      }\n\n      if (kind === ImageKind.GRAYSCALE_1BPP && isMask) {\n        // inverting for image masks\n        offsetLiterals = 0;\n        for (let y = 0; y < height; y++) {\n          offsetLiterals++; // skipping predictor\n          for (let i = 0; i < lineSize; i++) {\n            literals[offsetLiterals++] ^= 0xff;\n          }\n        }\n      }\n\n      const ihdr = new Uint8Array([\n        (width >> 24) & 0xff,\n        (width >> 16) & 0xff,\n        (width >> 8) & 0xff,\n        width & 0xff,\n        (height >> 24) & 0xff,\n        (height >> 16) & 0xff,\n        (height >> 8) & 0xff,\n        height & 0xff,\n        bitDepth, // bit depth\n        colorType, // color type\n        0x00, // compression method\n        0x00, // filter method\n        0x00, // interlace method\n      ]);\n      const idat = deflateSync(literals);\n\n      // PNG consists of: header, IHDR+data, IDAT+data, and IEND.\n      const pngLength =\n        PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n      const data = new Uint8Array(pngLength);\n      let offset = 0;\n      data.set(PNG_HEADER, offset);\n      offset += PNG_HEADER.length;\n      writePngChunk(\"IHDR\", ihdr, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n      writePngChunk(\"IDATA\", idat, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + idat.length;\n      writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n\n      return createObjectURL(data, \"image/png\", forceDataSchema);\n    }\n\n    // eslint-disable-next-line no-shadow\n    return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n      const kind =\n        imgData.kind === undefined ? ImageKind.GRAYSCALE_1BPP : imgData.kind;\n      return encode(imgData, kind, forceDataSchema, isMask);\n    };\n  })();\n\n  class SVGExtraState {\n    constructor() {\n      this.fontSizeScale = 1;\n      this.fontWeight = SVG_DEFAULTS.fontWeight;\n      this.fontSize = 0;\n\n      this.textMatrix = IDENTITY_MATRIX;\n      this.fontMatrix = FONT_IDENTITY_MATRIX;\n      this.leading = 0;\n      this.textRenderingMode = TextRenderingMode.FILL;\n      this.textMatrixScale = 1;\n\n      // Current point (in user coordinates)\n      this.x = 0;\n      this.y = 0;\n\n      // Start of text line (in text coordinates)\n      this.lineX = 0;\n      this.lineY = 0;\n\n      // Character and word spacing\n      this.charSpacing = 0;\n      this.wordSpacing = 0;\n      this.textHScale = 1;\n      this.textRise = 0;\n\n      // Default foreground and background colors\n      this.fillColor = SVG_DEFAULTS.fillColor;\n      this.strokeColor = \"#000000\";\n\n      this.fillAlpha = 1;\n      this.strokeAlpha = 1;\n      this.lineWidth = 1;\n      this.lineJoin = \"\";\n      this.lineCap = \"\";\n      this.miterLimit = 0;\n\n      this.dashArray = [];\n      this.dashPhase = 0;\n\n      this.dependencies = [];\n\n      // Clipping\n      this.activeClipUrl = null;\n      this.clipGroup = null;\n\n      this.maskId = \"\";\n    }\n\n    clone() {\n      return Object.create(this);\n    }\n\n    setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }\n\n  // eslint-disable-next-line no-inner-declarations\n  function opListToTree(opList) {\n    let opTree = [];\n    const tmp = [];\n\n    for (const opListElement of opList) {\n      if (opListElement.fn === \"save\") {\n        opTree.push({ fnId: 92, fn: \"group\", items: [] });\n        tmp.push(opTree);\n        opTree = opTree[opTree.length - 1].items;\n        continue;\n      }\n\n      if (opListElement.fn === \"restore\") {\n        opTree = tmp.pop();\n      } else {\n        opTree.push(opListElement);\n      }\n    }\n    return opTree;\n  }\n\n  /**\n   * Format a float number as a string.\n   *\n   * @param value {number} - The float number to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pf(value) {\n    if (Number.isInteger(value)) {\n      return value.toString();\n    }\n    const s = value.toFixed(10);\n    let i = s.length - 1;\n    if (s[i] !== \"0\") {\n      return s;\n    }\n\n    // Remove trailing zeros.\n    do {\n      i--;\n    } while (s[i] === \"0\");\n    return s.substring(0, s[i] === \".\" ? i : i + 1);\n  }\n\n  /**\n   * Format a transform matrix as a string. The standard rotation, scale and\n   * translation matrices are replaced by their shorter forms, and for\n   * identity matrices an empty string is returned to save memory.\n   *\n   * @param m {Array} - The transform matrix to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pm(m) {\n    if (m[4] === 0 && m[5] === 0) {\n      if (m[1] === 0 && m[2] === 0) {\n        if (m[0] === 1 && m[3] === 1) {\n          return \"\";\n        }\n        return `scale(${pf(m[0])} ${pf(m[3])})`;\n      }\n      if (m[0] === m[3] && m[1] === -m[2]) {\n        const a = (Math.acos(m[0]) * 180) / Math.PI;\n        return `rotate(${pf(a)})`;\n      }\n    } else {\n      if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n        return `translate(${pf(m[4])} ${pf(m[5])})`;\n      }\n    }\n    return (\n      `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` +\n      `${pf(m[5])})`\n    );\n  }\n\n  // The counts below are relevant for all pages, so they have to be global\n  // instead of being members of `SVGGraphics` (which is recreated for\n  // each page).\n  let clipCount = 0;\n  let maskCount = 0;\n  let shadingCount = 0;\n\n  SVGGraphics = class {\n    constructor(commonObjs, objs, forceDataSchema = false) {\n      this.svgFactory = new DOMSVGFactory();\n\n      this.current = new SVGExtraState();\n      this.transformMatrix = IDENTITY_MATRIX; // Graphics state matrix\n      this.transformStack = [];\n      this.extraStack = [];\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n\n      this.embedFonts = false;\n      this.embeddedFonts = Object.create(null);\n      this.cssStyle = null;\n      this.forceDataSchema = !!forceDataSchema;\n\n      // In `src/shared/util.js` the operator names are mapped to IDs.\n      // The list below represents the reverse of that, i.e., it maps IDs\n      // to operator names.\n      this._operatorIdMapping = [];\n      for (const op in OPS) {\n        this._operatorIdMapping[OPS[op]] = op;\n      }\n    }\n\n    save() {\n      this.transformStack.push(this.transformMatrix);\n      const old = this.current;\n      this.extraStack.push(old);\n      this.current = old.clone();\n    }\n\n    restore() {\n      this.transformMatrix = this.transformStack.pop();\n      this.current = this.extraStack.pop();\n      this.pendingClip = null;\n      this.tgrp = null;\n    }\n\n    group(items) {\n      this.save();\n      this.executeOpTree(items);\n      this.restore();\n    }\n\n    loadDependencies(operatorList) {\n      const fnArray = operatorList.fnArray;\n      const argsArray = operatorList.argsArray;\n\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        if (fnArray[i] !== OPS.dependency) {\n          continue;\n        }\n\n        for (const obj of argsArray[i]) {\n          const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n          const promise = new Promise(resolve => {\n            objsPool.get(obj, resolve);\n          });\n          this.current.dependencies.push(promise);\n        }\n      }\n      return Promise.all(this.current.dependencies);\n    }\n\n    transform(a, b, c, d, e, f) {\n      const transformMatrix = [a, b, c, d, e, f];\n      this.transformMatrix = Util.transform(\n        this.transformMatrix,\n        transformMatrix\n      );\n      this.tgrp = null;\n    }\n\n    getSVG(operatorList, viewport) {\n      this.viewport = viewport;\n\n      const svgElement = this._initialize(viewport);\n      return this.loadDependencies(operatorList).then(() => {\n        this.transformMatrix = IDENTITY_MATRIX;\n        this.executeOpTree(this.convertOpList(operatorList));\n        return svgElement;\n      });\n    }\n\n    convertOpList(operatorList) {\n      const operatorIdMapping = this._operatorIdMapping;\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      const opList = [];\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        const fnId = fnArray[i];\n        opList.push({\n          fnId,\n          fn: operatorIdMapping[fnId],\n          args: argsArray[i],\n        });\n      }\n      return opListToTree(opList);\n    }\n\n    executeOpTree(opTree) {\n      for (const opTreeElement of opTree) {\n        const fn = opTreeElement.fn;\n        const fnId = opTreeElement.fnId;\n        const args = opTreeElement.args;\n\n        switch (fnId | 0) {\n          case OPS.beginText:\n            this.beginText();\n            break;\n          case OPS.dependency:\n            // Handled in `loadDependencies`, so no warning should be shown.\n            break;\n          case OPS.setLeading:\n            this.setLeading(args);\n            break;\n          case OPS.setLeadingMoveText:\n            this.setLeadingMoveText(args[0], args[1]);\n            break;\n          case OPS.setFont:\n            this.setFont(args);\n            break;\n          case OPS.showText:\n            this.showText(args[0]);\n            break;\n          case OPS.showSpacedText:\n            this.showText(args[0]);\n            break;\n          case OPS.endText:\n            this.endText();\n            break;\n          case OPS.moveText:\n            this.moveText(args[0], args[1]);\n            break;\n          case OPS.setCharSpacing:\n            this.setCharSpacing(args[0]);\n            break;\n          case OPS.setWordSpacing:\n            this.setWordSpacing(args[0]);\n            break;\n          case OPS.setHScale:\n            this.setHScale(args[0]);\n            break;\n          case OPS.setTextMatrix:\n            this.setTextMatrix(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.setTextRise:\n            this.setTextRise(args[0]);\n            break;\n          case OPS.setTextRenderingMode:\n            this.setTextRenderingMode(args[0]);\n            break;\n          case OPS.setLineWidth:\n            this.setLineWidth(args[0]);\n            break;\n          case OPS.setLineJoin:\n            this.setLineJoin(args[0]);\n            break;\n          case OPS.setLineCap:\n            this.setLineCap(args[0]);\n            break;\n          case OPS.setMiterLimit:\n            this.setMiterLimit(args[0]);\n            break;\n          case OPS.setFillRGBColor:\n            this.setFillRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeRGBColor:\n            this.setStrokeRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeColorN:\n            this.setStrokeColorN(args);\n            break;\n          case OPS.setFillColorN:\n            this.setFillColorN(args);\n            break;\n          case OPS.shadingFill:\n            this.shadingFill(args[0]);\n            break;\n          case OPS.setDash:\n            this.setDash(args[0], args[1]);\n            break;\n          case OPS.setRenderingIntent:\n            this.setRenderingIntent(args[0]);\n            break;\n          case OPS.setFlatness:\n            this.setFlatness(args[0]);\n            break;\n          case OPS.setGState:\n            this.setGState(args[0]);\n            break;\n          case OPS.fill:\n            this.fill();\n            break;\n          case OPS.eoFill:\n            this.eoFill();\n            break;\n          case OPS.stroke:\n            this.stroke();\n            break;\n          case OPS.fillStroke:\n            this.fillStroke();\n            break;\n          case OPS.eoFillStroke:\n            this.eoFillStroke();\n            break;\n          case OPS.clip:\n            this.clip(\"nonzero\");\n            break;\n          case OPS.eoClip:\n            this.clip(\"evenodd\");\n            break;\n          case OPS.paintSolidColorImageMask:\n            this.paintSolidColorImageMask();\n            break;\n          case OPS.paintImageXObject:\n            this.paintImageXObject(args[0]);\n            break;\n          case OPS.paintInlineImageXObject:\n            this.paintInlineImageXObject(args[0]);\n            break;\n          case OPS.paintImageMaskXObject:\n            this.paintImageMaskXObject(args[0]);\n            break;\n          case OPS.paintFormXObjectBegin:\n            this.paintFormXObjectBegin(args[0], args[1]);\n            break;\n          case OPS.paintFormXObjectEnd:\n            this.paintFormXObjectEnd();\n            break;\n          case OPS.closePath:\n            this.closePath();\n            break;\n          case OPS.closeStroke:\n            this.closeStroke();\n            break;\n          case OPS.closeFillStroke:\n            this.closeFillStroke();\n            break;\n          case OPS.closeEOFillStroke:\n            this.closeEOFillStroke();\n            break;\n          case OPS.nextLine:\n            this.nextLine();\n            break;\n          case OPS.transform:\n            this.transform(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.constructPath:\n            this.constructPath(args[0], args[1]);\n            break;\n          case OPS.endPath:\n            this.endPath();\n            break;\n          case 92:\n            this.group(opTreeElement.items);\n            break;\n          default:\n            warn(`Unimplemented operator ${fn}`);\n            break;\n        }\n      }\n    }\n\n    setWordSpacing(wordSpacing) {\n      this.current.wordSpacing = wordSpacing;\n    }\n\n    setCharSpacing(charSpacing) {\n      this.current.charSpacing = charSpacing;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      const current = this.current;\n      current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n      current.textMatrixScale = Math.hypot(a, b);\n\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtElement.appendChild(current.tspan);\n    }\n\n    beginText() {\n      const current = this.current;\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n      current.textMatrix = IDENTITY_MATRIX;\n      current.lineMatrix = IDENTITY_MATRIX;\n      current.textMatrixScale = 1;\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    moveText(x, y) {\n      const current = this.current;\n      current.x = current.lineX += x;\n      current.y = current.lineY += y;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return;\n      }\n\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      let x = 0;\n      for (const glyph of glyphs) {\n        if (glyph === null) {\n          // Word break\n          x += fontDirection * wordSpacing;\n          continue;\n        } else if (typeof glyph === \"number\") {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        let scaledX, scaledY;\n        let width = glyph.width;\n        if (vertical) {\n          let vx;\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (glyph.isInFont || font.missingFile) {\n          current.xcoords.push(current.x + scaledX);\n          if (vertical) {\n            current.ycoords.push(-current.y + scaledY);\n          }\n          current.tspan.textContent += character;\n        } else {\n          // TODO: To assist with text selection, we should replace the missing\n          // character with a space character if charWidth is not zero.\n          // But we cannot just do \"character = ' '\", because the ' ' character\n          // might actually map to a different glyph.\n        }\n\n        let charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n\n        x += charWidth;\n      }\n      current.tspan.setAttributeNS(\n        null,\n        \"x\",\n        current.xcoords.map(pf).join(\" \")\n      );\n      if (vertical) {\n        current.tspan.setAttributeNS(\n          null,\n          \"y\",\n          current.ycoords.map(pf).join(\" \")\n        );\n      } else {\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      }\n\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n        current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n      }\n      if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n        current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n      }\n\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n          current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n        }\n        if (current.fillAlpha < 1) {\n          current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        }\n      } else if (current.textRenderingMode === TextRenderingMode.ADD_TO_PATH) {\n        // Workaround for Firefox: We must set fill=\"transparent\" because\n        // fill=\"none\" would generate an empty clipping path.\n        current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n      } else {\n        current.tspan.setAttributeNS(null, \"fill\", \"none\");\n      }\n\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        const lineWidthScale = 1 / (current.textMatrixScale || 1);\n        this._setStrokeAttributes(current.tspan, lineWidthScale);\n      }\n\n      // Include the text rise in the text matrix since the `pm` function\n      // creates the SVG element's `translate` entry (work on a copy to avoid\n      // altering the original text matrix).\n      let textMatrix = current.textMatrix;\n      if (current.textRise !== 0) {\n        textMatrix = textMatrix.slice();\n        textMatrix[5] += current.textRise;\n      }\n\n      current.txtElement.setAttributeNS(\n        null,\n        \"transform\",\n        `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`\n      );\n      current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n      current.txtElement.appendChild(current.tspan);\n      current.txtgrp.appendChild(current.txtElement);\n\n      this._ensureTransformGroup().appendChild(current.txtElement);\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    addFontStyle(fontObj) {\n      if (!fontObj.data) {\n        throw new Error(\n          \"addFontStyle: No font data available, \" +\n            'ensure that the \"fontExtraProperties\" API parameter is set.'\n        );\n      }\n      if (!this.cssStyle) {\n        this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n        this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n        this.defs.appendChild(this.cssStyle);\n      }\n\n      const url = createObjectURL(\n        fontObj.data,\n        fontObj.mimetype,\n        this.forceDataSchema\n      );\n      this.cssStyle.textContent +=\n        `@font-face { font-family: \"${fontObj.loadedName}\";` +\n        ` src: url(${url}); }\\n`;\n    }\n\n    setFont(details) {\n      const current = this.current;\n      const fontObj = this.commonObjs.get(details[0]);\n      let size = details[1];\n      current.font = fontObj;\n\n      if (\n        this.embedFonts &&\n        !fontObj.missingFile &&\n        !this.embeddedFonts[fontObj.loadedName]\n      ) {\n        this.addFontStyle(fontObj);\n        this.embeddedFonts[fontObj.loadedName] = fontObj;\n      }\n      current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n      current.fontSize = size;\n      current.fontFamily = fontObj.loadedName;\n      current.fontWeight = bold;\n      current.fontStyle = italic;\n\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    endText() {\n      const current = this.current;\n      if (\n        current.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG &&\n        current.txtElement?.hasChildNodes()\n      ) {\n        // If no glyphs are shown (i.e. no child nodes), no clipping occurs.\n        current.element = current.txtElement;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    // Path properties\n    setLineWidth(width) {\n      if (width > 0) {\n        this.current.lineWidth = width;\n      }\n    }\n\n    setLineCap(style) {\n      this.current.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.current.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.current.miterLimit = limit;\n    }\n\n    setStrokeAlpha(strokeAlpha) {\n      this.current.strokeAlpha = strokeAlpha;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      this.current.strokeColor = Util.makeHexColor(r, g, b);\n    }\n\n    setFillAlpha(fillAlpha) {\n      this.current.fillAlpha = fillAlpha;\n    }\n\n    setFillRGBColor(r, g, b) {\n      this.current.fillColor = Util.makeHexColor(r, g, b);\n      this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      this.current.xcoords = [];\n      this.current.ycoords = [];\n    }\n\n    setStrokeColorN(args) {\n      this.current.strokeColor = this._makeColorN_Pattern(args);\n    }\n\n    setFillColorN(args) {\n      this.current.fillColor = this._makeColorN_Pattern(args);\n    }\n\n    shadingFill(args) {\n      const width = this.viewport.width;\n      const height = this.viewport.height;\n      const inv = Util.inverseTransform(this.transformMatrix);\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", x0);\n      rect.setAttributeNS(null, \"y\", y0);\n      rect.setAttributeNS(null, \"width\", x1 - x0);\n      rect.setAttributeNS(null, \"height\", y1 - y0);\n      rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n      if (this.current.fillAlpha < 1) {\n        rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n      }\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    /**\n     * @private\n     */\n    _makeColorN_Pattern(args) {\n      if (args[0] === \"TilingPattern\") {\n        return this._makeTilingPattern(args);\n      }\n      return this._makeShadingPattern(args);\n    }\n\n    /**\n     * @private\n     */\n    _makeTilingPattern(args) {\n      const color = args[1];\n      const operatorList = args[2];\n      const matrix = args[3] || IDENTITY_MATRIX;\n      const [x0, y0, x1, y1] = args[4];\n      const xstep = args[5];\n      const ystep = args[6];\n      const paintType = args[7];\n\n      const tilingId = `shading${shadingCount++}`;\n      const [tx0, ty0, tx1, ty1] = Util.normalizeRect([\n        ...Util.applyTransform([x0, y0], matrix),\n        ...Util.applyTransform([x1, y1], matrix),\n      ]);\n      const [xscale, yscale] = Util.singularValueDecompose2dScale(matrix);\n      const txstep = xstep * xscale;\n      const tystep = ystep * yscale;\n\n      const tiling = this.svgFactory.createElement(\"svg:pattern\");\n      tiling.setAttributeNS(null, \"id\", tilingId);\n      tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n      tiling.setAttributeNS(null, \"width\", txstep);\n      tiling.setAttributeNS(null, \"height\", tystep);\n      tiling.setAttributeNS(null, \"x\", `${tx0}`);\n      tiling.setAttributeNS(null, \"y\", `${ty0}`);\n\n      // Save current state.\n      const svg = this.svg;\n      const transformMatrix = this.transformMatrix;\n      const fillColor = this.current.fillColor;\n      const strokeColor = this.current.strokeColor;\n\n      const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n      this.svg = bbox;\n      this.transformMatrix = matrix;\n      if (paintType === 2) {\n        const cssColor = Util.makeHexColor(...color);\n        this.current.fillColor = cssColor;\n        this.current.strokeColor = cssColor;\n      }\n      this.executeOpTree(this.convertOpList(operatorList));\n\n      // Restore saved state.\n      this.svg = svg;\n      this.transformMatrix = transformMatrix;\n      this.current.fillColor = fillColor;\n      this.current.strokeColor = strokeColor;\n\n      tiling.appendChild(bbox.childNodes[0]);\n      this.defs.appendChild(tiling);\n      return `url(#${tilingId})`;\n    }\n\n    /**\n     * @private\n     */\n    _makeShadingPattern(args) {\n      if (typeof args === \"string\") {\n        args = this.objs.get(args);\n      }\n      switch (args[0]) {\n        case \"RadialAxial\":\n          const shadingId = `shading${shadingCount++}`;\n          const colorStops = args[3];\n          let gradient;\n\n          switch (args[1]) {\n            case \"axial\":\n              const point0 = args[4];\n              const point1 = args[5];\n              gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"x1\", point0[0]);\n              gradient.setAttributeNS(null, \"y1\", point0[1]);\n              gradient.setAttributeNS(null, \"x2\", point1[0]);\n              gradient.setAttributeNS(null, \"y2\", point1[1]);\n              break;\n            case \"radial\":\n              const focalPoint = args[4];\n              const circlePoint = args[5];\n              const focalRadius = args[6];\n              const circleRadius = args[7];\n              gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n              gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n              gradient.setAttributeNS(null, \"r\", circleRadius);\n              gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n              gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n              gradient.setAttributeNS(null, \"fr\", focalRadius);\n              break;\n            default:\n              throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n          }\n          for (const colorStop of colorStops) {\n            const stop = this.svgFactory.createElement(\"svg:stop\");\n            stop.setAttributeNS(null, \"offset\", colorStop[0]);\n            stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n            gradient.appendChild(stop);\n          }\n          this.defs.appendChild(gradient);\n          return `url(#${shadingId})`;\n        case \"Mesh\":\n          warn(\"Unimplemented pattern Mesh\");\n          return null;\n        case \"Dummy\":\n          return \"hotpink\";\n        default:\n          throw new Error(`Unknown IR type: ${args[0]}`);\n      }\n    }\n\n    setDash(dashArray, dashPhase) {\n      this.current.dashArray = dashArray;\n      this.current.dashPhase = dashPhase;\n    }\n\n    constructPath(ops, args) {\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      let d = [];\n      let j = 0;\n\n      for (const op of ops) {\n        switch (op | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n            const xw = x + width;\n            const yh = y + height;\n            d.push(\n              \"M\",\n              pf(x),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(yh),\n              \"L\",\n              pf(x),\n              pf(yh),\n              \"Z\"\n            );\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"M\", pf(x), pf(y));\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"L\", pf(x), pf(y));\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3]),\n              pf(x),\n              pf(y)\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            d.push(\n              \"C\",\n              pf(x),\n              pf(y),\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3])\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(x),\n              pf(y),\n              pf(x),\n              pf(y)\n            );\n            j += 4;\n            break;\n          case OPS.closePath:\n            d.push(\"Z\");\n            break;\n        }\n      }\n\n      d = d.join(\" \");\n\n      if (\n        current.path &&\n        ops.length > 0 &&\n        ops[0] !== OPS.rectangle &&\n        ops[0] !== OPS.moveTo\n      ) {\n        // If a path does not start with an OPS.rectangle or OPS.moveTo, it has\n        // probably been divided into two OPS.constructPath operators by\n        // OperatorList. Append the commands to the previous path element.\n        d = current.path.getAttributeNS(null, \"d\") + d;\n      } else {\n        current.path = this.svgFactory.createElement(\"svg:path\");\n        this._ensureTransformGroup().appendChild(current.path);\n      }\n\n      current.path.setAttributeNS(null, \"d\", d);\n      current.path.setAttributeNS(null, \"fill\", \"none\");\n\n      // Saving a reference in current.element so that it can be addressed\n      // in 'fill' and 'stroke'\n      current.element = current.path;\n      current.setCurrentPoint(x, y);\n    }\n\n    endPath() {\n      const current = this.current;\n\n      // Painting operators end a path.\n      current.path = null;\n\n      if (!this.pendingClip) {\n        return;\n      }\n      if (!current.element) {\n        this.pendingClip = null;\n        return;\n      }\n\n      // Add the current path to a clipping path.\n      const clipId = `clippath${clipCount++}`;\n      const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n      clipPath.setAttributeNS(null, \"id\", clipId);\n      clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n      // A deep clone is needed when text is used as a clipping path.\n      const clipElement = current.element.cloneNode(true);\n      if (this.pendingClip === \"evenodd\") {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n      } else {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n      }\n      this.pendingClip = null;\n      clipPath.appendChild(clipElement);\n      this.defs.appendChild(clipPath);\n\n      if (current.activeClipUrl) {\n        // The previous clipping group content can go out of order -- resetting\n        // cached clipGroups.\n        current.clipGroup = null;\n        for (const prev of this.extraStack) {\n          prev.clipGroup = null;\n        }\n        // Intersect with the previous clipping path.\n        clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n      }\n      current.activeClipUrl = `url(#${clipId})`;\n\n      this.tgrp = null;\n    }\n\n    clip(type) {\n      this.pendingClip = type;\n    }\n\n    closePath() {\n      const current = this.current;\n      if (current.path) {\n        const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n        current.path.setAttributeNS(null, \"d\", d);\n      }\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setTextRise(textRise) {\n      this.current.textRise = textRise;\n    }\n\n    setTextRenderingMode(textRenderingMode) {\n      this.current.textRenderingMode = textRenderingMode;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setGState(states) {\n      for (const [key, value] of states) {\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value);\n            break;\n          case \"CA\":\n            this.setStrokeAlpha(value);\n            break;\n          case \"ca\":\n            this.setFillAlpha(value);\n            break;\n          default:\n            warn(`Unimplemented graphic state operator ${key}`);\n            break;\n        }\n      }\n    }\n\n    fill() {\n      const current = this.current;\n      if (current.element) {\n        current.element.setAttributeNS(null, \"fill\", current.fillColor);\n        current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        this.endPath();\n      }\n    }\n\n    stroke() {\n      const current = this.current;\n      if (current.element) {\n        this._setStrokeAttributes(current.element);\n        current.element.setAttributeNS(null, \"fill\", \"none\");\n        this.endPath();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _setStrokeAttributes(element, lineWidthScale = 1) {\n      const current = this.current;\n      let dashArray = current.dashArray;\n      if (lineWidthScale !== 1 && dashArray.length > 0) {\n        dashArray = dashArray.map(function (value) {\n          return lineWidthScale * value;\n        });\n      }\n      element.setAttributeNS(null, \"stroke\", current.strokeColor);\n      element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n      element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n      element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n      element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n      element.setAttributeNS(\n        null,\n        \"stroke-width\",\n        pf(lineWidthScale * current.lineWidth) + \"px\"\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dasharray\",\n        dashArray.map(pf).join(\" \")\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dashoffset\",\n        pf(lineWidthScale * current.dashPhase) + \"px\"\n      );\n    }\n\n    eoFill() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fill();\n    }\n\n    fillStroke() {\n      // Order is important since stroke wants fill to be none.\n      // First stroke, then if fill needed, it will be overwritten.\n      this.stroke();\n      this.fill();\n    }\n\n    eoFillStroke() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fillStroke();\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.closePath();\n      this.eoFillStroke();\n    }\n\n    paintSolidColorImageMask() {\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", \"1px\");\n      rect.setAttributeNS(null, \"height\", \"1px\");\n      rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    paintImageXObject(objId) {\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(`Dependent image with object ID ${objId} is not ready yet`);\n        return;\n      }\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintInlineImageXObject(imgData, mask) {\n      const width = imgData.width;\n      const height = imgData.height;\n\n      const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", \"0\");\n      cliprect.setAttributeNS(null, \"y\", \"0\");\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-height));\n      imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n      imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n      imgEl.setAttributeNS(\n        null,\n        \"transform\",\n        `scale(${pf(1 / width)} ${pf(-1 / height)})`\n      );\n      if (mask) {\n        mask.appendChild(imgEl);\n      } else {\n        this._ensureTransformGroup().appendChild(imgEl);\n      }\n    }\n\n    paintImageMaskXObject(imgData) {\n      const current = this.current;\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = current.fillColor;\n\n      current.maskId = `mask${maskCount++}`;\n      const mask = this.svgFactory.createElement(\"svg:mask\");\n      mask.setAttributeNS(null, \"id\", current.maskId);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", pf(width));\n      rect.setAttributeNS(null, \"height\", pf(height));\n      rect.setAttributeNS(null, \"fill\", fillColor);\n      rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n\n      this.defs.appendChild(mask);\n      this._ensureTransformGroup().appendChild(rect);\n\n      this.paintInlineImageXObject(imgData, mask);\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform(\n          matrix[0],\n          matrix[1],\n          matrix[2],\n          matrix[3],\n          matrix[4],\n          matrix[5]\n        );\n      }\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n        cliprect.setAttributeNS(null, \"x\", bbox[0]);\n        cliprect.setAttributeNS(null, \"y\", bbox[1]);\n        cliprect.setAttributeNS(null, \"width\", pf(width));\n        cliprect.setAttributeNS(null, \"height\", pf(height));\n        this.current.element = cliprect;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {}\n\n    /**\n     * @private\n     */\n    _initialize(viewport) {\n      const svg = this.svgFactory.create(viewport.width, viewport.height);\n\n      // Create the definitions element.\n      const definitions = this.svgFactory.createElement(\"svg:defs\");\n      svg.appendChild(definitions);\n      this.defs = definitions;\n\n      // Create the root group element, which acts a container for all other\n      // groups and applies the viewport transform.\n      const rootGroup = this.svgFactory.createElement(\"svg:g\");\n      rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n      svg.appendChild(rootGroup);\n\n      // For the construction of the SVG image we are only interested in the\n      // root group, so we expose it as the entry point of the SVG image for\n      // the other code in this class.\n      this.svg = rootGroup;\n\n      return svg;\n    }\n\n    /**\n     * @private\n     */\n    _ensureClipGroup() {\n      if (!this.current.clipGroup) {\n        const clipGroup = this.svgFactory.createElement(\"svg:g\");\n        clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n        this.svg.appendChild(clipGroup);\n        this.current.clipGroup = clipGroup;\n      }\n      return this.current.clipGroup;\n    }\n\n    /**\n     * @private\n     */\n    _ensureTransformGroup() {\n      if (!this.tgrp) {\n        this.tgrp = this.svgFactory.createElement(\"svg:g\");\n        this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n        if (this.current.activeClipUrl) {\n          this._ensureClipGroup().appendChild(this.tgrp);\n        } else {\n          this.svg.appendChild(this.tgrp);\n        }\n      }\n      return this.tgrp;\n    }\n  };\n}\n\nexport { SVGGraphics };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n} from \"../shared/util.js\";\nimport {\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./node_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst fs = __non_webpack_require__(\"fs\");\nconst http = __non_webpack_require__(\"http\");\nconst https = __non_webpack_require__(\"https\");\nconst url = __non_webpack_require__(\"url\");\n\nconst fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\nfunction parseUrl(sourceUrl) {\n  const parsedUrl = url.parse(sourceUrl);\n  if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n    return parsedUrl;\n  }\n  // Prepending 'file:///' to Windows absolute path.\n  if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n    return url.parse(`file:///${sourceUrl}`);\n  }\n  // Changes protocol to 'file:' if url refers to filesystem.\n  if (!parsedUrl.host) {\n    parsedUrl.protocol = \"file:\";\n  }\n  return parsedUrl;\n}\n\nclass PDFNodeStream {\n  constructor(source) {\n    this.source = source;\n    this.url = parseUrl(source.url);\n    this.isHttp =\n      this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n    // Check if url refers to filesystem.\n    this.isFsUrl = this.url.protocol === \"file:\";\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNodeStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = this.isFsUrl\n      ? new PDFNodeStreamFsFullReader(this)\n      : new PDFNodeStreamFullReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(start, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const rangeReader = this.isFsUrl\n      ? new PDFNodeStreamFsRangeReader(this, start, end)\n      : new PDFNodeStreamRangeReader(this, start, end);\n    this._rangeRequestReaders.push(rangeReader);\n    return rangeReader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\nclass BaseFullReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    const source = stream.source;\n    this._contentLength = source.length; // optional\n    this._loaded = 0;\n    this._filename = null;\n\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    this._headersCapability = createPromiseCapability();\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readable to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // We need to stop reading when range is supported and streaming is\n    // disabled.\n    if (!this._isStreamingSupported && this._isRangeSupported) {\n      this._error(new AbortException(\"streaming is disabled\"));\n    }\n\n    // Destroy ReadableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nclass BaseRangeReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    this._loaded = 0;\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    const source = stream.source;\n    this._isStreamingSupported = !source.disableStream;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readableStream to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // Destroy readableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nfunction createRequestOptions(parsedUrl, headers) {\n  return {\n    protocol: parsedUrl.protocol,\n    auth: parsedUrl.auth,\n    host: parsedUrl.hostname,\n    port: parsedUrl.port,\n    path: parsedUrl.path,\n    method: \"GET\",\n    headers,\n  };\n}\n\nclass PDFNodeStreamFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      this._headersCapability.resolve();\n      this._setReadableStream(response);\n\n      const getResponseHeader = name => {\n        // Make sure that headers name are in lower case, as mentioned\n        // here: https://nodejs.org/api/http.html#http_message_headers.\n        return this._readableStream.headers[name.toLowerCase()];\n      };\n      const { allowRangeRequests, suggestedLength } =\n        validateRangeRequestCapabilities({\n          getResponseHeader,\n          isHttp: stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange,\n        });\n\n      this._isRangeSupported = allowRangeRequests;\n      // Setting right content length.\n      this._contentLength = suggestedLength || this._contentLength;\n\n      this._filename = extractFilenameFromHeader(getResponseHeader);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n      this._headersCapability.reject(reason);\n    });\n    // Note: `request.end(data)` is used to write `data` to request body\n    // and notify end of request. But one should always call `request.end()`\n    // even if there is no data to write -- (to notify the end of request).\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    this._httpHeaders = {};\n    for (const property in stream.httpHeaders) {\n      const value = stream.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      this._httpHeaders[property] = value;\n    }\n    this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        return;\n      }\n      this._setReadableStream(response);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n    });\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamFsFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    fs.lstat(path, (error, stat) => {\n      if (error) {\n        if (error.code === \"ENOENT\") {\n          error = new MissingPDFException(`Missing PDF \"${path}\".`);\n        }\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      // Setting right content length.\n      this._contentLength = stat.size;\n\n      this._setReadableStream(fs.createReadStream(path));\n      this._headersCapability.resolve();\n    });\n  }\n}\n\nclass PDFNodeStreamFsRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    this._setReadableStream(fs.createReadStream(path, { start, end: end - 1 }));\n  }\n}\n\nexport { PDFNodeStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  MissingPDFException,\n  UnexpectedResponseException,\n} from \"../shared/util.js\";\nimport { getFilenameFromContentDispositionHeader } from \"./content_disposition.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange,\n}) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      Number.isInteger(rangeChunkSize) && rangeChunkSize > 0,\n      \"rangeChunkSize must be an integer larger than zero.\"\n    );\n  }\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined,\n  };\n\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    // The file size is smaller than the size of two chunks, so it does not\n    // make any sense to abort the request and retry with a range request.\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = getFilenameFromContentDispositionHeader(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch (ex) {}\n    }\n    if (isPdfFile(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || (status === 0 && url.startsWith(\"file:\"))) {\n    return new MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n  return new UnexpectedResponseException(\n    `Unexpected server response (${status}) while retrieving PDF \"${url}\".`,\n    status\n  );\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\nexport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringToBytes } from \"../shared/util.js\";\n\n// This getFilenameFromContentDispositionHeader function is adapted from\n// https://github.com/Rob--W/open-in-browser/blob/7e2e35a38b8b4e981b11da7b2f01df0149049e92/extension/content-disposition.js\n// with the following changes:\n// - Modified to conform to PDF.js's coding style.\n// - Move return to the end of the function to prevent Babel from dropping the\n//   function declarations.\n\n/**\n * Extract file name from the Content-Disposition HTTP response header.\n *\n * @param {string} contentDisposition\n * @returns {string} Filename, if found in the Content-Disposition header.\n */\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n\n  // filename*=ext-value (\"ext-value\" from RFC 5987, referenced by RFC 6266).\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // Continuations (RFC 2231 section 3, referenced by RFC 5987 section 3.1).\n  // filename*n*=part\n  // filename*n=part\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    // RFC 2047, section\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  // filename=value (RFC 5987, section 4.1).\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // After this line there are only function declarations. We cannot put\n  // \"return\" here for readability because babel would then drop the function\n  // declarations...\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\n      \"(?:^|;)\\\\s*\" +\n        attributePattern +\n        \"\\\\s*=\\\\s*\" +\n        // Captures: value = token | quoted-string\n        // (RFC 2616, section 3.6 and referenced by RFC 6266 4.1)\n        \"(\" +\n        '[^\";\\\\s][^;\\\\s]*' +\n        \"|\" +\n        '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' +\n        \")\",\n      flags\n    );\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const buffer = stringToBytes(value);\n        value = decoder.decode(buffer);\n        needsEncodingFixup = false;\n      } catch (e) {\n        // TextDecoder constructor threw - unrecognized encoding.\n      }\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      // Maybe multi-byte UTF-8.\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        // Try iso-8859-1 encoding.\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDispositionStr) {\n    const matches = [];\n    let match;\n    // Iterate over all filename*n= and filename*n*= with n being an integer\n    // of at least zero. Any non-zero number must not start with '0'.\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\n      let [, n, quot, part] = match; // eslint-disable-line prefer-const\n      n = parseInt(n, 10);\n      if (n in matches) {\n        // Ignore anything after the invalid second filename*0.\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        // Numbers must be consecutive. Truncate when there is a hole.\n        break;\n      }\n      let [quot, part] = matches[n]; // eslint-disable-line prefer-const\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      // Find the first unescaped \" and terminate there.\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1; // Truncates and stop the iteration.\n        }\n        parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    // Decodes \"ext-value\" from RFC 5987.\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      // Some servers send \"filename*=\" without encoding 'language' prefix,\n      // e.g. in https://github.com/Rob--W/open-in-browser/issues/26\n      // Let's accept the value like Firefox (57) (Chrome 62 rejects it).\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    // Ignore language (RFC 5987 section 3.2.1, and RFC 6266 section 4.1 ).\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    // RFC 2047-decode the result. Firefox tried to drop support for it, but\n    // backed out because some servers use it - https://bugzil.la/875615\n    // Firefox's condition for decoding is here: https://searchfox.org/mozilla-central/rev/4a590a5a15e35d88a3b23dd6ac3c471cf85b04a8/netwerk/mime/nsMIMEHeaderParamImpl.cpp#742-748\n\n    // We are more strict and only recognize RFC 2047-encoding if the value\n    // starts with \"=?\", since then it is likely that the full value is\n    // RFC 2047-encoded.\n\n    // Firefox also decodes words even where RFC 2047 section 5 states:\n    // \"An 'encoded-word' MUST NOT appear within a 'quoted-string'.\"\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    // RFC 2047, section 2.4\n    // encoded-word = \"=?\" charset \"?\" encoding \"?\" encoded-text \"?=\"\n    // charset = token (but let's restrict to characters that denote a\n    //       possibly valid encoding).\n    // encoding = q or b\n    // encoded-text = any printable ASCII character other than ? or space.\n    //        ... but Firefox permits ? and space.\n    return value.replace(\n      /=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g,\n      function (matches, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          // RFC 2047 section 4.2.\n          text = text.replace(/_/g, \" \");\n          text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        } // else encoding is b or B - base64 (RFC 2047 section 4.1)\n        try {\n          text = atob(text);\n        } catch (e) {}\n        return textdecode(charset, text);\n      }\n    );\n  }\n\n  return \"\";\n}\n\nexport { getFilenameFromContentDispositionHeader };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  createPromiseCapability,\n  stringToBytes,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./network.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  const array = stringToBytes(data);\n  return array.buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args = {}) {\n    this.url = url;\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = (this.isHttp && args.httpHeaders) || Object.create(null);\n    this.withCredentials = args.withCredentials || false;\n    this.getXhr =\n      args.getXhr ||\n      function NetworkManager_getXhr() {\n        return new XMLHttpRequest();\n      };\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end,\n    };\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = this.getXhr();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = (this.pendingRequests[xhrId] = { xhr });\n\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      xhr.setRequestHeader(property, value);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function (evt) {\n        args.onError(xhr.status);\n      };\n    }\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n\n    xhr.send(null);\n\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      return; // Maybe abortRequest was called...\n    }\n    pendingRequest.onProgress?.(evt);\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      return; // Maybe abortRequest was called...\n    }\n\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      // The XHR request might have been aborted in onHeadersReceived()\n      // callback, in which case we should abort request.\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    // Success status == 0 can be on ftp, file and other protocols.\n    if (xhr.status === 0 && this.isHttp) {\n      pendingRequest.onError?.(xhr.status);\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n\n    // From http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2:\n    // \"A server MAY ignore the Range header\". This means it's possible to\n    // get a 200 rather than a 206 response from a range request.\n    const ok_response_on_range_request =\n      xhrStatus === OK_RESPONSE &&\n      pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (\n      !ok_response_on_range_request &&\n      xhrStatus !== pendingRequest.expectedStatus\n    ) {\n      pendingRequest.onError?.(xhr.status);\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk,\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk,\n      });\n    } else {\n      pendingRequest.onError?.(xhr.status);\n    }\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\n\n/** @implements {IPDFStream} */\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials,\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNetworkStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(\n      this._manager,\n      this._source\n    );\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(\n      this._manager,\n      begin,\n      end\n    );\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length; // Optional\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n    const { allowRangeRequests, suggestedLength } =\n      validateRangeRequestCapabilities({\n        getResponseHeader,\n        isHttp: this._manager.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange,\n      });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    // Setting right content length.\n    this._contentLength = suggestedLength || this._contentLength;\n\n    this._filename = extractFilenameFromHeader(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      // NOTE: by cancelling the full request, and then issuing range\n      // requests, there will be an issue for sites where you can only\n      // request the pdf once. However, if this is the case, then the\n      // server should not be returning that it can support range requests.\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(data) {\n    if (data) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({ value: data.chunk, done: false });\n      } else {\n        this._cachedChunks.push(data.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  _onError(status) {\n    this._storedError = createResponseStatusError(status, this._url);\n    this._headersReceivedCapability.reject(this._storedError);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(this._storedError);\n    }\n    this._requests.length = 0;\n    this._cachedChunks.length = 0;\n  }\n\n  _onProgress(evt) {\n    this.onProgress?.({\n      loaded: evt.loaded,\n      total: evt.lengthComputable ? evt.total : this._contentLength,\n    });\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._headersReceivedCapability.reject(reason);\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n\n    const args = {\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = manager.url;\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n    this._storedError = undefined;\n\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    this.onClosed?.(this);\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._close();\n  }\n\n  _onError(status) {\n    this._storedError = createResponseStatusError(status, this._url);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(this._storedError);\n    }\n    this._requests.length = 0;\n    this._queuedChunk = null;\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported) {\n      this.onProgress?.({ loaded: evt.loaded });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\nexport { PDFNetworkStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./fetch_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController?.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\",\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n    if (typeof value === \"undefined\") {\n      continue;\n    }\n    headers.append(property, value);\n  }\n  return headers;\n}\n\n/** @implements {IPDFStream} */\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFFetchStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._reader = response.body.getReader();\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n        const { allowRangeRequests, suggestedLength } =\n          validateRangeRequestCapabilities({\n            getResponseHeader,\n            isHttp: this._stream.isHttp,\n            rangeChunkSize: this._rangeChunkSize,\n            disableRange: this._disableRange,\n          });\n\n        this._isRangeSupported = allowRangeRequests;\n        // Setting right content length.\n        this._contentLength = suggestedLength || this._contentLength;\n\n        this._filename = extractFilenameFromHeader(getResponseHeader);\n\n        // We need to stop reading when range is supported and streaming is\n        // disabled.\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new AbortException(\"Streaming is disabled.\"));\n        }\n      })\n      .catch(this._headersCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = createPromiseCapability();\n    this._isStreamingSupported = !source.disableStream;\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._readCapability.resolve();\n        this._reader = response.body.getReader();\n      })\n      .catch(this._readCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\nexport { PDFFetchStream };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __w_pdfjs_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./display/api\").PDFDocumentLoadingTask} PDFDocumentLoadingTask */\n/** @typedef {import(\"./display/api\").PDFDocumentProxy} PDFDocumentProxy */\n/** @typedef {import(\"./display/api\").PDFPageProxy} PDFPageProxy */\n/** @typedef {import(\"./display/api\").RenderTask} RenderTask */\n/** @typedef {import(\"./display/display_utils\").PageViewport} PageViewport */\n\nimport {\n  AnnotationMode,\n  CMapCompressionType,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n} from \"./shared/util.js\";\nimport {\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n} from \"./display/api.js\";\nimport {\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  isPdfFile,\n  isValidFetchUrl,\n  loadScript,\n  PDFDateString,\n  PixelsPerInch,\n  RenderingCancelledException,\n} from \"./display/display_utils.js\";\nimport { AnnotationLayer } from \"./display/annotation_layer.js\";\nimport { GlobalWorkerOptions } from \"./display/worker_options.js\";\nimport { isNodeJS } from \"./shared/is_node.js\";\nimport { renderTextLayer } from \"./display/text_layer.js\";\nimport { SVGGraphics } from \"./display/svg.js\";\nimport { XfaLayer } from \"./display/xfa_layer.js\";\n\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nif (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n  const streamsPromise = Promise.all([\n    import(\"pdfjs/display/network.js\"),\n    import(\"pdfjs/display/fetch_stream.js\"),\n  ]);\n\n  setPDFNetworkStreamFactory(async params => {\n    const [{ PDFNetworkStream }, { PDFFetchStream }] = await streamsPromise;\n    if (isValidFetchUrl(params.url)) {\n      return new PDFFetchStream(params);\n    }\n    return new PDFNetworkStream(params);\n  });\n} else if (PDFJSDev.test(\"GENERIC || CHROME\")) {\n  if (PDFJSDev.test(\"GENERIC\") && isNodeJS) {\n    const { PDFNodeStream } = require(\"./display/node_stream.js\");\n\n    setPDFNetworkStreamFactory(params => {\n      return new PDFNodeStream(params);\n    });\n  } else {\n    const { PDFNetworkStream } = require(\"./display/network.js\");\n    const { PDFFetchStream } = require(\"./display/fetch_stream.js\");\n\n    setPDFNetworkStreamFactory(params => {\n      if (isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  }\n}\n\nexport {\n  AnnotationLayer,\n  AnnotationMode,\n  build,\n  CMapCompressionType,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  getDocument,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  GlobalWorkerOptions,\n  InvalidPDFException,\n  isPdfFile,\n  loadScript,\n  LoopbackPort,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PDFDataRangeTransport,\n  PDFDateString,\n  PDFWorker,\n  PermissionFlag,\n  PixelsPerInch,\n  RenderingCancelledException,\n  renderTextLayer,\n  shadow,\n  SVGGraphics,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n  version,\n  XfaLayer,\n};\n"]},"metadata":{},"sourceType":"script"}