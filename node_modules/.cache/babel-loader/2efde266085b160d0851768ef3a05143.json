{"ast":null,"code":"import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { createElement, Browser } from '@syncfusion/ej2-base';\n/**\n * Defines the functionalities that need to access DOM\n */\n\nexport function getChildNode(node) {\n  var child;\n  var collection = [];\n\n  if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n    for (var i = 0; i < node.childNodes.length; i++) {\n      child = node.childNodes[i];\n\n      if (child.nodeType === 1) {\n        collection.push(child);\n      }\n    }\n  } else {\n    collection = node.children;\n  }\n\n  return collection;\n}\nexport function translatePoints(element, points) {\n  var translatedPts = [];\n\n  for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n    var point = points_1[_i];\n    var pt1 = {\n      x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n      y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n    };\n    var matrix = void 0;\n    var angle = element.rotateAngle + element.parentTransform;\n\n    if (angle) {\n      matrix = identityMatrix();\n      rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n    }\n\n    if (matrix) {\n      pt1 = transformPointByMatrix(matrix, pt1);\n    }\n\n    translatedPts.push(pt1);\n  }\n\n  return translatedPts;\n}\n/** @private */\n\nexport function measurePath(data) {\n  var path = 'pathTable';\n\n  if (!window[path]) {\n    window[path] = {};\n  }\n\n  if (data) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var element = getChildNode(svg)[0];\n    element.setAttribute('d', data); //let bounds: SVGRect = element.getBBox();\n\n    var bounds = void 0;\n\n    if (window[path][data]) {\n      bounds = window[path][data];\n    } else {\n      window[path][data] = bounds = element.getBBox();\n\n      if ((bounds.x === 0 || bounds.y === 0) && (bounds.width === 0 || bounds.height === 0)) {\n        window[path][data] = bounds = getBBox(data);\n      }\n    }\n\n    var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n  }\n\n  return new Rect(0, 0, 0, 0);\n} // tslint:disable-next-line\n\nfunction getBBox(path) {\n  var xmin = 0;\n  var xmax = 0;\n  var ymin = 0;\n  var ymax = 0; // tslint:disable-next-line\n\n  var currentValue; // tslint:disable-next-line\n\n  var currentpath = path;\n  currentpath = currentpath.replace(/[a-z].*/g, ' ').replace(/[\\sA-Z]+/gi, ' ').trim().split(' ');\n\n  for (var i = 0; i < currentpath.length; i++) {\n    if (currentpath[i].length > 1) {\n      currentValue = currentpath[i].split(',');\n      xmin = xmax = currentValue[0];\n      ymin = ymax = currentValue[1];\n    }\n  }\n\n  for (var i = 0; i < currentpath.length; i++) {\n    currentValue = currentpath[i].split(',');\n\n    if (!currentValue[1]) {\n      currentValue[0] = xmin;\n      currentValue[1] = ymin;\n    }\n\n    xmin = Math.min(xmin, currentValue[0]);\n    xmax = Math.max(xmax, currentValue[0]);\n    ymin = Math.min(ymin, currentValue[1]);\n    ymax = Math.max(ymax, currentValue[1]);\n  }\n\n  return {\n    x: xmin,\n    y: ymin,\n    width: xmax - xmin,\n    height: ymax - ymin\n  };\n}\n\nfunction getTextOptions(element, maxWidth) {\n  var options = {\n    fill: element.style.fill,\n    stroke: element.style.strokeColor,\n    angle: element.rotateAngle + element.parentTransform,\n    pivotX: element.pivot.x,\n    pivotY: element.pivot.y,\n    strokeWidth: element.style.strokeWidth,\n    dashArray: element.style.strokeDashArray,\n    opacity: element.style.opacity,\n    visible: element.visible,\n    id: element.id,\n    width: maxWidth || element.actualSize.width,\n    height: element.actualSize.height,\n    x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n    y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n  };\n  options.fontSize = element.style.fontSize;\n  options.fontFamily = element.style.fontFamily;\n  options.textOverflow = element.style.textOverflow;\n  options.textDecoration = element.style.textDecoration;\n  options.doWrap = element.doWrap;\n  options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n  options.content = element.content;\n  options.textWrapping = element.style.textWrapping;\n  options.breakWord = wordBreakToString(element.style.textWrapping);\n  options.textAlign = textAlignToString(element.style.textAlign);\n  options.color = element.style.color;\n  options.italic = element.style.italic;\n  options.bold = element.style.bold;\n  options.dashArray = '';\n  options.strokeWidth = 0;\n  options.fill = '';\n  return options;\n}\n\nfunction wrapSvgText(text, textValue) {\n  var childNodes = [];\n  var k = 0;\n  var txtValue;\n  var bounds1;\n  var content = textValue || text.content;\n\n  if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n    if (text.breakWord === 'breakall') {\n      txtValue = '';\n      txtValue += content[0];\n\n      for (k = 0; k < content.length; k++) {\n        bounds1 = bBoxText(txtValue, text);\n\n        if (bounds1 >= text.width && txtValue.length > 0) {\n          childNodes[childNodes.length] = {\n            text: txtValue,\n            x: 0,\n            dy: 0,\n            width: bounds1\n          };\n          txtValue = '';\n        } else {\n          txtValue = txtValue + (content[k + 1] || ''); // if (txtValue.indexOf('\\n') > -1) {\n          //     txtValue = txtValue.replace('\\n', '');\n          // }\n\n          var width = bBoxText(txtValue, text);\n\n          if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0 || txtValue.indexOf('\\n') > -1) {\n            childNodes[childNodes.length] = {\n              text: txtValue,\n              x: 0,\n              dy: 0,\n              width: width\n            };\n            txtValue = '';\n          }\n\n          if (k === content.length - 1 && txtValue.length > 0) {\n            childNodes[childNodes.length] = {\n              text: txtValue,\n              x: 0,\n              dy: 0,\n              width: width\n            };\n            txtValue = '';\n          }\n        }\n      }\n    } else {\n      childNodes = wordWrapping(text, textValue);\n    }\n  } else {\n    childNodes[childNodes.length] = {\n      text: content,\n      x: 0,\n      dy: 0,\n      width: bBoxText(content, text)\n    };\n  }\n\n  return childNodes;\n}\n\nfunction wordWrapping(text, textValue) {\n  var childNodes = [];\n  var txtValue = '';\n  var j = 0;\n  var i = 0;\n  var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n  var content = textValue || text.content;\n  var eachLine = content.split('\\n');\n  var txt;\n  var words;\n  var newText;\n  var existingWidth;\n  var existingText;\n\n  for (j = 0; j < eachLine.length; j++) {\n    txt = '';\n    words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n\n    for (i = 0; i < words.length; i++) {\n      txtValue += ((i !== 0 || words.length === 1) && wrap && txtValue.length > 0 ? ' ' : '') + words[i];\n      newText = txtValue + (words[i + 1] || '');\n      var width = bBoxText(newText, text);\n\n      if (Math.floor(width) > text.width - 2 && txtValue.length > 0) {\n        childNodes[childNodes.length] = {\n          text: txtValue,\n          x: 0,\n          dy: 0,\n          width: newText === txtValue ? width : txtValue === existingText ? existingWidth : bBoxText(txtValue, text)\n        };\n        txtValue = '';\n      } else {\n        if (i === words.length - 1) {\n          childNodes[childNodes.length] = {\n            text: txtValue,\n            x: 0,\n            dy: 0,\n            width: width\n          };\n          txtValue = '';\n        }\n      }\n\n      existingText = newText;\n      existingWidth = width;\n    }\n  }\n\n  return childNodes;\n}\n\nfunction wrapSvgTextAlign(text, childNodes) {\n  var wrapBounds = {\n    x: 0,\n    width: 0\n  };\n  var k = 0;\n  var txtWidth;\n  var width;\n\n  for (k = 0; k < childNodes.length; k++) {\n    txtWidth = childNodes[k].width;\n    width = txtWidth;\n\n    if (text.textAlign === 'left') {\n      txtWidth = 0;\n    } else if (text.textAlign === 'center') {\n      if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n        txtWidth = 0;\n      } else {\n        txtWidth = -txtWidth / 2;\n      }\n    } else if (text.textAlign === 'right') {\n      txtWidth = -txtWidth;\n    } else {\n      txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n    }\n\n    childNodes[k].dy = text.fontSize * 1.2;\n    childNodes[k].x = txtWidth;\n\n    if (!wrapBounds) {\n      wrapBounds = {\n        x: txtWidth,\n        width: width\n      };\n    } else {\n      wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n      wrapBounds.width = Math.max(wrapBounds.width, width);\n    }\n  }\n\n  return wrapBounds;\n}\n/** @private */\n\n\nexport function measureText(text, style, content, maxWidth, textValue) {\n  var bounds = new Size(0, 0);\n  var childNodes;\n  var wrapBounds;\n  var options = getTextOptions(text, maxWidth);\n  text.childNodes = childNodes = wrapSvgText(options, textValue);\n  text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n  bounds.width = wrapBounds.width;\n\n  if (text.wrapBounds.width >= maxWidth && options.textOverflow !== 'Wrap') {\n    bounds.width = maxWidth;\n  }\n\n  bounds.height = childNodes.length * text.style.fontSize * 1.2;\n  return bounds;\n}\n/** @private */\n\nexport function getDiagramElement(elementId, contentId) {\n  var diagramElement;\n  var element;\n\n  if (contentId) {\n    element = document.getElementById(contentId);\n  }\n\n  diagramElement = element ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n  return diagramElement;\n}\n/** @private */\n\nexport function createHtmlElement(elementType, attribute) {\n  var element = createElement(elementType);\n  setAttributeHtml(element, attribute);\n  return element;\n}\n/** @private */\n\nexport function setAttributeHtml(element, attributes) {\n  var keys = Object.keys(attributes);\n\n  for (var i = 0; i < keys.length; i++) {\n    element.setAttribute(keys[i], attributes[keys[i]]);\n  }\n}\n/**\n * @private\n */\n\nexport function getAdornerLayerSvg(diagramId, index) {\n  var adornerLayerSvg = null;\n  var diagramElement = getDiagramElement(diagramId + index + '_diagramAdornerLayer');\n  var elementcoll;\n\n  if (diagramElement) {\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer' + index);\n    adornerLayerSvg = elementcoll[0];\n  }\n\n  return adornerLayerSvg;\n}\n/** @private */\n\nexport function getSelectorElement(diagramId, index) {\n  var adornerLayer = null;\n  var adornerSvg = getAdornerLayerSvg(diagramId, index);\n\n  if (adornerSvg) {\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n  }\n\n  return adornerLayer;\n}\n/** @private */\n\nexport function createMeasureElements() {\n  var measureElement = 'measureElement';\n\n  if (!window[measureElement]) {\n    var divElement = createHtmlElement('div', {\n      id: 'measureElement',\n      style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n    });\n    var text = createHtmlElement('span', {\n      'style': 'display:inline-block ; line-height: normal'\n    });\n    divElement.appendChild(text);\n    var imageElement = void 0;\n    imageElement = createHtmlElement('img', {});\n    divElement.appendChild(imageElement);\n    var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n    divElement.appendChild(svg);\n    var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    svg.appendChild(element);\n    var data = document.createTextNode('');\n    var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n    tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n    svg.appendChild(tSpan);\n    window[measureElement] = divElement;\n    window[measureElement].usageCount = 1;\n    document.body.appendChild(divElement);\n  } else {\n    window[measureElement].usageCount += 1;\n  }\n}\n/** @private */\n\nexport function measureImage(source, contentSize) {\n  var measureElement = 'measureElement';\n  window[measureElement].style.visibility = 'visible';\n  var imageElement = window[measureElement].children[1];\n  imageElement.setAttribute('src', source);\n  var bounds = imageElement.getBoundingClientRect();\n  var width = bounds.width;\n  var height = bounds.height;\n  contentSize = new Size(width, height);\n  window[measureElement].style.visibility = 'hidden';\n  return contentSize;\n}","map":{"version":3,"names":["Rect","Size","whiteSpaceToString","wordBreakToString","textAlignToString","bBoxText","identityMatrix","transformPointByMatrix","rotateMatrix","createElement","Browser","getChildNode","node","child","collection","info","name","i","childNodes","length","nodeType","push","children","translatePoints","element","points","translatedPts","_i","points_1","point","pt1","x","offsetX","actualSize","width","pivot","y","offsetY","height","matrix","angle","rotateAngle","parentTransform","measurePath","data","path","window","measureElement","style","visibility","svg","setAttribute","bounds","getBBox","svgBounds","xmin","xmax","ymin","ymax","currentValue","currentpath","replace","trim","split","Math","min","max","getTextOptions","maxWidth","options","fill","stroke","strokeColor","pivotX","pivotY","strokeWidth","dashArray","strokeDashArray","opacity","visible","id","fontSize","fontFamily","textOverflow","textDecoration","doWrap","whiteSpace","textWrapping","content","breakWord","textAlign","color","italic","bold","wrapSvgText","text","textValue","k","txtValue","bounds1","dy","ceil","indexOf","wordWrapping","j","wrap","eachLine","txt","words","newText","existingWidth","existingText","floor","wrapSvgTextAlign","wrapBounds","txtWidth","measureText","getDiagramElement","elementId","contentId","diagramElement","document","getElementById","querySelector","createHtmlElement","elementType","attribute","setAttributeHtml","attributes","keys","Object","getAdornerLayerSvg","diagramId","index","adornerLayerSvg","elementcoll","getElementsByClassName","getSelectorElement","adornerLayer","adornerSvg","createMeasureElements","divElement","appendChild","imageElement","createElementNS","createTextNode","tSpan","setAttributeNS","usageCount","body","measureImage","source","contentSize","getBoundingClientRect"],"sources":["/home/morgan/Desktop/Projets/ENT4/Jwt-Auth-pdf/react-jwt-auth/react-jwt-auth/node_modules/@syncfusion/ej2-drawings/src/drawing/utility/dom-util.js"],"sourcesContent":["import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { createElement, Browser } from '@syncfusion/ej2-base';\n/**\n * Defines the functionalities that need to access DOM\n */\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    var path = 'pathTable';\n    if (!window[path]) {\n        window[path] = {};\n    }\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        //let bounds: SVGRect = element.getBBox();\n        var bounds = void 0;\n        if (window[path][data]) {\n            bounds = window[path][data];\n        }\n        else {\n            window[path][data] = bounds = element.getBBox();\n            if ((bounds.x === 0 || bounds.y === 0) && (bounds.width === 0 || bounds.height === 0)) {\n                window[path][data] = bounds = getBBox(data);\n            }\n        }\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\n// tslint:disable-next-line\nfunction getBBox(path) {\n    var xmin = 0;\n    var xmax = 0;\n    var ymin = 0;\n    var ymax = 0;\n    // tslint:disable-next-line\n    var currentValue;\n    // tslint:disable-next-line\n    var currentpath = path;\n    currentpath = currentpath.replace(/[a-z].*/g, ' ').replace(/[\\sA-Z]+/gi, ' ').trim().split(' ');\n    for (var i = 0; i < currentpath.length; i++) {\n        if (currentpath[i].length > 1) {\n            currentValue = currentpath[i].split(',');\n            xmin = xmax = currentValue[0];\n            ymin = ymax = currentValue[1];\n        }\n    }\n    for (var i = 0; i < currentpath.length; i++) {\n        currentValue = currentpath[i].split(',');\n        if (!currentValue[1]) {\n            currentValue[0] = xmin;\n            currentValue[1] = ymin;\n        }\n        xmin = Math.min(xmin, currentValue[0]);\n        xmax = Math.max(xmax, currentValue[0]);\n        ymin = Math.min(ymin, currentValue[1]);\n        ymax = Math.max(ymax, currentValue[1]);\n    }\n    return { x: xmin, y: ymin, width: xmax - xmin, height: ymax - ymin };\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity,\n        visible: element.visible, id: element.id,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    // if (txtValue.indexOf('\\n') > -1) {\n                    //     txtValue = txtValue.replace('\\n', '');\n                    // }\n                    var width = bBoxText(txtValue, text);\n                    if ((Math.ceil(width) + 2 >= text.width && txtValue.length > 0) || (txtValue.indexOf('\\n') > -1)) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > text.width - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    if (text.wrapBounds.width >= maxWidth && options.textOverflow !== 'Wrap') {\n        bounds.width = maxWidth;\n    }\n    bounds.height = childNodes.length * text.style.fontSize * 1.2;\n    return bounds;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    return diagramElement;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId, index) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId + index + '_diagramAdornerLayer');\n    var elementcoll;\n    if (diagramElement) {\n        elementcoll = diagramElement.getElementsByClassName('e-adorner-layer' + index);\n        adornerLayerSvg = elementcoll[0];\n    }\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId, index) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId, index);\n    if (adornerSvg) {\n        adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    }\n    return adornerLayer;\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n/** @private */\nexport function measureImage(source, contentSize) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    return contentSize;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}