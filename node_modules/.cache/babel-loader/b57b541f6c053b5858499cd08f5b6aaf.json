{"ast":null,"code":"import { Size } from './../primitives/size';\nimport { pathSegmentCollection, getRectanglePath, processPathData } from './../utility/path-util'; // import { overFlow } from './../utility/base-util';\n\nimport { createHtmlElement } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n\n/** @private */\n\nvar CanvasRenderer =\n/** @class */\nfunction () {\n  function CanvasRenderer() {}\n  /**   @private  */\n\n\n  CanvasRenderer.getContext = function (canvas) {\n    return canvas.getContext('2d');\n  };\n\n  CanvasRenderer.prototype.setStyle = function (canvas, style) {\n    var ctx = CanvasRenderer.getContext(canvas);\n\n    if (style.fill === 'none') {\n      style.fill = 'transparent';\n    }\n\n    if (style.stroke === 'none') {\n      style.stroke = 'transparent';\n    }\n\n    ctx.strokeStyle = style.stroke;\n    ctx.lineWidth = style.strokeWidth;\n\n    if (style.strokeWidth === 0) {\n      ctx.strokeStyle = 'transparent';\n    }\n\n    ctx.globalAlpha = style.opacity;\n    var dashArray = [];\n\n    if (style.dashArray) {\n      dashArray = this.parseDashArray(style.dashArray);\n    }\n\n    ctx.setLineDash(dashArray);\n    ctx.fillStyle = style.fill;\n  };\n\n  CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n    var ctx = CanvasRenderer.getContext(canvas);\n    ctx.translate(x, y);\n    ctx.rotate(angle * Math.PI / 180);\n    ctx.translate(-x, -y);\n  };\n\n  CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n    var ctx = CanvasRenderer.getContext(canvas);\n    var font = '';\n\n    if (text.italic) {\n      font += 'italic ';\n    }\n\n    if (text.bold) {\n      font += 'bold ';\n    }\n\n    font += text.fontSize + 'px ';\n    font += text.fontFamily;\n    ctx.font = font;\n  };\n  /**   @private  */\n\n\n  CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n    var dashes = [];\n    var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n    var splittedDashes = dashArray.split(separator);\n\n    for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n      var i = splittedDashes_1[_i];\n      dashes.push(Number(i));\n    }\n\n    return dashes;\n  }; //Rendering Part\n\n  /**   @private  */\n\n\n  CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n    if (options.visible === true) {\n      if (options.cornerRadius) {\n        options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n        this.drawPath(canvas, options);\n      } else {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var cornerRadius = options.cornerRadius;\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        this.setStyle(canvas, options);\n        ctx.rect(options.x, options.y, options.width, options.height);\n        ctx.fillRect(options.x, options.y, options.width, options.height);\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n      }\n    }\n  };\n  /**   @private  */\n\n\n  CanvasRenderer.prototype.drawPath = function (canvas, options) {\n    var collection = [];\n    collection = processPathData(options.data);\n    collection = pathSegmentCollection(collection);\n    var ctx = CanvasRenderer.getContext(canvas);\n    ctx.save();\n    ctx.beginPath();\n    var pivotY = options.y + options.height * options.pivotY;\n    var pivotX = options.x + options.width * options.pivotX;\n    this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    this.setStyle(canvas, options);\n    ctx.translate(options.x, options.y);\n    this.renderPath(canvas, options, collection);\n    ctx.fill();\n    ctx.translate(-options.x, -options.y);\n    ctx.stroke();\n    ctx.restore();\n  };\n  /**   @private  */\n\n\n  CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n    if (options.visible === true) {\n      var ctx = CanvasRenderer.getContext(canvas);\n      var x0 = void 0;\n      var y0 = void 0;\n      var x1 = void 0;\n      var y1 = void 0;\n      var x2 = void 0;\n      var y2 = void 0;\n      var x = void 0;\n      var y = void 0;\n      var length_1;\n      var i = void 0;\n      var newSeg = void 0;\n      var segs = collection;\n\n      for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n        var obj = segs[i];\n        var seg = obj;\n        var char = seg.command;\n\n        if ('x1' in seg) {\n          x1 = seg.x1;\n        }\n\n        if ('x2' in seg) {\n          x2 = seg.x2;\n        }\n\n        if ('y1' in seg) {\n          y1 = seg.y1;\n        }\n\n        if ('y2' in seg) {\n          y2 = seg.y2;\n        }\n\n        if ('x' in seg) {\n          x = seg.x;\n        }\n\n        if ('y' in seg) {\n          y = seg.y;\n        }\n\n        switch (char) {\n          case 'M':\n            ctx.moveTo(x, y);\n            seg.x = x;\n            seg.y = y;\n            break;\n\n          case 'L':\n            ctx.lineTo(x, y);\n            seg.x = x;\n            seg.y = y;\n            break;\n\n          case 'C':\n            ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n            seg.x = x;\n            seg.y = y;\n            seg.x1 = x1;\n            seg.y1 = y1;\n            seg.x2 = x2;\n            seg.y2 = y2;\n            break;\n\n          case 'Q':\n            ctx.quadraticCurveTo(x1, y1, x, y);\n            seg.x = x;\n            seg.y = y;\n            seg.x1 = x1;\n            seg.y1 = y1;\n            break;\n\n          case 'A':\n            var curr = {\n              x: x0,\n              y: y0\n            };\n            var rx = seg.r1;\n            var ry = seg.r2;\n            var xAxisRotation = seg.angle * (Math.PI / 180.0);\n            var largeArc = seg.largeArc;\n            var sweep = seg.sweep;\n            var cp = {\n              x: x,\n              y: y\n            };\n            var currp = {\n              x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n              y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n            };\n            var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n\n            if (l > 1) {\n              rx *= Math.sqrt(l);\n              ry *= Math.sqrt(l);\n            }\n\n            var k = Math.pow(ry, 2) * Math.pow(currp.x, 2);\n            var s = (largeArc === sweep ? -1 : 1) * Math.sqrt((Math.pow(rx, 2) * Math.pow(ry, 2) - Math.pow(rx, 2) * Math.pow(currp.y, 2) - k) / (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n\n            if (isNaN(s)) {\n              s = 0;\n            }\n\n            var cpp = {\n              x: s * rx * currp.y / ry,\n              y: s * -ry * currp.x / rx\n            };\n            var centp = {\n              x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n              y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n            };\n            var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n            var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n            var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n            var ad = this.a(u, v);\n\n            if (this.r(u, v) <= -1) {\n              ad = Math.PI;\n            }\n\n            if (this.r(u, v) >= 1) {\n              ad = 0;\n            }\n\n            var dir = !sweep ? -1.0 : 1.0;\n            var ah = a1 + dir * (ad / 2.0);\n            var halfWay = {\n              x: centp.x + rx * Math.cos(ah),\n              y: centp.y + ry * Math.sin(ah)\n            };\n            seg.centp = centp;\n            seg.xAxisRotation = xAxisRotation;\n            seg.rx = rx;\n            seg.ry = ry;\n            seg.a1 = a1;\n            seg.ad = ad;\n            seg.sweep = sweep;\n\n            if (ctx != null) {\n              var ra = rx > ry ? rx : ry;\n              var sx = rx > ry ? 1 : rx / ry;\n              var sy = rx > ry ? ry / rx : 1;\n              ctx.save();\n              ctx.translate(centp.x, centp.y);\n              ctx.rotate(xAxisRotation);\n              ctx.scale(sx, sy);\n              ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n              ctx.scale(1 / sx, 1 / sy);\n              ctx.rotate(-xAxisRotation);\n              ctx.translate(-centp.x, -centp.y);\n              ctx.restore();\n            }\n\n            break;\n\n          case 'Z':\n          case 'z':\n            ctx.closePath();\n            x = x0;\n            y = y0;\n            break;\n        }\n\n        x0 = x;\n        y0 = y;\n      }\n    }\n  };\n  /**   @private  */\n\n\n  CanvasRenderer.prototype.drawText = function (canvas, options) {\n    if (options.content && options.visible === true) {\n      var ctx = CanvasRenderer.getContext(canvas);\n      ctx.save();\n      this.setStyle(canvas, options);\n      var pivotX = options.x + options.width * options.pivotX;\n      var pivotY = options.y + options.height * options.pivotY;\n      this.rotateContext(canvas, options.angle, pivotX, pivotY);\n      this.setFontStyle(canvas, options);\n      var i = 0;\n      var childNodes = [];\n      childNodes = options.childNodes;\n      var wrapBounds = options.wrapBounds;\n      ctx.fillStyle = options.color;\n\n      if (wrapBounds) {\n        var position = this.labelAlign(options, wrapBounds, childNodes);\n\n        for (i = 0; i < childNodes.length; i++) {\n          var child = childNodes[i];\n          var offsetX = position.x + child.x - wrapBounds.x;\n          var offsetY = position.y + child.dy * i + options.fontSize * 0.8; // if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n          //     child.text = overFlow(child.text, options);\n          // }\n\n          ctx.fillText(child.text, offsetX, offsetY);\n\n          if (options.textDecoration === 'Underline' || options.textDecoration === 'Overline' || options.textDecoration === 'LineThrough') {\n            var startPointX = offsetX;\n            var startPointY = void 0;\n            var textlength = ctx.measureText(child.text).width;\n            var endPointX = offsetX + textlength;\n            var endPointY = void 0;\n\n            switch (options.textDecoration) {\n              case 'Underline':\n                startPointY = offsetY + 2;\n                endPointY = offsetY + 2;\n                break;\n\n              case 'Overline':\n                startPointY = position.y + child.dy * i;\n                endPointY = position.y + child.dy * i;\n                break;\n\n              case 'LineThrough':\n                startPointY = (offsetY + position.y + child.dy * i) / 2 + 2;\n                endPointY = (offsetY + position.y + child.dy * i) / 2 + 2;\n            }\n\n            ctx.beginPath();\n            ctx.moveTo(startPointX, startPointY);\n            ctx.lineTo(endPointX, endPointY);\n            ctx.strokeStyle = options.color;\n            ctx.lineWidth = options.fontSize * .08;\n            ctx.globalAlpha = options.opacity;\n            ctx.stroke();\n          }\n        }\n      }\n\n      ctx.restore();\n    }\n  }; //end region\n  // vector magnitude\n\n\n  CanvasRenderer.prototype.m = function (v) {\n    return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2));\n  }; // ratio between two vectors\n\n\n  CanvasRenderer.prototype.r = function (u, v) {\n    return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v));\n  }; // angle between two vectors\n\n\n  CanvasRenderer.prototype.a = function (u, v) {\n    return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v));\n  };\n\n  CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n    var max = Math.max(res, dest);\n    var min = Math.min(res, dest);\n\n    switch (arg) {\n      case 'min':\n        return 0;\n\n      case 'mid':\n        return (max - min) / 2;\n\n      case 'max':\n        return max - min;\n\n      default:\n        return 0;\n    }\n  };\n\n  CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n    switch (arg) {\n      case 'min':\n        return 0;\n\n      case 'mid':\n        return (res - dest) / 2 * src / res;\n\n      case 'max':\n        return (res - dest) * src / res;\n\n      default:\n        return 0;\n    }\n  };\n\n  CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n    ctx.beginPath();\n    var srcWidth = image.width;\n    var srcHeight = image.height;\n    var destinationW = width;\n    var destinationH = height;\n    var resultWidth = 0;\n    var resultHeight = 0;\n    ctx.globalAlpha = alignOptions.opacity;\n\n    if (alignOptions && alignOptions.alignment !== 'None') {\n      var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n      var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n\n      if (alignOptions.scale === 'Slice') {\n        var a = function () {\n          resultWidth = destinationW;\n          resultHeight = srcHeight * destinationW / srcWidth;\n        };\n\n        var b = function () {\n          resultWidth = srcWidth * destinationH / srcHeight;\n          resultHeight = destinationH;\n        };\n\n        if (destinationW > destinationH) {\n          a();\n\n          if (destinationH > resultHeight) {\n            b();\n          }\n        } else if (destinationW === destinationH) {\n          if (srcWidth > srcHeight) {\n            b();\n          } else {\n            a();\n          }\n        } else {\n          b();\n\n          if (destinationW > resultWidth) {\n            a();\n          }\n        }\n\n        var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n        var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n        var sWidth = srcWidth - x1;\n        var sHeight = srcHeight - y1;\n        var dWidth = resultWidth - x1 * (resultWidth / srcWidth);\n        var dHeight = resultHeight - y1 * (resultHeight / srcHeight);\n        var canvas1 = createHtmlElement('canvas', {\n          'width': width.toString(),\n          'height': height.toString()\n        });\n        var ctx1 = canvas1.getContext('2d');\n        ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n        ctx.drawImage(canvas1, x, y, width, height);\n      } else if (alignOptions.scale === 'Meet') {\n        var srcRatio = srcHeight / srcWidth;\n        var destRatio = destinationH / destinationW;\n        resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n        resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n        x += this.getMeetOffset(xalign, resultWidth, destinationW);\n        y += this.getMeetOffset(yalign, resultHeight, destinationH);\n        ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n      } else {\n        ctx.drawImage(image, x, y, width, height);\n      }\n    } else {\n      if (image.complete) {\n        ctx.drawImage(image, x, y, width, height);\n      } else {\n        var transform_1 = ctx.getTransform();\n\n        image.onload = function () {\n          ctx.setTransform(transform_1.a, transform_1.b, transform_1.c, transform_1.d, transform_1.e, transform_1.f);\n          ctx.drawImage(image, x, y, width, height);\n        };\n      }\n    }\n\n    ctx.closePath();\n  }; // text utility\n\n\n  CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n    this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n    var image = new Image();\n    image.src = obj.source;\n    this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n  };\n  /**   @private  */\n\n\n  CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n    var _this = this;\n\n    if (obj.visible) {\n      var ctx_1 = CanvasRenderer.getContext(canvas);\n      ctx_1.save();\n      var pivotX_1 = obj.x + obj.width * obj.pivotX;\n      var pivotY_1 = obj.y + obj.height * obj.pivotY;\n      var imageObj = new Image();\n      imageObj.src = obj.source;\n      var id = ctx_1.canvas.id.split('_');\n      var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n      /**\n       *  Since Clipping portion for node with slice option is not calculated properly\n       * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n       *  && obj.sourceHeight !== undefined) {\n       *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n       *  } else {\n       *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n       * }\n       */\n\n      if (!fromPalette) {\n        this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n      } else {\n        imageObj.onload = function () {\n          _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n        };\n      }\n\n      ctx_1.restore();\n    }\n  };\n  /**   @private  */\n\n\n  CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n    var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n    var position = {\n      x: 0,\n      y: 0\n    };\n    var labelX = text.x;\n    var labelY = text.y;\n    var offsetx = text.width * 0.5;\n    var offsety = text.height * 0.5;\n    var pointx = offsetx;\n    var pointy = offsety;\n\n    if (text.textAlign === 'left') {\n      pointx = 0;\n    } else if (text.textAlign === 'center') {\n      if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n        pointx = 0;\n      } else {\n        pointx = text.width * 0.5;\n      }\n    } else if (text.textAlign === 'right') {\n      pointx = text.width * 1;\n    }\n\n    position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n    position.y = labelY + pointy - bounds.height / 2;\n    return position;\n  };\n\n  return CanvasRenderer;\n}();\n\nexport { CanvasRenderer };\nexport function refreshDiagramElements(canvas, drawingObjects, renderer) {\n  for (var i = 0; i < drawingObjects.length; i++) {\n    renderer.renderElement(drawingObjects[i], canvas, undefined);\n  }\n}","map":{"version":3,"names":["Size","pathSegmentCollection","getRectanglePath","processPathData","createHtmlElement","CanvasRenderer","getContext","canvas","prototype","setStyle","style","ctx","fill","stroke","strokeStyle","lineWidth","strokeWidth","globalAlpha","opacity","dashArray","parseDashArray","setLineDash","fillStyle","rotateContext","angle","x","y","translate","rotate","Math","PI","setFontStyle","text","font","italic","bold","fontSize","fontFamily","dashes","separator","indexOf","splittedDashes","split","_i","splittedDashes_1","length","i","push","Number","drawRectangle","options","visible","cornerRadius","data","height","width","drawPath","save","beginPath","pivotX","pivotY","rect","fillRect","closePath","restore","collection","renderPath","x0","y0","x1","y1","x2","y2","length_1","newSeg","segs","obj","seg","char","command","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","r1","ry","r2","xAxisRotation","largeArc","sweep","cp","currp","cos","sin","l","pow","sqrt","k","s","isNaN","cpp","centp","a1","a","u","v","ad","r","dir","ah","halfWay","ra","sx","sy","scale","arc","drawText","content","childNodes","wrapBounds","color","position","labelAlign","child","offsetX","offsetY","dy","fillText","textDecoration","startPointX","startPointY","textlength","measureText","endPointX","endPointY","m","acos","getMeetOffset","arg","res","dest","max","min","getSliceOffset","src","image","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","alignment","xalign","toLowerCase","substr","yalign","b","sWidth","sHeight","dWidth","dHeight","canvas1","toString","ctx1","drawImage","srcRatio","destRatio","complete","transform_1","getTransform","onload","setTransform","c","d","e","f","loadImage","Image","source","parentSvg","fromPalette","_this","ctx_1","pivotX_1","pivotY_1","imageObj","id","value","bounds","labelX","labelY","offsetx","offsety","pointx","pointy","textAlign","textOverflow","refreshDiagramElements","drawingObjects","renderer","renderElement","undefined"],"sources":["/home/morgan/Desktop/Projets/ENT4/Jwt-Auth-pdf/react-jwt-auth/react-jwt-auth/node_modules/@syncfusion/ej2-drawings/src/drawing/rendering/canvas-renderer.js"],"sourcesContent":["import { Size } from './../primitives/size';\nimport { pathSegmentCollection, getRectanglePath, processPathData } from './../utility/path-util';\n// import { overFlow } from './../utility/base-util';\nimport { createHtmlElement } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        ctx.fillStyle = style.fill;\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    var offsetX = position.x + child.x - wrapBounds.x;\n                    var offsetY = position.y + child.dy * i + ((options.fontSize) * 0.8);\n                    // if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                    //     child.text = overFlow(child.text, options);\n                    // }\n                    ctx.fillText(child.text, offsetX, offsetY);\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        ctx.globalAlpha = alignOptions.opacity;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else {\n            if (image.complete) {\n                ctx.drawImage(image, x, y, width, height);\n            }\n            else {\n                var transform_1 = ctx.getTransform();\n                image.onload = function () {\n                    ctx.setTransform(transform_1.a, transform_1.b, transform_1.c, transform_1.d, transform_1.e, transform_1.f);\n                    ctx.drawImage(image, x, y, width, height);\n                };\n            }\n        }\n        ctx.closePath();\n    };\n    // text utility\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointx = 0;\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\nexport function refreshDiagramElements(canvas, drawingObjects, renderer) {\n    for (var i = 0; i < drawingObjects.length; i++) {\n        renderer.renderElement(drawingObjects[i], canvas, undefined);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}